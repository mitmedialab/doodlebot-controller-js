{"version":3,"file":"moveable.esm.js","sources":["../src/ables/AbleManager.ts","../src/consts.ts","../src/gesto/CustomGesto.ts","../src/gesto/GestoUtils.ts","../src/gesto/GestoData.ts","../src/utils/getMatrixStackInfo.ts","../src/store/Store.ts","../src/utils.tsx","../src/ables/Pinchable.ts","../src/groupUtils.ts","../src/ables/snappable/utils.ts","../src/ables/snappable/snap.ts","../src/ables/snappable/innerBounds.ts","../src/ables/snappable/bounds.ts","../src/ables/snappable/render.tsx","../src/ables/snappable/snapBounds.ts","../src/ables/snappable/getTotalGuidelines.ts","../src/ables/Snappable.tsx","../src/renderDirections.tsx","../src/ables/Draggable.tsx","../src/ables/Resizable.ts","../src/ables/Rotatable.tsx","../src/ables/Scalable.ts","../src/ables/Warpable.tsx","../src/classNames.ts","../src/ables/DragArea.tsx","../src/ables/Origin.tsx","../src/ables/Scrollable.ts","../src/ables/Default.ts","../src/ables/Padding.tsx","../src/ables/roundable/borderRadius.tsx","../src/ables/clippable/utils.tsx","../src/ables/Clippable.tsx","../src/ables/OriginDraggable.tsx","../src/ables/Roundable.tsx","../src/ables/BeforeRenderable.ts","../src/ables/Renderable.ts","../src/gesto/getAbleGesto.ts","../src/EventManager.ts","../src/utils/calculateMatrixStack.ts","../src/utils/getElementInfo.ts","../src/utils/getMoveableTargetInfo.ts","../src/utils/persist.ts","../src/MoveableManager.tsx","../src/ables/Groupable.tsx","../src/ables/Clickable.ts","../src/ables/edgeDraggable.tsx","../src/ables/IndividualGroupable.tsx","../src/ables/consts.ts","../src/Snappable/utils.ts","../src/MoveableGroup.tsx","../src/MoveableIndividualGroup.tsx","../src/InitialMoveable.tsx","../src/Moveable.tsx","../src/makeMoveable.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: [] as const,\n        props: [] as Array<keyof Props>,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\n\nexport const DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\n\nconst browserName = agent.browser.name;\nconst browserVersion = parseInt(agent.browser.version, 10);\nconst IS_CHROME = browserName === \"chrome\";\nconst IS_CHROMIUM = agent.browser.chromium;\nconst chromiumVersion = parseInt(agent.browser.chromiumVersion, 10) || 0;\n\nexport const IS_CHROMIUM109 = (IS_CHROME && browserVersion >= 109)\n    || (IS_CHROMIUM && chromiumVersion >= 109);\nexport const IS_FIREFOX = browserName === \"firefox\";\nexport const IS_SAFARI_ABOVE15\n    = parseInt(agent.browser.webkitVersion, 10) >= 612\n    || browserVersion >= 15;\n\nexport const PREFIX = \"moveable-\";\n\n\nconst directionCSS = DIRECTIONS.map(dir => {\n    let top = \"\";\n    let left = \"\";\n    let originX = \"center\";\n    let originY = \"center\";\n\n    if (dir.indexOf(\"n\") > -1) {\n        top = \"top: -20px;\";\n        originY = \"bottom\";\n    }\n    if (dir.indexOf(\"s\") > -1) {\n        top = \"top: 0px;\";\n        originY = \"top\";\n    }\n    if (dir.indexOf(\"w\") > -1) {\n        left = \"left: -20px;\";\n        originX = \"right\";\n    }\n    if (dir.indexOf(\"e\") > -1) {\n        left = \"left: 0px;\";\n        originX = \"left\";\n    }\n    return `.around-control[data-direction*=\"${dir}\"] {\n        ${left}${top}\n        transform-origin: ${originX} ${originY};\n    }`;\n}).join(\"\\n\");\n\nexport const MOVEABLE_CSS = `\n{\nposition: absolute;\nwidth: 1px;\nheight: 1px;\nleft: 0;\ntop: 0;\nz-index: 3000;\n--moveable-color: #4af;\n--zoom: 1;\n--zoompx: 1px;\nwill-change: transform;\noutline: 1px solid transparent;\n}\n.control-box {\nz-index: 0;\n}\n.line, .control {\nposition: absolute;\nleft: 0;\ntop: 0;\nwill-change: transform;\n}\n.control {\nwidth: 14px;\nheight: 14px;\nborder-radius: 50%;\nborder: 2px solid #fff;\nbox-sizing: border-box;\nbackground: #4af;\nbackground: var(--moveable-color);\nmargin-top: -7px;\nmargin-left: -7px;\nborder: 2px solid #fff;\nz-index: 10;\n}\n.around-control {\nposition: absolute;\nwill-change: transform;\nwidth: calc(var(--moveable-control-padding, 20) * 1px);\nheight: calc(var(--moveable-control-padding, 20) * 1px);\nleft: -10px;\ntop: -10px;\nbox-sizing: border-box;\nbackground: transparent;\nz-index: 8;\ncursor: alias;\ntransform-origin: center center;\n}\n${directionCSS}\n.padding {\nposition: absolute;\ntop: 0px;\nleft: 0px;\nwidth: 100px;\nheight: 100px;\ntransform-origin: 0 0;\n}\n.line {\nwidth: 1px;\nheight: 1px;\nbackground: #4af;\nbackground: var(--moveable-color);\ntransform-origin: 0px 50%;\n}\n.line.edge {\nz-index: 1;\nbackground: transparent;\n}\n.line.dashed {\nbox-sizing: border-box;\nbackground: transparent;\n}\n.line.dashed.horizontal {\nborder-top: 1px dashed #4af;\nborder-top-color: #4af;\nborder-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\nborder-left: 1px dashed #4af;\nborder-left-color: #4af;\nborder-left-color: var(--moveable-color);\n}\n.line.vertical {\ntransform: translateX(-50%);\n}\n.line.horizontal {\ntransform: translateY(-50%);\n}\n.line.vertical.bold {\nwidth: 2px;\n}\n.line.horizontal.bold {\nheight: 2px;\n}\n\n.control.origin {\nborder-color: #f55;\nbackground: #fff;\nwidth: 12px;\nheight: 12px;\nmargin-top: -6px;\nmargin-left: -6px;\npointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"], :global .view-control-rotation${degree} {\n${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n\n.line.direction:before {\ncontent: \"\";\nposition: absolute;\nwidth: 100%;\nheight: calc(var(--moveable-line-padding, 0) * 1px);\nbottom: 0;\nleft: 0;\n}\n.group {\nz-index: -1;\n}\n.area {\nposition: absolute;\n}\n.area-pieces {\nposition: absolute;\ntop: 0;\nleft: 0;\ndisplay: none;\n}\n.area.avoid, .area.pass {\npointer-events: none;\n}\n.area.avoid+.area-pieces {\ndisplay: block;\n}\n.area-piece {\nposition: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\ncontent:\"\";\ntransform-origin: inherit;\n}` : \"\"}\n`;\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTION_REGION_TO_DIRECTION: Record<string, number[]> = {\n    n: [0, -1],\n    e: [1, 0],\n    s: [0, 1],\n    w: [-1, 0],\n    nw: [-1, -1],\n    ne: [1, -1],\n    sw: [-1, 1],\n    se: [1, 1],\n};\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    e: [1, 3],\n    s: [3, 2],\n    w: [2, 0],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n    \"waitToChangeTarget\",\n    \"updateSelectors\",\n    \"getTargets\",\n    \"stopDrag\",\n];\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n    ableName = \"draggable\",\n) {\n    const result = state.gestos[ableName]?.move(delta, e.inputEvent) ?? {};\n    const datas = result.originalDatas || result.datas;\n    const ableDatas = datas[ableName] || (datas[ableName] = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: ableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n    constructor(private ableName = \"draggable\") {\n        this.datas = {\n            [ableName]: {},\n        };\n    }\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas[this.ableName]) {\n            originalDatas[this.ableName] = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        let isFirstDrag = false;\n\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n            const isPrevDrag = this.isDrag;\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n\n            if (delta[0] || delta[1]) {\n                this.isDrag = true;\n            }\n\n            if (!isPrevDrag && this.isDrag) {\n                isFirstDrag = true;\n            }\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isFirstDrag,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas[this.ableName],\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, calculateMoveablePosition, convertTransformInfo, fillCSSObject,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, findIndex, dot, find } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\nimport { Draggable } from \"../index.esm\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n\n\n    const nextTransforms = originalDatas.nextTransforms as string[];\n    const length = nextTransforms.length;\n    const nextTransformAppendedIndexes: any[] = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = -1;\n\n    if (index === -1) {\n        // translate => rotate => scale\n        if (functionName === \"translate\") {\n            nextIndex = 0;\n        } else if (functionName === \"rotate\") {\n            nextIndex = findIndex(nextTransforms, text => text.match(/scale\\(/g,));\n        }\n        if (nextIndex === -1) {\n            nextIndex = nextTransforms.length;\n        }\n        datas.transformIndex = nextIndex;\n    } else if (find(nextTransformAppendedIndexes, info => info.index === index && info.functionName === functionName)) {\n        nextIndex = index;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter(info => info.index < index).length;\n    }\n\n    const result = convertTransformInfo(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else if (length > nextIndex) {\n        datas.isAppendTransform = true;\n\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, {\n            functionName,\n            index: nextIndex,\n            isAppend: true,\n        }];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    const xRatio = (direction[0] + 1) / 2;\n    const yRatio = (direction[1] + 1) / 2;\n\n    const top = [\n        dot(poses[0][0], poses[1][0], xRatio, 1 - xRatio),\n        dot(poses[0][1], poses[1][1], xRatio, 1 - xRatio),\n    ];\n    const bottom = [\n        dot(poses[2][0], poses[3][0], xRatio, 1 - xRatio),\n        dot(poses[2][1], poses[3][1], xRatio, 1 - xRatio),\n    ];\n    return [\n        dot(top[0], bottom[0], yRatio, 1 - yRatio),\n        dot(top[1], bottom[1], yRatio, 1 - yRatio),\n    ];\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = getBeforeRenderableDatas(e);\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = getBeforeRenderableDatas(e);\n\n    originalDatas.nextTransforms = splitSpace(transform);\n    // originalDatas.nextTargetMatrix = parseMat(transform);\n}\nexport function getBeforeRenderableDatas(e: any) {\n    return e.originalDatas.beforeRenderable;\n}\nexport function getNextTransforms(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms;\n}\nexport function getNextTransformText(e: any) {\n    return getNextTransforms(e).join(\" \");\n}\n\nexport function getNextStyle(e: any) {\n    return getBeforeRenderableDatas(e).nextStyle;\n}\n\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n\n    const drag = Draggable.drag!(\n        moveable,\n        setCustomDrag(e, moveable.state, delta, isPinch, false),\n    ) as OnDrag;\n    const afterTransform = drag ? drag.transform : nextTransform;\n    return {\n        transform: nextTransform,\n        drag: drag as OnDrag,\n        ...fillCSSObject({\n            transform: afterTransform,\n        }, e),\n        afterTransform,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const dist = getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n\n    return dist;\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionByPos(\n    pos: number[],\n    width: number,\n    height: number,\n) {\n    return [\n        -1 + pos[0] / (width / 2),\n        -1 + pos[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    datas: any,\n) {\n    const fixedDirection = datas.fixedDirection;\n    const fixedPosition = datas.fixedPosition;\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedPosition: number[],\n    transformOrigin: string[],\n    datas: any,\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const state = moveable.state;\n    const {\n        transformOrigin: prevOrigin,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = state;\n    const fixedDirection = datas.fixedDirection;\n    const targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { MoveableManagerInterface } from \"../types\";\n\nexport function getGestoData(moveable: MoveableManagerInterface, ableName: string) {\n    const targetGesto = moveable.targetGesto;\n    const controlGesto = moveable.controlGesto;\n    let data!: Record<string, any>;\n\n    if (targetGesto?.isFlag()) {\n        data = targetGesto.getEventData()[ableName];\n    }\n\n    if (!data && controlGesto?.isFlag()) {\n        data = controlGesto.getEventData()[ableName];\n    }\n\n    return data || {};\n}\n","import {\n    convertCSStoMatrix, convertDimension,\n    createIdentityMatrix, createOriginMatrix, createScaleMatrix,\n} from \"@scena/matrix\";\nimport { getCachedStyle } from \"../store/Store\";\nimport { IS_WEBKIT, IS_SAFARI_ABOVE15, IS_FIREFOX, IS_CHROMIUM109 } from \"../consts\";\nimport { MatrixInfo } from \"../types\";\nimport {\n    getOffsetInfo, getElementTransform,\n    getTransformMatrix, getPositionFixedInfo,\n    convert3DMatrixes, getOffsetPosInfo,\n    getSVGMatrix, getBodyOffset, getAbsoluteMatrix,\n} from \"../utils\";\n\n\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\n\nexport interface MatrixStackInfo {\n    zoom: number;\n    offsetContainer: HTMLElement;\n    matrixes: MatrixInfo[];\n    targetMatrix: number[];\n    transformOrigin: number[];\n    targetOrigin: number[];\n    is3d: boolean;\n    hasFixed: boolean;\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n): MatrixStackInfo {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    const documentElement = document.documentElement || document.body;\n    let requestEnd = !checkContainer && target === container || target === documentElement;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    let hasFixed = false;\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n    let zoom = 1;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const getStyle = getCachedStyle(el);\n        const position = getStyle(\"position\");\n        const scale = getStyle(\"scale\") as string;\n        const transform = getElementTransform(el);\n        const isFixed = position === \"fixed\";\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\n        let offsetParent: HTMLElement;\n        let isOffsetEnd = false;\n        let isStatic = false;\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n        let fixedClientLeft = 0;\n        let fixedClientTop = 0;\n        let fixedInfo: {\n            hasTransform: boolean;\n            fixedContainer: HTMLElement | null;\n        } = {\n            hasTransform: false,\n            fixedContainer: null,\n        };\n\n        if (isFixed) {\n            hasFixed = true;\n            fixedInfo = getPositionFixedInfo(el);\n            offsetContainer = fixedInfo.fixedContainer!;\n        }\n\n        // convert 3 to 4\n        const length = matrix.length;\n\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, target);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        }\n\n\n        const targetZoom = parseFloat(getStyle(\"zoom\")) || 1;\n\n        if (isFixed) {\n            offsetParent = fixedInfo.fixedContainer!;\n            isOffsetEnd = true;\n        } else {\n            const offsetInfo = getOffsetInfo(el, container, false, true, getStyle);\n            const offsetZoom = offsetInfo.offsetZoom;\n\n            offsetParent = offsetInfo.offsetParent;\n            isOffsetEnd = offsetInfo.isEnd;\n            isStatic = offsetInfo.isStatic;\n            zoom *= offsetZoom;\n\n            if ((offsetInfo.isCustomElement || offsetZoom !== 1) && isStatic) {\n                offsetLeft -= offsetParent.offsetLeft;\n                offsetTop -= offsetParent.offsetTop;\n            } else if (IS_FIREFOX || IS_CHROMIUM109) {\n                const parentSlotElement = offsetInfo.parentSlotElement;\n\n                if (parentSlotElement) {\n                    let customOffsetParent: HTMLElement | null = offsetParent;\n                    let customOffsetLeft = 0;\n                    let customOffsetTop = 0;\n\n                    while (customOffsetParent) {\n                        if (!getShadowRoot(customOffsetParent)) {\n                            break;\n                        }\n                        customOffsetLeft += customOffsetParent.offsetLeft;\n                        customOffsetTop += customOffsetParent.offsetTop;\n                        customOffsetParent = customOffsetParent.offsetParent as HTMLElement;\n                    }\n                    offsetLeft -= customOffsetLeft;\n                    offsetTop -= customOffsetTop;\n                }\n            }\n        }\n\n        if (\n            IS_WEBKIT && !IS_SAFARI_ABOVE15\n            && hasOffset && !isSVG && isStatic\n            && (position === \"relative\" || position === \"static\")\n        ) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n\n\n        if (isFixed) {\n            if (hasOffset && fixedInfo.hasTransform) {\n                // border\n                fixedClientLeft = offsetParent.clientLeft;\n                fixedClientTop = offsetParent.clientTop;\n            }\n        } else {\n            if (hasOffset && offsetContainer !== offsetParent) {\n                // border\n                parentClientLeft = offsetParent.clientLeft;\n                parentClientTop = offsetParent.clientTop;\n            }\n            if (hasOffset && offsetParent === documentElement) {\n                const margin = getBodyOffset(el, false);\n\n                offsetLeft += margin[0];\n                offsetTop += margin[1];\n            }\n        }\n\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n\n        if (scale && scale !== \"1\" && scale !== \"none\") {\n            const [\n                scaleX,\n                scaleY = scaleX,\n            ] = scale.split(\" \").map(scale => parseFloat(scale)) as number[];\n            const scaleMatrix = createScaleMatrix([scaleX, scaleY], n);\n\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getAbsoluteMatrix(scaleMatrix, n, origin),\n            });\n        }\n        if (hasOffset) {\n            const isElementTarget = el === target;\n            const scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n            const scrollTop = isElementTarget ? 0 : el.scrollTop;\n\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft,\n                    offsetTop - scrollTop + parentClientTop - fixedClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\n        if (targetZoom !== 1) {\n            matrixes.push({\n                type: \"zoom\",\n                target: el,\n                matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0]),\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === documentElement) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        zoom,\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n        hasFixed,\n    };\n}\n","import { find } from \"@daybrush/utils\";\nimport { getClientRect } from \"../utils\";\nimport { MoveableClientRect } from \"../types\";\nimport { getMatrixStackInfo, MatrixStackInfo } from \"../utils/getMatrixStackInfo\";\n\nlet cacheStyleMap: Map<Element, {\n    style: CSSStyleDeclaration;\n    cached: Record<string, any>;\n}> | null = null;\nlet clientRectStyleMap: Map<Element, MoveableClientRect> | null = null;\n\nlet matrixContainerInfos: Array<[\n    [SVGElement | HTMLElement, SVGElement | HTMLElement | null | undefined],\n    MatrixStackInfo\n]> | null = null;\n\nexport type GetStyle = (propertyName: string) => any;\nexport function setStoreCache(useCache?: boolean) {\n    if (useCache) {\n        if (window.Map) {\n            cacheStyleMap = new Map();\n            clientRectStyleMap = new Map();\n        }\n        matrixContainerInfos = [];\n    } else {\n        cacheStyleMap = null;\n        matrixContainerInfos = null;\n        clientRectStyleMap = null;\n    }\n}\n\nexport function getCachedClientRect(el: HTMLElement | SVGElement): MoveableClientRect {\n    const clientRect = clientRectStyleMap?.get(el);\n\n    if (clientRect) {\n        return clientRect;\n    }\n    const nextClientRect = getClientRect(el, true);\n\n    if (clientRectStyleMap) {\n        clientRectStyleMap.set(el, nextClientRect);\n    }\n    return nextClientRect;\n}\n\nexport function getCachedMatrixContainerInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n) {\n    if (matrixContainerInfos) {\n        const result = find(matrixContainerInfos, info => info[0][0] == target && info[0][1] == container);\n\n        if (result) {\n            return result[1];\n        }\n    }\n    const result = getMatrixStackInfo(target, container, true);\n\n    if (matrixContainerInfos) {\n        matrixContainerInfos.push([[target, container], result]);\n    }\n    return result;\n}\nexport function getCachedStyle(element: Element): GetStyle {\n    let cache = cacheStyleMap?.get(element);\n\n    if (!cache) {\n        const nextStyle = window.getComputedStyle(element);\n\n        if (!cacheStyleMap) {\n            return (property: string) => {\n                return (nextStyle as any)[property];\n            };\n        }\n        cache = {\n            style: nextStyle,\n            cached: {},\n        };\n        cacheStyleMap.set(element, cache);\n    }\n    const cached = cache.cached;\n    const style = cache.style;\n\n    return (property: string) => {\n        if (!(property in cached)) {\n            cached[property] = (style as any)[property];\n        }\n        return cached[property];\n    };\n}\n","import { PREFIX, IS_WEBKIT605, TINY_NUM } from \"./consts\";\nimport { prefixNames } from \"framework-utils\";\nimport {\n    isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction, convertUnitSize, between, getKeys, decamelize,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    createScaleMatrix,\n    plus,\n    convertMatrixtoCSS,\n    rotate,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n    ElementSizes, MoveablePosition, TransformObject,\n    MoveableRefTargetsResultType, MoveableRefTargetType, MoveableManagerInterface, CSSObject,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\nimport { getBeforeRenderableDatas, getDragDist } from \"./gesto/GestoUtils\";\nimport { getGestoData } from \"./gesto/GestoData\";\nimport { GetStyle, getCachedStyle } from \"./store/Store\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function defaultSync(fn: () => void) {\n    fn();\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    return parseMat(transform);\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOriginArray(transformOrigin: string) {\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    return getTransformOriginArray(style.transformOrigin);\n}\nexport function getElementTransform(\n    target: HTMLElement | SVGElement,\n): string {\n    const getStyle = getCachedStyle(target);\n    const computedTransform = getStyle(\"transform\");\n\n    if (computedTransform && computedTransform !== \"none\") {\n        return computedTransform;\n    }\n    if (\"transform\" in target) {\n        const list = (target as any).transform as SVGAnimatedTransformList;\n        const baseVal = list.baseVal;\n\n        if (!baseVal) {\n            return \"\";\n        }\n        const length = baseVal.length;\n\n        if (!length) {\n            return \"\";\n        }\n\n        const matrixes: string[] = [];\n\n        for (let i = 0; i < length; ++i) {\n            const matrix = baseVal[i].matrix;\n\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\n        }\n        return matrixes.join(\" \");\n\n    }\n    return \"\";\n}\n\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n    checkZoom?: boolean,\n    getTargetStyle?: GetStyle,\n) {\n    const doc = el && el.ownerDocument ? el.ownerDocument : document;\n    const documentElement = doc.documentElement || doc.body;\n    let hasSlot = false;\n    let target: HTMLElement | SVGElement | null | undefined;\n    let parentSlotElement: HTMLElement | null | undefined;\n\n    if (!el || isParent) {\n        target = el;\n    } else {\n        const assignedSlotParentElement = el?.assignedSlot?.parentElement;\n        const parentElement = el.parentElement;\n\n        if (assignedSlotParentElement) {\n            hasSlot = true;\n            parentSlotElement = parentElement;\n            target = assignedSlotParentElement;\n        } else {\n            target = parentElement;\n        }\n    }\n\n    let isCustomElement = false;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n    let offsetZoom = 1;\n\n\n    const targetZoom = parseFloat(getTargetStyle?.(\"zoom\")) || 1;\n    const targetPosition = getTargetStyle?.(\"position\");\n\n\n\n    while (target && target !== documentElement) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const getStyle = getCachedStyle(target);\n        const tagName = target.tagName.toLowerCase();\n        const transform = getElementTransform(target as SVGElement);\n        const willChange = getStyle(\"willChange\");\n        const zoom = parseFloat(getStyle(\"zoom\")) || 1;\n\n        position = getStyle(\"position\");\n        if (checkZoom && zoom !== 1) {\n            offsetZoom = zoom;\n            break;\n        }\n        if (\n            // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\n            !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\"\n            || tagName === \"svg\"\n            || position !== \"static\"\n            || (transform && transform !== \"none\")\n            || willChange === \"transform\"\n        ) {\n            break;\n        }\n        const slotParentNode = el?.assignedSlot?.parentNode;\n        const targetParentNode = target.parentNode;\n\n        if (slotParentNode) {\n            hasSlot = true;\n            parentSlotElement = targetParentNode as HTMLElement;\n        }\n        const parentNode = targetParentNode;\n\n        if (parentNode && parentNode.nodeType === 11) {\n            // Shadow Root\n            target = (parentNode as ShadowRoot).host as HTMLElement;\n            isCustomElement = true;\n            position = getCachedStyle(target)(\"position\");\n            break;\n        }\n        target = parentNode as HTMLElement | SVGElement;\n        position = \"relative\";\n    }\n    return {\n        offsetZoom,\n        hasSlot,\n        parentSlotElement,\n        isCustomElement,\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === documentElement,\n        offsetParent: target as HTMLElement || documentElement,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    target: HTMLElement | SVGElement,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n    const getStyle = getCachedStyle(el);\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOriginArray(getStyle(\"transformOrigin\")).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(\n            el as SVGGraphicsElement,\n            origin,\n            el === target && target.tagName.toLowerCase() === \"g\",\n        );\n    } else {\n        origin = getTransformOriginArray(getStyle(\"transformOrigin\")).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n) {\n    const getStyle = getCachedStyle(el);\n    const getBodyStyle = getCachedStyle(document.body);\n    const bodyPosition = getBodyStyle(\"position\");\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(getBodyStyle(\"marginLeft\"), 10);\n    let marginTop = parseInt(getBodyStyle(\"marginTop\"), 10);\n\n    if (getStyle(\"position\") === \"absolute\") {\n        if (getStyle(\"top\") !== \"auto\" || getStyle(\"bottom\") !== \"auto\") {\n            marginTop = 0;\n        }\n        if (getStyle(\"left\") !== \"auto\" || getStyle(\"right\") !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\n\nexport function getBodyScrollPos() {\n    return [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop,\n    ];\n}\n\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\n    let fixedContainer = el.parentElement;\n    let hasTransform = false;\n\n    while (fixedContainer) {\n        const transform = getComputedStyle(fixedContainer).transform;\n\n\n        if (transform && transform !== \"none\") {\n            hasTransform = true;\n            break;\n        }\n        if (fixedContainer === document.body) {\n            break;\n        }\n        fixedContainer = fixedContainer.parentElement;\n    }\n\n    return {\n        fixedContainer: fixedContainer || document.body,\n        hasTransform,\n    };\n}\n\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n    isGTarget?: boolean,\n) {\n    if (!el.getBBox || !isGTarget && el.tagName.toLowerCase() === \"g\") {\n        return [0, 0, 0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const {\n        offsetWidth: width,\n        offsetHeight: height,\n    } = getSize(target);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\n\nexport function calculateMoveableClientPositions(\n    rootMatrix: number[],\n    poses: number[][],\n    rootClientRect: MoveableClientRect,\n) {\n    const is3d = rootMatrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const rootPoses = poses.map(pos => calculatePosition(rootMatrix, pos, n));\n    const { left, top } = rootClientRect;\n\n    return rootPoses.map(pos => {\n        return [pos[0] + left, pos[1] + top];\n    });\n\n}\nexport function calculateMoveablePosition(\n    matrix: number[],\n    origin: number[],\n    width: number,\n    height: number,\n): MoveablePosition {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(calculatePoses(matrix, 100, 100, n));\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\n\nexport function getProps<Props>(props: Props, ableName: keyof Props): Props {\n    const self = props[ableName];\n\n    if (isObject(self)) {\n        return {\n            ...props,\n            ...self,\n        };\n    }\n    return props;\n}\n\nexport function getSize(\n    target?: SVGElement | HTMLElement | null,\n): ElementSizes {\n    const hasOffset = target && !isUndefined((target as any).offsetWidth);\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n    let clientWidth = 0;\n    let clientHeight = 0;\n    let cssWidth = 0;\n    let cssHeight = 0;\n    let contentWidth = 0;\n    let contentHeight = 0;\n\n    let minWidth = 0;\n    let minHeight = 0;\n    let minOffsetWidth = 0;\n    let minOffsetHeight = 0;\n\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n    let maxOffsetWidth = Infinity;\n    let maxOffsetHeight = Infinity;\n    let inlineCSSWidth = 0;\n    let inlineCSSHeight = 0;\n    let svg = false;\n\n    if (target) {\n        if (!hasOffset && target!.tagName.toLowerCase() !== \"svg\") {\n            // check svg elements\n            const bbox = (target as SVGGraphicsElement).getBBox();\n\n            svg = true;\n            offsetWidth = bbox.width;\n            offsetHeight = bbox.height;\n            cssWidth = offsetWidth;\n            cssHeight = offsetHeight;\n            contentWidth = offsetWidth;\n            contentHeight = offsetHeight;\n            clientWidth = offsetWidth;\n            clientHeight = offsetHeight;\n        } else {\n            // check html elements\n            const getStyle = getCachedStyle(target);\n            const targetStyle = target.style;\n            const boxSizing = getStyle(\"boxSizing\") === \"border-box\";\n            const borderLeft = parseFloat(getStyle(\"borderLeftWidth\")) || 0;\n            const borderRight = parseFloat(getStyle(\"borderRightWidth\")) || 0;\n            const borderTop = parseFloat(getStyle(\"borderTopWidth\")) || 0;\n            const borderBottom = parseFloat(getStyle(\"borderBottomWidth\")) || 0;\n            const paddingLeft = parseFloat(getStyle(\"paddingLeft\")) || 0;\n            const paddingRight = parseFloat(getStyle(\"paddingRight\")) || 0;\n            const paddingTop = parseFloat(getStyle(\"paddingTop\")) || 0;\n            const paddingBottom = parseFloat(getStyle(\"paddingBottom\")) || 0;\n\n            const horizontalPadding = paddingLeft + paddingRight;\n            const verticalPadding = paddingTop + paddingBottom;\n            const horizontalBorder = borderLeft + borderRight;\n            const verticalBorder = borderTop + borderBottom;\n            const horizontalOffset = horizontalPadding + horizontalBorder;\n            const verticalOffset = verticalPadding + verticalBorder;\n            const position = getStyle(\"position\");\n\n            let containerWidth = 0;\n            let containerHeight = 0;\n\n            // SVGSVGElement, HTMLElement\n            if (\"clientLeft\" in target) {\n                let parentElement: HTMLElement | null = null;\n\n                if (position === \"absolute\") {\n                    const offsetInfo = getOffsetInfo(target, document.body);\n                    parentElement = offsetInfo.offsetParent;\n\n                } else {\n                    parentElement = target.parentElement;\n                }\n                if (parentElement) {\n                    const getParentStyle = getCachedStyle(parentElement);\n\n                    containerWidth = parseFloat(getParentStyle(\"width\"));\n                    containerHeight = parseFloat(getParentStyle(\"height\"));\n                }\n            }\n            minWidth = Math.max(\n                horizontalPadding,\n                convertUnitSize(getStyle(\"minWidth\"), containerWidth) || 0,\n            );\n            minHeight = Math.max(\n                verticalPadding,\n                convertUnitSize(getStyle(\"minHeight\"), containerHeight) || 0,\n            );\n            maxWidth = convertUnitSize(getStyle(\"maxWidth\"), containerWidth);\n            maxHeight = convertUnitSize(getStyle(\"maxHeight\"), containerHeight);\n\n            if (isNaN(maxWidth)) {\n                maxWidth = Infinity;\n            }\n            if (isNaN(maxHeight)) {\n                maxHeight = Infinity;\n            }\n            inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n            inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n            cssWidth = parseFloat(getStyle(\"width\")) || 0;\n            cssHeight = parseFloat(getStyle(\"height\")) || 0;\n\n\n            contentWidth = Math.abs(cssWidth - inlineCSSWidth) < 1\n                ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth)\n                : cssWidth;\n            contentHeight = Math.abs(cssHeight - inlineCSSHeight) < 1\n                ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight)\n                : cssHeight;\n\n            offsetWidth = contentWidth;\n            offsetHeight = contentHeight;\n            clientWidth = contentWidth;\n            clientHeight = contentHeight;\n\n            if (boxSizing) {\n                maxOffsetWidth = maxWidth;\n                maxOffsetHeight = maxHeight;\n                minOffsetWidth = minWidth;\n                minOffsetHeight = minHeight;\n                contentWidth = offsetWidth - horizontalOffset;\n                contentHeight = offsetHeight - verticalOffset;\n            } else {\n                maxOffsetWidth = maxWidth + horizontalOffset;\n                maxOffsetHeight = maxHeight + verticalOffset;\n                minOffsetWidth = minWidth + horizontalOffset;\n                minOffsetHeight = minHeight + verticalOffset;\n                offsetWidth = contentWidth + horizontalOffset;\n                offsetHeight = contentHeight + verticalOffset;\n            }\n            clientWidth = contentWidth + horizontalPadding;\n            clientHeight = contentHeight + verticalPadding;\n        }\n    }\n\n    return {\n        svg,\n        offsetWidth,\n        offsetHeight,\n        clientWidth,\n        clientHeight,\n        contentWidth,\n        contentHeight,\n        inlineCSSWidth,\n        inlineCSSHeight,\n        cssWidth,\n        cssHeight,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        minOffsetWidth,\n        minOffsetHeight,\n        maxOffsetWidth,\n        maxOffsetHeight,\n    };\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, top: 0,\n        width: 0, height: 0,\n        right: 0,\n        bottom: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\n\nexport function getExtendsRect(\n    el: HTMLElement | SVGElement,\n    rect: MoveableClientRect,\n): MoveableClientRect {\n    const isRoot = el === document.body || el === document.documentElement;\n\n\n    const extendsRect = {\n        clientLeft: el.clientLeft,\n        clientTop: el.clientTop,\n        clientWidth: el.clientWidth,\n        clientHeight: el.clientHeight,\n        scrollWidth: el.scrollWidth,\n        scrollHeight: el.scrollHeight,\n        overflow: false,\n    };\n\n    if (isRoot) {\n        extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\n        extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\n    }\n\n    extendsRect.overflow = getCachedStyle(el)(\"overflow\") !== \"visible\";\n\n    return {\n        ...rect,\n        ...extendsRect,\n    };\n}\n\nexport function getClientRectByPosition(\n    position: { left: number, right: number, top: number, bottom: number },\n    base: MoveableClientRect,\n    el?: HTMLElement | SVGElement, isExtends?: boolean,\n) {\n    const {\n        left,\n        right,\n        top,\n        bottom,\n    } = position;\n    const baseTop = base.top;\n    const baseLeft = base.left;\n\n    const rect: MoveableClientRect = {\n        left: baseLeft + left,\n        top: baseTop + top,\n        right: baseLeft + right,\n        bottom: baseTop + bottom,\n        width: right - left,\n        height: bottom - top,\n    };\n\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean): MoveableClientRect {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n    // let isRoot = false;\n\n    if (el) {\n        const clientRect = el.getBoundingClientRect();\n\n        left = clientRect.left;\n        top = clientRect.top;\n        width = clientRect.width;\n        height = clientRect.height;\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        top,\n        width,\n        height,\n        right: left + width,\n        bottom: top + height,\n    };\n\n    if (el && isExtends) {\n        return getExtendsRect(el, rect);\n    }\n    return rect;\n}\nexport function getTotalDirection(\n    parentDirection: number[],\n    isPinch: boolean,\n    inputEvent: any,\n    datas: any,\n) {\n    let direction: number[] | undefined;\n\n    if (parentDirection) {\n        direction = parentDirection;\n    } else if (isPinch) {\n        direction = [0, 0];\n    } else {\n        const target = inputEvent.target;\n\n        direction = getDirection(target, datas);\n    }\n    return direction;\n}\nexport function getDirection(target: SVGElement | HTMLElement, datas: any) {\n    if (!target) {\n        return;\n    }\n    const deg = target.getAttribute(\"data-rotation\") || \"\";\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    datas.deg = deg;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\n\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\n\nexport function unset(self: any, name: string) {\n    self[name]?.unset();\n    self[name] = null;\n}\n\nexport function fillCSSObject(style: Record<string, any>, resolvedEvent?: any): CSSObject {\n    if (resolvedEvent) {\n        const originalDatas = getBeforeRenderableDatas(resolvedEvent);\n\n        originalDatas.nextStyle = {\n            ...originalDatas.nextStyle,\n            ...style,\n        };\n    }\n    return {\n        style,\n        cssText: getKeys(style).map(name => `${decamelize(name, \"-\")}: ${style[name]};`).join(\"\"),\n    };\n}\n\nexport function fillAfterTransform(\n    prevEvent: { style: Record<string, string>, transform: string },\n    nextEvent: { style: Record<string, string>, transform: string, afterTransform?: string },\n    resolvedEvent?: any\n): TransformObject {\n    const afterTransform = nextEvent.afterTransform || nextEvent.transform;\n\n    return {\n        ...fillCSSObject({\n            ...prevEvent.style,\n            ...nextEvent.style,\n            transform: afterTransform,\n        }, resolvedEvent),\n        afterTransform,\n        transform: prevEvent.transform,\n    };\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n    isBeforeEvent?: boolean,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n        isTrusted: e.isTrusted !== false,\n        stopAble() {\n            datas.isEventStart = false;\n        },\n        stopDrag() {\n            e.stop?.();\n        },\n    } as any;\n\n    if (!datas.isStartEvent) {\n        datas.isStartEvent = true;\n    } else if (!isBeforeEvent) {\n        datas.lastEvent = nextParams;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n        isFirstDrag: !!e.isFirstDrag,\n    } as any;\n}\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\n): any {\n    moveable._emitter.on(name, callback);\n}\n\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[],\n    pos: number[],\n    transformOrigin: number[],\n    origin: number[],\n    n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function viewDraggingPrefix(ableName: string) {\n    return prefix(`${ableName}-view-dragging`);\n}\nexport function getDirectionViewClassName(ableName: string) {\n    return (moveable: MoveableManagerInterface) => {\n        if (!moveable.isDragging(ableName)) {\n            return \"\";\n        }\n        const data = getGestoData(moveable, ableName);\n        const deg = data.deg;\n        if (!deg) {\n            return \"\";\n        }\n        return prefix(`view-control-rotation${deg}`);\n    };\n}\nexport function getDirectionCondition(ableName: string, checkAbles: string[] = [ableName]) {\n    return (moveable: any, e: any) => {\n        if (e.isRequest) {\n            if (checkAbles.some(name => e.requestAble === name)) {\n                return e.parentDirection!;\n            } else {\n                return false;\n            }\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n    };\n}\n\nexport function convertTransformInfo(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    if (arr instanceof Element) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (target instanceof Element) {\n        return target;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector?: boolean): MoveableRefTargetsResultType;\nexport function getRefTargets(targets: MoveableRefTargetType, isSelector?: boolean): any[] {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        if (isArray(target)) {\n            prev.push(getRefTargets(target, isSelector));\n        } else {\n            prev.push(getRefTarget(target, isSelector));\n        }\n        return prev;\n    }, [] as MoveableRefTargetsResultType);\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n\nexport function getSizeDistByDist(\n    startSize: number[],\n    dist: number[],\n    ratio: number,\n    direction: number[],\n    keepRatio?: boolean,\n) {\n    const [startOffsetWidth, startOffsetHeight] = startSize;\n    let distWidth = 0;\n    let distHeight = 0;\n\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], direction);\n        const size = getDistSize(dist);\n        const signSize = Math.cos(rad - standardRad) * size;\n\n        if (!direction[0]) {\n            // top, bottom\n            distHeight = signSize;\n            distWidth = distHeight * ratio;\n        } else if (!direction[1]) {\n            // left, right\n            distWidth = signSize;\n            distHeight = distWidth / ratio;\n        } else {\n            // two-way\n            const startWidthSize = direction[0] * startOffsetWidth;\n            const startHeightSize = direction[1] * startOffsetHeight;\n\n            let secondRad = Math.atan2(startWidthSize + dist[0], startHeightSize + dist[1]);\n            let firstRad = Math.atan2(startWidthSize, startHeightSize);\n\n            if (secondRad < 0) {\n                secondRad += Math.PI * 2;\n            }\n            if (firstRad < 0) {\n                firstRad += Math.PI * 2;\n            }\n            let rad = 0;\n\n            if (Math.abs(secondRad - firstRad) < Math.PI / 2 || Math.abs(secondRad - firstRad) > Math.PI / 2 * 3) {\n                rad = secondRad - firstRad;\n            } else {\n                firstRad += Math.PI;\n                rad = secondRad - firstRad;\n            }\n            if (rad > Math.PI * 2) {\n                rad -= Math.PI * 2;\n            } else if (rad > Math.PI) {\n                rad = 2 * Math.PI - rad;\n            } else if (rad < -Math.PI) {\n                rad = -2 * Math.PI - rad;\n            }\n            //       180\n            // -1, -1,  // 1, -1\n            // 270            90\n            // -1, 1    // 1, 1\n            //       0\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]]) * Math.cos(rad);\n\n            distWidth = distSize * Math.sin(firstRad) - startWidthSize;\n            distHeight = distSize * Math.cos(firstRad) - startHeightSize;\n\n            if (direction[0] < 0) {\n                distWidth *= -1;\n            }\n            if (direction[1] < 0) {\n                distHeight *= -1;\n            }\n        }\n    } else {\n        distWidth = direction[0] * dist[0];\n        distHeight = direction[1] * dist[1];\n    }\n\n    return [distWidth, distHeight];\n}\nexport function getOffsetSizeDist(\n    sizeDirection: number[],\n    keepRatio: boolean,\n    datas: any,\n    e: any,\n) {\n    const {\n        ratio,\n        startOffsetWidth,\n        startOffsetHeight,\n    } = datas;\n    let distWidth = 0;\n    let distHeight = 0;\n    const {\n        distX,\n        distY,\n        parentDistance,\n        parentDist,\n        parentScale,\n    } = e;\n    const startFixedDirection = datas.fixedDirection;\n    const directionsDists = [0, 1].map(index => {\n        return Math.abs(sizeDirection[index] - startFixedDirection[index]);\n    });\n    const directionRatios = [0, 1].map(index => {\n        let dist = directionsDists[index];\n\n        if (dist !== 0) {\n            dist = 2 / dist;\n        }\n        return dist;\n    });\n    if (parentDist) {\n        distWidth = parentDist[0];\n        distHeight = parentDist[1];\n\n        if (keepRatio) {\n            if (!distWidth) {\n                distWidth = distHeight * ratio;\n            } else if (!distHeight) {\n                distHeight = distWidth / ratio;\n            }\n        }\n    } else if (parentScale) {\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\n    } else if (parentDistance) {\n        const scaleX = startOffsetWidth * directionsDists[0];\n        const scaleY = startOffsetHeight * directionsDists[1];\n        const ratioDistance = getDistSize([scaleX, scaleY]);\n\n        distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n        distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n    } else {\n        let dist = getDragDist({ datas, distX, distY });\n\n        dist = directionRatios.map((ratio, i) => {\n            return dist[i] * ratio;\n        });\n\n        [distWidth, distHeight] = getSizeDistByDist(\n            [startOffsetWidth, startOffsetHeight],\n            dist,\n            ratio,\n            sizeDirection,\n            keepRatio,\n        );\n    }\n    return {\n        // direction,\n        // sizeDirection,\n        distWidth,\n        distHeight,\n    };\n}\n\nexport function convertTransformUnit(\n    origin: string,\n    xy?: boolean,\n): { x?: string; y?: string; value?: string; } {\n    if (xy) {\n        if (origin === \"left\") {\n            return { x: \"0%\", y: \"50%\" };\n        } else if (origin === \"top\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"center\") {\n            return { x: \"50%\", y: \"50%\" };\n        } else if (origin === \"right\") {\n            return { x: \"100%\", y: \"50%\" };\n        } else if (origin === \"bottom\") {\n            return { x: \"50%\", y: \"100%\" };\n        }\n        const [left, right] = origin.split(\" \");\n        const leftOrigin = convertTransformUnit(left || \"\");\n        const rightOrigin = convertTransformUnit(right || \"\");\n        const originObject = {\n            ...leftOrigin,\n            ...rightOrigin,\n        };\n\n        const nextOriginObject = {\n            x: \"50%\",\n            y: \"50%\",\n        };\n        if (originObject.x) {\n            nextOriginObject.x = originObject.x;\n        }\n        if (originObject.y) {\n            nextOriginObject.y = originObject.y;\n        }\n        if (originObject.value) {\n            if (originObject.x && !originObject.y) {\n                nextOriginObject.y = originObject.value;\n            }\n            if (!originObject.x && originObject.y) {\n                nextOriginObject.x = originObject.value;\n            }\n        }\n        return nextOriginObject;\n    }\n    if (origin === \"left\") {\n        return { x: \"0%\" };\n    }\n    if (origin === \"right\") {\n        return { x: \"100%\" };\n    }\n    if (origin === \"top\") {\n        return { y: \"0%\" };\n    }\n    if (origin === \"bottom\") {\n        return { y: \"100%\" };\n    }\n    if (!origin) {\n        return {};\n    }\n    if (origin === \"center\") {\n        return { value: \"50%\" };\n    }\n    return { value: origin };\n}\nexport function convertTransformOriginArray(transformOrigin: string, width: number, height: number) {\n    const { x, y } = convertTransformUnit(transformOrigin, true);\n\n    return [\n        convertUnitSize(x!, width) || 0,\n        convertUnitSize(y!, height) || 0,\n    ];\n}\n\nexport function rotatePosesInfo(poses: number[][], origin: number[], rad: number) {\n    const prevPoses = poses.map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    return {\n        prev: prevPoses,\n        next: nextPoses,\n        result: nextPoses.map(pos => plus(pos, origin)),\n    };\n}\n\n\n\nexport function isDeepArrayEquals(arr1: any[], arr2: any[]): boolean {\n    return arr1.length === arr2.length && arr1.every((value1, i) => {\n        const value2 = arr2[i];\n        const isArray1 = isArray(value1);\n        const isArray2 = isArray(value2);\n        if (isArray1 && isArray2) {\n            return isDeepArrayEquals(value1, value2);\n        } else if (!isArray1 && !isArray2) {\n            return value1 === value2;\n        }\n        return false;\n    });\n}\n\n\nexport function watchValue<T>(\n    store: Record<string, any>,\n    property: string,\n    nextValue: T,\n    valueKey: (value: T) => string | number,\n): T {\n    const prevValue = store[property];\n\n    if (\n        property in store\n        && (prevValue === nextValue || valueKey(prevValue) === valueKey(nextValue))\n    ) {\n        return prevValue;\n    }\n\n    store[property] = nextValue;\n    return nextValue;\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    props: [\n        \"pinchable\",\n    ] as const,\n    events: [\n        \"pinchStart\",\n        \"pinch\",\n        \"pinchEnd\",\n        \"pinchGroupStart\",\n        \"pinchGroup\",\n        \"pinchGroupEnd\",\n    ] as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { Able, MoveableGroupInterface, MoveableManagerInterface, MoveableManagerState } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n    ableName: string,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        const state = childMoveable.state as MoveableManagerState<any>;\n        const gestos = state.gestos;\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n        } else {\n\n\n            if (!gestos[ableName]) {\n                gestos[ableName] = datas.childGestos[i];\n            }\n            if (!gestos[ableName]) {\n                return;\n            }\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            gestos[ableName] = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gestos[ableName]);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gestos = {};\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import { TINY_NUM } from \"@daybrush/utils\";\nimport { throttle } from \"@daybrush/utils\";\nimport {\n    MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculatePosition,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\n\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\n    let dx = point2[0] - point1[0];\n    let dy = point2[1] - point1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n\n    // b > 0\n    // ax + by + c = 0\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (!dx) {\n        // -x + 1 = 0\n        a = -1;\n        c = point1[0];\n    } else if (!dy) {\n        // y - 1 = 0\n        b = 1;\n        c = -point1[1];\n    } else {\n        // y = -a(x - x1) + y1\n        // ax + y + a * x1 - y1 = 0\n        a = -dy / dx;\n        b = 1;\n        c = a * point1[0] - point1[1];\n    }\n\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        snapThreshold,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapThreshold?: number,\n) {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n    snapThreshold = 1,\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), snapThreshold);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    fixedDirection: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    // const fixedDirection = [-direction[0], -direction[1]];\n\n    if (keepRatio) {\n        if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n            directions.push(\n                [fixedDirection, [-1, -1]],\n                [fixedDirection, [-1, 1]],\n                [fixedDirection, [1, -1]],\n                [fixedDirection, [1, 1]],\n            );\n        } else {\n            directions.push(\n                [fixedDirection, [direction[0], -direction[1]]],\n                [fixedDirection, [-direction[0], direction[1]]],\n            );\n        }\n        directions.push([fixedDirection, direction]);\n    } else {\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\n            const endDirection = direction[0] ? direction : [1, 1];\n\n            [1, -1].forEach(signX => {\n                [1, -1].forEach(signY => {\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\n\n                    if (\n                        fixedDirection[0] === nextDirection[0]\n                        && fixedDirection[1] === nextDirection[1]\n                    ) {\n                        return;\n                    }\n                    directions.push([fixedDirection, nextDirection]);\n                });\n            });\n        } else if (direction[0]) {\n            const signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [fixedDirection[0], -1],\n                        [sign * direction[0], -1],\n                    ],\n                    [\n                        [fixedDirection[0], 0],\n                        [sign * direction[0], 0],\n                    ],\n                    [\n                        [fixedDirection[0], 1],\n                        [sign * direction[0], 1],\n                    ]\n                );\n            });\n        } else if (direction[1]) {\n            const signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [-1, fixedDirection[1]],\n                        [-1, sign * direction[1]],\n                    ],\n                    [\n                        [0, fixedDirection[1]],\n                        [0, sign * direction[1]],\n                    ],\n                    [\n                        [1, fixedDirection[1]],\n                        [1, sign * direction[1]],\n                    ]\n                );\n            });\n        }\n    }\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\nimport { solveLineConstants } from \"./utils\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\n    return dots.every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    if (isSameStartLine([\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line, centerSign)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    // test vertical\n\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    [a, b]: [number, number, number],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    // const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    const hasDx = b;\n    const hasDy = a;\n    const slope = - a / b;\n    // lineConstants\n    // ax + by + c = 0\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        // by + c = 0\n        if (isRender && !hasDy) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDx) {\n            // ax + by + c = 0\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            // ax + c = 0\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !hasDx) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDy) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lineInfos: InnerBoundLineInfo[],\n    datas: any,\n) {\n    return lineInfos.map(info => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, info);\n\n        const multiple = info.multiple;\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\n        return {\n            ...info,\n            multiple: info.multiple.map(dir => Math.abs(dir) * 2),\n        };\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport interface InnerBoundLineInfo {\n    line: number[][];\n    multiple: number[];\n    horizontalSign: boolean;\n    verticalSign: boolean;\n    centerSign: boolean;\n    lineConstants: [number, number, number];\n}\nexport function getCheckInnerBoundLineInfos(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n): InnerBoundLineInfo[] {\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n    const center = getPosByDirection(virtualPoses, [0, 0]);\n\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\n        const virtualLine = [\n            getPosByDirection(virtualPoses, dir1),\n            getPosByDirection(virtualPoses, dir2),\n        ];\n        const lineConstants = solveLineConstants(virtualLine);\n        const {\n            vertical: verticalSign,\n            horizontal: horizontalSign,\n        } = isStartLine(center, virtualLine);\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\n\n        return {\n            multiple,\n            centerSign,\n            verticalSign,\n            horizontalSign,\n            lineConstants,\n            line: [\n                getPosByDirection(poses, dir1),\n                getPosByDirection(poses, dir2),\n            ],\n        };\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => {\n        const centerSign = hitTestLine(center, line) <= 0;\n\n        return !isSameStartLine(boundDots, line, centerSign);\n    });\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lineInfos.forEach(lineInfo => {\n        const { line, lineConstants } = lineInfo;\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n): any[] {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element, className } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n): any {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number, type: \"vertical\" | \"horizontal\") => {\n            // Type can be used render different values.\n            if (type === 'vertical') {\n                return v;\n            }\n            return v;\n        },\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n): any[] {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type).slice(0, 1);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect, className }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(guideines, posesX, posesY, snapThreshold);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        let sizeOffset = [0, 0];\n\n        if (\n            !keepRatio\n            && Math.abs(endDirection[0]) === 1\n            && Math.abs(endDirection[1]) === 1\n            && startDirection[0] !== endDirection[0]\n            && startDirection[1] !== endDirection[1]\n        ) {\n            sizeOffset = getDragDist({\n                datas,\n                distX: -otherVerticalOffset,\n                distY: -otherHorizontalOffset,\n            });\n        } else {\n            sizeOffset = solveNextOffset(\n                otherStartPos,\n                otherEndPos,\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n                isVertical,\n                datas,\n            ).offset;\n        }\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import { convertUnitSize, isNumber, isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport {\n    MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapGuideline, SnapDirectionPoses,\n    PosGuideline, ElementGuidelineValue,\n    SnapElementRect,\n    NumericPosGuideline,\n} from \"../../types\";\nimport { getRect, getAbsolutePosesByState, getRefTarget, calculateInversePosition, roundSign } from \"../../utils\";\nimport {\n    splitSnapDirectionPoses, getSnapDirections,\n    HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP, calculateContainerPos,\n} from \"./utils\";\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        hasFixed,\n    } = state;\n    const {\n        overflow,\n        scrollHeight: containerHeight,\n        scrollWidth: containerWidth,\n        clientHeight: containerClientHeight,\n        clientWidth: containerClientWidth,\n        clientLeft,\n        clientTop,\n    } = containerClientRect;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n        maxSnapElementGuidelineDistance = Infinity,\n    } = moveable.props;\n    const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n    const targetRect = { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 };\n    const elementGuidelines = getElementGuidelines(moveable);\n    let totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    if (snapGap) {\n        totalGuidelines.push(...getGapGuidelines(\n            moveable, targetRect, snapThreshold,\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n    const snapOffset = {\n        ...(state.snapOffset || {\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n        }),\n    };\n\n\n    if (hasFixed) {\n        const { left, top } = containerClientRect;\n\n        snapOffset.left += left;\n        snapOffset.top += top;\n        snapOffset.right += left;\n        snapOffset.bottom += top;\n    }\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    totalGuidelines = totalGuidelines.filter(({ element, elementRect, type }) => {\n        if (!element || !elementRect) {\n            return true;\n        }\n        const rect = elementRect.rect;\n\n        return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n    });\n\n    return totalGuidelines;\n}\n\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThreshold: number,\n) {\n    const {\n        maxSnapElementGuidelineDistance = Infinity,\n        maxSnapElementGapDistance = Infinity,\n    } = moveable.props;\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (Math.abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (Math.abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (Math.abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n                return;\n            }\n            if (gap > maxSnapElementGapDistance) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n            });\n        });\n    });\n    return gapGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\n\nexport function checkBetweenRects(\n    rect1: SnapDirectionPoses,\n    rect2: SnapDirectionPoses,\n    type: \"horizontal\" | \"vertical\",\n    distance: number,\n) {\n    if (type === \"horizontal\") {\n        return Math.abs(rect1.right! - rect2.left!) <= distance\n            || Math.abs(rect1.left! - rect2.right!) <= distance\n            || rect1.left! <= rect2.right! && rect2.left! <= rect1.right!;\n    } else if (type === \"vertical\") {\n        return Math.abs(rect1.bottom! - rect2.top!) <= distance\n            || Math.abs(rect1.top! - rect2.bottom!) <= distance\n            || rect1.top! <= rect2.bottom! && rect2.top! <= rect1.bottom!;\n    }\n    return true;\n}\n\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return {\n                ...el,\n                element: getRefTarget(el.element, true)!,\n            };\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach(pos => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n        horizontal.forEach(pos => {\n            nextGuidelines.push({\n                type: \"horizontal\", element, pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ], size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\n\nfunction getObjectGuidelines(\n    guidelines: Array<PosGuideline | number | string> | false,\n    containerSize: number,\n): NumericPosGuideline[] {\n    return guidelines ? guidelines.map(info => {\n        const posGuideline = isObject(info) ? info : { pos: info };\n        const pos = posGuideline.pos;\n\n        if (isNumber(pos)) {\n            return posGuideline as NumericPosGuideline;\n        } else {\n            return {\n                ...posGuideline,\n                pos: convertUnitSize(pos, containerSize),\n            };\n        }\n    }) : [];\n}\n\nexport function getDefaultGuidelines(\n    horizontalGuidelines: Array<PosGuideline | number | string> | false,\n    verticalGuidelines: Array<PosGuideline | number | string> | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    getObjectGuidelines(horizontalGuidelines, snapHeight).forEach(posInfo => {\n        guidelines.push({\n            type: \"horizontal\",\n            pos: [\n                snapOffsetLeft,\n                throttle(posInfo.pos - clientTop + snapOffsetTop, 0.1),\n            ],\n            size: snapWidth,\n            className: posInfo.className,\n        });\n    });\n    getObjectGuidelines(verticalGuidelines, snapWidth).forEach(posInfo => {\n        guidelines.push({\n            type: \"vertical\",\n            pos: [\n                throttle(posInfo.pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ],\n            size: snapHeight,\n            className: posInfo.className,\n        });\n    });\n    return guidelines;\n}\n\n\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n        offsetDelta,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft + offsetDelta[0];\n        const top = rect.top - containerTop + offsetDelta[1];\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft + distLeft,\n                right: elementRight + distLeft,\n                top: elementTop + distTop,\n                bottom: elementBottom + distTop,\n                center: (elementLeft + elementRight) / 2 + distLeft,\n                middle: (elementTop + elementBottom) / 2 + distTop,\n            },\n        };\n    });\n}\n\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n    getDirectionCondition,\n} from \"../utils\";\nimport {\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLineInfos,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\nimport { getTotalGuidelines } from \"./snappable/getTotalGuidelines\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function checkSnapInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n    const container = state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\n        return false;\n    }\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n\n            snapOffset.left = throttle(offset1[0], 0.00001);\n            snapOffset.top = throttle(offset1[1], 0.00001);\n            snapOffset.right = throttle(offset2[0], 0.00001);\n            snapOffset.bottom = throttle(offset2[1], 0.00001);\n        }\n    }\n\n    state.snapContainer = snapContainer;\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n    return true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPos: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\n\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const { fixedDirection } = datas;\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            innerBoundLineInfos,\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (throttle(verticalOffset, FLOAT_POINT_NUM) || throttle(horizontalOffset, FLOAT_POINT_NUM)) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return {\n            isSnap: false,\n            rotation,\n        };\n    }\n\n    const { pos1, pos2, pos3, pos4, origin: origin2 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin2));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n    // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin2, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin2,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n    const isSnap = result.length > 0;\n\n    return {\n        isSnap,\n        rotation: isSnap ? result[0] : rotation,\n    };\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { fixedDirection, nextAllMatrix } = datas;\n    const { allMatrix, is3d } = moveable.state;\n\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                nextAllMatrix || allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\n                ),\n                startOffsetWidth,\n                startOffsetHeight,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        startOffsetWidth,\n        startOffsetHeight,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n\nconst directionCondition = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: [\n        \"snappable\",\n        \"snapContainer\",\n        \"snapDirections\",\n        \"elementSnapDirections\",\n        \"snapGap\",\n        \"snapGridWidth\",\n        \"snapGridHeight\",\n        \"isDisplaySnapDigit\",\n        \"isDisplayInnerSnapDigit\",\n        \"snapDigit\",\n        \"snapThreshold\",\n        \"snapRenderThreshold\",\n        \"horizontalGuidelines\",\n        \"verticalGuidelines\",\n        \"elementGuidelines\",\n        \"bounds\",\n        \"innerBounds\",\n        \"snapDistFormat\",\n        \"maxSnapElementGuidelineDistance\",\n        \"maxSnapElementGapDistance\",\n    ] as const,\n    events: [\"snap\"] as const,\n    css: [\n        `:host {\n--bounds-color: #d66;\n}\n.guideline {\npointer-events: none;\nz-index: 2;\n}\n.guideline.bounds {\nbackground: #d66;\nbackground: var(--bounds-color);\n}\n.guideline-group {\nposition: absolute;\ntop: 0;\nleft: 0;\n}\n.guideline-group .size-value {\nposition: absolute;\ncolor: #f55;\nfont-size: 12px;\nfont-size: calc(12px * var(--zoom));\nfont-weight: bold;\n}\n.guideline-group.horizontal .size-value {\ntransform-origin: 50% 100%;\ntransform: translateX(-50%);\nleft: 50%;\nbottom: 5px;\nbottom: calc(2px + 3px * var(--zoom));\n}\n.guideline-group.vertical .size-value {\ntransform-origin: 0% 50%;\ntop: 50%;\ntransform: translateY(-50%);\nleft: 5px;\nleft: calc(2px + 3px * var(--zoom));\n}\n.guideline.gap {\nbackground: #f55;\n}\n.size-value.gap {\ncolor: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n        const {\n            snapRenderThreshold = 1,\n        } = moveable.props;\n\n        if (!snapRenderInfo || !snapRenderInfo.render || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction,\n                        snapRenderThreshold,\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects).sort((a, b) => {\n            return a.gap! - b.gap!;\n        });\n\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        checkSnapInfo(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        if (!checkSnapInfo(moveable)) {\n            state.guidelines = getTotalGuidelines(moveable);\n        }\n        if (state.snapRenderInfo) {\n            state.snapRenderInfo.render = true;\n        }\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        checkSnapInfo(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import { prefix, getControlTransform, getLineStyle, getProps } from \"./utils\";\nimport {\n    Renderer, MoveableManagerInterface,\n    RenderDirections,\n} from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS, DIRECTIONS4 } from \"./consts\";\nimport { IObject, throttle, getRad, getKeys } from \"@daybrush/utils\";\n\nexport interface DirectionControlInfo {\n    data: Record<string, any>;\n    classNames: string[];\n    dir: string;\n}\n\n\nexport function renderDirectionControlsByInfos(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    renderDirections: DirectionControlInfo[],\n    React: Renderer,\n): any[] {\n\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n    const {\n        zoom,\n    } = getProps(moveable.props, ableName as any);\n\n\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n    const directionMap: IObject<boolean> = {};\n\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    renderDirections.forEach(({ dir }) => {\n        directionMap[dir] = true;\n    });\n\n    return renderDirections.map(({ data, classNames, dir }) => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        renderDirectionMap[dir] = true;\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        const dataAttrs: Record<string, string> = {};\n\n        getKeys(data).forEach(name => {\n            dataAttrs[`data-${name}`] = data[name];\n        });\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, ableName, ...classNames)}\n                data-rotation={directionRotation}\n                data-direction={dir}\n                {...dataAttrs}\n                key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    ableName: string,\n    React: Renderer,\n): any[] {\n    const {\n        renderDirections: directions = defaultDirections,\n        displayAroundControls,\n    } = getProps(moveable.props, ableName as any);\n\n    if (!directions) {\n        return [];\n    }\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n\n    return [\n        ...(displayAroundControls ? renderAroundControls(moveable, React, ableName, renderDirections) : []),\n        ...renderDirectionControlsByInfos(\n            moveable,\n            ableName,\n            renderDirections.map(dir => {\n                return {\n                    data: {},\n                    classNames: [],\n                    dir,\n                };\n            }),\n            React,\n        ),\n    ];\n}\n\nexport function renderLine(\n    React: Renderer,\n    direction: string,\n    pos1: number[],\n    pos2: number[],\n    zoom: number,\n    key: number | string,\n    ...classNames: string[]\n): any {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line-${key}`}\n        className={prefix(\"line\", \"direction\", direction ? \"edge\" : \"\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-key={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\n\nexport function renderEdgeLines(\n    React: Renderer,\n    ableName: string,\n    edge: true | string[],\n    poses: number[][],\n    zoom: number,\n): any[] {\n    const directions = edge === true ? DIRECTIONS4 : edge;\n\n    return directions.map((direction, i) => {\n        const [index1, index2] = DIRECTION_INDEXES[direction];\n\n        if (index2 == null) {\n            return;\n        }\n        return renderLine(React, direction, poses[index1], poses[index2], zoom, `${ableName}Edge${i}`, ableName);\n    }).filter(Boolean);\n}\n\nexport function getRenderDirections(ableName: string) {\n    return (\n        moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n        React: Renderer,\n    ) => {\n        const edge = getProps(moveable.props, ableName as any).edge;\n\n        if (edge && (edge === true || edge.length)) {\n            return [\n                ...renderEdgeLines(\n                    React,\n                    ableName,\n                    edge,\n                    moveable.getState().renderPoses,\n                    moveable.props.zoom!,\n                ),\n                ...renderDiagonalDirections(moveable, ableName, React),\n            ];\n        }\n        return renderAllDirections(moveable, ableName, React);\n    };\n}\n\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\n\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\n\nexport function renderAroundControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n    ableName?: string,\n    renderDirections?: string[],\n): any[] {\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    const {\n        zoom,\n    } = moveable.props;\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n\n    return (renderDirections || getKeys(renderDirectionMap)).map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        const classNames: string[] = [\"around-control\"];\n\n        if (ableName) {\n            classNames.push(\"direction\", ableName);\n        }\n        return (\n            <div\n                className={prefix(...classNames)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-around-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams,\n    fillCSSObject,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: [\n        \"draggable\",\n        \"throttleDrag\",\n        \"throttleDragRotate\",\n        \"startDragRotate\",\n        \"edgeDraggable\",\n    ] as const,\n    events: [\n        \"dragStart\",\n        \"drag\",\n        \"dragEnd\",\n        \"dragGroupStart\",\n        \"dragGroup\",\n        \"dragGroupEnd\",\n    ] as const,\n    requestStyle(): string[] {\n        return [\"left\", \"top\", \"right\", \"bottom\"];\n    },\n    requestChildStyle(): string[] {\n        return [\"left\", \"top\", \"right\", \"bottom\"];\n    },\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.getState();\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            gestos,\n            style,\n        } = state;\n\n        if (gestos.draggable) {\n            return false;\n        }\n        gestos.draggable = parentGesto || moveable.targetGesto;\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            gestos.draggable = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest, deltaOffset } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n\n        if (deltaOffset) {\n            distX += deltaOffset[0];\n            distY += deltaOffset[1];\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let dragRotateRad = 0;\n        let isVerticalSnap = false;\n        let isVerticalBound = false;\n        let isHorizontalSnap = false;\n        let isHorizontalBound = false;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY,\n                throttleDragRotate,\n                isRequest || deltaOffset, datas,\n            );\n            isVerticalSnap = verticalInfo.isSnap;\n            isVerticalBound = verticalInfo.isBound;\n            isHorizontalSnap = horizontalInfo.isSnap;\n            isHorizontalBound = horizontalInfo.isBound;\n\n            const verticalOffset = verticalInfo.offset;\n            const horizontalOffset = horizontalInfo.offset;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        throttleArray(translate, TINY_NUM);\n        throttleArray(beforeTranslate, TINY_NUM);\n\n        if (!throttleDragRotate) {\n            if (!isVerticalSnap && !isVerticalBound) {\n                translate[0] = throttle(translate[0], throttleDrag);\n                beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\n            }\n            if (!isHorizontalSnap && !isHorizontalBound) {\n                translate[1] = throttle(translate[1], throttleDrag);\n                beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\n            }\n        }\n\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n        } = datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            return this.drag(moveable, {...e, deltaOffset });\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false, \"draggable\");\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDelta } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, Record<string, any>>) {\n        moveable.state.gestos.draggable = null;\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent,\n    fillParams,\n    fillEndParams,\n    getAbsolutePosesByState,\n    catchEvent,\n    getOffsetSizeDist,\n    getProps,\n    getDirectionCondition,\n    calculatePoses,\n    fillAfterTransform,\n    getDirectionViewClassName,\n    getTotalDirection,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getResizeDist,\n    getAbsolutePosition,\n    getPosByDirection,\n    getNextMatrix,\n    getNextTransforms,\n    getDirectionByPos,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\n} from \"../types\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, convertDimension, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize,\n    isString, convertUnitSize,\n    throttle,\n    isNumber,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\nimport { parseMat } from \"css-to-mat\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nconst directionCondition = getDirectionCondition(\"resizable\");\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: [\n        \"resizable\",\n        \"throttleResize\",\n        \"renderDirections\",\n        \"displayAroundControls\",\n        \"keepRatio\",\n        \"resizeFormat\",\n        \"keepRatioFinally\",\n        \"edge\",\n        \"checkResizableError\",\n    ] as const,\n    events: [\n        \"resizeStart\",\n        \"beforeResize\",\n        \"resize\",\n        \"resizeEnd\",\n        \"resizeGroupStart\",\n        \"beforeResizeGroup\",\n        \"resizeGroup\",\n        \"resizeGroupEnd\",\n    ] as const,\n    render: getRenderDirections(\"resizable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"resizable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            isGroup,\n            parentDirection,\n            parentGesto,\n            datas,\n            parentFixedDirection,\n            parentEvent,\n        } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n\n        const state = moveable.state;\n        const { target, width, height, gestos } = state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (gestos.resizable) {\n            return false;\n        }\n        gestos.resizable = parentGesto || moveable.controlGesto;\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n\n        datas.minSize = [0, 0];\n\n\n        datas.startWidth = state.inlineCSSWidth || state.cssWidth;\n        datas.startHeight = state.inlineCSSHeight || state.cssHeight;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!isGroup) {\n            datas.minSize = [\n                state.minOffsetWidth,\n                state.minOffsetHeight,\n            ];\n            datas.maxSize = [\n                state.maxOffsetWidth,\n                state.maxOffsetHeight,\n            ];\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.startOffsetMatrix = state.offsetMatrix;\n        datas.startTransformOrigin = state.transformOrigin;\n\n        datas.isWidth = e?.parentIsWidth ?? ((!direction[0] && !direction[1]) || direction[0] || !direction[1]);\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n        function setFixedPosition(fixedPosition: number[]) {\n            const {\n                width,\n                height,\n            } = moveable.state;\n\n            datas.fixedPosition = fixedPosition;\n            datas.fixedDirection = getDirectionByPos(fixedPosition, width, height);\n        }\n        function setMin(minSize: Array<string | number>)  {\n            datas.minSize = [\n                convertUnitSize(`${minSize[0]}`, 0) || 0,\n                convertUnitSize(`${minSize[1]}`, 0) || 0,\n            ];\n        }\n        function setMax(maxSize: Array<string | number>) {\n            const nextMaxSize = [\n                maxSize[0] || Infinity,\n                maxSize[1] || Infinity,\n            ];\n            if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n                nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\n            }\n            if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n                nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\n            }\n            datas.maxSize = nextMaxSize;\n        }\n\n        setRatio(width / height);\n        setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n\n        datas.setFixedDirection = setFixedDirection;\n        datas.setFixedPosition = setFixedPosition;\n        datas.setMin = setMin;\n        datas.setMax = setMax;\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            startRatio: datas.ratio,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin,\n            setMax,\n            setRatio,\n            setFixedDirection,\n            setFixedPosition,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n        datas.startFixedPosition = datas.fixedPosition;\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            parentFlag,\n            isPinch,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n            isGroup,\n            parentEvent,\n            resolveMatrix,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            startOffsetWidth,\n            startOffsetHeight,\n            isWidth,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        if (resolveMatrix) {\n            const {\n                is3d,\n            } = moveable.state;\n            const {\n                startOffsetMatrix,\n                startTransformOrigin,\n            } = datas;\n            const n = is3d ? 4 : 3;\n            let targetMatrix = parseMat(getNextTransforms(e));\n            const targetN = Math.sqrt(targetMatrix.length);\n\n            if (n !== targetN) {\n                targetMatrix = convertDimension(targetMatrix, targetN, n);\n            }\n\n            const nextAllMatrix = getNextMatrix(\n                startOffsetMatrix,\n                targetMatrix,\n                startTransformOrigin,\n                n,\n            );\n            const poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n\n            datas.startPositions = poses;\n            datas.nextTargetMatrix = targetMatrix;\n            datas.nextAllMatrix = nextAllMatrix;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n        const {\n            resizeFormat,\n            throttleResize = parentFlag ? 0 : 1,\n            parentMoveable,\n            keepRatioFinally,\n        } = props;\n        const direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n\n        function getNextBoundingSize() {\n            const fixedDirection = datas.fixedDirection;\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n            distWidth = nextSize.distWidth;\n            distHeight = nextSize.distHeight;\n\n            let nextWidth = (sizeDirection[0] - fixedDirection[0]) || keepRatio\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n            let nextHeight = (sizeDirection[1] - fixedDirection[1]) || keepRatio\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n                if (isWidth) {\n                    nextHeight = nextWidth / ratio;\n                } else {\n                    nextWidth = nextHeight * ratio;\n                }\n            }\n            return [nextWidth, nextHeight];\n        }\n\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n        if (!parentEvent) {\n            datas.setFixedDirection(datas.fixedDirection);\n\n            triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\n                startFixedDirection: datas.startFixedDirection,\n                startFixedPosition: datas.startFixedPosition,\n                setFixedDirection(nextFixedDirection: number[]) {\n                    datas.setFixedDirection(nextFixedDirection);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                setFixedPosition(nextFixedPosition: number[]) {\n                    datas.setFixedPosition(nextFixedPosition);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                boundingWidth,\n                boundingHeight,\n                setSize(size: number[]) {\n                    [boundingWidth, boundingHeight] = size;\n                },\n            }, true));\n        }\n\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable,\n                boundingWidth,\n                boundingHeight,\n                direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n\n        function computeSize() {\n            if (resizeFormat) {\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\n            }\n            boundingWidth = throttle(boundingWidth, throttleResize!);\n            boundingHeight = throttle(boundingHeight, throttleResize!);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                // pre-compute before maintaining the ratio\n                computeSize();\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                boundingWidth += snapDist[0];\n                boundingHeight = boundingWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                boundingHeight += snapDist[1];\n                boundingWidth = boundingHeight * ratio;\n            }\n        } else {\n            boundingWidth += snapDist[0];\n            boundingHeight += snapDist[1];\n\n            boundingWidth = Math.max(0, boundingWidth);\n            boundingHeight = Math.max(0, boundingHeight);\n        }\n\n        [boundingWidth, boundingHeight] = calculateBoundSize(\n            [boundingWidth, boundingHeight],\n            minSize,\n            maxSize,\n            keepRatio ? ratio : false,\n        );\n        computeSize();\n\n        if (keepRatio && (isGroup || keepRatioFinally)) {\n            if (isWidth) {\n                boundingHeight = boundingWidth / ratio;\n            } else {\n                boundingWidth = boundingHeight * ratio;\n            }\n        }\n        distWidth = boundingWidth - startOffsetWidth;\n        distHeight = boundingHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            boundingWidth,\n            boundingHeight,\n            fixedPosition,\n            transformOrigin,\n            datas,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const drag = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"),\n        ) as OnDrag;\n        const transform = drag.transform;\n\n        const nextWidth = startWidth + distWidth;\n        const nextHeight = startHeight + distHeight;\n\n        const params = fillParams<OnResize>(moveable, e, {\n            width: nextWidth,\n            height: nextHeight,\n            offsetWidth: Math.round(boundingWidth),\n            offsetHeight: Math.round(boundingHeight),\n            startRatio: ratio,\n            boundingWidth,\n            boundingHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag,\n            ...fillAfterTransform({\n                style: {\n                    width: `${nextWidth}px`,\n                    height: `${nextHeight}px`,\n                },\n                transform,\n            }, drag, e),\n        });\n        !parentEvent && triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize || moveable.props.checkResizableError === false) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, parentEvent } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const {\n            startOffsetWidth: parentStartOffsetWidth,\n            startOffsetHeight: parentStartOffsetHeight,\n        } = datas;\n\n        function updateGroupMin() {\n            const originalMinSize = datas.minSize;\n            originalEvents.forEach(ev => {\n                const {\n                    minSize: childMinSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMinWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n                const parentMinHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n\n                originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n                originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n            });\n        }\n\n        function updateGroupMax() {\n            const originalMaxSize = datas.maxSize;\n            originalEvents.forEach(ev => {\n                const {\n                    maxSize: childMaxSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMaxWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n                const parentMaxHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n\n                originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n                originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n            });\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n\n        updateGroupMin();\n        updateGroupMax();\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events: events.map(ev => {\n                return {\n                    ...ev,\n                    setMin: (minSize: Array<number | string>) => {\n                        ev.setMin(minSize);\n                        updateGroupMin();\n                    },\n                    setMax: (maxSize: Array<number | string>) => {\n                        ev.setMax(maxSize);\n                        updateGroupMax();\n                    },\n                };\n            }),\n            setFixedDirection,\n            setMin: (minSize: Array<number | string>) => {\n                params.setMin(minSize);\n                updateGroupMin();\n            },\n            setMax: (maxSize: Array<number | string>) => {\n                params.setMax(maxSize);\n                updateGroupMax();\n            },\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\n                ...parentEvent,\n                targets: props.targets!,\n            }, true));\n        });\n\n\n        const params = this.dragControl(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return;\n        }\n        const {\n            boundingWidth,\n            boundingHeight,\n            dist,\n        } = params;\n\n        const keepRatio = props.keepRatio;\n\n        const parentScale = [\n            boundingWidth / (boundingWidth - dist[0]),\n            boundingHeight / (boundingHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas: Record<string, any> = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: ResizableRequestParam) {\n                return { datas, parentDirection: e.direction || [1, 1], parentIsWidth: e?.horizontal ?? true };\n            },\n            request(e: ResizableRequestParam) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth!;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight!;\n                }\n\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, {}>) {\n        moveable.state.gestos.resizable = null;\n    },\n};\n\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n    catchEvent, getProps, calculateMoveableClientPositions,\n    fillAfterTransform,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n    getDist,\n    getKeys,\n    isArray,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnBeforeRotate,\n    OnBeforeRotateGroup,\n    OnResizeStart,\n    OnResize,\n    TransformObject,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport { calculate, convertPositionMatrix, getOrigin, minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n    getPosByDirection,\n    getDirectionByPos,\n} from \"../gesto/GestoUtils\";\nimport { DirectionControlInfo, renderAroundControls, renderDirectionControlsByInfos } from \"../renderDirections\";\nimport { DIRECTION_REGION_TO_DIRECTION } from \"../consts\";\nimport Resizable from \"./Resizable\";\nimport Draggable from \"./Draggable\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number,\n    rect: MoveableClientRect,\n) {\n    const groupable = moveable.props.groupable;\n    const state = moveable.state;\n    const n = state.is3d ? 4 : 3;\n    const origin = datas.origin;\n    const nextOrigin = calculatePosition(\n        moveable.state.rootMatrix,\n        // TO-DO #710\n        minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]),\n        n,\n    );\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.defaultDeg = datas.prevDeg;\n    datas.prevSnapDeg = 0;\n    datas.loop = 0;\n    datas.startDist = getDist(startAbsoluteOrigin, [clientX, clientY]);\n}\n\nfunction getAbsoluteDist(\n    deg: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    const {\n        defaultDeg,\n        prevDeg,\n    } = datas;\n\n\n    let normalizedPrevDeg = prevDeg % 360;\n    let loop = Math.floor(prevDeg / 360);\n\n    if (normalizedPrevDeg < 0) {\n        normalizedPrevDeg += 360;\n    }\n\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++loop;\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --loop;\n    }\n    const dist = direction * (loop * 360 + deg - defaultDeg);\n\n    datas.prevDeg = defaultDeg + dist;\n\n    return dist;\n}\nfunction getAbsoluteDistByClient(\n    clientX: number, clientY: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    return getAbsoluteDist(\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        datas,\n    );\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    dist: number,\n    startValue: number,\n    checkSnap?: boolean,\n) {\n    const {\n        throttleRotate = 0,\n    } = moveable.props;\n    const prevSnapDeg = datas.prevSnapDeg;\n    let snapRotation = 0;\n    let isSnap = false;\n\n    if (checkSnap) {\n        const result = checkSnapRotate(moveable, moveableRect, dist);\n\n        isSnap = result.isSnap;\n        snapRotation = startValue + result.rotation;\n    }\n\n    if (!isSnap) {\n        snapRotation = throttle(startValue + dist, throttleRotate);\n    }\n    const snapDeg = snapRotation - startValue;\n\n    datas.prevSnapDeg = snapDeg;\n\n    return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n\n\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n): [number[], number][] {\n    if (rotationPosition === \"none\") {\n        return [];\n    }\n    if (isArray(rotationPosition)) {\n        return rotationPosition.map(child => getRotationPositions(\n            child,\n            [pos1, pos2, pos3, pos4],\n            direction,\n        )[0]);\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [[pos, rad]];\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (\n        hasClass(target, prefix(\"rotation-control\"))\n        || (moveable.props.rotateAroundControls && hasClass(target, prefix(\"around-control\")))\n        || (hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\")))\n    ) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nconst css = `.rotation {\nposition: absolute;\nheight: 40px;\nwidth: 1px;\ntransform-origin: 50% 100%;\nheight: calc(40px * var(--zoom));\ntop: auto;\nleft: 0;\nbottom: 100%;\nwill-change: transform;\n}\n.rotation .rotation-line {\ndisplay: block;\nwidth: 100%;\nheight: 100%;\ntransform-origin: 50% 50%;\n}\n.rotation .rotation-control {\nborder-color: #4af;\nborder-color: var(--moveable-color);\nbackground:#fff;\ncursor: alias;\n}\n:global .view-rotation-dragging, .rotatable.direction.control {\ncursor: alias;\n}\n.rotatable.direction.control.move {\ncursor: move;\n}\n`;\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: [\n        \"rotatable\",\n        \"rotationPosition\",\n        \"throttleRotate\",\n        \"renderDirections\",\n        \"rotationTarget\",\n        \"rotateAroundControls\",\n        \"edge\",\n        \"resolveAblesWithRotatable\",\n        \"displayAroundControls\",\n    ] as const,\n    events: [\n        \"rotateStart\",\n        \"beforeRotate\",\n        \"rotate\",\n        \"rotateEnd\",\n        \"rotateGroupStart\",\n        \"beforeRotateGroup\",\n        \"rotateGroup\",\n        \"rotateGroupEnd\",\n    ] as const,\n    css: [css],\n    viewClassName(moveable: MoveableManagerInterface<RotatableProps>) {\n        if (!moveable.isDragging(\"rotatable\")) {\n            return \"\";\n        }\n        return prefix(\"view-rotation-dragging\");\n    },\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n            rotateAroundControls,\n            resolveAblesWithRotatable,\n        } = getProps(moveable.props, \"rotatable\");\n        const {\n            renderPoses,\n            direction,\n        } = moveable.getState();\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n        const jsxs: any[] = [];\n\n        positions.forEach(([pos, rad], i) => {\n            jsxs.push(\n                <div key={`rotation${i}`} className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        });\n        if (renderDirections) {\n            const ables = getKeys(resolveAblesWithRotatable || {});\n            const resolveMap: Record<string, string> = {};\n\n            ables.forEach(name => {\n                resolveAblesWithRotatable![name]!.forEach(direction => {\n                    resolveMap[direction] = name;\n                });\n            });\n\n            let directionControlInfos: DirectionControlInfo[] = [];\n\n            if (isArray(renderDirections)) {\n                directionControlInfos = renderDirections.map(dir => {\n                    const able = resolveMap[dir];\n\n                    return {\n                        data: able ? { resolve: able } : {},\n                        classNames: able ? [`move`] : [],\n                        dir,\n                    };\n                });\n            }\n\n            jsxs.push(...renderDirectionControlsByInfos(\n                moveable,\n                \"rotatable\",\n                directionControlInfos,\n                React,\n            ));\n        }\n        if (rotateAroundControls) {\n            jsxs.push(...renderAroundControls(moveable, React));\n        }\n\n        return jsxs;\n    },\n    dragControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const state = moveable.state;\n        const {\n            target, left, top,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n            offsetMatrix,\n            targetMatrix,\n            allMatrix,\n            width,\n            height,\n        } = state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        let setFixedPosition = (fixedPosition: number[]) => {\n            const {\n                allMatrix,\n                is3d,\n                width,\n                height,\n            } = moveable.state;\n            const fixedDirection = getDirectionByPos(fixedPosition, width, height);\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = calculatePosition(allMatrix, fixedPosition, is3d ? 4 : 3);\n\n            if (resizeStart) {\n                resizeStart.setFixedPosition(fixedPosition);\n            }\n        };\n        let setFixedDirection: OnRotateStart[\"setFixedDirection\"] = (fixedDirection: number[]) => {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getDirectionOffset(moveable, fixedDirection);\n\n            if (resizeStart) {\n                resizeStart.setFixedDirection(fixedDirection);\n            }\n        };\n        let startClientX = clientX;\n        let startClientY = clientY;\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                defaultDeg: externalRotate,\n                prevSnapDeg: 0,\n                startDist: 0,\n            };\n            datas.afterInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n            };\n            datas.absoluteInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n                startValue: externalRotate,\n            };\n        } else {\n            const inputTarget = e.inputEvent?.target;\n\n            if (inputTarget) {\n                const regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n                const controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n\n                if (controlDirection) {\n                    datas.isControl = true;\n                    datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n                    datas.controlDirection = controlDirection;\n                    const resolve = inputTarget.getAttribute(\"data-resolve\");\n\n                    if (resolve) {\n                        datas.resolveAble = resolve;\n                    }\n\n                    const clientPoses = calculateMoveableClientPositions(\n                        state.rootMatrix,\n                        state.renderPoses,\n                        moveableClientRect,\n                    );\n\n\n                    [startClientX, startClientY] = getPosByDirection(clientPoses, controlDirection);\n                }\n            }\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n            datas.absoluteInfo = {\n                origin: rect.origin,\n                startValue: rect.rotation,\n            };\n\n            const originalFixedPosition = setFixedPosition;\n\n            setFixedPosition = (fixedPosition: number[]) => {\n                const n = state.is3d ? 4 : 3;\n                const [originX, originY] = plus(getOrigin(targetMatrix, n), fixedPosition);\n                const fixedBeforeOrigin = calculate(\n                    offsetMatrix,\n                    convertPositionMatrix([originX, originY], n),\n                );\n                const fixedAfterOrigin = calculate(\n                    allMatrix,\n                    convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n),\n                );\n                originalFixedPosition(fixedPosition);\n                const posDelta = state.posDelta;\n\n                datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\n                datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\n                datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\n\n                setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n            };\n            setFixedDirection = (fixedDirection: number[]) => {\n                const fixedPosition = getPosByDirection([\n                    [0, 0],\n                    [width, 0],\n                    [0, height],\n                    [width, height],\n                ], fixedDirection);\n\n                setFixedPosition(fixedPosition);\n            };\n        }\n\n        datas.startClientX = startClientX;\n        datas.startClientY = startClientY;\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        let dragStart: OnDragStart | false = false;\n        let resizeStart: OnResizeStart | false = false;\n\n        if (datas.isControl && datas.resolveAble) {\n            const resolveAble = datas.resolveAble;\n\n            if (resolveAble === \"resizable\") {\n                resizeStart = Resizable.dragControlStart(moveable, {\n                    ...(new CustomGesto(\"resizable\").dragStart([0, 0], e)),\n                    parentPosition: datas.controlPosition,\n                    parentFixedPosition: datas.fixedPosition,\n                });\n            }\n        }\n\n        if (!resizeStart) {\n            dragStart = Draggable.dragStart!(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            );\n        }\n\n        setFixedPosition(state.transformOrigin);\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            setFixedDirection,\n            setFixedPosition,\n            ...fillTransformStartEvent(e),\n            dragStart,\n            resizeStart,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientDistX, clientDistY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n            startClientX,\n            startClientY,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            parentMoveable,\n        } = moveable.props;\n\n\n        let beforeDelta = 0;\n        let beforeDist: number;\n        let beforeRotation: number;\n\n        let delta = 0;\n        let dist: number;\n        let rotation: number;\n\n        let absoluteDelta = 0;\n        let absoluteDist: number;\n        let absoluteRotation: number;\n\n        const startRotation = 180 / Math.PI * startValue;\n        const absoluteStartRotation = absoluteInfo.startValue;\n        let isSnap = false;\n        const nextClientX = startClientX + clientDistX;\n        const nextClientY = startClientY + clientDistY;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            beforeDist = parentDist;\n            dist = parentDist;\n            absoluteDist = parentDist;\n        } else if (isPinch || parentFlag) {\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n        } else {\n            beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n            dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n            absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n            isSnap = true;\n        }\n        beforeRotation = startRotation + beforeDist;\n        rotation = startRotation + dist;\n        absoluteRotation = absoluteStartRotation + absoluteDist;\n\n\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\n            beforeRotation,\n            rotation,\n            absoluteRotation,\n            setRotation(nextRotation: number) {\n                dist = nextRotation - startRotation;\n                beforeDist = dist;\n                absoluteDist = dist;\n            },\n        }, true));\n\n        [\n            beforeDelta,\n            beforeDist,\n            beforeRotation,\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\n\n        [\n            delta,\n            dist,\n            rotation,\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\n\n        [\n            absoluteDelta,\n            absoluteDist,\n            absoluteRotation,\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        datas.requestValue = null;\n\n        const dragEvent = fillTransformEvent(\n            moveable,\n            nextTransform,\n            inverseDelta,\n            isPinch,\n            e,\n        );\n\n        let transformEvent: TransformObject = dragEvent;\n        const parentDistance = getDist(\n            [nextClientX, nextClientY],\n            absoluteInfo.startAbsoluteOrigin,\n        ) - absoluteInfo.startDist;\n\n        let resize: OnResize | undefined = undefined;\n\n        if (datas.resolveAble === \"resizable\") {\n            const resizeEvent = Resizable.dragControl(\n                moveable,\n                {\n                    ...setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\"),\n                    resolveMatrix: true,\n                    parentDistance,\n                },\n            );\n\n            if (resizeEvent) {\n                resize = resizeEvent;\n                transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n            }\n        }\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate: rotation,\n            rotation,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate: beforeRotation,\n            beforeRotation,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate: absoluteRotation,\n            absoluteRotation,\n\n            isPinch: !!isPinch,\n            resize,\n            ...dragEvent,\n            ...transformEvent,\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.startGroupClient = childClient;\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const rad = parentRotate / 180 * Math.PI;\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const startGroupClient = ev.datas.startGroupClient;\n                const [prevClientX, prevClientY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix(startGroupClient, rad * direction);\n                const delta = [clientX - prevClientX, clientY - prevClientY];\n\n                ev.datas.groupClient = [clientX, clientY];\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotation;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            setGroupRotation(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent, multiply2,\n    fillParams, fillEndParams, getAbsolutePosesByState,\n    catchEvent, getOffsetSizeDist, getDirectionCondition, getDirectionViewClassName, getTotalDirection,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, OnScaleGroup, OnScaleGroupEnd,\n    OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n    OnBeforeScaleGroup,\n    OnBeforeScale,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getDist,\n    throttle,\n} from \"@daybrush/utils\";\n\nconst directionCondition = getDirectionCondition(\"scalable\");\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: [\n        \"scalable\",\n        \"throttleScale\",\n        \"renderDirections\",\n        \"keepRatio\",\n        \"edge\",\n        \"displayAroundControls\",\n    ] as const,\n    events: [\n        \"scaleStart\",\n        \"beforeScale\",\n        \"scale\",\n        \"scaleEnd\",\n        \"scaleGroupStart\",\n        \"beforeScaleGroup\",\n        \"scaleGroup\",\n        \"scaleGroupEnd\",\n    ] as const,\n    render: getRenderDirections(\"scalable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"scalable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n\n\n        datas.setFixedDirection = setFixedDirection;\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            startOffsetWidth,\n            startOffsetHeight,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const props = moveable.props;\n        const {\n            throttleScale,\n            parentMoveable,\n        } = props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n        const state = moveable.state;\n\n        function getNextScale() {\n            const {\n                distWidth,\n                distHeight,\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n\n            let scaleX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\n            let scaleY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\n\n            scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n            scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n            if (scaleX === 0) {\n                scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            if (scaleY === 0) {\n                scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            return [scaleX, scaleY];\n        }\n\n\n        let scale = getNextScale();\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\n            scale,\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                scale = getNextScale();\n\n                return scale;\n            },\n            startFixedDirection: datas.startFixedDirection,\n            setScale(nextScale: number[]) {\n                scale = nextScale;\n            },\n        }, true));\n\n        const dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n        let fixedPosition = dragClient;\n        let snapDist = [0, 0];\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / startOffsetHeight / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / startOffsetWidth / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: startOffsetWidth,\n            offsetHeight: startOffsetHeight,\n            direction,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        const scaleEndParam = fillEndParams<OnScaleEnd>(moveable, e, {});\n        triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n        return scaleEndParam;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams, getDirectionViewClassName, fillCSSObject,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: [\n        \"warpable\",\n        \"renderDirections\",\n        \"edge\",\n        \"displayAroundControls\",\n    ] as const,\n    events: [\n        \"warpStart\",\n        \"warp\",\n        \"warpEnd\",\n    ] as const,\n    viewClassName: getDirectionViewClassName(\"warpable\"),\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, \"warpable\", React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget, datas);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\nexport const VIEW_DRAGGING = prefix(\"view-dragging\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n\n    if (!el) {\n        return;\n    }\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: [\n        \"dragArea\",\n        \"passDragArea\",\n    ] as const,\n    events: [\n        \"click\",\n        \"clickGroup\",\n    ] as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.getState();\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.getState();\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport {\n    ScrollableProps, OnScroll, MoveableManagerInterface,\n    MoveableGroupInterface, MoveableRefType,\n} from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: [\n        \"scrollable\",\n        \"scrollContainer\",\n        \"scrollThreshold\",\n        \"scrollThrottleTime\",\n        \"getScrollPosition\",\n        \"scrollOptions\",\n    ] as const,\n    events: [\n        \"scroll\",\n        \"scrollGroup\",\n    ] as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps, Record<string, any>>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n            scrollOptions,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n        moveable.state.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, true);\n        }).on(\"scrollDrag\", ({ next }) => {\n            next(moveable[gestoName].getCurrentEvent());\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n            ...scrollOptions,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const dragScroll = e.datas.dragScroll as DragScroll;\n\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer() as MoveableRefType<HTMLElement>,\n            scrollThreshold = 0,\n            scrollThrottleTime = 0,\n            getScrollPosition = getDefaultScrollPosition,\n            scrollOptions,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer!,\n            threshold: scrollThreshold,\n            throttleTime: scrollThrottleTime,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n            ...scrollOptions,\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupControl(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    unset(moveable: MoveableManagerInterface<ScrollableProps, Record<string, any>>) {\n        const state = moveable.state;\n\n        state.dragScroll?.dragEnd();\n        state.dragScroll = null;\n    },\n};\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: [\n        \"target\",\n        \"dragTarget\",\n        \"container\",\n        \"warpSelf\",\n        \"rootContainer\",\n        \"useResizeObserver\",\n        \"useMutationObserver\",\n        \"zoom\",\n        \"transformOrigin\",\n        \"edge\",\n        \"ables\",\n        \"className\",\n        \"pinchThreshold\",\n        \"pinchOutside\",\n        \"triggerAblesSimultaneously\",\n        \"checkInput\",\n        \"cspNonce\",\n        \"translateZ\",\n        \"hideDefaultLines\",\n        \"props\",\n        \"flushSync\",\n        \"stopPropagation\",\n        \"preventClickEventOnDrag\",\n        \"preventClickDefault\",\n        \"viewContainer\",\n        \"persistData\",\n        \"useAccuratePosition\",\n        \"firstRenderState\",\n        \"linePadding\",\n        \"displayAroundControls\",\n        \"controlPadding\",\n        \"preventDefault\",\n        \"requestStyles\",\n    ] as const,\n    events: [\n        \"changeTargets\",\n    ] as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.getState();\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    nextPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const radiusPoses = nextPoses.filter(pos => !pos.virtual);\n    const raws = radiusPoses.map(posInfo => {\n        const { horizontal, vertical, pos } = posInfo;\n\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        radiusPoses,\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n    full = false,\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const horizontalValuesLength = horizontalValues.length;\n    const verticalValuesLength = verticalValues.length;\n    const hasVerticalValues = verticalValuesLength > 0;\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = hasVerticalValues ? wnValue : neValue,\n        esValue = hasVerticalValues ? wnValue : seValue,\n        wsValue = hasVerticalValues ? enValue : swValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio(\n        [horizontalPoses[0], horizontalPoses[1]],\n        width,\n    );\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio(\n        [horizontalPoses[3], horizontalPoses[2]],\n        width,\n    );\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio(\n        [verticalPoses[0], verticalPoses[3]], height,\n    );\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio(\n        [verticalPoses[1], verticalPoses[2]], height,\n    );\n\n    const nextHorizontalPoses = full\n        ? horizontalPoses\n        : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n    const nextVerticalPoses = full\n        ? verticalPoses\n        : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= horizontalValuesLength,\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= verticalValuesLength,\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import { splitBracket, splitComma, convertUnitSize, splitSpace, splitUnit } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { convertCSSSize } from \"../../utils\";\nimport { getRadiusStyles, getRadiusValues } from \"../roundable/borderRadius\";\nimport { MoveableManagerInterface, ClippableProps, ControlPose } from \"../../types\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { getCachedStyle } from \"../../store/Store\";\n\n\nexport const CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\n\nexport const CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nexport function getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                clipPoses.slice(8).map((info, i) => {\n                    return {\n                        ...info,\n                        pos: poses[i],\n                    };\n                }),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\n\nexport function getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\n\nexport function getControlSize(\n    controlPoses: ControlPose[],\n) {\n    const xRange = [Infinity, -Infinity];\n    const yRange = [Infinity, -Infinity];\n\n    controlPoses.forEach(({ pos }) => {\n        xRange[0] = Math.min(xRange[0], pos[0]);\n        xRange[1] = Math.max(xRange[1], pos[0]);\n        yRange[0] = Math.min(yRange[0], pos[1]);\n        yRange[1] = Math.max(yRange[1], pos[1]);\n    });\n\n    return [\n        Math.abs(xRange[1] - xRange[0]),\n        Math.abs(yRange[1] - yRange[0]),\n    ];\n}\n\n\nexport function getClipPath(\n    target: HTMLElement | SVGElement | undefined | null,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    if (!target) {\n        return;\n    }\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const getStyle = getCachedStyle(target!);\n        const clipPath = getStyle(\"clipPath\");\n\n        clipText = clipPath !== \"none\" ? clipPath : getStyle(\"clip\");\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n        const minMaxs = getMinMaxs(poses.map(pos => pos.pos));\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n            left: minMaxs.minX,\n            right: minMaxs.maxX,\n            top: minMaxs.minY,\n            bottom: minMaxs.maxY,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            right: centerPos[0] + radiusX,\n            bottom: centerPos[1] + radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    getSizeDistByDist,\n    getProps,\n    fillCSSObject,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/getTotalGuidelines\";\nimport {\n    getControlSize, getClipPath,\n    getClipStyles, getRectPoses,\n} from \"./clippable/utils\";\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n    keepRatio?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\n\n        const verticalDirection = verticalDirections[0];\n        const horizontalDirection = horizontalDirections[0];\n\n        dists[index] = dist;\n        const [width, height] = getControlSize(controlPoses);\n        const ratio = width && height ? width / height : 0;\n\n        if (ratio && keepRatio) {\n            // 0 1 2\n            // 7   3\n            // 6 5 4\n\n            const fixedIndex = (index + 4) % 8;\n            const fixedPosition = controlPoses[fixedIndex].pos;\n            const sizeDirection = [0, 0];\n\n            if (direction!.indexOf(\"w\") > -1) {\n                sizeDirection[0] = -1;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                sizeDirection[0] = 1;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                sizeDirection[1] = -1;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                sizeDirection[1] = 1;\n            }\n\n\n            const nextDist = getSizeDistByDist(\n                [width, height],\n                dist,\n                ratio,\n                sizeDirection,\n                true,\n            );\n            const nextWidth = width + nextDist[0];\n            const nextHeight = height + nextDist[1];\n            let top = fixedPosition[1];\n            let bottom = fixedPosition[1];\n            let left = fixedPosition[0];\n            let right = fixedPosition[0];\n\n            if (sizeDirection[0] === -1) {\n                left = right - nextWidth;\n            } else if (sizeDirection[0] === 1) {\n                right = left + nextWidth;\n            } else {\n                left = left - nextWidth / 2;\n                right = right + nextWidth / 2;\n            }\n            if (sizeDirection[1] === -1) {\n                top = bottom - nextHeight;\n            } else if (sizeDirection[1] === 1) {\n                bottom = top + nextHeight;\n            } else {\n                top = bottom - nextHeight / 2;\n                bottom = top + nextHeight;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            controlPoses.forEach((controlPose, i) => {\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\n            });\n        } else {\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: controlDir,\n                } = controlPose;\n\n                if (!controlDir) {\n                    return;\n                }\n                if (controlDir.indexOf(verticalDirection) > -1) {\n                    dists[i][0] = dist[0];\n                }\n                if (controlDir.indexOf(horizontalDirection) > -1) {\n                    dists[i][1] = dist[1];\n                }\n            });\n            if (verticalDirection) {\n                dists[1][0] = dist[0] / 2;\n                dists[5][0] = dist[0] / 2;\n            }\n            if (horizontalDirection) {\n                dists[3][1] = dist[1] / 2;\n                dists[7][1] = dist[1] / 2;\n            }\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\n\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(clipIndex, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(clipIndex, 1);\n        poses.splice(clipIndex, 1);\n    } else if (clipType === \"inset\") {\n        if (clipIndex < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\n\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle,\n        distX: 0,\n        distY: 0,\n        ...fillCSSObject({\n            clipPath: clipStyle,\n        }, e),\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: [\n        \"clippable\",\n        \"defaultClipPath\",\n        \"customClipPath\",\n        \"keepRatio\",\n        \"clipRelative\",\n        \"clipArea\",\n        \"dragWithClip\",\n        \"clipTargetBounds\",\n        \"clipVerticalGuidelines\",\n        \"clipHorizontalGuidelines\",\n        \"clipSnapThreshold\",\n    ] as const,\n    events: [\n        \"clipStart\",\n        \"clip\",\n        \"clipEnd\",\n    ] as const,\n    css: [\n        `.control.clip-control {\nbackground: #6d6;\ncursor: pointer;\n}\n.control.clip-control.clip-radius {\nbackground: #d66;\n}\n.line.clip-line {\nbackground: #6e6;\ncursor: move;\nz-index: 1;\n}\n.clip-area {\nposition: absolute;\ntop: 0;\nleft: 0;\n}\n.clip-ellipse {\nposition: absolute;\ncursor: move;\nborder: 1px solid #6d6;\nborder: var(--zoompx) solid #6d6;\nborder-radius: 50%;\ntransform-origin: 0px 0px;\n}`,\n        `:host {\n--bounds-color: #d66;\n}`,\n        `.guideline {\npointer-events: none;\nz-index: 2;\n}`,\n        `.line.guideline.bounds {\nbackground: #d66;\nbackground: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath,\n            defaultClipPath,\n            clipArea, zoom,\n            groupable,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.getState();\n\n        if (!target || groupable) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, { ...e, isDragTarget: true });\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas, isDragTarget } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        const props = getProps(moveable.props, \"clippable\");\n\n        const { keepRatio } = props;\n        let distX = 0;\n        let distY = 0;\n\n        const originalDraggable = originalDatas.draggable;\n        const originalDist = getDragDist(e);\n\n        if (isDragTarget && originalDraggable) {\n            [distX, distY] = originalDraggable.prevBeforeDist;\n        } else {\n            [distX, distY] = originalDist;\n        }\n\n        const firstDist = [distX, distY];\n\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[clipIndex];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n        const {\n            horizontal: horizontalSnapInfo,\n            vertical: verticalSnapInfo,\n        } = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            5,\n        );\n        let snapOffsetY = horizontalSnapInfo.offset;\n        let snapOffsetX = verticalSnapInfo.offset;\n\n        if (horizontalSnapInfo.isBound) {\n            boundDelta[1] += snapOffsetY;\n        }\n        if (verticalSnapInfo.isBound) {\n            boundDelta[0] += snapOffsetX;\n        }\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n            const guideRect = getRect(nextPoses);\n            let cy = guideRect.bottom - guideRect.top;\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n\n\n            const distSnapX = verticalSnapInfo.isBound\n                ? Math.abs(snapOffsetX)\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n            const distSnapY = horizontalSnapInfo.isBound\n                ? Math.abs(snapOffsetY)\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n            cx -= distSnapX;\n            cy -= distSnapY;\n\n            if (isCircle) {\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                cx = cy;\n            }\n            const center = guidePoses[0];\n\n            guidePoses[1][1] = center[1] - cy;\n            guidePoses[2][0] = center[0] + cx;\n            guidePoses[3][1] = center[1] + cy;\n            guidePoses[4][0] = center[0] - cx;\n        } else if (isRect && keepRatio && isControl) {\n            const [width, height] = getControlSize(clipPoses);\n            const ratio = width && height ? width / height : 0;\n            const clipPose = clipPoses[clipIndex];\n            const direction = clipPose.direction! || \"\";\n            let top = guidePoses[1][1];\n            let bottom = guidePoses[5][1];\n            let left = guidePoses[7][0];\n            let right = guidePoses[3][0];\n\n\n            if (snapOffsetY <= snapOffsetX) {\n                snapOffsetY = snapOffsetX / ratio;\n            } else {\n                snapOffsetX = snapOffsetY * ratio;\n            }\n            if (direction!.indexOf(\"w\") > -1) {\n                left -= snapOffsetX;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                right -= snapOffsetX;\n            } else {\n                left += snapOffsetX / 2;\n                right -= snapOffsetX / 2;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                top -= snapOffsetY;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                bottom -= snapOffsetY;\n            } else {\n                top += snapOffsetY / 2;\n                bottom -= snapOffsetY / 2;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            guidePoses.forEach((pos, i) => {\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\n            });\n        } else {\n            guidePoses.forEach((pos, j) => {\n                const dist = dists[j];\n\n                if (dist[0]) {\n                    pos[0] -= snapOffsetX;\n                }\n                if (dist[1]) {\n                    pos[1] -= snapOffsetY;\n                }\n            });\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n        );\n\n        if (originalDraggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            let dragDist = boundDelta;\n\n            if (isDragTarget) {\n                dragDist = [\n                    firstDist[0] + boundDelta[0] - originalDist[0],\n                    firstDist[1] + boundDelta[1] - originalDist[1],\n                ];\n            }\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n            ...fillCSSObject({\n                [clipType === \"rect\" ? \"clip\" : \"clipPath\"]: clipStyle,\n            }, e),\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea.\n * @name Moveable.Clippable#clipArea\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target.\n* @name Moveable.Clippable#clipTargetBounds\n* @default false\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n * Add clip guidelines in the vertical direction.\n * @name Moveable.Clippable#clipVerticalGuidelines\n * @default 0\n * @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction.\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @default []\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines.\n* @name Moveable.Clippable#clipSnapThreshold\n* @default 5\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize, fillCSSObject,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: [\n        \"originDraggable\",\n        \"originRelative\",\n    ] as const,\n    events: [\n        \"dragOriginStart\",\n        \"dragOrigin\",\n        \"dragOriginEnd\",\n    ] as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\npointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const result = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n        )!;\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: result,\n            ...fillCSSObject({\n                transformOrigin,\n                transform: result.transform,\n            }, e),\n            afterTransform: result.transform,\n        });\n        triggerEvent(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    fillCSSObject,\n    catchEvent,\n    getComputedStyle,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart,\n    RoundableState, OnRound, ControlPose, OnRoundEnd,\n    MoveableManagerInterface,\n    OnRoundGroup,\n    MoveableGroupInterface,\n    OnRoundGroupStart,\n    OnRoundGroupEnd,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues,\n    getRadiusStyles,\n    splitRadiusPoses,\n} from \"./roundable/borderRadius\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction addBorderRadiusByLine(\n    controlPoses: ControlPose[],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n) {\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 bottom\n    // 3 left\n\n    const horizontalsLength = controlPoses.filter(({ virtual, horizontal }) => horizontal && !virtual).length;\n    const verticalsLength = controlPoses.filter(({ virtual, vertical }) => vertical && !virtual).length;\n    let controlIndex = -1;\n\n    //top\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            controlIndex = 0;\n        } else if (horizontalsLength === 1) {\n            controlIndex = 1;\n        }\n    }\n    // bottom\n    if (lineIndex === 2) {\n        if (horizontalsLength <= 2) {\n            controlIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            controlIndex = 3;\n        }\n    }\n    // left\n    if (lineIndex === 3) {\n        if (verticalsLength === 0) {\n            controlIndex = 4;\n        } else if (verticalsLength < 4) {\n            controlIndex = 7;\n        }\n    }\n\n    // right\n    if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            controlIndex = 5;\n        } else if (verticalsLength <= 2) {\n            controlIndex = 6;\n        }\n    }\n    if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n        return;\n    }\n    const controlPoseInfo = controlPoses[controlIndex];\n\n    addBorderRadius(controlPoses, controlIndex);\n\n    if (controlIndex < 4) {\n        controlPoseInfo.pos[0] = distX;\n    } else {\n        controlPoseInfo.pos[1] = distY;\n    }\n}\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(0, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    } else {\n        if (controlPoses[0].virtual) {\n            controlPoses[0].virtual = false;\n        }\n        controlPoses.slice(4, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    }\n}\nfunction removeBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(index, 4).forEach(info => {\n            info.virtual = true;\n        });\n    } else {\n        controlPoses.slice(index).forEach(info => {\n            info.virtual = true;\n        });\n    }\n}\nfunction getBorderRadius(\n    borderRadius: string,\n    width: number,\n    height: number,\n    minCounts: number[] = [0, 0],\n    full?: boolean,\n) {\n    let values: string[] = [];\n\n    if (!borderRadius || borderRadius === \"0px\") {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    nextPoses: ControlPose[],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n        radiusPoses,\n    } = getRadiusStyles(\n        nextPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(radiusPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    const params = fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n        ...fillCSSObject({\n            borderRadius,\n        }, e),\n    });\n    triggerEvent(moveable, \"onRound\", params);\n\n    return params;\n}\n\n\nfunction getStyleBorderRadius(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n    const {\n        style,\n    } = moveable.getState();\n    let borderRadius = style.borderRadius || \"\";\n\n    if (!borderRadius && moveable.props.groupable) {\n        const firstMoveable = moveable.moveables![0];\n        const firstTarget = moveable.getTargets()[0];\n\n\n        if (firstTarget) {\n            if (firstMoveable?.props.target === firstTarget) {\n                borderRadius = moveable.moveables![0]?.state.style.borderRadius ?? \"\";\n                style.borderRadius = borderRadius;\n            } else {\n                borderRadius = getComputedStyle(firstTarget).borderRadius;\n                style.borderRadius = borderRadius;\n            }\n        }\n\n    }\n    return borderRadius;\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: [\n        \"roundable\",\n        \"roundRelative\",\n        \"minRoundControls\",\n        \"maxRoundControls\",\n        \"roundClickable\",\n        \"roundPadding\",\n        \"isDisplayShadowRoundControls\",\n    ] as const,\n    events: [\n        \"roundStart\",\n        \"round\",\n        \"roundEnd\",\n        \"roundGroupStart\",\n        \"roundGroup\",\n        \"roundGroupEnd\",\n    ] as const,\n    css: [\n        `.control.border-radius {\nbackground: #d66;\ncursor: pointer;\nz-index: 3;\n}`,\n        `.control.border-radius.vertical {\nbackground: #d6d;\nz-index: 2;\n}`,\n        `.control.border-radius.virtual {\nopacity: 0.5;\nz-index: 1;\n}`,\n        `:host.round-line-clickable .line.direction {\ncursor: pointer;\n}`,\n    ],\n    className(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        const roundClickable = moveable.props.roundClickable;\n\n        return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n    },\n    requestStyle(): Array<keyof CSSStyleDeclaration> {\n        return [\"borderRadius\"];\n    },\n    requestChildStyle(): Array<keyof CSSStyleDeclaration> {\n        return [\"borderRadius\"];\n    },\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.getState();\n\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n            roundPadding = 0,\n            isDisplayShadowRoundControls,\n            groupable,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            borderRadius,\n            width, height,\n            minRoundControls,\n            true,\n        );\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n        const basePos = groupable ? [0, 0] : [left, top];\n\n        return radiusValues.map((v, i) => {\n            const horizontal = v.horizontal;\n            const vertical = v.vertical;\n            const direction = v.direction || \"\";\n            const originalPos = [...v.pos];\n\n            horizontalCount += Math.abs(horizontal);\n            verticalCount += Math.abs(vertical);\n\n\n            if (horizontal && direction.indexOf(\"n\") > -1) {\n                originalPos[1] -= roundPadding;\n            }\n            if (vertical && direction.indexOf(\"w\") > -1) {\n                originalPos[0] -= roundPadding;\n            }\n            if (horizontal && direction.indexOf(\"s\") > -1) {\n                originalPos[1] += roundPadding;\n            }\n            if (vertical && direction.indexOf(\"e\") > -1) {\n                originalPos[0] += roundPadding;\n            }\n            const pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\n\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1] && (isDisplayShadowRoundControls || !v.virtual)\n                : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\n                    \"control\", \"border-radius\",\n                    v.vertical ? \"vertical\" : \"\",\n                    v.virtual ? \"virtual\" : \"\",\n                )}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        let lineIndex = -1;\n\n        if (isLine) {\n            const indexAttr = inputTarget.getAttribute(\"data-line-key\")! || \"\";\n\n            if (indexAttr) {\n                lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n\n                if (isNaN(lineIndex)) {\n                    lineIndex = -1;\n                }\n            }\n        }\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const params = fillParams<OnRoundStart>(moveable, e, {});\n\n        const result = triggerEvent(\n            moveable, \"onRoundStart\", params);\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const borderRadius = getStyleBorderRadius(moveable);\n        const controlPoses = getBorderRadius(\n            borderRadius || \"\",\n            width,\n            height,\n            minRoundControls,\n            true,\n        ) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses,\n            roundRelative!,\n            width,\n            height,\n        ).styles.join(\" \");\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n        const controlPoses = datas.controlPoses as ControlPose[];\n\n        if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((info, i) => {\n            return {\n                ...info,\n                pos: plus(info.pos, dists[i]),\n            };\n        });\n\n        if (index < 4) {\n            nextPoses.slice(0, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        } else {\n            nextPoses.slice(4, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        }\n\n        datas.prevDist = [distX, distY];\n\n        return triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            nextPoses,\n        );\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const length = controlPoses.filter(({ virtual }) => virtual).length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n                removeBorderRadius(controlPoses, controlIndex);\n            } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n            }\n\n            if (length !== controlPoses.filter(({ virtual }) => virtual).length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                );\n            }\n        }\n        const params = fillEndParams<OnRoundEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRoundEnd\", params);\n        state.borderRadiusState = \"\";\n        return params;\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControlStart(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroupStart = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\n        return result;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const result = this.dragControl(moveable, e);\n\n\n        if (!result) {\n            return false;\n        }\n\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        const nextParams: OnRoundGroup = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    ...fillCSSObject({\n                        borderRadius: result.borderRadius,\n                    }, ev),\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\n        const moveables = moveable.moveables;\n        const targets = moveable.props.targets!;\n        const events = fillChildEvents(moveable, \"roundable\", e);\n\n        catchEvent(moveable, \"onRound\", parentEvent => {\n            const nextParams: OnRoundGroup = {\n                targets: moveable.props.targets!,\n                events: events.map((ev, i) => {\n                    return {\n                        ...ev,\n                        target: targets[i],\n                        moveable: moveables[i],\n                        currentTarget: moveables[i],\n                        ...fillCSSObject({\n                            borderRadius: parentEvent.borderRadius,\n                        }, ev),\n                    };\n                }),\n                ...parentEvent,\n            };\n            triggerEvent(moveable, \"onRoundGroup\", nextParams);\n        });\n        const result = this.dragControlEnd(moveable, e);\n\n        if (!result) {\n            return false;\n        }\n        const nextParams: OnRoundGroupEnd = {\n            targets: moveable.props.targets!,\n            events: events.map((ev, i) => {\n                return {\n                    ...ev,\n                    target: targets[i],\n                    moveable: moveables[i],\n                    currentTarget: moveables[i],\n                    lastEvent: ev.datas?.lastEvent,\n                };\n            }),\n            ...result,\n        };\n\n        triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\n        return nextParams;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.minRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Whether you can add/delete round controls by double-clicking a line or control.\n * @name Moveable.Roundable#roundClickable\n * @default true\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * Whether to show a round control that does not actually exist as a shadow\n * @name Moveable.Roundable#isDisplayShadowRoundControls\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     isDisplayShadowRoundControls: false,\n * });\n * moveable.isDisplayShadowRoundControls = true;\n */\n\n\n/**\n * The padding value of the position of the round control\n * @name Moveable.Roundable#roundPadding\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundPadding: 0,\n * });\n * moveable.roundPadding = 15;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupStart\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `roundGroup` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroup\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *   e.events.forEach(ev => {\n *       ev.target.style.cssText += ev.cssText;\n *   });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundGroupEnd\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     targets: [target1, target2, target3],\n *     roundable: true,\n * });\n * moveable.on(\"roundGroupStart\", e => {\n *     console.log(e.targets);\n * }).on(\"roundGroup\", e => {\n *     e.events.forEach(ev => {\n *         ev.target.style.cssText += ev.cssText;\n *     });\n * }).on(\"roundGroupEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const n = is3d ? 4 : 3;\n    const identityMatrix = createIdentityMatrix(n);\n    const value = `matrix${is3d ? \"3d\" : \"\"}(${identityMatrix.join(\",\")})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: [] as const,\n    events: [\n        \"beforeRenderStart\",\n        \"beforeRender\",\n        \"beforeRenderEnd\",\n        \"beforeRenderGroupStart\",\n        \"beforeRenderGroup\",\n        \"beforeRenderGroupEnd\",\n    ] as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetStyle(e: any) {\n        const datas = e.datas;\n\n        datas.nextStyle = {};\n        datas.nextTransforms = e.datas.startTransforms;\n        datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n        this.resetStyle(e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetStyle(e);\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            this.resetStyle(childEvent);\n\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetStyle(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { getNextStyle, getNextTransformText } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams, fillCSSObject } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: [] as const,\n    events: [\n        \"renderStart\",\n        \"render\",\n        \"renderEnd\",\n        \"renderGroupStart\",\n        \"renderGroup\",\n        \"renderGroupEnd\",\n    ] as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        if (e.resultCount) {\n            return this.drag(moveable, e);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n            events: params,\n        },));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist, defaultSync } from \"../utils\";\nimport Gesto, { GestoOptions } from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    e.clientDistX = e.distX;\n    e.clientDistY = e.distY;\n    if (eventType === \"\" && !isRequest) {\n        // Convert distX, distY\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [...(moveable as any)[ableType]];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length || ables.every(able => able.dragRelation)) {\n        return false;\n    }\n    const eventAbles: Able[] = [BeforeRenderable, ...ables, Renderable].filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let resultCount = 0;\n\n    let isDragStop = false;\n    const stop = () => {\n        isDragStop = true;\n        e.stop?.();\n    };\n    const results = eventAbles.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            const result = able[eventName](moveable, {\n                ...e,\n                stop,\n                resultCount,\n                datas: nextDatas,\n                originalDatas: datas,\n                inputTarget,\n            });\n\n            (moveable as any)._emitter.off();\n            if (isStart && result === false) {\n                nextDatas.isEventStart = false;\n            }\n            resultCount += result || nextDatas.isEventStart ? 1 : 0;\n            return result;\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    let isForceEnd = false;\n\n    // end ables\n    if (isDragStop) {\n        isForceEnd = true;\n    }\n    if (!isForceEnd && isStart && eventAbles.length && !isUpdate) {\n        isForceEnd = eventAbles.filter(able => {\n            const ableName = able.name;\n            const nextDatas = datas[ableName];\n\n            if (nextDatas.isEventStart) {\n                if (able.dragRelation === \"strong\") {\n                    return false;\n                }\n                // start drag\n                return true;\n            }\n            // cancel event\n            return false;\n        }).length as any;\n    }\n\n    if (isEnd || isForceEnd) {\n        moveable.state.gestos = {};\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gestos = {};\n            });\n        }\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isForceEnd && !isRequest && isUpdate && moveable.props.preventDefault) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        const flushSync = moveable.props.flushSync || defaultSync;\n\n        flushSync(() => {\n            moveable.updateRect(isEnd ? eventType : \"\", true, false);\n            moveable.forceUpdate();\n        });\n\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function checkMoveableTarget(moveable: MoveableManagerInterface) {\n    return (e: { inputEvent: Event }) => {\n        const {\n            dragTarget,\n        } = moveable.props;\n        const eventTarget = e.inputEvent.target as Element;\n        const areaElement = moveable.areaElement;\n\n        return dragTarget && (eventTarget === dragTarget || dragTarget.contains(eventTarget))\n            || eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\")\n            || hasClass(eventTarget, \"moveable-edgeDraggable\");\n    };\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox;\n    const targets: Array<HTMLElement | SVGElement> = [];\n    const dragTarget = moveable.props.dragTarget;\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: checkMoveableTarget(moveable),\n        pinchStart: checkMoveableTarget(moveable),\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const isTargetAbles = ableType === \"targetAbles\";\n    const {\n        pinchOutside,\n        pinchThreshold,\n        preventClickEventOnDrag,\n        preventClickDefault,\n        checkInput,\n        preventDefault = true,\n    } = moveable.props;\n    const options: GestoOptions = {\n        preventDefault,\n        preventRightClick: true,\n        preventWheelClick: true,\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n        preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n        preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n        preventClickEventByCondition: isTargetAbles ? null : (e: MouseEvent) => {\n            return moveable.controlBox.contains(e.target as Element);\n        },\n        checkInput: isTargetAbles ? checkInput : false,\n    };\n    const gesto = new Gesto(target!, options);\n    const isControl = eventAffix === \"Control\";\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                } else if (moveable.props.stopPropagation || (eventType === \"Start\" && isControl)) {\n                    e?.inputEvent?.stopPropagation();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n    private _onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n}\n","import { createIdentityMatrix, convertDimension, multiply, createOriginMatrix, ignoreDimension } from \"@scena/matrix\";\nimport { getCachedMatrixContainerInfo } from \"../store/Store\";\nimport { convert3DMatrixes, getOffsetInfo, getSVGOffset, makeMatrixCSS } from \"../utils\";\nimport { getMatrixStackInfo } from \"./getMatrixStackInfo\";\n\nexport interface MoveableElementMatrixInfo {\n    hasZoom: boolean;\n    hasFixed: boolean;\n    originalRootMatrix: number[];\n    rootMatrix: number[];\n    beforeMatrix: number[];\n    offsetMatrix: number[];\n    allMatrix: number[];\n    targetMatrix: number[];\n    transformOrigin: number[];\n    targetOrigin: number[];\n    is3d: boolean;\n    targetTransform: string;\n    offsetContainer: HTMLElement | null,\n    offsetRootContainer: HTMLElement | null,\n}\n\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n): MoveableElementMatrixInfo {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n        hasFixed,\n        zoom: containerZoom,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n        offsetContainer: offsetRootContainer,\n        zoom: rootZoom,\n    } = getCachedMatrixContainerInfo(offsetContainer, rootContainer); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n\n    const nextRootMatrixes = [...rootMatrixes].reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(nextRootMatrixes);\n    }\n\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    nextRootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || document.body;\n    const endContainer = nextRootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = nextRootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    const originalRootMatrix = rootMatrix;\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        hasZoom: containerZoom !== 1 || rootZoom !== 1,\n        hasFixed,\n        rootMatrix,\n        originalRootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n        offsetContainer,\n        offsetRootContainer,\n    };\n}\n","import { createIdentityMatrix } from \"@scena/matrix\";\nimport { ElementSizes, MoveablePosition } from \"../types\";\nimport { calculateMoveablePosition, getSize, getRotationRad } from \"../utils\";\nimport { calculateMatrixStack, MoveableElementMatrixInfo } from \"./calculateMatrixStack\";\n\nexport interface MoveableElementInfo extends MoveableElementMatrixInfo, MoveablePosition, ElementSizes {\n    width: number;\n    height: number;\n    rotation: number;\n}\n\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n): MoveableElementInfo {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    const sizes = getSize(target);\n\n    if (target) {\n        width = sizes.offsetWidth;\n        height = sizes.offsetHeight;\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n\n    return {\n        hasZoom: false,\n        width,\n        height,\n        rotation,\n        ...sizes,\n        originalRootMatrix: createIdentityMatrix(n),\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        hasFixed: false,\n        offsetContainer: null,\n        offsetRootContainer: null,\n        ...allResult,\n    };\n}\n\n\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\n","import { plus, getOrigin, multiply, minus } from \"@scena/matrix\";\nimport { getCachedClientRect, getCachedStyle } from \"../store/Store\";\nimport { MoveableClientRect, Writable } from \"../types\";\nimport {\n    calculateInversePosition,\n    calculateMoveablePosition,\n    getClientRect, getClientRectByPosition, getOffsetInfo, resetClientRect,\n    getTransformOriginArray,\n} from \"../utils\";\nimport { calculateElementInfo, MoveableElementInfo } from \"./getElementInfo\";\n\n\nexport interface MoveableTargetInfo extends MoveableElementInfo {\n    targetClientRect: MoveableClientRect;\n    containerClientRect: MoveableClientRect;\n    moveableClientRect: MoveableClientRect;\n    rootContainerClientRect: MoveableClientRect;\n    beforeDirection: 1 | -1;\n    beforeOrigin: number[];\n    offsetDelta: number[],\n    originalBeforeOrigin: number[];\n    target: HTMLElement | SVGElement | null | undefined;\n    style: Partial<Writable<CSSStyleDeclaration>>;\n}\n\nexport function getMoveableTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    requestStyles: Array<keyof CSSStyleDeclaration> = [],\n): MoveableTargetInfo {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let rootContainerClientRect = resetClientRect();\n    let offsetDelta = [0, 0];\n    const style: Partial<Writable<CSSStyleDeclaration>> = {};\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!,\n        true,\n    );\n    if (target) {\n        const getStyle = getCachedStyle(target);\n\n        requestStyles.forEach(name => {\n            style[name] = getStyle(name as any);\n        });\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        rootContainerClientRect = getClientRect(result.offsetRootContainer!);\n\n\n        const offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent\n            || result.offsetRootContainer!;\n\n        if (result.hasZoom) {\n            const absoluteTargetPosition = calculateMoveablePosition(\n                multiply(result.originalRootMatrix, result.allMatrix),\n                result.transformOrigin,\n                result.width, result.height,\n            );\n            const absoluteContainerPosition = calculateMoveablePosition(\n                result.originalRootMatrix,\n                getTransformOriginArray(getCachedStyle(offsetContainer)(\"transformOrigin\")).map(pos => parseFloat(pos)),\n                offsetContainer.offsetWidth, offsetContainer.offsetHeight,\n            );\n            targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\n            containerClientRect = getClientRectByPosition(\n                absoluteContainerPosition,\n                rootContainerClientRect,\n                offsetContainer,\n                true,\n            );\n\n            if (moveableElement) {\n                const left = absoluteTargetPosition.left;\n                const top = absoluteTargetPosition.top;\n                moveableClientRect = getClientRectByPosition({\n                    left,\n                    top,\n                    bottom: top,\n                    right: top,\n                }, rootContainerClientRect);\n            }\n        } else {\n            targetClientRect = getClientRect(target);\n            containerClientRect = getCachedClientRect(offsetContainer);\n\n            if (moveableElement) {\n                moveableClientRect = getClientRect(moveableElement);\n            }\n            const {\n                left: containerClientRectLeft,\n                top: containerClientRectTop,\n                clientLeft: containterClientLeft,\n                clientTop: containerClientTop,\n            } = containerClientRect;\n            const clientDelta = [\n                targetClientRect.left - containerClientRectLeft,\n                targetClientRect.top - containerClientRectTop,\n            ];\n\n            offsetDelta = minus(\n                calculateInversePosition(result.rootMatrix, clientDelta, 4),\n                [containterClientLeft! + result.left, containerClientTop! + result.top],\n            );\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        rootContainerClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        style,\n        offsetDelta,\n        ...result,\n    };\n}\n","import { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport { MoveableManagerState, PersistRectData } from \"../types\";\n\n\nexport function getPersistState(rect: PersistRectData): Partial<MoveableManagerState> | null {\n    let {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = rect;\n    if (!pos1 || !pos2 || !pos3 || !pos4) {\n        return null;\n    }\n    const minPos = getMinMaxs([pos1!, pos2!, pos3!, pos4!]);\n    const posDelta = [minPos.minX, minPos.minY];\n    const origin = minus(rect.origin!, posDelta);\n\n    pos1 = minus(pos1, posDelta);\n    pos2 = minus(pos2, posDelta);\n    pos3 = minus(pos3, posDelta);\n    pos4 = minus(pos4, posDelta);\n    return {\n        ...rect,\n        left: rect.left,\n        top: rect.top,\n        posDelta,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        origin,\n        beforeOrigin: origin,\n        // originalBeforeOrigin: origin,\n        isPersisted: true,\n    };\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n    defaultSync,\n    getRefTarget,\n    groupBy,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n    GroupableProps,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto, checkMoveableTarget } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport {\n    addClass, cancelAnimationFrame, find,\n    getKeys, IObject, removeClass, requestAnimationFrame,\n} from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport { styled } from \"react-css-styled\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { VIEW_DRAGGING } from \"./classNames\";\nimport { diff } from \"@egjs/list-differ\";\nimport { getPersistState } from \"./utils/persist\";\nimport { setStoreCache } from \"./store/Store\";\n// import { getClipPath } from \"./ables/clippable/utils\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        isWrapperMounted: false,\n        parentPosition: null,\n        warpSelf: false,\n        useResizeObserver: false,\n        useMutationObserver: false,\n        preventDefault: true,\n        linePadding: 0,\n        controlPadding: 0,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n        stopPropagation: false,\n        preventClickDefault: false,\n        preventClickEventOnDrag: true,\n        flushSync: defaultSync,\n        firstRenderState: null,\n        persistData: null,\n        viewContainer: null,\n        requestStyles: [],\n        useAccuratePosition: false,\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gestos: {},\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        posDelta: [0, 0],\n        ...getMoveableTargetInfo(null),\n    };\n    public renderState: Record<string, any> = {};\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: HTMLElement;\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isMoveableMounted = false;\n    public isUnmounted = false;\n\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _emitter: EventEmitter = new EventEmitter();\n    protected _prevTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _prevDragArea = false;\n    protected _isPropTargetChanged = false;\n    protected _hasFirstTarget = false;\n\n    private _reiszeObserver: ResizeObserver | null = null;\n    private _observerId = 0;\n    private _mutationObserver: MutationObserver | null = null;\n    public _rootContainer: HTMLElement | null | undefined = null;\n    private _viewContainer: HTMLElement | null | undefined = null;\n    private _viewClassNames: string[] = [];\n    private _store: Record<string, any> = {};\n\n    public render() {\n        const props = this.props;\n        const state = this.getState();\n        const {\n            parentPosition,\n            className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            groupable,\n            linePadding,\n            controlPadding,\n        } = props;\n\n        this._checkUpdateRootContainer();\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const [parentLeft, parentTop] = parentPosition as number[] || [0, 0];\n        const {\n            left,\n            top,\n            target: stateTarget,\n            direction,\n            hasFixed,\n            offsetDelta,\n        } = state;\n        const groupTargets = (props as any).targets;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        const ableClassName = this._getAbleClassName();\n        const isDisplay\n            = (groupTargets && groupTargets.length && (stateTarget || groupable))\n            || propsTarget\n            || (!this._hasFirstTarget && this.state.isPersisted);\n        const isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\n        const translate = [left - parentLeft, top - parentTop];\n\n        if (!groupable && props.useAccuratePosition) {\n            translate[0] += offsetDelta[0];\n            translate[1] += offsetDelta[1];\n        }\n        const style: Record<string, any> = {\n            \"position\": hasFixed ? \"fixed\" : \"absolute\",\n            \"display\": isDisplay ? \"block\" : \"none\",\n            \"visibility\": isVisible ? \"visible\" : \"hidden\",\n            \"transform\": `translate3d(${translate[0]}px, ${translate[1]}px, ${translateZ})`,\n            \"--zoom\": zoom,\n            \"--zoompx\": `${zoom}px`,\n        };\n        if (linePadding) {\n            style[\"--moveable-line-padding\"] = linePadding;\n        }\n        if (controlPadding) {\n            style[\"--moveable-control-padding\"] = controlPadding;\n        }\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${ableClassName} ${className}`}\n                {...ableAttributes}\n                onClick={this._onPreventClick}\n                style={style}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.isMoveableMounted = true;\n        this.isUnmounted = false;\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n\n        if (!container && !parentMoveable && !wrapperMoveable && !this.state.isPersisted) {\n            this.updateRect(\"\", false, false);\n            this.forceUpdate();\n        }\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this._updateTargets();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isMoveableMounted = false;\n        this.isUnmounted = true;\n        this._emitter.off();\n        this._reiszeObserver?.disconnect();\n        this._mutationObserver?.disconnect();\n\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([]);\n        }\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getTargets(): Array<HTMLElement | SVGElement> {\n        const target = this.props.target;\n        return target ? [target] : [];\n    }\n    /**\n     * Get the able used in MoveableManager.\n     * @method Moveable#getAble\n     * @param - able name\n     */\n    public getAble<T extends Able>(ableName: string): T | undefined {\n        const ables: Able[] = this.props.ables || [];\n\n        return find(ables, able => able.name === ableName) as T;\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute?.(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto && checkMoveableTarget(this)({ inputEvent: e })) {\n            if (!targetGesto.isFlag()) {\n                targetGesto.triggerDragStart(e);\n            }\n        } else if (controlGesto && this.isMoveableElement(e.target as Element)) {\n            if (!controlGesto.isFlag()) {\n                controlGesto.triggerDragStart(e);\n            }\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * (100% = 100)\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const isSingle = !props.parentPosition && !props.wrapperMoveable;\n\n        if (isSingle) {\n            setStoreCache(true);\n        }\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? (parentMoveable as any)._rootContainer\n            : this._rootContainer;\n        const nextState = getMoveableTargetInfo(\n            this.controlBox,\n            target,\n            container,\n            container,\n            rootContainer || container,\n            this._getRequestStyles(),\n        );\n\n        if (!target && this._hasFirstTarget && props.persistData) {\n            const persistState = getPersistState(props.persistData);\n\n            for (const name in persistState) {\n                (nextState as any)[name] = (persistState as any)[name];\n            }\n        }\n\n        if (isSingle) {\n            setStoreCache();\n        }\n        this.updateState(\n            nextState,\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @param - If you want to check if able is dragging, specify ableName.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging(ableName?: string) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = targetGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        if (controlGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = controlGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        return false;\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * Use `.updateRect()` method\n     * @method Moveable#updateTarget\n     * @deprecated\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    /**\n     * You can stop the dragging currently in progress through a method from outside.\n     * @method Moveable#stopDrag\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.stopDrag();\n     */\n    public stopDrag(type?: \"target\" | \"control\"): void {\n        if (!type || type === \"target\") {\n            this.targetGesto?.stop();\n        }\n        if (!type || type === \"control\") {\n            this.controlGesto?.stop();\n        }\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.getState();\n        const props = this.props;\n        const {\n            originalBeforeOrigin,\n            transformOrigin,\n            allMatrix, is3d,\n            pos1, pos2, pos3, pos4,\n            left: stateLeft,\n            top: stateTop,\n            // offsetWidth,\n            // offsetHeight,\n            isPersisted,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n\n        // const clipPathInfo = getClipPath(\n        //     props.target,\n        //     offsetWidth,\n        //     offsetHeight,\n        // );\n\n        // if (clipPathInfo) {\n        //     left -= Math.max(0, clipPathInfo.left);\n        //     top -= Math.max(0, clipPathInfo.top);\n        //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\n        //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\n        // }\n\n        let absoluteOrigin: number[] = [];\n\n        if (isPersisted) {\n            absoluteOrigin = transformOrigin;\n        } else if (this.controlBox && props.groupable) {\n            absoluteOrigin = originalBeforeOrigin;\n        } else {\n            absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\n        }\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isTargetChanged = !equals(stateTarget, target);\n        const isChanged = isTargetChanged || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n        this._isPropTargetChanged = isTargetChanged;\n    }\n    public waitToChangeTarget(): Promise<void> {\n        return new Promise(() => { });\n    }\n    public triggerEvent(name: string, e: any): any {\n        this._emitter.trigger(name, e);\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as MoveableManager).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    public getState(): MoveableManagerState {\n        const props = this.props;\n        if (props.target || (props as any).targets?.length) {\n            this._hasFirstTarget = true;\n        }\n        const hasControlBox = this.controlBox;\n        const persistData = props.persistData;\n        const firstRenderState = props.firstRenderState;\n\n        if (firstRenderState && !hasControlBox) {\n            return firstRenderState;\n        }\n        if (!this._hasFirstTarget && persistData) {\n            const persistState = getPersistState(persistData);\n\n            if (persistState) {\n                this.updateState(persistState, false);\n                return this.state;\n            }\n        }\n        (this.state as any).isPersisted = false;\n        return this.state;\n    }\n    public updateSelectors() { }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = this.getEnabledAbles(ables);\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            if (this.isUnmounted) {\n                return;\n            }\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles(ables: Able[] = this.props.ables!) {\n        const props = this.props as any;\n\n        return ables.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        this.renderState = {};\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _getRequestStyles() {\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\n            const ableStyleNames = (able.requestStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\n\n            return [...names, ...ableStyleNames];\n        }, [...(this.props.requestStyles || [])] as Array<keyof CSSStyleDeclaration>);\n\n\n        return styleNames;\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        this._updateResizeObserver(prevProps);\n        this._updateMutationObserver(prevProps);\n    }\n    protected _updateEvents() {\n        const controlBoxElement = this.controlBox;\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevTarget = props.dragTarget || props.target;\n        this._prevDragArea = props.dragArea!;\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            zoom,\n            hideDefaultLines,\n            hideChildMoveableDefaultLines,\n            parentMoveable,\n        } = props as MoveableManagerProps<GroupableProps>;\n\n        if (hideDefaultLines || (parentMoveable && hideChildMoveableDefaultLines)) {\n            return [];\n        }\n        const renderPoses = this.getState().renderPoses;\n        const Renderer = {\n            createElement,\n        };\n\n        return [\n            [0, 1],\n            [1, 3],\n            [3, 2],\n            [2, 0],\n        ].map(([from, to], i) => {\n            return renderLine(Renderer, \"\", renderPoses[from], renderPoses[to], zoom!, `render-line-${i}`);\n        });\n    }\n    private _onPreventClick = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        // removeEvent(window, \"click\", this._onPreventClick, true);\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = this._prevTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isTargetChanged || isDragAreaChanged;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    private _checkUpdateRootContainer() {\n        const rootContainer = this.props.rootContainer;\n\n        if (!this._rootContainer && rootContainer) {\n            this._rootContainer = getRefTarget(rootContainer, true);\n        }\n    }\n    private _checkUpdateViewContainer() {\n        const viewContainerOption = this.props.viewContainer;\n\n        if (!this._viewContainer && viewContainerOption) {\n            this._viewContainer = getRefTarget(viewContainerOption, true);\n        }\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([\n                ...this._getAbleViewClassNames(),\n                this.isDragging() ? VIEW_DRAGGING : \"\",\n            ]);\n        }\n    }\n    private _changeAbleViewClassNames(classNames: string[]) {\n        const viewContainer = this._viewContainer!;\n        const nextClassNames = groupBy(\n            classNames.filter(Boolean),\n            el => el,\n        ).map(([className]) => className);\n        const prevClassNames = this._viewClassNames;\n\n        const {\n            removed,\n            added,\n        } = diff(prevClassNames, nextClassNames);\n\n        removed.forEach(index => {\n            removeClass(viewContainer, prevClassNames[index]);\n        });\n        added.forEach(index => {\n            addClass(viewContainer, nextClassNames[index]);\n        });\n\n        this._viewClassNames = nextClassNames;\n\n    }\n    private _getAbleViewClassNames() {\n        return (this.getEnabledAbles().map(able => {\n            return (able.viewClassName?.(this) || \"\");\n        }).join(\" \") + ` ${this._getAbleClassName(\"-view\")}`).split(/\\s+/g);\n    }\n    private _getAbleClassName(classPrefix = \"\") {\n        const ables = this.getEnabledAbles();\n\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n        const targetGestoData: Record<string, any> = targetGesto?.isFlag()\n            ? targetGesto.getEventData() : {};\n        const controlGestoData: Record<string, any> = controlGesto?.isFlag()\n            ? controlGesto.getEventData() : {};\n\n        return ables.map(able => {\n            const name = able.name;\n            let className = able.className?.(this) || \"\";\n\n            if (\n                targetGestoData[name]?.isEventStart\n                || controlGestoData[name]?.isEventStart\n            ) {\n                className += ` ${prefix(`${name}${classPrefix}-dragging`)}`;\n            }\n            return className.trim();\n        }).filter(Boolean).join(\" \");\n    }\n    private _updateResizeObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n            this._reiszeObserver?.disconnect();\n            return;\n        }\n\n        if (prevProps.target === target && this._reiszeObserver) {\n            return;\n        }\n\n        const observer = new ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._reiszeObserver = observer;\n    }\n    private _updateMutationObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.MutationObserver || !target || !props.useMutationObserver) {\n            this._mutationObserver?.disconnect();\n            return;\n        }\n\n        if (prevProps.target === target && this._mutationObserver) {\n            return;\n        }\n\n        const observer = new MutationObserver(records => {\n            for (const mutation of records) {\n                if (mutation.type === \"attributes\" && mutation.attributeName === \"style\") {\n                    this.checkUpdateRect();\n                }\n            }\n        });\n\n        observer.observe(target!, {\n            attributes: true,\n        });\n        this._mutationObserver = observer;\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#useResizeObserver\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { minus } from \"@scena/matrix\";\nimport { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderLine } from \"../renderDirections\";\nimport { Renderer, MoveableGroupInterface, GroupableProps } from \"../types\";\nimport { flat, watchValue } from \"../utils\";\n\nexport default {\n    name: \"groupable\",\n    props: [\n        \"defaultGroupRotate\",\n        \"defaultGroupOrigin\",\n        \"groupable\",\n        \"groupableProps\",\n        \"targetGroups\",\n        \"hideChildMoveableDefaultLines\",\n    ] as const,\n    events: [] as const,\n    render(moveable: MoveableGroupInterface<GroupableProps>, React: Renderer): any[] {\n        const props = moveable.props;\n        let targets: Array<HTMLElement | SVGElement | undefined | null> = props.targets || [];\n\n        const { left, top, isPersisted } = moveable.getState();\n        const zoom = props.zoom || 1;\n        const renderGroupRects = moveable.renderGroupRects;\n        let persistDatChildren = props.persistData?.children || [];\n\n        if (isPersisted) {\n            targets = persistDatChildren.map(() => null);\n        } else {\n            persistDatChildren = [];\n        }\n        const store = (moveable as any)._store;\n        const parentPosition = watchValue(\n            store,\n            \"parentPosition\",\n            [left, top],\n            styles => styles.join(\",\"),\n        );\n        const requestStyles = watchValue(\n            store,\n            \"requestStyles\",\n            moveable.getRequestChildStyles(),\n            styles => styles.join(\",\"),\n        );\n\n        moveable.moveables = moveable.moveables.slice(0, targets.length);\n        return [\n            ...targets.map((target, i) => {\n                return <MoveableManager<GroupableProps>\n                    key={\"moveable\" + i}\n                    ref={refs(moveable, \"moveables\", i)}\n                    target={target}\n                    origin={false}\n                    requestStyles={requestStyles}\n                    cssStyled={props.cssStyled}\n                    customStyledMap={props.customStyledMap}\n                    useResizeObserver={props.useResizeObserver}\n                    hideChildMoveableDefaultLines={props.hideChildMoveableDefaultLines}\n                    parentMoveable={moveable}\n                    parentPosition={[left, top]}\n                    persistData={persistDatChildren[i]}\n                    zoom={zoom}\n                />;\n            }),\n            ...flat(renderGroupRects.map(({ pos1, pos2, pos3, pos4 }, i) => {\n                const poses = [pos1, pos2, pos3, pos4];\n\n                return [\n                    [0, 1],\n                    [1, 3],\n                    [3, 2],\n                    [2, 0],\n                ].map(([from, to], j) => {\n                    return renderLine(\n                        React,\n                        \"\",\n                        minus(poses[from], parentPosition),\n                        minus(poses[to], parentPosition),\n                        zoom,\n                        `group-rect-${i}-${j}`,\n                    );\n                });\n            })),\n        ];\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: [\n        \"clickable\",\n    ] as const,\n    events: [\n        \"click\",\n        \"clickGroup\",\n    ] as const,\n    always: true,\n    dragRelation: \"weak\",\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dragStart() {\n        return;\n    },\n    dragControlStart() {\n        return;\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.props.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.contains(inputTarget);\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            moveableTarget: moveable.props.target!,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n            moveableTarget: targets[targetIndex],\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface, Renderer } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\nimport { renderEdgeLines } from \"../renderDirections\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    css: [\n        `.edge.edgeDraggable.line {\ncursor: move;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<DraggableProps>, React: Renderer) {\n        const props = moveable.props;\n        const edge = props.edgeDraggable!;\n\n        if (!edge) {\n            return [];\n        }\n        return renderEdgeLines(\n            React,\n            \"edgeDraggable\",\n            edge,\n            moveable.getState().renderPoses,\n            props.zoom!,\n        );\n    },\n    dragCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n\n        return !props.draggable\n            && hasClass(target, prefix(\"direction\"))\n            && hasClass(target, prefix(\"edge\"))\n            && hasClass(target, prefix(\"edgeDraggable\"));\n    },\n    dragStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    drag(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        const props = moveable.props;\n        const target = e.inputEvent?.target;\n\n        if (!props.edgeDraggable || !target) {\n            return false;\n        }\n        return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroup(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: [\n        \"individualGroupable\",\n        \"individualGroupableProps\",\n    ] as const,\n    events: [] as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\nimport { camelize, pushSet } from \"@daybrush/utils\";\nimport { Able } from \"../types\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable,\n    Draggable, edgeDraggable,\n    Resizable, Scalable, Warpable, Rotatable,\n    Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\n\nexport const MOVEABLE_EVENTS = /*#__PURE__*/(MOVEABLE_ABLES as readonly Able[]).reduce((current, able) => {\n    (able.events || []).forEach(name => {\n        pushSet(current, name);\n    });\n    return current;\n}, [] as any[]) as Array<typeof MOVEABLE_ABLES[number][\"events\"][number]>;\n\nexport const MOVEABLE_PROPS = /*#__PURE__*/(MOVEABLE_ABLES as readonly Able[]).reduce((current, able) => {\n    (able.props || []).forEach(name => {\n        pushSet(current, name);\n    });\n    return current;\n}, [] as any[]) as Array<typeof MOVEABLE_ABLES[number][\"props\"][number]>;\n\n\nexport const MOVEABLE_REACT_EVENTS = /*#__PURE__*/MOVEABLE_EVENTS.map(name => {\n    return camelize(`on ${name}`);\n}) as Array<`on${Capitalize<typeof MOVEABLE_ABLES[number][\"events\"][number]>}`>;\n\n","export function solveConstantsDistance(\n    [a, b, c]: [number, number, number],\n    pos: number[],\n) {\n    return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\n\nexport function solveC(\n    [a, b]: [number, number],\n    pos: number[],\n) {\n    // ax + by + c = 0\n    // -ax -by;\n    return -a * pos[0] - b * pos[1];\n}\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, GroupRect, MoveableTargetGroupsType, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport {\n    getAbsolutePosesByState, equals, unset, rotatePosesInfo,\n    convertTransformOriginArray,\n    isDeepArrayEquals,\n} from \"./utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport { getIntersectionPointsByConstants, getMinMaxs } from \"overlap-area\";\nimport { find, isArray, throttle } from \"@daybrush/utils\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { solveC, solveConstantsDistance } from \"./Snappable/utils\";\nimport { setStoreCache } from \"./store/Store\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\n\n\nfunction getGroupRect(parentPoses: number[][][], rotation: number): GroupRect {\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let width = 0;\n    let height = 0;\n\n    if (!parentPoses.length) {\n        return {\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            minX: 0,\n            minY: 0,\n            maxX: 0,\n            maxY: 0,\n            width,\n            height,\n            rotation,\n        };\n    }\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        // ax = y  // -ax + y = 0 // 0 => 1\n        // -ax = y // ax + y = 0  // 0 => 3\n        const a1MinMax = [MAX_NUM, MIN_NUM];\n        const a1MinMaxPos = [[0, 0], [0, 0]];\n        const a2MinMax = [MAX_NUM, MIN_NUM];\n        const a2MinMaxPos = [[0, 0], [0, 0]];\n\n        parentPoses.forEach(poses => {\n            poses.forEach(pos => {\n\n                // const b1 = pos[1] - a1 * pos[0];\n                // const b2 = pos[1] - a2 * pos[0];\n\n                const a1Dist = solveConstantsDistance([-a1, 1, 0], pos);\n                const a2Dist = solveConstantsDistance([-a2, 1, 0], pos);\n\n                if (a1MinMax[0] > a1Dist) {\n                    a1MinMaxPos[0] = pos;\n                    a1MinMax[0] = a1Dist;\n                }\n                if (a1MinMax[1] < a1Dist) {\n                    a1MinMaxPos[1] = pos;\n                    a1MinMax[1] = a1Dist;\n                }\n                if (a2MinMax[0] > a2Dist) {\n                    a2MinMaxPos[0] = pos;\n                    a2MinMax[0] = a2Dist;\n                }\n                if (a2MinMax[1] < a2Dist) {\n                    a2MinMaxPos[1] = pos;\n                    a2MinMax[1] = a2Dist;\n                }\n            });\n        });\n\n        const [a1MinPos, a1MaxPos] = a1MinMaxPos;\n        const [a2MinPos, a2MaxPos] = a2MinMaxPos;\n\n        const minHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MinPos)];\n        const maxHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MaxPos)];\n\n        const minVerticalLine = [-a2, 1, solveC([-a2, 1], a2MinPos)];\n        const maxVerticalLine = [-a2, 1, solveC([-a2, 1], a2MaxPos)];\n\n        [pos1, pos2, pos3, pos4] = [\n            [minHorizontalLine, minVerticalLine],\n            [minHorizontalLine, maxVerticalLine],\n            [maxHorizontalLine, minVerticalLine],\n            [maxHorizontalLine, maxVerticalLine],\n        ].map(([line1, line2]) => getIntersectionPointsByConstants(line1, line2)[0]);\n\n        width = a2MinMax[1] - a2MinMax[0];\n        height = a1MinMax[1] - a1MinMax[0];\n    } else {\n        const minX = getMinPos(parentPoses, 0);\n        const minY = getMinPos(parentPoses, 1);\n        const maxX = getMaxPos(parentPoses, 0);\n        const maxY = getMaxPos(parentPoses, 1);\n\n        pos1 = [minX, minY];\n        pos2 = [maxX, minY];\n        pos3 = [minX, maxY];\n        pos4 = [maxX, maxY];\n        width = maxX - minX;\n        height = maxY - minY;\n        if (fixedRotation % 180) {\n            // 0\n            // 1 2\n            // 3 4\n            // 90\n            // 3 1\n            // 4 2\n            // 180\n            // 4 3\n            // 2 1\n            // 270\n            // 2 4\n            // 1 3\n            // 1, 2, 3,4 = 3 1 4 2\n            const changedX = [pos3, pos1, pos4, pos2];\n\n            [pos1, pos2, pos3, pos4] = changedX;\n            width = maxY - minY;\n            height = maxX - minX;\n        }\n\n    }\n    if (fixedRotation % 360 > 180) {\n        // 1 2   4 3\n        // 3 4   2 1\n        const changedX = [pos4, pos3, pos2, pos1];\n\n        [pos1, pos2, pos3, pos4] = changedX;\n    }\n    const { minX, minY, maxX, maxY } = getMinMaxs([pos1, pos2, pos3, pos4]);\n\n    return {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        minX,\n        minY,\n        maxX,\n        maxY,\n        rotation,\n    };\n}\ntype SelfGroup = Array<MoveableManager | null | SelfGroup>;\ntype CheckedMoveableManager = { finded: boolean; manager: MoveableManager };\n\nfunction findMoveableGroups(\n    moveables: CheckedMoveableManager[],\n    childTargetGroups: MoveableTargetGroupsType,\n): SelfGroup {\n    const groups = childTargetGroups.map(targetGroup => {\n        if (isArray(targetGroup)) {\n            const childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n            const length = childMoveableGroups.length;\n\n            if (length > 1) {\n                return childMoveableGroups;\n            } else if (length === 1) {\n                return childMoveableGroups[0];\n            } else {\n                return null;\n            }\n        } else {\n            const checked = find(moveables, ({ manager }) => manager.props.target === targetGroup)!;\n\n            if (checked) {\n                checked.finded = true;\n                return checked.manager;\n            }\n            return null;\n        }\n    }).filter(Boolean);\n\n    if (groups.length === 1 && isArray(groups[0])) {\n        return groups[0];\n    }\n    return groups;\n}\n\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n    public renderGroupRects: GroupRect[] = [];\n    private _targetGroups: MoveableTargetGroupsType = [];\n    private _hasFirstTargets = false;\n\n    public componentDidMount() {\n        super.componentDidMount();\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        this.updateAbles();\n    }\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        const state = this.state;\n\n        if (!this.controlBox || state.isPersisted) {\n            return;\n        }\n        setStoreCache(true);\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const props = this.props;\n        const moveables = this.moveables;\n        const target = state.target! || props.target!;\n        const checkeds = moveables.map(moveable => ({ finded: false, manager: moveable }));\n        const targetGroups = this.props.targetGroups || [];\n        const moveableGroups = findMoveableGroups(\n            checkeds,\n            targetGroups,\n        );\n\n        moveableGroups.push(...checkeds.filter(({ finded }) => !finded).map(({ manager }) => manager));\n\n        const renderGroupRects: GroupRect[] = [];\n        const isReset = !isTarget || (type !== \"\" && props.updateGroup);\n        let defaultGroupRotate = props.defaultGroupRotate || 0;\n\n        if (!this._hasFirstTargets) {\n            const persistedRoatation = this.props.persistData?.rotation;\n\n            if (persistedRoatation != null) {\n                defaultGroupRotate = persistedRoatation;\n            }\n        }\n\n        function getMoveableGroupRect(group: SelfGroup, parentRotation: number, isRoot?: boolean): GroupRect {\n            const posesRotations = group.map(moveable => {\n                if (isArray(moveable)) {\n                    const rect = getMoveableGroupRect(moveable, parentRotation);\n                    const poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n\n                    renderGroupRects.push(rect);\n                    return { poses, rotation: rect.rotation };\n                } else {\n                    return {\n                        poses: getAbsolutePosesByState(moveable!.state),\n                        rotation: moveable!.getRotation(),\n                    };\n                }\n            });\n            const rotations = posesRotations.map(({ rotation }) => rotation);\n\n            let groupRotation = 0;\n            const firstRotation = rotations[0];\n            const isSameRotation = rotations.every(nextRotation => {\n                return Math.abs(firstRotation - nextRotation) < 0.1;\n            });\n\n            if (isReset) {\n                groupRotation = isSameRotation ? firstRotation : defaultGroupRotate;\n            } else {\n                groupRotation = !isRoot && isSameRotation ? firstRotation : parentRotation;\n            }\n            const groupPoses = posesRotations.map(({ poses }) => poses);\n            const groupRect = getGroupRect(\n                groupPoses,\n                groupRotation,\n            );\n\n            return groupRect;\n        }\n        const rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n\n        if (isReset) {\n            // reset rotataion\n            this.rotation = rootGroupRect.rotation;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n        }\n\n\n        this._targetGroups = targetGroups;\n        this.renderGroupRects = renderGroupRects;\n        const transformOrigin = this.transformOrigin;\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const { width, height, minX, minY } = rootGroupRect;\n        const posesInfo = rotatePosesInfo(\n            [\n                [0, 0],\n                [width, 0],\n                [0, height],\n                [width, height],\n            ],\n            convertTransformOriginArray(transformOrigin, width, height),\n            this.rotation / 180 * Math.PI,\n        );\n\n        const { minX: deltaX, minY: deltaY } = getMinMaxs(posesInfo.result);\n        const rotateScale = ` rotate(${rotation}deg)`\n            + ` scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        const transform = `translate(${-deltaX}px, ${-deltaY}px)${rotateScale}`;\n\n        this.controlBox.style.transform\n            = `translate3d(${minX}px, ${minY}px, ${this.props.translateZ || 0})`;\n\n        target.style.cssText += `left:0px;top:0px;`\n            + `transform-origin:${transformOrigin};`\n            + `width:${width}px;height:${height}px;`\n            + `transform: ${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getMoveableTargetInfo(\n            this.controlBox,\n            target,\n            this.controlBox,\n            this.getContainer(),\n            this._rootContainer || container,\n            [],\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        // info.left = info.left + delta[0];\n        // info.top = info.top + delta[1];\n        info.left = minX - info.left! + delta[0];\n        info.top = minY - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n        target.style.transform\n            = `translate(${-deltaX - delta[0]}px, ${-deltaY - delta[1]}px)`\n            + rotateScale;\n\n        setStoreCache();\n        this.updateState(\n            {\n                ...info,\n                posDelta: delta,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        } else {\n            this._emitter.trigger(name, e);\n        }\n    }\n    public getRequestChildStyles() {\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\n            const ableStyleNames = (able.requestChildStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\n\n            return [...names, ...ableStyleNames];\n        }, [] as Array<keyof CSSStyleDeclaration>);\n\n\n        return styleNames;\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._prevTarget = this.props.dragTarget || this.areaElement;\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = this._prevTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n        if (!state.target) {\n            state.target = this.areaElement;\n            this.controlBox.style.display = \"block\";\n        }\n        if (state.target) {\n            if (!this.targetGesto) {\n                this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            }\n            if (!this.controlGesto) {\n                this.controlGesto = getAbleGesto(this, this.controlBox, \"controlAbles\", \"GroupControl\");\n            }\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const targets = props.targets!;\n        const { added, changed, removed } = this.differ.update(targets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (\n            isContainerChanged\n            || isTargetChanged\n            || this.transformOrigin !== (props.defaultGroupOrigin || \"50% 50%\")\n            || changed.length\n            || targets.length && !isDeepArrayEquals(this._targetGroups, props.targetGroups || [])\n        ) {\n            this.updateRect();\n            this._hasFirstTargets = true;\n        }\n        this._isPropTargetChanged = !!isTargetChanged;\n    }\n    protected _updateObserver() { }\n}\n\n/**\n * Sets the initial rotation of the group.\n * @name Moveable.Group#defaultGroupRotate\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group.\n * @name Moveable.Group#defaultGroupOrigin\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\n\n\n/**\n * Whether to hide the line in child moveable for group corresponding to the rect of the target.\n * @name Moveable.Group#hideChildMoveableDefaultLines\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   hideChildMoveableDefaultLines: false,\n * });\n *\n * moveable.hideChildMoveableDefaultLines = true;\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, IndividualGroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\nimport { setStoreCache } from \"./store/Store\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps & IndividualGroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const props = this.props;\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            persistData,\n        } = props;\n\n        let targets: Array<HTMLElement | SVGElement | null | undefined> = props.targets || [];\n        const length = targets.length;\n        const canPersist = this.isUnmounted || !length;\n        let persistDatChildren = persistData?.children ?? [];\n\n        if (canPersist && !length && persistDatChildren.length) {\n            targets = persistDatChildren.map(() => null);\n        } else if (!canPersist) {\n            persistDatChildren = [];\n        }\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                const individualProps = props.individualGroupableProps?.(target, i) ?? {};\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...props}\n                    {...individualProps}\n                    target={target}\n                    wrapperMoveable={this}\n                    isWrapperMounted={this.isMoveableMounted}\n                    persistData={persistDatChildren[i]}\n\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        setStoreCache(true);\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n        setStoreCache();\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface, MoveableRefTargetsResultType,\n    MoveableTargetGroupsType, BeforeRenderableProps, RenderableProps, MoveableManagerState,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { find, getKeys, IObject, isArray, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport { styled } from \"react-css-styled\";\nimport { getRefTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\n\nfunction getElementTargets(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n): Array<SVGElement | HTMLElement> {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            elementTargets.push(...getElementTargets(target, selectorMap));\n        } else {\n            elementTargets.push(target);\n        }\n    });\n\n    return elementTargets;\n}\n\nfunction getTargetGroups(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const targetGroups: MoveableTargetGroupsType = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                targetGroups.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            targetGroups.push(getTargetGroups(target, selectorMap));\n        } else {\n            targetGroups.push(target);\n        }\n    });\n\n    return targetGroups;\n}\n\nfunction compareRefTargets(\n    prevRefTargets: MoveableRefTargetsResultType,\n    nextRefTargets: MoveableRefTargetsResultType,\n): boolean {\n    return (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n        const nextTarget = nextRefTargets[i];\n\n        if (!target && !nextTarget) {\n            return false;\n        } else if (target != nextTarget) {\n            if (isArray(target) && isArray(nextTarget)) {\n                return compareRefTargets(target, nextTarget);\n            }\n            return true;\n        }\n        return false;\n    });\n}\n\ntype DefaultAbles = GroupableProps & IndividualGroupableProps & BeforeRenderableProps & RenderableProps;\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T> {\n    public static defaultAbles: readonly Able<any>[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: MoveableRefTargetsResultType = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    private _differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    private _elementTargets: Array<HTMLElement | SVGElement> = [];\n    private _onChangeTargets: (() => void) | null = null;\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        let isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        this._elementTargets = elementTargets;\n\n        let firstRenderState: MoveableManagerState | null = null;\n        const prevMoveable = this.moveable;\n\n\n        const persistData = props.persistData;\n\n        if (persistData?.children) {\n            isGroup = true;\n        }\n        // Even one child is treated as a group if individualGroupable is enabled. #867\n        if (props.individualGroupable) {\n            return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}\n            />;\n        }\n        if (isGroup) {\n            const targetGroups = getTargetGroups(refTargets, this.selectorMap);\n\n            // manager\n            if (prevMoveable && !prevMoveable.props.groupable && !(prevMoveable.props as any).individualGroupable) {\n                const target = prevMoveable.props.target!;\n\n                if (target && elementTargets.indexOf(target) > -1) {\n                    firstRenderState = { ...prevMoveable.state };\n                }\n            }\n\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                {...props.groupableProps ?? {}}\n                target={null}\n                targets={elementTargets}\n                targetGroups={targetGroups}\n                firstRenderState={firstRenderState}\n            />;\n        } else {\n            const target = elementTargets[0];\n            // manager\n            if (prevMoveable && (prevMoveable.props.groupable || (prevMoveable.props as any).individualGroupable)) {\n                const moveables = (prevMoveable as MoveableGroup | MoveableIndividualGroup).moveables || [];\n                const prevTargetMoveable = find(moveables, mv => mv.props.target === target);\n\n                if (prevTargetMoveable) {\n                    firstRenderState = { ...prevTargetMoveable.state };\n                }\n            }\n\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={target}\n                firstRenderState={firstRenderState} />;\n        }\n    }\n    public componentDidMount() {\n        this._checkChangeTargets();\n        this._updateRefs();\n    }\n    public componentDidUpdate() {\n        this._checkChangeTargets();\n    }\n    public componentWillUnmount() {\n        this.selectorMap = {};\n        this.refTargets = [];\n    }\n    /**\n     * Get targets set in moveable through target or targets of props.\n     * @method Moveable#getTargets\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\n     * });\n     *\n     * console.log(moveable.getTargets());\n     */\n    public getTargets() {\n        return this.moveable?.getTargets() ?? [];\n    }\n    /**\n     * If the element list corresponding to the selector among the targets is changed, it is updated.\n     * @method Moveable#updateSelectors\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: \".target\",\n     * });\n     *\n     * moveable.updateSelectors();\n     */\n    public updateSelectors() {\n        this.selectorMap = {};\n        this._updateRefs();\n    }\n    /**\n     * User changes target and waits for target to change.\n     * @method Moveable#waitToChangeTarget\n     * @story combination-with-other-components--components-selecto\n     * @example\n     * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\n     *   moveable.waitToChangeTarget().then(() => {\n     *      moveable.dragStart(e.currentTarget);\n     *   });\n     *   moveable.target = e.currentTarget;\n     * });\n     */\n    public waitToChangeTarget(): Promise<void> {\n        // let resolvePromise: (e: OnChangeTarget) => void;\n\n        // this._onChangeTargets = () => {\n        //     this._onChangeTargets = null;\n        //     resolvePromise({\n        //         moveable: this.getManager(),\n        //         targets: this._elementTargets,\n        //     });\n        // };\n\n        // return new Promise<OnChangeTarget>(resolve => {\n        //     resolvePromise = resolve;\n        // });\n        let resolvePromise: () => void;\n\n        this._onChangeTargets = () => {\n            this._onChangeTargets = null;\n            resolvePromise();\n        };\n\n        return new Promise(resolve => {\n            resolvePromise = resolve;\n        });\n    }\n    public waitToChangeTargets(): Promise<void> {\n        return this.waitToChangeTarget();\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n\n        this.refTargets.forEach(function updateSelectorMap(target) {\n            if (isString(target)) {\n                const selectorTarget = selectorMap[target];\n\n                if (selectorTarget) {\n                    nextSelectorMap[target] = selectorMap[target];\n                } else if (isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                }\n            } else if (isArray(target)) {\n                target.forEach(updateSelectorMap);\n            }\n        });\n\n        this.refTargets = nextRefTargets;\n        this.selectorMap = nextSelectorMap;\n\n        if (!isRender && isUpdate) {\n            this.forceUpdate();\n        }\n        return nextRefTargets;\n    }\n    private _checkChangeTargets() {\n        const { added, removed } = this._differ.update(this._elementTargets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (isTargetChanged) {\n            this.props.onChangeTargets?.({\n                moveable: this.moveable,\n                targets: this._elementTargets,\n            });\n            this._onChangeTargets?.();\n        }\n        this._updateRefs();\n\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T extends Record<string, any> = {}>(\n    ables: Array<Able<T>>,\n): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n"],"names":["makeAble","name","able","__assign","events","props","DIRECTIONS4","DIRECTIONS","getSVGCursor","scale","degree","concat","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","browserName","browserVersion","parseInt","version","IS_CHROME","IS_CHROMIUM","chromium","chromiumVersion","IS_CHROMIUM109","IS_FIREFOX","IS_SAFARI_ABOVE15","webkitVersion","PREFIX","directionCSS","map","dir","top","left","originX","originY","indexOf","join","MOVEABLE_CSS","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTION_REGION_TO_DIRECTION","n","e","s","w","nw","ne","sw","se","DIRECTION_INDEXES","DIRECTION_ROTATIONS","MOVEABLE_METHODS","setCustomDrag","state","delta","isPinch","isConvert","ableName","result","_b","_a","gestos","move","inputEvent","datas","originalDatas","ableDatas","convertDragDist","parentEvent","CustomGesto","prevX","prevY","startX","startY","isDrag","isFlag","draggable","dragStart","client","type","drag","clientX","clientY","isFirstDrag","isPrevDrag","distX","distY","deltaX","deltaY","parentGesto","calculatePointerDist","moveable","moveableClientRect","rootMatrix","is3d","pos1","minus","calculateInversePosition","posX","posY","_c","getDragDist","setDragStart","allMatrix","beforeMatrix","origin","offsetMatrix","targetMatrix","transformOrigin","matrix","inverseMatrix","invert","inverseBeforeMatrix","absoluteOrigin","convertPositionMatrix","plus","startDragBeforeDist","calculate","startDragDist","getTransformDirection","calculateMoveablePosition","beforeTransform","direction","resolveTransformEvent","event","functionName","beforeRenderable","index","transformIndex","nextTransforms","length","nextTransformAppendedIndexes","nextIndex","findIndex","text","match","find","info","filter","convertTransformInfo","targetFunction","matFunctionName","beforeFunctionTexts","afterFunctionTexts","beforeFunctionMatrix","beforeTransform2","beforeFunctionMatrix2","targetTansform","targetFunctionMatrix","afterTransform","afterFunctionMatrix","afterTransform2","afterFunctionMatrix2","targetAllTransform","allFunctionMatrix","splice","isAppendTransform","__spreadArray","isAppend","convertTransformFormat","value","dist","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","multiply","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","width","height","prevWidth","prevHeight","prevOrigin","pos","i","splitUnit","unit","prevSize","size","isNaN","measureRatio","getPosIndexesByDirection","indexes","push","getPosesByDirection","poses","getPosByDirection","xRatio","yRatio","dot","bottom","getDist","startPos","fixedDirection","calculatePoses","fixedPos","getNextMatrix","getAbsoluteMatrix","getNextTransformMatrix","transform","targetTransform","parseMat","convertDimension","scaleMatrix","createScaleMatrix","fillTransformStartEvent","getBeforeRenderableDatas","setTransform","startTransforms","isArray","splitSpace","setTransformIndex","setDefaultTransformIndex","property","func","parse","startValue","functionValue","fillOriginalTransform","getNextTransforms","getNextTransformText","getNextStyle","nextStyle","fillTransformEvent","nextTransform","Draggable","fillCSSObject","getTranslateDist","fixedPosition","groupable","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getDirectionByPos","nextFixedOffset","calculatePosition","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","getAbsolutePosesByState","getGestoData","targetGesto","controlGesto","data","getEventData","getShadowRoot","parentElement","getRootNode","rootNode","nodeType","getMatrixStackInfo","target","container","checkContainer","el","matrixes","documentElement","document","body","requestEnd","isEnd","targetTransformOrigin","hasFixed","offsetContainer","getOffsetInfo","offsetParent","zoom","getStyle","getCachedStyle","position","getElementTransform","isFixed","convertCSStoMatrix","getTransformMatrix","isOffsetEnd","isStatic","parentClientLeft","parentClientTop","fixedClientLeft","fixedClientTop","fixedInfo","hasTransform","fixedContainer","getPositionFixedInfo","convert3DMatrixes","getOffsetPosInfo","tagName","hasOffset","isSVG","targetOrigin","offsetPos","offset","offsetLeft","offsetTop","getSVGMatrix","createIdentityMatrix","targetZoom","offsetInfo","offsetZoom","isCustomElement","parentSlotElement","customOffsetParent","customOffsetLeft","customOffsetTop","clientLeft","clientTop","margin","getBodyOffset","split","scaleX","scaleY","isElementTarget","scrollLeft","scrollTop","createOriginMatrix","cacheStyleMap","clientRectStyleMap","matrixContainerInfos","setStoreCache","useCache","Map","getCachedClientRect","clientRect","get","nextClientRect","getClientRect","set","getCachedMatrixContainerInfo","result_1","element","cache","nextStyle_1","getComputedStyle","style","cached","multiply2","pos2","prefix","classNames","_i","arguments","prefixNames","apply","defaultSync","fn","isObject","multiplies","a","measureSVGSize","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","o","getTransformOriginArray","computedTransform","list","baseVal","chr","lastParent","isParent","checkZoom","getTargetStyle","doc","ownerDocument","hasSlot","assignedSlotParentElement","assignedSlot","targetPosition","willChange","slotParentNode","parentNode","targetParentNode","host","isUndefined","slice","getSVGGraphicsOffset","getBodyStyle","bodyPosition","marginLeft","marginTop","forEach","makeMatrixCSS","convertMatrixtoCSS","clientWidth","clientHeight","x","y","viewBoxWidth","viewBoxHeight","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","isGTarget","getBBox","bbox","getRect","posesX","posesY","right","rectWidth","rectHeight","calculateRect","getSVGOffset","targetInfo","getSize","offsetWidth","offsetHeight","containerClientRect","getBoundingClientRect","rect","rectLeft","rectTop","mat","prevLeft","prevTop","posOrigin","rectOrigin","count","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","calculateMoveableClientPositions","rootClientRect","rootPoses","y1","x2","y2","x3","y3","x4","y4","_e","getShapeDirection","pos3","pos4","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","rad","getRad","getControlTransform","rotation","reduce","prev","getProps","self","cssWidth","cssHeight","contentWidth","contentHeight","minWidth","minHeight","minOffsetWidth","minOffsetHeight","maxWidth","Infinity","maxHeight","maxOffsetWidth","maxOffsetHeight","inlineCSSWidth","inlineCSSHeight","svg","targetStyle","boxSizing","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","horizontalPadding","verticalPadding","horizontalBorder","verticalBorder","horizontalOffset","verticalOffset","containerWidth","containerHeight","getParentStyle","convertUnitSize","between","getRotationRad","resetClientRect","scrollWidth","scrollHeight","getExtendsRect","isRoot","extendsRect","overflow","getClientRectByPosition","base","isExtends","baseTop","baseLeft","getTotalDirection","parentDirection","getDirection","deg","getAttribute","direciton","getAbsolutePoses","roundSign","num","unset","resolvedEvent","cssText","getKeys","decamelize","fillAfterTransform","prevEvent","nextEvent","fillParams","params","isBeforeEvent","nextParams","currentTarget","isTrusted","stopAble","isEventStart","stopDrag","stop","call","isStartEvent","lastEvent","fillEndParams","isDouble","catchEvent","callback","_emitter","on","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","some","method","ableGroup","equals","a1","a2","selectValue","values","groupBy","arr","groups","groupKeys","groupKey","keyIndex","group","groupByMap","flat","cur","maxOffset","args","sort","b","calculatePadding","convertCSSSize","isRelative","getTinyDist","v","getDirectionViewClassName","isDragging","getDirectionCondition","checkAbles","isRequest","requestAble","hasClass","transforms","undefined","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts2","beforeFunctions","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","toMat","isArrayFormat","Element","getRefTarget","isSelector","isString","querySelector","isFunction","current","getRefTargets","targets","userTargets","querySelectorAll","getAbsoluteRotation","PI","getDragDistByState","calculateMatrixDist","getSizeDistByDist","startSize","ratio","keepRatio","startOffsetWidth","startOffsetHeight","distWidth","distHeight","standardRad","signSize","cos","startWidthSize","startHeightSize","secondRad","atan2","firstRad","rad_1","distSize","sin","getOffsetSizeDist","sizeDirection","parentDistance","parentDist","parentScale","startFixedDirection","directionsDists","directionRatios","ratioDistance","dist_1","convertTransformUnit","xy","leftOrigin","rightOrigin","originObject","nextOriginObject","convertTransformOriginArray","rotatePosesInfo","prevPoses","nextPoses","rotate","next","isDeepArrayEquals","arr1","arr2","every","value1","value2","isArray1","isArray2","watchValue","store","nextValue","valueKey","prevValue","pinchStart","angle","pinchable","eventName","controlEventName","pinchAbles","controlAbles","canPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","fillChildEvents","groupableDatas","childDatas","moveables","_","triggerChildGesto","isStart","childs","ev","childMoveable","childEvent","childGestos","parentFlag","child","triggerChildAbles","eachEvent","VERTICAL_NAMES","HORIZONTAL_NAMES","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","hasGuidelines","snappable","bounds","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","getSnapDirections","snapDirections","mapSnapDirectionPoses","snapPoses","nextSnapDirections","nextSnapPoses","splitSnapDirectionPoses","horizontalNames","verticalNames","horizontal","vertical","calculateContainerPos","containerRect","clientPos","solveLineConstants","point1","point2","dx","dy","c","throttle","checkMoveableSnapPoses","customSnapThreshold","snapThreshold","checkSnapPoses","checkSnap","checkSnapKeepRatio","endPos","endX","endY","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","guideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","snapInfo","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","sign","bSign","aOffset","bOffset","getCheckSnapDirections","directions","endDirection_1","signX","signY","nextDirection","signs","isStartLine","line","cx","average","cy","hitTestLine","test1","test2","isSameStartLine","dots","centerSign","error","checkInnerBoundDot","threshold","checkInnerBound","verticalSign","horizontalSign","lineConstants","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","boundLine","isRender","dot1","boundDot1","boundDot2","dy2","dx2","hasDx","hasDy","slope","getInnerBoundInfo","lineInfos","multiple","sizeOffset","getInnerBoundDragInfo","lines","getCheckInnerBoundLineInfos","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","virtualPoses","dir1","dir2","virtualLine","isBoundRotate","relativePoses","boundDots","getDistPointLine","solveReverseLine","checkRotateInnerBounds","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","lineInfo","isHorizontalStart","isVerticalStart","checkBoundPoses","_f","nextBounds","checkBounds","getBounds","externalBounds","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetRight","snapOffsetBottom","isCSS","_g","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","renderGuideline","React","key","scaleType","createElement","className","renderInnerGuideline","sizeValue","posValue","renderSnapPoses","renderPos","renderGuidelines","targetRect","isDisplayInnerSnapDigit","mainNames","targetStart","targetEnd","hide","elementRect","renderDigitLine","lineType","gap","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","nextGuidelines","inner","elementRect1","elementRect2","nextPos1","nextPos2","total","renderDashedGuidelines","rendered","sideNames","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","gapRects","sideStartPos","sideEndPos","sideCenterPos","solveEquation","solveNextOffset","isOutside","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapBoundsDrag","absolutePoses","boundPoses","middle","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isWidthOutside","getTotalGuidelines","containerClientHeight","containerClientWidth","snapGap","maxSnapElementGuidelineDistance","elementGuidelines","getElementGuidelines","totalGuidelines","getGapGuidelines","getGridGuidelines","getDefaultGuidelines","checkBetweenRects","maxSnapElementGapDistance","elementRects","gapGuidelines","targetCenter","targetStart2","targetEnd2","nextElementRects","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","isCenter","prevValues","snapRect","refresh","nextElementGuidelines","diff","maintained","added","nextValues","prevIndex","getSnapElementRects","elementSnapDirections","topValue","leftValue","rightValue","bottomValue","centerValue","middleValue","sizes","getObjectGuidelines","containerSize","posGuideline","isNumber","snapWidth","snapHeight","targetClientRect","offsetDelta","containerLeft","containerTop","getMinMaxs","targetLeft","minX","targetTop","minY","elementLeft","elementTop","elementRight","elementBottom","checkSnapInfo","snapContainer","snapContainerTarget","snapContainerRect","offset1","offset2","getNextFixedPoses","nextFixedPos","getSizeOffsetInfo","innerBoundLineInfos","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","origin2","checkSnapResize","nextAllMatrix","checkSnapScale","sizeDist","startCheckSnapDrag","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","directionCondition","dragRelation","css","render","snapRenderThreshold","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","renderDirectionControlsByInfos","renderDirections","getState","renderPoses","rotationRad","degRotation","directionMap","renderState","renderDirectionMap","directionRotation","dataAttrs","renderDirectionControls","defaultDirections","displayAroundControls","renderAroundControls","renderLine","renderEdgeLines","edge","index1","index2","Boolean","getRenderDirections","renderDiagonalDirections","renderAllDirections","requestStyle","requestChildStyle","dragInfo","beforeOrigin","prevDist","prevBeforeDist","deltaOffset","startRect","parentMoveable","throttleDrag","dragRotateRad","startDragRotate","ry","rx","beforeTranslate","throttleArray","beforeDist","beforeDelta","passDelta","passDist","dragAfter","param","isControl","requestStart","viewClassName","isGroup","parentFixedDirection","resizable","minSize","startWidth","startHeight","maxSize","startOffsetMatrix","startTransformOrigin","isWidth","parentIsWidth","setRatio","isFinite","startPositions","setFixedDirection","setFixedPosition","setMin","setMax","nextMaxSize","startRatio","setOrigin","startFixedPosition","isResize","parentKeepRatio","dragClient","resolveMatrix","targetN","resizeFormat","throttleResize","keepRatioFinally","getNextBoundingSize","nextSize","boundingWidth","boundingHeight","nextFixedDirection","setSize","snapDist","computeSize","isNoSnap","calculateBoundSize","inverseDelta","dragControlAfter","checkResizableError","errorWidth","errorHeight","isErrorWidth","isErrorHeight","dragGroupControlCondition","originalEvents","setDist","createRotateMatrix","originalX","originalY","parentStartOffsetWidth","parentStartOffsetHeight","updateGroupMin","originalMinSize","childMinSize","childStartOffsetWidth","childStartOffsetHeight","parentMinWidth","parentMinHeight","updateGroupMax","originalMaxSize","childMaxSize","parentMaxWidth","parentMaxHeight","deltaWidth","deltaHeight","setRotateStartInfo","startAbsoluteOrigin","prevDeg","defaultDeg","prevSnapDeg","loop","startDist","getAbsoluteDist","normalizedPrevDeg","getAbsoluteDistByClient","getRotateInfo","moveableRect","throttleRotate","snapRotation","snapDeg","getRotationPositions","rotationPosition","radPoses","isReverse","rotateAroundControls","rotationTarget","contains","rotatable","resolveAblesWithRotatable","positions","jsxs","resolveMap_1","directionControlInfos","resolve","beforeDirection","resizeStart","startClientX","startClientY","externalRotate","beforeInfo","afterInfo","absoluteInfo","inputTarget","regionDirection","controlDirection","isAroundControl","resolveAble","clientPoses","originalFixedPosition_1","getOrigin","fixedBeforeOrigin","fixedAfterOrigin","posDelta","Resizable","parentPosition","controlPosition","parentFixedPosition","rotatation","isRotate","clientDistX","clientDistY","groupDelta","targetDirection","beforeRotation","absoluteDelta","absoluteDist","absoluteRotation","startRotation","absoluteStartRotation","nextClientX","nextClientY","setRotation","nextRotation","inverseDist","prevInverseDist","requestValue","dragEvent","transformEvent","resize","resizeEvent","beforeRotate","absoluteRotate","parentLeft","parentTop","parentBeforeOrigin","childClient","startGroupClient","groupClient","prevClientX","prevClientY","rotateMatrix","setGroupRotation","distRotate","getRotation","deltaRotate","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","throttleScale","getNextScale","stateDirection","setScale","nextScale","scaleEndParam","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","scalable","warpable","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","warpTargetMatrix","targetInverseMatrix","ignoreDimension","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","VIEW_DRAGGING","restoreStyle","areaElement","removeClass","renderPieces","dragArea","passDragArea","ref","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","getDefaultScrollPosition","scrollContainer","getContainer","scrollOptions","dragScroll","DragScroll","scrollContainerElement","gestoName","scrollBy","getCurrentEvent","checkScroll","scrollThreshold","scrollThrottleTime","getScrollPosition","throttleTime","dragGroupControEnd","padding","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","radiusPoses","virtual","raws","rawPos","styles","getRadiusRange","controlPoses","horizontalRange","verticalRange","clipPose","sub","getRadiusValues","minCounts","full","splitIndex","splitLength","horizontalValues","verticalValues","horizontalValuesLength","verticalValuesLength","hasVerticalValues","nwValue","neValue","seValue","_h","swValue","_j","wnValue","_k","enValue","_l","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isRect","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getControlSize","xRange","yRange","getClipPath","defaultClip","customClip","clipText","splitBracket","clipPrefix","splitter","splitComma","xPos","yPos","minMaxs","maxX","maxY","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","_s","moveControlPos","dists","verticalDirections","horizontalDirections","verticalDirection_1","horizontalDirection_1","fixedIndex","nextDist","nextControlPoses_1","controlPose","controlDir","dirDir","dirHorizontal","dirVertical","addClipPath","clipIndex","clipStyle","clipEventType","removeClipPath","customClipPath","defaultClipPath","clipArea","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","dragWithClip","isDragTarget","isClipStart","isLine","isArea","originalDraggable","originalDist","firstDist","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","clipHorizontalGuidelines","clipVerticalGuidelines","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","clipTargetBounds","snapOffsetY","snapOffsetX","distSnapX","distSnapY","width_1","height_1","nextControlPoses_2","j","nextClipStyles","dragDist","startOrigin","startTargetOrigin","isDragOrigin","originRelative","distOrigin","dragDelta","deltaOrigin","addBorderRadiusByLine","lineIndex","horizontalsLength","verticalsLength","controlIndex","controlPoseInfo","addBorderRadius","removeBorderRadius","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","getStyleBorderRadius","firstMoveable","firstTarget","getTargets","roundClickable","minRoundControls","maxRoundControls","roundPadding","isDisplayShadowRoundControls","verticalCount","horizontalCount","basePos","originalPos","isDisplay","display","indexAttr","replace","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","identityMatrix","cssMatrix","startTransform","resetStyle","fillDragStartParams","fillDragParams","_this","resultCount","fillDragEndParams","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","updateRect","requestAble_1","eventAbles","BeforeRenderable","Renderable","elementFromPoint","isDragStop","results","nextDatas","off","isUpdate","isForceEnd","preventDefault","isUnmounted","flushSync","forceUpdate","checkMoveableTarget","dragTarget","eventTarget","isMoveableElement","controlBox","getTargetAbleGesto","moveableTarget","getAbleGesto","conditionFunctions","isTargetAbles","pinchOutside","pinchThreshold","preventClickEventOnDrag","preventClickDefault","checkInput","options","preventRightClick","preventWheelClick","preventClickEventOnDragStart","preventClickEventByCondition","gesto","Gesto","stopPropagation","EventManager","_onEvent","addEventListener","setAbles","destroy","removeEventListener","calculateMatrixStack","rootContainer","isAbsolute3d","prevTargetMatrix","containerZoom","rootMatrixes","isRoot3d","offsetRootContainer","rootZoom","isNext3d","isSVGGraphicElement","nextRootMatrixes","reverse","originalRootContainer","endContainer","rootMatrixBeforeOffset","nextInfo","isMatrix3d","originalRootMatrix","hasZoom","calculateElementInfo","allResult","getElementInfo","getMoveableTargetInfo","moveableElement","parentContainer","requestStyles","rootContainerClientRect","getStyle_1","beforePosition","absoluteTargetPosition","absoluteContainerPosition","containerClientRectLeft","containerClientRectTop","containterClientLeft","containerClientTop","clientDelta","originalBeforeOrigin","getPersistState","isPersisted","MoveableManager","_super","__extends","targetAbles","isMoveableMounted","EventEmitter","_prevTarget","_prevDragArea","_isPropTargetChanged","_hasFirstTarget","_reiszeObserver","_observerId","_mutationObserver","_rootContainer","_viewContainer","_viewClassNames","_store","checkUpdateRect","cancelAnimationFrame","_onPreventClick","propsTarget","cspNonce","translateZ","ControlBoxElement","cssStyled","linePadding","controlPadding","_checkUpdateRootContainer","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","ableClassName","_getAbleClassName","isVisible","firstRenderState","persistData","useAccuratePosition","onClick","renderAbles","_renderLines","componentDidMount","wrapperMoveable","_checkUpdateViewContainer","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","componentDidUpdate","prevProps","componentWillUnmount","disconnect","viewContainer","_changeAbleViewClassNames","manager","getAble","triggerDragStart","hitTest","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","isSingle","nextState","_getRequestStyles","persistState","updateState","updateTarget","statePos","getManager","isInstant","requsetAble","ableRequester","requester","ableParam","stateLeft","stateTop","stateContainer","updateAbles","isTargetChanged","isChanged","moveableContainer","unsetAbles","waitToChangeTarget","Promise","trigger","useCSS","tag","customStyleMap","customStyledMap","styled","hasControlBox","updateSelectors","setState","always","Renderer","styleNames","ableStyleNames","_updateResizeObserver","_updateMutationObserver","controlBoxElement","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","hideDefaultLines","hideChildMoveableDefaultLines","useDragArea","prevTarget","prevDragArea","isDragAreaChanged","eventKeys","hasAbles","viewContainerOption","_getAbleViewClassNames","nextClassNames","prevClassNames","removed","classPrefix","targetGestoData","controlGestoData","trim","ResizeObserver","useResizeObserver","observer","observe","box","MutationObserver","useMutationObserver","records","records_1","mutation","attributeName","attributes","defaultProps","isWrapperMounted","warpSelf","PureComponent","renderGroupRects","persistDatChildren","getRequestChildStyles","refs","containsElement","containsTarget","targetIndex","parentTarget","getDraggableEvent","edgeDraggable","dragCondition","dragGroupCondition","MOVEABLE_ABLES","Default","Snappable","Pinchable","Scalable","Warpable","Rotatable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS","pushSet","MOVEABLE_PROPS","solveConstantsDistance","solveC","getMaxPos","getMinPos","getGroupRect","parentPoses","fixedRotation","a1_1","tan","a2_1","a1MinMax_1","a1MinMaxPos_1","a2MinMax_1","a2MinMaxPos_1","a1Dist","a2Dist","a1MinPos","a1MaxPos","a2MinPos","a2MaxPos","minHorizontalLine","maxHorizontalLine","minVerticalLine","maxVerticalLine","line1","line2","getIntersectionPointsByConstants","minX_1","minY_1","maxX_1","maxY_1","changedX","findMoveableGroups","childTargetGroups","targetGroup","childMoveableGroups","checked","finded","MoveableGroup","differ","ChildrenDiffer","_targetGroups","_hasFirstTargets","prototype","checkeds","targetGroups","moveableGroups","isReset","updateGroup","defaultGroupRotate","persistedRoatation","getMoveableGroupRect","parentRotation","posesRotations","rotations","groupRotation","firstRotation","isSameRotation","groupPoses","groupRect","rootGroupRect","defaultGroupOrigin","posesInfo","rotateScale","nextTarget","isContainerChanged","update","changed","MoveableIndividualGroup","canPersist","individualProps","individualGroupableProps","getElementTargets","refTargets","selectorMap","elementTargets","getTargetGroups","compareRefTargets","prevRefTargets","nextRefTargets","InitialMoveable","_differ","_elementTargets","_onChangeTargets","makeStyled","cssMap","getTotalAbles","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","userAbles","userProps","__rest","_updateRefs","totalAbles","nextProps","prevMoveable","individualGroupable","groupableProps","target_1","prevTargetMoveable","mv","_checkChangeTargets","resolvePromise","waitToChangeTargets","isBrowser","nextSelectorMap","updateSelectorMap","selectorTarget","onChangeTargets","__decorate","withMethods","Moveable","makeMoveable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEgB,SAAAA,QAAA,CAIdC,IAJc,EAIFC,IAJE,EAIc;AAC1B,EAAA,OAAOC,QACH,CAAA;AAAAC,IAAAA,MAAM,EAAE,EAAR;AACAC,IAAAA,KAAK,EAAE,EADP;AAEAJ,IAAAA,IAAI,EAAAA,IAAAA;GAFJ,EAGGC,IAHH,CADJ,CAAA;AAMH;;ACRM,IAAMI,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAApB,CAAA;IACMC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,EAAnB;;AAGP,SAASC,YAAT,CAAsBC,KAAtB,EAAqCC,MAArC,EAAmD;EAC/C,OAAO,4EAAA,CAAAC,MAAA,CAA0E,EAAA,GAAKF,KAA/E,EAAoF,gBAApF,EAAoFE,MAApF,CAAmG,KAAKF,KAAxG,EAA6G,mPAA7G,CAA6GE,CAAAA,MAA7G,CAAmVD,MAAnV,EAAyV,kDAAzV,CAAP,CAAA;AACH,CAAA;;AACD,SAASE,YAAT,CAAsBF,MAAtB,EAAoC;EAChC,IAAMG,EAAE,GAAGL,YAAY,CAAC,CAAD,EAAIE,MAAJ,CAAvB,CADgC;;AAGhC,EAAA,IAAMI,QAAQ,GAAIC,IAAI,CAACC,KAAL,CAAWN,MAAM,GAAG,EAApB,CAAA,GAA0B,EAA3B,GAAiC,GAAlD,CAAA;EACA,IAAIO,aAAa,GAAG,WAApB,CAAA;;EAEA,IAAIH,QAAQ,KAAK,GAAjB,EAAsB;AAClBG,IAAAA,aAAa,GAAG,aAAhB,CAAA;AACH,GAFD,MAEO,IAAIH,QAAQ,KAAK,EAAjB,EAAqB;AACxBG,IAAAA,aAAa,GAAG,aAAhB,CAAA;AACH,GAFM,MAEA,IAAIH,QAAQ,KAAK,EAAjB,EAAqB;AACxBG,IAAAA,aAAa,GAAG,WAAhB,CAAA;AACH,GAZ+B;;;AAehC,EAAA,OAAO,gBAAA,CAAUA,aAAV,EAAuB,gBAAvB,EAAuBN,MAAvB,CAAwCE,EAAxC,EAAuD,YAAvD,CAAuDF,CAAAA,MAAvD,CAAuDM,aAAvD,KAAA,CAAP,CAAA;AACH,CAAA;;AAEM,IAAMC,KAAK,GAAGC,QAAQ,EAAtB,CAAA;AACA,IAAMC,SAAS,GAAGF,KAAK,CAACG,OAAN,CAAcC,MAAhC,CAAA;AACA,IAAMC,YAAY,GAAGH,SAAS,IAAK,YAAA;AACtC,EAAA,IAAMI,IAAI,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgC;AAAEC,IAAAA,SAAS,EAAE,EAAA;GAA7C,GAAoDD,MAAM,CAACE,SAAxE,CAAA;EACA,IAAMC,GAAG,GAAG,wBAAA,CAAyBC,IAAzB,CAA8BL,IAAI,CAACE,SAAL,CAAeI,WAAf,EAA9B,CAAZ,CAAA;AAEA,EAAA,OAAOF,GAAG,GAAGG,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAV,GAAqB,GAAxB,GAA8B,KAAxC,CAAA;AACH,CALwC,EAAlC,CAAA;AAOP,IAAMI,WAAW,GAAGd,KAAK,CAACG,OAAN,CAAcpB,IAAlC,CAAA;AACA,IAAMgC,cAAc,GAAGC,QAAQ,CAAChB,KAAK,CAACG,OAAN,CAAcc,OAAf,EAAwB,EAAxB,CAA/B,CAAA;AACA,IAAMC,SAAS,GAAGJ,WAAW,KAAK,QAAlC,CAAA;AACA,IAAMK,WAAW,GAAGnB,KAAK,CAACG,OAAN,CAAciB,QAAlC,CAAA;AACA,IAAMC,eAAe,GAAGL,QAAQ,CAAChB,KAAK,CAACG,OAAN,CAAckB,eAAf,EAAgC,EAAhC,CAAR,IAA+C,CAAvE,CAAA;AAEO,IAAMC,cAAc,GAAIJ,SAAS,IAAIH,cAAc,IAAI,GAAhC,IACtBI,WAAW,IAAIE,eAAe,IAAI,GADnC,CAAA;AAEA,IAAME,UAAU,GAAGT,WAAW,KAAK,SAAnC,CAAA;AACA,IAAMU,iBAAiB,GACxBR,QAAQ,CAAChB,KAAK,CAACG,OAAN,CAAcsB,aAAf,EAA8B,EAA9B,CAAR,IAA6C,GAA7C,IACCV,cAAc,IAAI,EAFlB,CAAA;AAIA,IAAMW,MAAM,GAAG,WAAf,CAAA;AAGP,IAAMC,YAAY,GAAGtC,UAAU,CAACuC,GAAX,CAAe,UAAAC,GAAA,EAAG;EACnC,IAAIC,GAAG,GAAG,EAAV,CAAA;EACA,IAAIC,IAAI,GAAG,EAAX,CAAA;EACA,IAAIC,OAAO,GAAG,QAAd,CAAA;EACA,IAAIC,OAAO,GAAG,QAAd,CAAA;;EAEA,IAAIJ,GAAG,CAACK,OAAJ,CAAY,GAAZ,CAAmB,GAAA,CAAC,CAAxB,EAA2B;AACvBJ,IAAAA,GAAG,GAAG,aAAN,CAAA;AACAG,IAAAA,OAAO,GAAG,QAAV,CAAA;AACH,GAAA;;EACD,IAAIJ,GAAG,CAACK,OAAJ,CAAY,GAAZ,CAAmB,GAAA,CAAC,CAAxB,EAA2B;AACvBJ,IAAAA,GAAG,GAAG,WAAN,CAAA;AACAG,IAAAA,OAAO,GAAG,KAAV,CAAA;AACH,GAAA;;EACD,IAAIJ,GAAG,CAACK,OAAJ,CAAY,GAAZ,CAAmB,GAAA,CAAC,CAAxB,EAA2B;AACvBH,IAAAA,IAAI,GAAG,cAAP,CAAA;AACAC,IAAAA,OAAO,GAAG,OAAV,CAAA;AACH,GAAA;;EACD,IAAIH,GAAG,CAACK,OAAJ,CAAY,GAAZ,CAAmB,GAAA,CAAC,CAAxB,EAA2B;AACvBH,IAAAA,IAAI,GAAG,YAAP,CAAA;AACAC,IAAAA,OAAO,GAAG,MAAV,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,oCAAAvC,CAAAA,MAAA,CAAoCoC,GAApC,EAAuC,iBAAvC,CAAuCpC,CAAAA,MAAvC,CACDsC,IADC,CACGtC,CAAAA,MADH,CACMqC,GADN,EACS,8BADT,CACSrC,CAAAA,MADT,CAEiBuC,OAFjB,EAEwB,GAFxB,CAEwBvC,CAAAA,MAFxB,CAE4BwC,OAF5B,EAEmC,UAFnC,CAAP,CAAA;AAIH,CA1BoB,CA0BlBE,CAAAA,IA1BkB,CA0Bb,IA1Ba,CAArB,CAAA;AA4BO,IAAMC,YAAY,GAAG,s4BAAA,CAiD1BT,YAjD0B,EAiDd,i8BAjDc,CAiDdlC,CAAAA,MAjDc,CAyG1B,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,GAAhD,CAAA,CAAqDmC,GAArD,CAAyD,UAAApC,MAAA,EAAM;EAAI,OAAA,+BAAA,CAAAC,MAAA,CACzCD,MADyC,EACE,qCADF,CAAA,CACEC,MADF,CACED,MADF,EAEnE,MAFmE,CAAA,CAEnEC,MAFmE,CAEnEC,YAAY,CAACF,MAAD,CAFuD,EAE/C,OAF+C,CAAA,CAAA;AAIpE,CAJC,EAIC2C,IAJD,CAIM,IAJN,CAzG0B,EA6Gf,ubA7Ge,CAAA,CA6Gf1C,MA7Ge,CA6I1BY,YAAY,GAAG,sEAAH,GAGT,EAhJuB,MAAA,CAArB,CAAA;AAmJA,IAAMgC,UAAU,GAAG,CACtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADsB,EAEtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFsB,EAGtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHsB,EAItB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJsB,CAAnB,CAAA;AAOA,IAAMC,eAAe,GAAG,MAAxB,CAAA;AACA,IAAMC,QAAQ,GAAG,SAAjB,CAAA;AACA,IAAMC,SAAS,GAAG,WAAlB,CAAA;AACA,IAAMC,OAAO,GAAG5C,IAAI,CAAC6C,GAAL,CAAS,EAAT,EAAa,EAAb,CAAhB,CAAA;AACA,IAAMC,OAAO,GAAG,CAACF,OAAjB,CAAA;AAEA,IAAMG,6BAA6B,GAA6B;AACnEC,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,CADgE;AAEnEC,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFgE;AAGnEC,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHgE;AAInEC,EAAAA,CAAC,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAJgE;AAKnEC,EAAAA,EAAE,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAL+D;AAMnEC,EAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,CAN+D;AAOnEC,EAAAA,EAAE,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAP+D;AAQnEC,EAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;AAR+D,CAAhE,CAAA;AAWA,IAAMC,iBAAiB,GAAsB;AAChDR,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD6C;AAEhDC,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAF6C;AAGhDC,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIhDC,EAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJ6C;EAKhDC,EAAE,EAAE,CAAC,CAAD,CAL4C;EAMhDC,EAAE,EAAE,CAAC,CAAD,CAN4C;EAOhDC,EAAE,EAAE,CAAC,CAAD,CAP4C;EAQhDC,EAAE,EAAE,CAAC,CAAD,CAAA;AAR4C,CAA7C,CAAA;AAUA,IAAME,mBAAmB,GAAoB;AAChDT,EAAAA,CAAC,EAAE,CAD6C;AAEhDE,EAAAA,CAAC,EAAE,GAF6C;AAGhDC,EAAAA,CAAC,EAAE,GAH6C;AAIhDF,EAAAA,CAAC,EAAE,EAJ6C;AAKhDG,EAAAA,EAAE,EAAE,GAL4C;AAMhDC,EAAAA,EAAE,EAAE,EAN4C;AAOhDC,EAAAA,EAAE,EAAE,GAP4C;AAQhDC,EAAAA,EAAE,EAAE,GAAA;AAR4C,CAA7C,CAAA;IAWMG,gBAAgB,GAAmC,CAC5D,mBAD4D,EAE5D,YAF4D,EAG5D,cAH4D,EAI5D,SAJ4D,EAK5D,WAL4D,EAM5D,UAN4D,EAO5D,SAP4D,EAQ5D,UAR4D,EAS5D,SAT4D,EAU5D,SAV4D,EAW5D,YAX4D,EAY5D,YAZ4D,EAa5D,aAb4D,EAc5D,oBAd4D,EAe5D,iBAf4D,EAgB5D,YAhB4D,EAiB5D,UAjB4D;;AChRhD,SAAAC,aAAA,CACZV,CADY,EAEZW,KAFY,EAGZC,KAHY,EAIZC,OAJY,EAKZC,SALY,EAMZC,QANY,EAMU;;;AAAtB,EAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,QAAsB,GAAA,WAAtB,CAAA;AAAsB,GAAA;;EAEtB,IAAMC,MAAM,GAAG,CAAAC,EAAA,GAAA,CAAAC,EAAA,GAAAP,KAAK,CAACQ,MAAN,CAAaJ,QAAb,CAAA,UAAA,iBAAA,SAAA,MAAwBK,KAAKR,OAAOZ,CAAC,CAACqB,WAAtC,MAAqD,IAArD,IAAqDJ,EAAA,KAAA,KAAA,CAArD,GAAqDA,EAArD,GAAqD,EAApE,CAAA;EACA,IAAMK,KAAK,GAAGN,MAAM,CAACO,aAAP,IAAwBP,MAAM,CAACM,KAA7C,CAAA;AACA,EAAA,IAAME,SAAS,GAAGF,KAAK,CAACP,QAAD,CAAL,KAAoBO,KAAK,CAACP,QAAD,CAAL,GAAkB,EAAtC,CAAlB,CAAA;AAEA,EAAA,OAAA5E,QAAA,CAAAA,QAAA,CAAA,EAAA,EACQ2E,SAAS,GAAGW,eAAe,CAACd,KAAD,EAAQK,MAAR,CAAlB,GAAoCA,MADrD,CAAA,EAEI;IAAAH,OAAO,EAAE,CAAC,CAACA,OAAX;AACAa,IAAAA,WAAW,EAAE,IADb;AAEAJ,IAAAA,KAAK,EAAEE,SAFP;IAGAD,aAAa,EAAEvB,CAAC,CAACuB,aAAAA;AAHjB,GAFJ,CAAA,CAAA;AAOH,CAAA;;AAED,IAAAI,WAAA;AAAA;AAAA,YAAA;EAUI,SAAAA,WAAA,CAAoBZ,QAApB,EAA0C;;;AAAtB,IAAA,IAAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,QAAsB,GAAA,WAAtB,CAAA;AAAsB,KAAA;;IAAtB,IAAQA,CAAAA,QAAR,GAAAA,QAAA,CAAA;IATZ,IAAKa,CAAAA,KAAL,GAAQ,CAAR,CAAA;IACA,IAAKC,CAAAA,KAAL,GAAQ,CAAR,CAAA;IACA,IAAMC,CAAAA,MAAN,GAAS,CAAT,CAAA;IACA,IAAMC,CAAAA,MAAN,GAAS,CAAT,CAAA;IACA,IAAMC,CAAAA,MAAN,GAAS,KAAT,CAAA;IACA,IAAMC,CAAAA,MAAN,GAAS,KAAT,CAAA;AACA,IAAA,IAAA,CAAAX,KAAA,GAAa;AACjBY,MAAAA,SAAS,EAAE,EAAA;KADP,CAAA;AAIJ,IAAA,IAAA,CAAKZ,KAAL,IAAUJ,EAAA,GAAA,EAAA,EACNA,EAAC,CAAAH,QAAA,CAAD,GAAY,EADN,IAAV,CAAA,CAAA;AAGH,GAAA;;AAdL,EAAA,IAAA,OAAA,GAAA,WAAA,CAAA,SAAA,CAAA;;AAgBW,EAAA,OAAA,CAAAoB,SAAA,GAAP,UAAiBC,MAAjB,EAAmCpC,CAAnC,EAAyC;IACrC,IAAKgC,CAAAA,MAAL,GAAc,KAAd,CAAA;IACA,IAAKC,CAAAA,MAAL,GAAc,KAAd,CAAA;AACA,IAAA,IAAMV,aAAa,GAAGvB,CAAC,CAACuB,aAAxB,CAAA;IAEA,IAAKD,CAAAA,KAAL,GAAaC,aAAb,CAAA;;AACA,IAAA,IAAI,CAACA,aAAa,CAAC,IAAKR,CAAAA,QAAN,CAAlB,EAAmC;AAC/BQ,MAAAA,aAAa,CAAC,IAAA,CAAKR,QAAN,CAAb,GAA+B,EAA/B,CAAA;AACH,KAAA;;AACD,IAAA,OAAA5E,QAAA,CAAAA,QAAA,CAAA,EAAA,EACO,IAAKiF,CAAAA,IAAL,CAAUgB,MAAV,EAAkBpC,CAAC,CAACqB,UAApB,CADP,CAAA,EACsC;AAClCgB,MAAAA,IAAI,EAAE,WAAA;AAD4B,KADtC,CAAA,CAAA;GATG,CAAA;;AAcA,EAAA,OAAA,CAAAC,IAAA,GAAP,UAAYF,MAAZ,EAA8Bf,UAA9B,EAA6C;IACzC,OAAO,IAAA,CAAKD,IAAL,CAAU,CACbgB,MAAM,CAAC,CAAD,CAAN,GAAY,IAAKR,CAAAA,KADJ,EAEbQ,MAAM,CAAC,CAAD,CAAN,GAAY,KAAKP,KAFJ,CAAV,EAGJR,UAHI,CAAP,CAAA;GADG,CAAA;;AAMA,EAAA,OAAA,CAAAD,IAAA,GAAP,UAAYR,KAAZ,EAA6BS,UAA7B,EAA4C;AACxC,IAAA,IAAIkB,OAAJ,CAAA;AACA,IAAA,IAAIC,OAAJ,CAAA;IACA,IAAIC,WAAW,GAAG,KAAlB,CAAA;;IAEA,IAAI,CAAC,IAAKR,CAAAA,MAAV,EAAkB;AACd,MAAA,IAAA,CAAKL,KAAL,GAAahB,KAAK,CAAC,CAAD,CAAlB,CAAA;AACA,MAAA,IAAA,CAAKiB,KAAL,GAAajB,KAAK,CAAC,CAAD,CAAlB,CAAA;AACA,MAAA,IAAA,CAAKkB,MAAL,GAAclB,KAAK,CAAC,CAAD,CAAnB,CAAA;AACA,MAAA,IAAA,CAAKmB,MAAL,GAAcnB,KAAK,CAAC,CAAD,CAAnB,CAAA;AAEA2B,MAAAA,OAAO,GAAG3B,KAAK,CAAC,CAAD,CAAf,CAAA;AACA4B,MAAAA,OAAO,GAAG5B,KAAK,CAAC,CAAD,CAAf,CAAA;MAEA,IAAKqB,CAAAA,MAAL,GAAc,IAAd,CAAA;AACH,KAVD,MAUO;MACH,IAAMS,UAAU,GAAG,IAAA,CAAKV,MAAxB,CAAA;AAEAO,MAAAA,OAAO,GAAG,IAAKX,CAAAA,KAAL,GAAahB,KAAK,CAAC,CAAD,CAA5B,CAAA;AACA4B,MAAAA,OAAO,GAAG,IAAKX,CAAAA,KAAL,GAAajB,KAAK,CAAC,CAAD,CAA5B,CAAA;;MAEA,IAAIA,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAArB,EAA0B;QACtB,IAAKoB,CAAAA,MAAL,GAAc,IAAd,CAAA;AACH,OAAA;;AAED,MAAA,IAAI,CAACU,UAAD,IAAe,IAAA,CAAKV,MAAxB,EAAgC;AAC5BS,QAAAA,WAAW,GAAG,IAAd,CAAA;AACH,OAAA;AACJ,KAAA;;IAED,IAAKb,CAAAA,KAAL,GAAaW,OAAb,CAAA;IACA,IAAKV,CAAAA,KAAL,GAAaW,OAAb,CAAA;IAEA,OAAO;AACHH,MAAAA,IAAI,EAAE,MADH;AAEHE,MAAAA,OAAO,EAAAA,OAFJ;AAGHC,MAAAA,OAAO,EAAAA,OAHJ;AAIHnB,MAAAA,UAAU,EAAAA,UAJP;AAKHoB,MAAAA,WAAW,EAAAA,WALR;MAMHT,MAAM,EAAE,KAAKA,MANV;AAOHW,MAAAA,KAAK,EAAEJ,OAAO,GAAG,IAAA,CAAKT,MAPnB;AAQHc,MAAAA,KAAK,EAAEJ,OAAO,GAAG,IAAA,CAAKT,MARnB;AASHc,MAAAA,MAAM,EAAEjC,KAAK,CAAC,CAAD,CATV;AAUHkC,MAAAA,MAAM,EAAElC,KAAK,CAAC,CAAD,CAVV;AAWHU,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAL,CAAW,IAAA,CAAKP,QAAhB,CAXJ;MAYHQ,aAAa,EAAE,KAAKD,KAZjB;AAaHI,MAAAA,WAAW,EAAE,IAbV;AAcHqB,MAAAA,WAAW,EAAE,IAAA;KAdjB,CAAA;GAjCG,CAAA;;AAkDX,EAAA,OAACpB,WAAD,CAAA;AAAC,CAtFD,EAAA;;ACLgB,SAAAqB,oBAAA,CAAqBC,QAArB,EAAyDjD,CAAzD,EAA+D;AACnE,EAAA,IAAAuC,OAAO,GAAqBvC,CAAC,CAAAuC,OAA7B;AAAA,MAASC,OAAO,GAAYxC,CAAC,CAAAwC,OAA7B;AAAA,MAAkBlB,KAAK,GAAKtB,CAAC,MAA7B,CAAA;AACF,EAAA,IAAAkB,KAKF+B,QAAQ,CAACtC,KALP;AAAA,MACFuC,kBAAkB,GAAAhC,EAAA,CAAAgC,kBADhB;AAAA,MAEFC,UAAU,GAAAjC,EAAA,CAAAiC,UAFR;AAAA,MAGFC,IAAI,GAAAlC,EAAA,CAAAkC,IAHF;AAAA,MAIFC,IAAI,UAJF,CAAA;AAME,EAAA,IAAApE,IAAI,GAAUiE,kBAAkB,CAAAjE,IAAhC;AAAA,MAAMD,GAAG,GAAKkE,kBAAkB,CAAAlE,GAAhC,CAAA;AACR,EAAA,IAAMe,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;;EACM,IAAAnC,EAAe,GAAAqC,KAAK,CAACC,wBAAwB,CAACJ,UAAD,EAAa,CAACZ,OAAO,GAAGtD,IAAX,EAAiBuD,OAAO,GAAGxD,GAA3B,CAAb,EAA8Ce,CAA9C,CAAzB,EAA2EsD,IAA3E,CAApB;AAAA,MAACG,IAAI,GAAAvC,EAAA,CAAA,CAAA,CAAL;AAAA,MAAOwC,IAAI,GAAAxC,EAAA,CAAA,CAAA,CAAX,CAAA;;EACA,IAAAyC,EAAA,GAAiBC,WAAW,CAAC;AAAErC,IAAAA,KAAK,EAAAA,KAAP;AAASqB,IAAAA,KAAK,EAAEa,IAAhB;AAAsBZ,IAAAA,KAAK,EAAEa,IAAAA;AAA7B,GAAD,CAA5B;AAAA,MAACd,KAAK,GAAAe,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQd,KAAK,GAAAc,EAAA,CAAA,CAAA,CAAb,CAAA;;AAEN,EAAA,OAAO,CAACf,KAAD,EAAQC,KAAR,CAAP,CAAA;AACH,CAAA;AAEe,SAAAgB,YAAA,CAAaX,QAAb,EAAsD/B,EAAtD,EAAoE;AAAZ,EAAA,IAAAI,KAAK,GAAAJ,EAAA,CAAAI,KAAL,CAAA;AAC9D,EAAA,IAAAL,EAUF,GAAAgC,QAAQ,CAACtC,KAVP;AAAA,MACFkD,SAAS,GAAA5C,EAAA,CAAA4C,SADP;AAAA,MAEFC,YAAY,GAAA7C,EAAA,CAAA6C,YAFV;AAAA,MAGFV,IAAI,UAHF;AAAA,MAIFnE,IAAI,GAAAgC,EAAA,CAAAhC,IAJF;AAAA,MAKFD,GAAG,GAAAiC,EAAA,CAAAjC,GALD;AAAA,MAMF+E,MAAM,YANJ;AAAA,MAOFC,YAAY,GAAA/C,EAAA,CAAA+C,YAPV;AAAA,MAQFC,YAAY,GAAAhD,EAAA,CAAAgD,YARV;AAAA,MASFC,eAAe,qBATb,CAAA;AAWN,EAAA,IAAMnE,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;EAEA9B,KAAK,CAAC8B,IAAN,GAAaA,IAAb,CAAA;EACA9B,KAAK,CAAC6C,MAAN,GAAeN,SAAf,CAAA;EACAvC,KAAK,CAAC2C,YAAN,GAAqBA,YAArB,CAAA;EACA3C,KAAK,CAACwC,YAAN,GAAqBA,YAArB,CAAA;EACAxC,KAAK,CAAC0C,YAAN,GAAqBA,YAArB,CAAA;EACA1C,KAAK,CAAC4C,eAAN,GAAwBA,eAAxB,CAAA;EACA5C,KAAK,CAAC8C,aAAN,GAAsBC,MAAM,CAACR,SAAD,EAAY9D,CAAZ,CAA5B,CAAA;EACAuB,KAAK,CAACgD,mBAAN,GAA4BD,MAAM,CAACP,YAAD,EAAe/D,CAAf,CAAlC,CAAA;AACAuB,EAAAA,KAAK,CAACiD,cAAN,GAAuBC,qBAAqB,CAACC,IAAI,CAAC,CAACxF,IAAD,EAAOD,GAAP,CAAD,EAAc+E,MAAd,CAAL,EAA4BhE,CAA5B,CAA5C,CAAA;AACAuB,EAAAA,KAAK,CAACoD,mBAAN,GAA4BC,SAAS,CAACrD,KAAK,CAACgD,mBAAP,EAA4BhD,KAAK,CAACiD,cAAlC,EAAkDxE,CAAlD,CAArC,CAAA;AACAuB,EAAAA,KAAK,CAACsD,aAAN,GAAsBD,SAAS,CAACrD,KAAK,CAAC8C,aAAP,EAAsB9C,KAAK,CAACiD,cAA5B,EAA4CxE,CAA5C,CAA/B,CAAA;AACH,CAAA;AACK,SAAU8E,qBAAV,CAAgC7E,CAAhC,EAAsC;AACxC,EAAA,OAAO8E,yBAAyB,CAAC9E,CAAC,CAACsB,KAAF,CAAQyD,eAAT,EAA0B,CAAC,EAAD,EAAK,EAAL,CAA1B,EAAoC,GAApC,EAAyC,GAAzC,CAAzB,CAAuEC,SAA9E,CAAA;AACH,CAAA;AACe,SAAAC,qBAAA,CAAsBC,KAAtB,EAAkCC,YAAlC,EAAsD;AAE9D,EAAA,IAAA7D,KAAK,GAIL4D,KAAK,CAAA5D,KAJL;AAAA,MAEsBC,aAAa,GAEnC2D,KAAK,CAAA3D,aAAL,CAAK6D,gBAJL,CAAA;AAMJ,EAAA,IAAMC,KAAK,GAAG/D,KAAK,CAACgE,cAApB,CAAA;AAGA,EAAA,IAAMC,cAAc,GAAGhE,aAAa,CAACgE,cAArC,CAAA;AACA,EAAA,IAAMC,MAAM,GAAGD,cAAc,CAACC,MAA9B,CAAA;AACA,EAAA,IAAMC,4BAA4B,GAAUlE,aAAa,CAACkE,4BAA1D,CAAA;EACA,IAAIC,SAAS,GAAG,CAAC,CAAjB,CAAA;;AAEA,EAAA,IAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd;IACA,IAAIF,YAAY,KAAK,WAArB,EAAkC;AAC9BO,MAAAA,SAAS,GAAG,CAAZ,CAAA;AACH,KAFD,MAEO,IAAIP,YAAY,KAAK,QAArB,EAA+B;AAClCO,MAAAA,SAAS,GAAGC,SAAS,CAACJ,cAAD,EAAiB,UAAAK,IAAA,EAAQ;AAAA,QAAA,OAAAA,IAAI,CAACC,KAAL,CAAW,UAAX,CAAA,CAAA;AAAuB,OAAhD,CAArB,CAAA;AACH,KAAA;;AACD,IAAA,IAAIH,SAAS,KAAK,CAAC,CAAnB,EAAsB;MAClBA,SAAS,GAAGH,cAAc,CAACC,MAA3B,CAAA;AACH,KAAA;;IACDlE,KAAK,CAACgE,cAAN,GAAuBI,SAAvB,CAAA;GAVJ,MAWO,IAAII,IAAI,CAACL,4BAAD,EAA+B,UAAAM,IAAA,EAAI;IAAI,OAAAA,IAAI,CAACV,KAAL,KAAeA,KAAf,IAAwBU,IAAI,CAACZ,YAAL,KAAsBA,YAA9C,CAAA;AAA0D,GAAjG,CAAR,EAA4G;AAC/GO,IAAAA,SAAS,GAAGL,KAAZ,CAAA;AACH,GAFM,MAEA;IACHK,SAAS,GAAGL,KAAK,GAAGI,4BAA4B,CAACO,MAA7B,CAAoC,UAAAD,IAAA,EAAI;AAAI,MAAA,OAAAA,IAAI,CAACV,KAAL,GAAaA,KAAb,CAAA;AAAkB,KAA9D,EAAgEG,MAApF,CAAA;AACH,GAAA;;AAED,EAAA,IAAMxE,MAAM,GAAGiF,oBAAoB,CAACV,cAAD,EAAiBG,SAAjB,CAAnC,CAAA;AACA,EAAA,IAAMQ,cAAc,GAAGlF,MAAM,CAACkF,cAA9B,CAAA;EACA,IAAMC,eAAe,GAAGhB,YAAY,KAAK,QAAjB,GAA4B,SAA5B,GAAwCA,YAAhE,CAAA;AAEA7D,EAAAA,KAAK,CAAC8E,mBAAN,GAA4BpF,MAAM,CAACoF,mBAAnC,CAAA;AACA9E,EAAAA,KAAK,CAAC+E,kBAAN,GAA2BrF,MAAM,CAACqF,kBAAlC,CAAA;AACA/E,EAAAA,KAAK,CAACyD,eAAN,GAAwB/D,MAAM,CAACsF,oBAA/B,CAAA;AACAhF,EAAAA,KAAK,CAACiF,gBAAN,GAAyBvF,MAAM,CAACwF,qBAAhC,CAAA;AACAlF,EAAAA,KAAK,CAACmF,cAAN,GAAuBzF,MAAM,CAAC0F,oBAA9B,CAAA;AACApF,EAAAA,KAAK,CAACqF,cAAN,GAAuB3F,MAAM,CAAC4F,mBAA9B,CAAA;AACAtF,EAAAA,KAAK,CAACuF,eAAN,GAAwB7F,MAAM,CAAC8F,oBAA/B,CAAA;AACAxF,EAAAA,KAAK,CAACyF,kBAAN,GAA2B/F,MAAM,CAACgG,iBAAlC,CAAA;;AAEA,EAAA,IAAId,cAAc,CAACf,YAAf,KAAgCgB,eAApC,EAAqD;AACjD7E,IAAAA,KAAK,CAAC+E,kBAAN,CAAyBY,MAAzB,CAAgC,CAAhC,EAAmC,CAAnC,CAAA,CAAA;IACA3F,KAAK,CAAC4F,iBAAN,GAA0B,KAA1B,CAAA;AACH,GAHD,MAGO,IAAI1B,MAAM,GAAGE,SAAb,EAAwB;IAC3BpE,KAAK,CAAC4F,iBAAN,GAA0B,IAA1B,CAAA;AAEA3F,IAAAA,aAAa,CAACkE,4BAAd,GAAiD0B,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAA1B,4BAAA,EAA8B,IAA9B,CAAA,EAA8B,CAAA;AAC3EN,MAAAA,YAAY,EAAAA,YAD+D;AAE3EE,MAAAA,KAAK,EAAEK,SAFoE;AAG3E0B,MAAAA,QAAQ,EAAE,IAAA;KAHiE,CAA9B,EAIhD,KAJgD,CAAjD,CAAA;AAKH,GAAA;AACJ,CAAA;SAEeC,uBAAuB/F,OAAYgG,OAAYC,MAAS;AACpE,EAAA,OAAO,GAAG5K,MAAH,CAAG2E,KAAK,CAAC8E,mBAAN,CAA0B/G,IAA1B,CAA+B,GAA/B,CAAH,EAAsC,GAAtC,CAAsC1C,CAAAA,MAAtC,CAA0C2E,KAAK,CAAC4F,iBAAN,GAA0BK,IAA1B,GAAiCD,KAA3E,KAAA,QAAA,CAAoFhG,KAAK,CAAC+E,kBAAN,CAAyBhH,IAAzB,CAA8B,GAA9B,CAApF,CAAP,CAAA;AACH,CAAA;AACK,SAAUmI,gBAAV,CAA2BtG,EAA3B,EAAuD;AAA1B,EAAA,IAAAI,KAAK,WAAL;AAAA,MAAOqB,KAAK,GAAAzB,EAAA,CAAAyB,KAAZ;AAAA,MAAcC,KAAK,GAAA1B,EAAA,CAAA0B,KAAnB,CAAA;;EACzB,IAAA3B,EAAA,GAAWwG,iBAAiB,CAAC;AAAEnG,IAAAA,KAAK,EAAAA,KAAP;AAASqB,IAAAA,KAAK,EAAAA,KAAd;AAAgBC,IAAAA,KAAK,EAAAA,KAAAA;AAArB,GAAD,CAA5B;AAAA,MAAC8E,EAAE,QAAH;AAAA,MAAKC,EAAE,QAAP,CADmD;AAGzD;;;AAEA,EAAA,IAAM/J,GAAG,GAAGgK,kBAAkB,CAACtG,KAAD,EAAQuG,eAAe,CAAC,CAACH,EAAD,EAAKC,EAAL,CAAD,EAAW,CAAX,CAAvB,CAA9B,CAAA;AAEA,EAAA,OAAOhD,SAAS,CAAC/G,GAAD,EAAM4G,qBAAqB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAZ,CAA3B,EAA2C,CAA3C,CAAhB,CAAA;AACH,CAAA;SACeoD,mBAAmBtG,OAAY2C,cAAwB6D,SAAiB;AAEhF,EAAA,IAAA/C,eAAe,GAKfzD,KAAK,CALUyD,eAAf;AAAA,MACA4B,cAAc,GAIdrF,KAAK,CAJSqF,cADd;AAAA,MAEAJ,gBAAgB,GAGhBjF,KAAK,CAHWiF,gBAFhB;AAAA,MAGAM,eAAe,GAEfvF,KAAK,CAAAuF,eALL;AAAA,MAIAE,kBAAkB,GAClBzF,KAAK,CAAAyF,kBALL,CAFgF;AAUpF;AACA;;EACA,IAAMgB,gBAAgB,GAChBD,OAAO,GACHE,QAAQ,CAACjB,kBAAD,EAAqB9C,YAArB,EAAmC,CAAnC,CADL,GAEH+D,QAAQ,CAAC/D,YAAD,EAAe8C,kBAAf,EAAmC,CAAnC,CAHlB,CAZoF;;EAkBpF,IAAMkB,IAAI,GAAGD,QAAQ,CAAC3D,MAAM,CAACyD,OAAO,GAAGvB,gBAAH,GAAsBxB,eAA9B,EAA+C,CAA/C,CAAP,EAA0DgD,gBAA1D,EAA4E,CAA5E,CAArB,CAlBoF;;AAqBpF,EAAA,IAAMG,iBAAiB,GAAGF,QAAQ,CAACC,IAAD,EAAO5D,MAAM,CAACyD,OAAO,GAAGjB,eAAH,GAAqBF,cAA7B,EAA6C,CAA7C,CAAb,EAA8D,CAA9D,CAAlC,CAAA;AAEA,EAAA,OAAOuB,iBAAP,CAAA;AACH,CAAA;AACK,SAAUT,iBAAV,CAA4BvG,EAA5B,EAAwD;AAA1B,EAAA,IAAAI,KAAK,WAAL;AAAA,MAAOqB,KAAK,GAAAzB,EAAA,CAAAyB,KAAZ;AAAA,MAAcC,KAAK,GAAA1B,EAAA,CAAA0B,KAAnB,CAA0B;;AAGtD,EAAA,IAAA0B,mBAAmB,GAInBhD,KAAK,oBAJL;AAAA,MACA8B,IAAI,GAGJ9B,KAAK,CAAA8B,IAJL;AAAA,MAEAsB,mBAAmB,GAEnBpD,KAAK,CAFcoD,mBAFnB;AAAA,MAGAH,cAAc,GACdjD,KAAK,eAJL,CAAA;EAKJ,IAAMvB,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAR0D;AAW1D;;EACA,OAAOE,KAAK,CACRqB,SAAS,CACLL,mBADK,EAELG,IAAI,CAACF,cAAD,EAAiB,CAAC5B,KAAD,EAAQC,KAAR,CAAjB,CAFC,EAGL7C,CAHK,CADD,EAMR2E,mBANQ,CAAZ,CAAA;AAQH,CAAA;AACe,SAAAf,WAAA,CAAYzC,EAAZ,EAA0CiH,QAA1C,EAA4D;AAA9C,EAAA,IAAA7G,KAAK,WAAL;AAAA,MAAOqB,KAAK,GAAAzB,EAAA,CAAAyB,KAAZ;AAAA,MAAcC,KAAK,GAAA1B,EAAA,CAAA0B,KAAnB,CAAA;AAEtB,EAAA,IAAA0B,mBAAmB,GAMnBhD,KAAK,CAAAgD,mBANL;AAAA,MACAF,aAAa,GAKb9C,KAAK,CALQ8C,aADb;AAAA,MAEAhB,IAAI,GAIJ9B,KAAK,CAAA8B,IANL;AAAA,MAGAsB,mBAAmB,GAGnBpD,KAAK,CAHcoD,mBAHnB;AAAA,MAIAE,aAAa,GAEbtD,KAAK,CAAAsD,aANL;AAAA,MAKAL,cAAc,GACdjD,KAAK,eANL,CAAA;AAOJ,EAAA,IAAMvB,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AAEA,EAAA,OAAOE,KAAK,CACRqB,SAAS,CACLwD,QAAQ,GAAG7D,mBAAH,GAAyBF,aAD5B,EAELK,IAAI,CAACF,cAAD,EAAiB,CAAC5B,KAAD,EAAQC,KAAR,CAAjB,CAFC,EAGL7C,CAHK,CADD,EAMRoI,QAAQ,GAAGzD,mBAAH,GAAyBE,aANzB,CAAZ,CAAA;AAQH,CAAA;AACe,SAAAwD,kBAAA,CAAmBlH,EAAnB,EAAiDiH,QAAjD,EAAmE;AAA9C,EAAA,IAAA7G,KAAK,WAAL;AAAA,MAAOqB,KAAK,GAAAzB,EAAA,CAAAyB,KAAZ;AAAA,MAAcC,KAAK,GAAA1B,EAAA,CAAA0B,KAAnB,CAAA;AAE7B,EAAA,IAAAkB,YAAY,GAMZxC,KAAK,CAAAwC,YANL;AAAA,MACAK,MAAM,GAKN7C,KAAK,CALC6C,MADN;AAAA,MAEAf,IAAI,GAIJ9B,KAAK,CAAA8B,IANL;AAAA,MAGAsB,mBAAmB,GAGnBpD,KAAK,CAHcoD,mBAHnB;AAAA,MAIAE,aAAa,GAEbtD,KAAK,CAAAsD,aANL;AAAA,MAKAL,cAAc,GACdjD,KAAK,eANL,CAAA;AAOJ,EAAA,IAAMvB,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AAEA,EAAA,OAAOE,KAAK,CACRqB,SAAS,CACLwD,QAAQ,GAAGrE,YAAH,GAAkBK,MADrB,EAELM,IAAI,CAAC0D,QAAQ,GAAGzD,mBAAH,GAAyBE,aAAlC,EAAiD,CAACjC,KAAD,EAAQC,KAAR,CAAjD,CAFC,EAGL7C,CAHK,CADD,EAMRwE,cANQ,CAAZ,CAAA;AAQH,CAAA;AAEe,SAAA8D,wBAAA,CACZnE,eADY,EAEZoE,KAFY,EAGZC,MAHY,EAIZC,SAJY,EAKZC,UALY,EAMZC,UANY,EAMiB;AAF7B,EAAA,IAAAF,SAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,SAAyB,GAAAF,KAAzB,CAAA;AAAyB,GAAA;;AACzB,EAAA,IAAAG,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,UAA2B,GAAAF,MAA3B,CAAA;AAA2B,GAAA;;AAC3B,EAAA,IAAAG,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,UAAA,GAAA,CAAwB,CAAxB,EAA2B,CAA3B,CAAA,CAAA;AAA6B,GAAA;;EAG7B,IAAI,CAACxE,eAAL,EAAsB;AAClB,IAAA,OAAOwE,UAAP,CAAA;AACH,GAAA;;EACD,OAAOxE,eAAe,CAACpF,GAAhB,CAAoB,UAAC6J,GAAD,EAAMC,CAAN,EAAO;AACxB,IAAA,IAAA1H,EAAA,GAAkB2H,SAAS,CAACF,GAAD,CAA3B;AAAA,QAAErB,KAAK,GAAApG,EAAA,CAAAoG,KAAP;AAAA,QAASwB,IAAI,GAAA5H,EAAA,CAAA4H,IAAb,CAAA;;AAEN,IAAA,IAAMC,QAAQ,GAAIH,CAAC,GAAGH,UAAH,GAAgBD,SAAnC,CAAA;AACA,IAAA,IAAMQ,IAAI,GAAIJ,CAAC,GAAGL,MAAH,GAAYD,KAA3B,CAAA;;IACA,IAAIK,GAAG,KAAK,GAAR,IAAeM,KAAK,CAAC3B,KAAD,CAAxB,EAAiC;AAC7B;MAEA,IAAM4B,YAAY,GAAGH,QAAQ,GAAGL,UAAU,CAACE,CAAD,CAAV,GAAgBG,QAAnB,GAA8B,CAA3D,CAAA;MAEA,OAAOC,IAAI,GAAGE,YAAd,CAAA;AACH,KAND,MAMO,IAAIJ,IAAI,KAAK,GAAb,EAAkB;AACrB,MAAA,OAAOxB,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO0B,IAAI,GAAG1B,KAAP,GAAe,GAAtB,CAAA;AACH,GAfM,CAAP,CAAA;AAgBH,CAAA;AACK,SAAU6B,wBAAV,CAAmCnE,SAAnC,EAAsD;EACxD,IAAMoE,OAAO,GAAa,EAA1B,CAAA;;AAEA,EAAA,IAAIpE,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;AACnB,IAAA,IAAIA,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;MACnBoE,OAAO,CAACC,IAAR,CAAa,CAAb,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,IAAIrE,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;MACnBoE,OAAO,CAACC,IAAR,CAAa,CAAb,CAAA,CAAA;AACH,KAAA;AACJ,GAAA;;AACD,EAAA,IAAIrE,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;AACnB,IAAA,IAAIA,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;MACnBoE,OAAO,CAACC,IAAR,CAAa,CAAb,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,IAAIrE,SAAS,CAAC,CAAD,CAAT,IAAgB,CAApB,EAAuB;MACnBoE,OAAO,CAACC,IAAR,CAAa,CAAb,CAAA,CAAA;AACH,KAAA;AACJ,GAAA;;AACD,EAAA,OAAOD,OAAP,CAAA;AACH,CAAA;AACe,SAAAE,mBAAA,CACZC,KADY,EAEZvE,SAFY,EAEO;AAEnB;;;;AAIE;EACF,OAAOmE,wBAAwB,CAACnE,SAAD,CAAxB,CAAoClG,GAApC,CAAwC,UAAAuG,KAAA,EAAS;IAAA,OAAAkE,KAAK,CAAClE,KAAD,CAAL,CAAA;AAAY,GAA7D,CAAP,CAAA;AACH,CAAA;AACe,SAAAmE,iBAAA,CACZD,KADY,EAEZvE,SAFY,EAEO;EAEnB,IAAMyE,MAAM,GAAG,CAACzE,SAAS,CAAC,CAAD,CAAT,GAAe,CAAhB,IAAqB,CAApC,CAAA;EACA,IAAM0E,MAAM,GAAG,CAAC1E,SAAS,CAAC,CAAD,CAAT,GAAe,CAAhB,IAAqB,CAApC,CAAA;EAEA,IAAMhG,GAAG,GAAG,CACR2K,GAAG,CAACJ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAcA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAd,EAA2BE,MAA3B,EAAmC,CAAIA,GAAAA,MAAvC,CADK,EAERE,GAAG,CAACJ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAcA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAd,EAA2BE,MAA3B,EAAmC,CAAA,GAAIA,MAAvC,CAFK,CAAZ,CAAA;EAIA,IAAMG,MAAM,GAAG,CACXD,GAAG,CAACJ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAcA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAd,EAA2BE,MAA3B,EAAmC,CAAIA,GAAAA,MAAvC,CADQ,EAEXE,GAAG,CAACJ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAcA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAd,EAA2BE,MAA3B,EAAmC,CAAA,GAAIA,MAAvC,CAFQ,CAAf,CAAA;AAIA,EAAA,OAAO,CACHE,GAAG,CAAC3K,GAAG,CAAC,CAAD,CAAJ,EAAS4K,MAAM,CAAC,CAAD,CAAf,EAAoBF,MAApB,EAA4B,IAAIA,MAAhC,CADA,EAEHC,GAAG,CAAC3K,GAAG,CAAC,CAAD,CAAJ,EAAS4K,MAAM,CAAC,CAAD,CAAf,EAAoBF,MAApB,EAA4B,CAAIA,GAAAA,MAAhC,CAFA,CAAP,CAAA;AAIH,CAAA;;AAED,SAASG,OAAT,CACIC,QADJ,EAEI3F,MAFJ,EAGImE,KAHJ,EAIIC,MAJJ,EAKIxI,CALJ,EAMIgK,cANJ,EAM4B;EAExB,IAAMR,KAAK,GAAGS,cAAc,CAAC7F,MAAD,EAASmE,KAAT,EAAgBC,MAAhB,EAAwBxI,CAAxB,CAA5B,CAAA;AACA,EAAA,IAAMkK,QAAQ,GAAGT,iBAAiB,CAACD,KAAD,EAAQQ,cAAR,CAAlC,CAAA;EACA,IAAMpH,KAAK,GAAGmH,QAAQ,CAAC,CAAD,CAAR,GAAcG,QAAQ,CAAC,CAAD,CAApC,CAAA;EACA,IAAMrH,KAAK,GAAGkH,QAAQ,CAAC,CAAD,CAAR,GAAcG,QAAQ,CAAC,CAAD,CAApC,CAAA;AAEA,EAAA,OAAO,CAACtH,KAAD,EAAQC,KAAR,CAAP,CAAA;AACH,CAAA;;AACK,SAAUsH,aAAV,CACFlG,YADE,EAEFC,YAFE,EAGFF,MAHE,EAIFhE,CAJE,EAIO;AAET,EAAA,OAAOiI,QAAQ,CACXhE,YADW,EAEXmG,iBAAiB,CAAClG,YAAD,EAAelE,CAAf,EAAkBgE,MAAlB,CAFN,EAGXhE,CAHW,CAAf,CAAA;AAKH,CAAA;SACeqK,uBACZzJ,OACAW,OACA+I,WAAiB;AAGb,EAAA,IAAAnG,eAAe,GAGfvD,KAAK,CAAAuD,eAHL;AAAA,MACAF,YAAY,GAEZrD,KAAK,CAAAqD,YAHL;AAAA,MAEAZ,IAAI,GACJzC,KAAK,KAHL,CAAA;AAKA,EAAA,IAAAoE,eAAe,GAEfzD,KAAK,CAAAyD,eAFL;AAAA,MACA4B,cAAc,GACdrF,KAAK,CAAAqF,cAFL,CAAA;AAGJ,EAAA,IAAM5G,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AACA,EAAA,IAAMkH,eAAe,GAAGC,QAAQ,CAAC,CAACF,SAAD,CAAD,CAAhC,CAAA;AAEA,EAAA,OAAOH,aAAa,CAChBlG,YADgB,EAEhBwG,gBAAgB,CAACxC,QAAQ,CAACA,QAAQ,CAACjD,eAAD,EAAkBuF,eAAlB,EAA0C,CAA1C,CAAT,EAAuD3D,cAAvD,EAAuE,CAAvE,CAAT,EAAoF,CAApF,EAAuF5G,CAAvF,CAFA,EAGhBmE,eAHgB,EAIhBnE,CAJgB,CAApB,CAAA;AAMH,CAAA;AACe,SAAA0K,WAAA,CACZ9J,KADY,EAEZlE,KAFY,EAEG;AAGX,EAAA,IAAAyH,eAAe,GAIfvD,KAAK,gBAJL;AAAA,MACAqD,YAAY,GAGZrD,KAAK,CAAAqD,YAJL;AAAA,MAEAZ,IAAI,GAEJzC,KAAK,CAFDyC,IAFJ;AAAA,MAGAa,YAAY,GACZtD,KAAK,aAJL,CAAA;AAKJ,EAAA,IAAMZ,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;EAEA,OAAO8G,aAAa,CAChBlG,YADgB,EAEhBgE,QAAQ,CAAC/D,YAAD,EAAeyG,iBAAiB,CAACjO,KAAD,EAAQsD,CAAR,CAAhC,EAA4CA,CAA5C,CAFQ,EAGhBmE,eAHgB,EAIhBnE,CAJgB,CAApB,CAAA;AAMH,CAAA;AAEK,SAAU4K,uBAAV,CAAkC3K,CAAlC,EAAwC;AAC1C,EAAA,IAAMuB,aAAa,GAAGqJ,wBAAwB,CAAC5K,CAAD,CAA9C,CAAA;EACA,OAAO;AACH6K,IAAAA,YAAY,EAAE,UAACR,SAAD,EAA+BhF,KAA/B,EAAyC;AAAV,MAAA,IAAAA,KAAA,KAAA,KAAA,CAAA,EAAA;QAAAA,SAAS,CAAT,CAAA;AAAU,OAAA;;AACnD9D,MAAAA,aAAa,CAACuJ,eAAd,GAAgCC,OAAO,CAACV,SAAD,CAAP,GAAqBA,SAArB,GAAiCW,UAAU,CAACX,SAAD,CAA3E,CAAA;AACAY,MAAAA,iBAAiB,CAACjL,CAAD,EAAIqF,KAAJ,CAAjB,CAAA;KAHD;IAKH4F,iBAAiB,EAAE,UAAC5F,KAAD,EAAc;AAC7B4F,MAAAA,iBAAiB,CAACjL,CAAD,EAAIqF,KAAJ,CAAjB,CAAA;AACH,KAAA;GAPL,CAAA;AASH,CAAA;AACe,SAAA6F,wBAAA,CAAyBlL,CAAzB,EAAiCmL,QAAjC,EAAiD;AAC7D,EAAA,IAAM5J,aAAa,GAAGqJ,wBAAwB,CAAC5K,CAAD,CAA9C,CAAA;AACA,EAAA,IAAM8K,eAAe,GAAGvJ,aAAa,CAACuJ,eAAtC,CAAA;EAEAG,iBAAiB,CAACjL,CAAD,EAAI2F,SAAS,CAASmF,eAAT,EAA0B,UAAAM,IAAA,EAAI;AAAI,IAAA,OAAAA,IAAI,CAAChM,OAAL,CAAa,EAAGzC,CAAAA,MAAH,CAAGwO,QAAH,EAAc,GAAd,CAAb,CAAA,KAAiC,CAAjC,CAAA;AAAkC,GAApE,CAAb,CAAjB,CAAA;AACH,CAAA;AACe,SAAAF,iBAAA,CAAkBjL,CAAlB,EAA0BqF,KAA1B,EAAuC;AACnD,EAAA,IAAM9D,aAAa,GAAGqJ,wBAAwB,CAAC5K,CAAD,CAA9C,CAAA;AACA,EAAA,IAAMsB,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;EAEAA,KAAK,CAACgE,cAAN,GAAuBD,KAAvB,CAAA;;AACA,EAAA,IAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,IAAA,OAAA;AACH,GAAA;;AACD,EAAA,IAAMgF,SAAS,GAAG9I,aAAa,CAACuJ,eAAd,CAA8BzF,KAA9B,CAAlB,CAAA;;EAEA,IAAI,CAACgF,SAAL,EAAgB;AACZ,IAAA,OAAA;AACH,GAAA;;AACD,EAAA,IAAMtE,IAAI,GAAGsF,KAAK,CAAC,CAAChB,SAAD,CAAD,CAAlB,CAAA;EAEA/I,KAAK,CAACgK,UAAN,GAAmBvF,IAAI,CAAC,CAAD,CAAJ,CAAQwF,aAA3B,CAAA;AACH,CAAA;AACe,SAAAC,qBAAA,CACZxL,CADY,EAEZqK,SAFY,EAEK;AAEjB,EAAA,IAAM9I,aAAa,GAAGqJ,wBAAwB,CAAC5K,CAAD,CAA9C,CAAA;EAEAuB,aAAa,CAACgE,cAAd,GAA+ByF,UAAU,CAACX,SAAD,CAAzC,CAJiB;AAMpB,CAAA;AACK,SAAUO,wBAAV,CAAmC5K,CAAnC,EAAyC;AAC3C,EAAA,OAAOA,CAAC,CAACuB,aAAF,CAAgB6D,gBAAvB,CAAA;AACH,CAAA;AACK,SAAUqG,iBAAV,CAA4BzL,CAA5B,EAAkC;AAG5B,EAAA,IAAkBuB,aAAa,GAEnCvB,CAAC,CAAAuB,aAAD,CAAC6D,gBAFG,CAAA;EAIR,OAAO7D,aAAa,CAACgE,cAArB,CAAA;AACH,CAAA;AACK,SAAUmG,oBAAV,CAA+B1L,CAA/B,EAAqC;EACvC,OAAOyL,iBAAiB,CAACzL,CAAD,CAAjB,CAAqBX,IAArB,CAA0B,GAA1B,CAAP,CAAA;AACH,CAAA;AAEK,SAAUsM,YAAV,CAAuB3L,CAAvB,EAA6B;AAC/B,EAAA,OAAO4K,wBAAwB,CAAC5K,CAAD,CAAxB,CAA4B4L,SAAnC,CAAA;AACH,CAAA;AAEK,SAAUC,kBAAV,CACF5I,QADE,EAEF6I,aAFE,EAGFlL,KAHE,EAIFC,OAJE,EAKFb,CALE,EAKI;AAENwL,EAAAA,qBAAqB,CAACxL,CAAD,EAAI8L,aAAJ,CAArB,CAAA;EAEA,IAAMxJ,IAAI,GAAGyJ,SAAS,CAACzJ,IAAV,CACTW,QADS,EAETvC,aAAa,CAACV,CAAD,EAAIiD,QAAQ,CAACtC,KAAb,EAAoBC,KAApB,EAA2BC,OAA3B,EAAoC,KAApC,CAFJ,CAAb,CAAA;EAIA,IAAM8F,cAAc,GAAGrE,IAAI,GAAGA,IAAI,CAAC+H,SAAR,GAAoByB,aAA/C,CAAA;EACA,OACI3P,QAAA,CAAAA,QAAA,CAAA;AAAAkO,IAAAA,SAAS,EAAEyB,aAAX;AACAxJ,IAAAA,IAAI,EAAEA,IAAAA;GADN,EAEG0J,aAAa,CAAC;AACb3B,IAAAA,SAAS,EAAE1D,cAAAA;AADE,GAAD,EAEb3G,CAFa,CAFhB,CAAA,EAKA;AAAA2G,IAAAA,cAAc;AAAd,GALA,CADJ,CAAA;AAQH,CAAA;AACK,SAAUsF,gBAAV,CACFhJ,QADE,EAEFoH,SAFE,EAGFN,cAHE,EAIFmC,aAJE,EAKF5K,KALE,EAKQ;AAEV,EAAA,IAAMX,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,EAAA,IAAA1B,IAAI,GAEJ0B,KAAK,CAAA1B,IAFL;AAAA,MACAD,GAAG,GACH2B,KAAK,CAAA3B,GAFL,CAAA;AAIJ,EAAA,IAAMmN,SAAS,GAAGlJ,QAAQ,CAAC5G,KAAT,CAAe8P,SAAjC,CAAA;EACA,IAAMC,UAAU,GAAGhC,sBAAsB,CAACnH,QAAQ,CAACtC,KAAV,EAAiBW,KAAjB,EAAwB+I,SAAxB,CAAzC,CAAA;AACA,EAAA,IAAMgC,SAAS,GAAGF,SAAS,GAAGlN,IAAH,GAAU,CAArC,CAAA;AACA,EAAA,IAAMqN,QAAQ,GAAGH,SAAS,GAAGnN,GAAH,GAAS,CAAnC,CAAA;EACA,IAAMuN,iBAAiB,GAAGC,kBAAkB,CAACvJ,QAAD,EAAW8G,cAAX,EAA2BqC,UAA3B,CAA5C,CAAA;AACA,EAAA,IAAM7E,IAAI,GAAGjE,KAAK,CAAC4I,aAAD,EAAgBK,iBAAhB,CAAlB,CAAA;EACA,OAAOjJ,KAAK,CAACiE,IAAD,EAAO,CAAC8E,SAAD,EAAYC,QAAZ,CAAP,CAAZ,CAAA;AACH,CAAA;AACK,SAAUG,YAAV,CACFxJ,QADE,EAEFyJ,SAFE,EAGF3C,cAHE,EAIFmC,aAJE,EAKF5K,KALE,EAKQ;EAEV,IAAMiG,IAAI,GAAG0E,gBAAgB,CACzBhJ,QADyB,EAEzB,QAAAtG,CAAAA,MAAA,CAAS+P,SAAS,CAACrN,IAAV,CAAe,IAAf,CAAT,KAAA,CAFyB,EAGzB0K,cAHyB,EAIzBmC,aAJyB,EAKzB5K,KALyB,CAA7B,CAAA;AAQA,EAAA,OAAOiG,IAAP,CAAA;AACH,CAAA;SAYeoF,kBACZhE,KACAL,OACAC,QAAc;EAEd,OAAO,CACH,CAAC,CAAD,GAAKI,GAAG,CAAC,CAAD,CAAH,IAAUL,KAAK,GAAG,CAAlB,CADF,EAEH,CAAC,CAAD,GAAKK,GAAG,CAAC,CAAD,CAAH,IAAUJ,MAAM,GAAG,CAAnB,CAFF,CAAP,CAAA;AAIH,CAAA;SACeiE,mBACZvJ,UAAoC+B,WACpCoH,YAA+C;AAA/C,EAAA,IAAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,UAAuB,GAAAnJ,QAAQ,CAACtC,KAAT,CAAekD,SAAtC,CAAA;AAA+C,GAAA;;AAEzC,EAAA,IAAA3C,EAIF,GAAA+B,QAAQ,CAACtC,KAJP;AAAA,MACF2H,KAAK,GAAApH,EAAA,CAAAoH,KADH;AAAA,MAEFC,MAAM,GAAArH,EAAA,CAAAqH,MAFJ;AAAA,MAGFnF,IAAI,UAHF,CAAA;AAKN,EAAA,IAAMrD,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;EACA,IAAMwJ,eAAe,GAAG,CACpBtE,KAAK,GAAG,CAAR,IAAa,CAAA,GAAItD,SAAS,CAAC,CAAD,CAA1B,CADoB,EAEpBuD,MAAM,GAAG,CAAT,IAAc,CAAA,GAAIvD,SAAS,CAAC,CAAD,CAA3B,CAFoB,CAAxB,CAAA;AAIA,EAAA,OAAO6H,iBAAiB,CAACT,UAAD,EAAaQ,eAAb,EAA8B7M,CAA9B,CAAxB,CAAA;AACH,CAAA;SACe+M,cACZ7J,UACA8J,YACAzL,OAAU;AAEV,EAAA,IAAMyI,cAAc,GAAGzI,KAAK,CAACyI,cAA7B,CAAA;AACA,EAAA,IAAMmC,aAAa,GAAG5K,KAAK,CAAC4K,aAA5B,CAAA;AAEA,EAAA,OAAOD,gBAAgB,CACnBhJ,QADmB,EAEnB,SAAA,OAAA,CAAU8J,UAAV,EAAoB,MAApB,CAFmB,EAGnBhD,cAHmB,EAInBmC,aAJmB,EAKnB5K,KALmB,CAAvB,CAAA;AAOH,CAAA;AACe,SAAA0L,aAAA,CACZ/J,QADY,EAEZqF,KAFY,EAGZC,MAHY,EAIZ2D,aAJY,EAKZhI,eALY,EAMZ5C,KANY,EAMF;AAGN,EAAA,IAAA6K,SAAS,GACTlJ,QAAQ,CAAC5G,KAAT,UADA,CAAA;AAEJ,EAAA,IAAMsE,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,EAAA,IAAiB+H,UAAU,GAO3B/H,KAAK,CAAAuD,eAPL;AAAA,MACAF,YAAY,GAMZrD,KAAK,CAAAqD,YAPL;AAAA,MAEAZ,IAAI,GAKJzC,KAAK,CAAAyC,IAPL;AAAA,MAGOoF,SAAS,GAIhB7H,KAAK,CAAA2H,KAPL;AAAA,MAIQG,UAAU,GAGlB9H,KAAK,OAPL;AAAA,MAKA1B,IAAI,GAEJ0B,KAAK,KAPL;AAAA,MAMA3B,GAAG,GACH2B,KAAK,IAPL,CAAA;AAQJ,EAAA,IAAMoJ,cAAc,GAAGzI,KAAK,CAACyI,cAA7B,CAAA;EACA,IAAM9F,YAAY,GAAG3C,KAAK,CAACyG,gBAAN,IAA0BpH,KAAK,CAACsD,YAArD,CAAA;AACA,EAAA,IAAMlE,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AACA,EAAA,IAAM6J,UAAU,GAAG5E,wBAAwB,CACvCnE,eADuC,EAEvCoE,KAFuC,EAGvCC,MAHuC,EAIvCC,SAJuC,EAKvCC,UALuC,EAMvCC,UANuC,CAA3C,CAAA;AAQA,EAAA,IAAM2D,SAAS,GAAGF,SAAS,GAAGlN,IAAH,GAAU,CAArC,CAAA;AACA,EAAA,IAAMqN,QAAQ,GAAGH,SAAS,GAAGnN,GAAH,GAAS,CAAnC,CAAA;EACA,IAAMoN,UAAU,GAAGlC,aAAa,CAAClG,YAAD,EAAeC,YAAf,EAA6BgJ,UAA7B,EAAyClN,CAAzC,CAAhC,CAAA;AACA,EAAA,IAAMwH,IAAI,GAAGsC,OAAO,CAACqC,aAAD,EAAgBE,UAAhB,EAA4B9D,KAA5B,EAAmCC,MAAnC,EAA2CxI,CAA3C,EAA8CgK,cAA9C,CAApB,CAAA;EAEA,OAAOzG,KAAK,CAACiE,IAAD,EAAO,CAAC8E,SAAD,EAAYC,QAAZ,CAAP,CAAZ,CAAA;AACH,CAAA;AACe,SAAAY,mBAAA,CACZjK,QADY,EAEZ+B,SAFY,EAEO;EAEnB,OAAOwE,iBAAiB,CAAC2D,uBAAuB,CAAClK,QAAQ,CAACtC,KAAV,CAAxB,EAA0CqE,SAA1C,CAAxB,CAAA;AACH;;ACplBe,SAAAoI,YAAA,CAAanK,QAAb,EAAiDlC,QAAjD,EAAiE;AAC7E,EAAA,IAAMsM,WAAW,GAAGpK,QAAQ,CAACoK,WAA7B,CAAA;AACA,EAAA,IAAMC,YAAY,GAAGrK,QAAQ,CAACqK,YAA9B,CAAA;AACA,EAAA,IAAIC,IAAJ,CAAA;;AAEA,EAAA,IAAIF,WAAW,SAAX,IAAAA,WAAW,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAAA,WAAW,CAAEpL,MAAb,EAAJ,EAA2B;AACvBsL,IAAAA,IAAI,GAAGF,WAAW,CAACG,YAAZ,EAAA,CAA2BzM,QAA3B,CAAP,CAAA;AACH,GAAA;;EAED,IAAI,CAACwM,IAAD,KAASD,YAAY,KAAZ,IAAA,IAAAA,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,YAAY,CAAErL,MAAd,EAAT,CAAJ,EAAqC;AACjCsL,IAAAA,IAAI,GAAGD,YAAY,CAACE,YAAb,EAAA,CAA4BzM,QAA5B,CAAP,CAAA;AACH,GAAA;;EAED,OAAOwM,IAAI,IAAI,EAAf,CAAA;AACH;;ACDK,SAAUE,aAAV,CAAwBC,aAAxB,EAA+D;AACjE,EAAA,IAAIA,aAAa,IAAIA,aAAa,CAACC,WAAnC,EAAgD;AAC5C,IAAA,IAAMC,QAAQ,GAAGF,aAAa,CAACC,WAAd,EAAjB,CAAA;;AAEA,IAAA,IAAIC,QAAQ,CAACC,QAAT,KAAsB,EAA1B,EAA8B;AAC1B,MAAA,OAAOD,QAAP,CAAA;AACH,KAAA;AACJ,GAAA;;AACD,EAAA,OAAA;AACH,CAAA;SAYeE,mBACZC,QACAC,WACAC,gBAAwB;EAExB,IAAIC,EAAE,GAAoCH,MAA1C,CAAA;EACA,IAAMI,QAAQ,GAAiB,EAA/B,CAAA;EACA,IAAMC,eAAe,GAAGC,QAAQ,CAACD,eAAT,IAA4BC,QAAQ,CAACC,IAA7D,CAAA;EACA,IAAIC,UAAU,GAAG,CAACN,cAAD,IAAmBF,MAAM,KAAKC,SAA9B,IAA2CD,MAAM,KAAKK,eAAvE,CAAA;EACA,IAAII,KAAK,GAAGD,UAAZ,CAAA;EACA,IAAInL,IAAI,GAAG,KAAX,CAAA;EACA,IAAIrD,CAAC,GAAG,CAAR,CAAA;AACA,EAAA,IAAImE,eAAJ,CAAA;AACA,EAAA,IAAIuK,qBAAJ,CAAA;AACA,EAAA,IAAIxK,YAAJ,CAAA;EAEA,IAAIyK,QAAQ,GAAG,KAAf,CAAA;EACA,IAAIC,eAAe,GAAGC,aAAa,CAACZ,SAAD,EAAYA,SAAZ,EAAuB,IAAvB,CAAb,CAA0Ca,YAAhE,CAAA;EACA,IAAIC,IAAI,GAAG,CAAX,CAAA;;AAEA,EAAA,OAAOZ,EAAE,IAAI,CAACM,KAAd,EAAqB;AACjBA,IAAAA,KAAK,GAAGD,UAAR,CAAA;AACA,IAAA,IAAMQ,QAAQ,GAAGC,cAAc,CAACd,EAAD,CAA/B,CAAA;AACA,IAAA,IAAMe,QAAQ,GAAGF,QAAQ,CAAC,UAAD,CAAzB,CAAA;AACA,IAAA,IAAMtS,KAAK,GAAGsS,QAAQ,CAAC,OAAD,CAAtB,CAAA;AACA,IAAA,IAAM1E,SAAS,GAAG6E,mBAAmB,CAAChB,EAAD,CAArC,CAAA;AACA,IAAA,IAAMiB,OAAO,GAAGF,QAAQ,KAAK,OAA7B,CAAA;IACA,IAAI9K,MAAM,GAAaiL,kBAAkB,CAACC,kBAAkB,CAAChF,SAAD,CAAnB,CAAzC,CAAA;IACA,IAAIwE,YAAY,SAAhB,CAAA;IACA,IAAIS,WAAW,GAAG,KAAlB,CAAA;IACA,IAAIC,QAAQ,GAAG,KAAf,CAAA;IACA,IAAIC,gBAAgB,GAAG,CAAvB,CAAA;IACA,IAAIC,eAAe,GAAG,CAAtB,CAAA;IACA,IAAIC,eAAe,GAAG,CAAtB,CAAA;IACA,IAAIC,cAAc,GAAG,CAArB,CAAA;AACA,IAAA,IAAIC,SAAS,GAGT;AACAC,MAAAA,YAAY,EAAE,KADd;AAEAC,MAAAA,cAAc,EAAE,IAAA;KALpB,CAAA;;AAQA,IAAA,IAAIX,OAAJ,EAAa;AACTT,MAAAA,QAAQ,GAAG,IAAX,CAAA;AACAkB,MAAAA,SAAS,GAAGG,oBAAoB,CAAC7B,EAAD,CAAhC,CAAA;MACAS,eAAe,GAAGiB,SAAS,CAACE,cAA5B,CAAA;AACH,KA3BgB;;;AA8BjB,IAAA,IAAMtK,MAAM,GAAGrB,MAAM,CAACqB,MAAtB,CAAA;;AAEA,IAAA,IAAI,CAACpC,IAAD,IAASoC,MAAM,KAAK,EAAxB,EAA4B;AACxBpC,MAAAA,IAAI,GAAG,IAAP,CAAA;AACArD,MAAAA,CAAC,GAAG,CAAJ,CAAA;MAEAiQ,iBAAiB,CAAC7B,QAAD,CAAjB,CAAA;;AACA,MAAA,IAAIlK,YAAJ,EAAkB;QACdA,YAAY,GAAGuG,gBAAgB,CAACvG,YAAD,EAAe,CAAf,EAAkB,CAAlB,CAA/B,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,IAAIb,IAAI,IAAIoC,MAAM,KAAK,CAAvB,EAA0B;MACtBrB,MAAM,GAAGqG,gBAAgB,CAACrG,MAAD,EAAS,CAAT,EAAY,CAAZ,CAAzB,CAAA;AACH,KAAA;;AACK,IAAA,IAAAjD,EAAA,GAOF+O,gBAAgB,CAAC/B,EAAD,EAAKH,MAAL,CAPd;AAAA,QACFmC,OAAO,GAAAhP,EAAA,CAAAgP,OADL;AAAA,QAEFC,SAAS,eAFP;AAAA,QAGFC,KAAK,GAAAlP,EAAA,CAAAkP,KAHH;AAAA,QAIFrM,MAAM,GAAA7C,EAAA,CAAA6C,MAJJ;AAAA,QAKFsM,YAAY,GAAAnP,EAAA,CAAAmP,YALV;AAAA,QAMMC,SAAS,GAAApP,EAAA,CAAAqP,MANf,CAAA;;AASF,IAAA,IAAAC,UAAU,GAEVF,SAAS,CAAA,CAAA,CAFT;AAAA,QACAG,SAAS,GACTH,SAAS,CAAA,CAAA,CAFT,CAAA;;AAIJ,IAAA,IAAIJ,OAAO,KAAK,KAAZ,IAAqBjM,YAAzB,EAAuC;AACnC;MACAkK,QAAQ,CAAC9E,IAAT,CAAc;AACVhH,QAAAA,IAAI,EAAE,QADI;AAEV0L,QAAAA,MAAM,EAAEG,EAFE;AAGV/J,QAAAA,MAAM,EAAEuM,YAAY,CAACxC,EAAD,EAAsBnO,CAAtB,CAAA;OAHxB,CAAA,CAAA;MAKAoO,QAAQ,CAAC9E,IAAT,CAAc;AACVhH,QAAAA,IAAI,EAAE,QADI;AAEV0L,QAAAA,MAAM,EAAEG,EAFE;QAGV/J,MAAM,EAAEwM,oBAAoB,CAAC5Q,CAAD,CAAA;OAHhC,CAAA,CAAA;AAKH,KAAA;;IAGD,IAAM6Q,UAAU,GAAG7S,UAAU,CAACgR,QAAQ,CAAC,MAAD,CAAT,CAAV,IAAgC,CAAnD,CAAA;;AAEA,IAAA,IAAII,OAAJ,EAAa;MACTN,YAAY,GAAGe,SAAS,CAACE,cAAzB,CAAA;AACAR,MAAAA,WAAW,GAAG,IAAd,CAAA;AACH,KAHD,MAGO;AACH,MAAA,IAAMuB,UAAU,GAAGjC,aAAa,CAACV,EAAD,EAAKF,SAAL,EAAgB,KAAhB,EAAuB,IAAvB,EAA6Be,QAA7B,CAAhC,CAAA;AACA,MAAA,IAAM+B,UAAU,GAAGD,UAAU,CAACC,UAA9B,CAAA;MAEAjC,YAAY,GAAGgC,UAAU,CAAChC,YAA1B,CAAA;MACAS,WAAW,GAAGuB,UAAU,CAACrC,KAAzB,CAAA;MACAe,QAAQ,GAAGsB,UAAU,CAACtB,QAAtB,CAAA;AACAT,MAAAA,IAAI,IAAIgC,UAAR,CAAA;;MAEA,IAAI,CAACD,UAAU,CAACE,eAAX,IAA8BD,UAAU,KAAK,CAA9C,KAAoDvB,QAAxD,EAAkE;QAC9DiB,UAAU,IAAI3B,YAAY,CAAC2B,UAA3B,CAAA;QACAC,SAAS,IAAI5B,YAAY,CAAC4B,SAA1B,CAAA;AACH,OAHD,MAGO,IAAIhS,UAAU,IAAID,cAAlB,EAAkC;AACrC,QAAA,IAAMwS,iBAAiB,GAAGH,UAAU,CAACG,iBAArC,CAAA;;AAEA,QAAA,IAAIA,iBAAJ,EAAuB;UACnB,IAAIC,kBAAkB,GAAuBpC,YAA7C,CAAA;UACA,IAAIqC,gBAAgB,GAAG,CAAvB,CAAA;UACA,IAAIC,eAAe,GAAG,CAAtB,CAAA;;AAEA,UAAA,OAAOF,kBAAP,EAA2B;AACvB,YAAA,IAAI,CAACxD,aAAa,CAACwD,kBAAD,CAAlB,EAAwC;AACpC,cAAA,MAAA;AACH,aAAA;;YACDC,gBAAgB,IAAID,kBAAkB,CAACT,UAAvC,CAAA;YACAW,eAAe,IAAIF,kBAAkB,CAACR,SAAtC,CAAA;YACAQ,kBAAkB,GAAGA,kBAAkB,CAACpC,YAAxC,CAAA;AACH,WAAA;;AACD2B,UAAAA,UAAU,IAAIU,gBAAd,CAAA;AACAT,UAAAA,SAAS,IAAIU,eAAb,CAAA;AACH,SAAA;AACJ,OAAA;AACJ,KAAA;;IAED,IACI/T,SAAS,IAAI,CAACsB,iBAAd,IACGyR,SADH,IACgB,CAACC,KADjB,IAC0Bb,QAD1B,KAEIN,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,QAF5C,CADJ,EAIE;MACEuB,UAAU,IAAI3B,YAAY,CAAC2B,UAA3B,CAAA;MACAC,SAAS,IAAI5B,YAAY,CAAC4B,SAA1B,CAAA;MACAlC,UAAU,GAAGA,UAAU,IAAIe,WAA3B,CAAA;AACH,KAAA;;AAGD,IAAA,IAAIH,OAAJ,EAAa;AACT,MAAA,IAAIgB,SAAS,IAAIP,SAAS,CAACC,YAA3B,EAAyC;AACrC;QACAH,eAAe,GAAGb,YAAY,CAACuC,UAA/B,CAAA;QACAzB,cAAc,GAAGd,YAAY,CAACwC,SAA9B,CAAA;AACH,OAAA;AACJ,KAND,MAMO;AACH,MAAA,IAAIlB,SAAS,IAAIxB,eAAe,KAAKE,YAArC,EAAmD;AAC/C;QACAW,gBAAgB,GAAGX,YAAY,CAACuC,UAAhC,CAAA;QACA3B,eAAe,GAAGZ,YAAY,CAACwC,SAA/B,CAAA;AACH,OAAA;;AACD,MAAA,IAAIlB,SAAS,IAAItB,YAAY,KAAKT,eAAlC,EAAmD;AAC/C,QAAA,IAAMkD,MAAM,GAAGC,aAAa,CAACrD,EAAD,EAAK,KAAL,CAA5B,CAAA;AAEAsC,QAAAA,UAAU,IAAIc,MAAM,CAAC,CAAD,CAApB,CAAA;AACAb,QAAAA,SAAS,IAAIa,MAAM,CAAC,CAAD,CAAnB,CAAA;AACH,OAAA;AACJ,KAAA;;IAEDnD,QAAQ,CAAC9E,IAAT,CAAc;AACVhH,MAAAA,IAAI,EAAE,QADI;AAEV0L,MAAAA,MAAM,EAAEG,EAFE;AAGV/J,MAAAA,MAAM,EAAEgG,iBAAiB,CAAChG,MAAD,EAASpE,CAAT,EAAYgE,MAAZ,CAAA;KAH7B,CAAA,CAAA;;IAMA,IAAItH,KAAK,IAAIA,KAAK,KAAK,GAAnB,IAA0BA,KAAK,KAAK,MAAxC,EAAgD;AACtC,MAAA,IAAAwE,EAGF,GAAAxE,KAAK,CAAC+U,KAAN,CAAY,GAAZ,CAAA,CAAiB1S,GAAjB,CAAqB,UAAArC,KAAA;QAAS,OAAAsB,UAAU,CAACtB,KAAD,CAAV,CAAA;AAAiB,OAA/C,CAHE;AAAA,UACFgV,MAAM,GAAAxQ,EAAA,CAAA,CAAA,CADJ;AAAA,UAEFyC,EAAA,GAAAzC,EAAA,CAAA,CAAA,CAFE;UAEFyQ,MAAM,GAAGhO,EAAA,KAAA,KAAA,CAAA,GAAA+N,MAAA,KAFP,CAAA;;MAIN,IAAMhH,WAAW,GAAGC,iBAAiB,CAAC,CAAC+G,MAAD,EAASC,MAAT,CAAD,EAAmB3R,CAAnB,CAArC,CAAA;MAEAoO,QAAQ,CAAC9E,IAAT,CAAc;AACVhH,QAAAA,IAAI,EAAE,QADI;AAEV0L,QAAAA,MAAM,EAAEG,EAFE;QAGV/J,MAAM,EAAEwM,oBAAoB,CAAC5Q,CAAD,CAAA;OAHhC,CAAA,CAAA;MAMAoO,QAAQ,CAAC9E,IAAT,CAAc;AACVhH,QAAAA,IAAI,EAAE,QADI;AAEV0L,QAAAA,MAAM,EAAEG,EAFE;AAGV/J,QAAAA,MAAM,EAAEgG,iBAAiB,CAACM,WAAD,EAAc1K,CAAd,EAAiBgE,MAAjB,CAAA;OAH7B,CAAA,CAAA;AAKH,KAAA;;AACD,IAAA,IAAIoM,SAAJ,EAAe;AACX,MAAA,IAAMwB,eAAe,GAAGzD,EAAE,KAAKH,MAA/B,CAAA;MACA,IAAM6D,UAAU,GAAGD,eAAe,GAAG,CAAH,GAAOzD,EAAE,CAAC0D,UAA5C,CAAA;MACA,IAAMC,SAAS,GAAGF,eAAe,GAAG,CAAH,GAAOzD,EAAE,CAAC2D,SAA3C,CAAA;MAEA1D,QAAQ,CAAC9E,IAAT,CAAc;AACVhH,QAAAA,IAAI,EAAE,QADI;AAEV0L,QAAAA,MAAM,EAAEG,EAFE;QAGV/J,MAAM,EAAE2N,kBAAkB,CAAC,CACvBtB,UAAU,GAAGoB,UAAb,GAA0BpC,gBAA1B,GAA6CE,eADtB,EAEvBe,SAAS,GAAGoB,SAAZ,GAAwBpC,eAAxB,GAA0CE,cAFnB,CAAD,EAGvB5P,CAHuB,CAAA;OAH9B,CAAA,CAAA;AAQH,KAbD,MAaO;AACH;MACAoO,QAAQ,CAAC9E,IAAT,CAAc;AACVhH,QAAAA,IAAI,EAAE,QADI;AAEV0L,QAAAA,MAAM,EAAEG,EAFE;AAGVnK,QAAAA,MAAM,EAAAA,MAAAA;OAHV,CAAA,CAAA;AAKH,KA3LgB;;;IA6LjB,IAAI6M,UAAU,KAAK,CAAnB,EAAsB;MAClBzC,QAAQ,CAAC9E,IAAT,CAAc;AACVhH,QAAAA,IAAI,EAAE,MADI;AAEV0L,QAAAA,MAAM,EAAEG,EAFE;QAGV/J,MAAM,EAAEgG,iBAAiB,CAACO,iBAAiB,CAAC,CAACkG,UAAD,EAAaA,UAAb,CAAD,EAA2B7Q,CAA3B,CAAlB,EAAiDA,CAAjD,EAAoD,CAAC,CAAD,EAAI,CAAJ,CAApD,CAAA;OAH7B,CAAA,CAAA;AAKH,KAAA;;IACD,IAAI,CAACkE,YAAL,EAAmB;AACfA,MAAAA,YAAY,GAAGE,MAAf,CAAA;AACH,KAAA;;IACD,IAAI,CAACD,eAAL,EAAsB;AAClBA,MAAAA,eAAe,GAAGH,MAAlB,CAAA;AACH,KAAA;;IACD,IAAI,CAAC0K,qBAAL,EAA4B;AACxBA,MAAAA,qBAAqB,GAAG4B,YAAxB,CAAA;AACH,KAAA;;IAED,IAAI7B,KAAK,IAAIW,OAAb,EAAsB;AAClB,MAAA,MAAA;AACH,KAFD,MAEO;AACHjB,MAAAA,EAAE,GAAGW,YAAL,CAAA;AACAN,MAAAA,UAAU,GAAGe,WAAb,CAAA;AACH,KAAA;;AACD,IAAA,IAAI,CAACrB,cAAD,IAAmBC,EAAE,KAAKE,eAA9B,EAA+C;AAC3CI,MAAAA,KAAK,GAAGD,UAAR,CAAA;AACH,KAAA;AACJ,GAAA;;EACD,IAAI,CAACtK,YAAL,EAAmB;AACfA,IAAAA,YAAY,GAAG0M,oBAAoB,CAAC5Q,CAAD,CAAnC,CAAA;AACH,GAAA;;EACD,IAAI,CAACmE,eAAL,EAAsB;AAClBA,IAAAA,eAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAAA;AACH,GAAA;;EACD,IAAI,CAACuK,qBAAL,EAA4B;AACxBA,IAAAA,qBAAqB,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAxB,CAAA;AACH,GAAA;;EAED,OAAO;AACHK,IAAAA,IAAI,EAAAA,IADD;AAEHH,IAAAA,eAAe,EAAAA,eAFZ;AAGHR,IAAAA,QAAQ,EAAAA,QAHL;AAIHlK,IAAAA,YAAY,EAAAA,YAJT;AAKHC,IAAAA,eAAe,EAAAA,eALZ;AAMHmM,IAAAA,YAAY,EAAE5B,qBANX;AAOHrL,IAAAA,IAAI,EAAAA,IAPD;AAQHsL,IAAAA,QAAQ,EAAAA,QAAAA;GARZ,CAAA;AAUH;;AC/RD,IAAIqD,aAAa,GAGL,IAHZ,CAAA;AAIA,IAAIC,kBAAkB,GAA4C,IAAlE,CAAA;AAEA,IAAIC,oBAAoB,GAGZ,IAHZ,CAAA;AAMM,SAAUC,aAAV,CAAwBC,QAAxB,EAA0C;AAC5C,EAAA,IAAIA,QAAJ,EAAc;IACV,IAAI1U,MAAM,CAAC2U,GAAX,EAAgB;MACZL,aAAa,GAAG,IAAIK,GAAJ,EAAhB,CAAA;MACAJ,kBAAkB,GAAG,IAAII,GAAJ,EAArB,CAAA;AACH,KAAA;;AACDH,IAAAA,oBAAoB,GAAG,EAAvB,CAAA;AACH,GAND,MAMO;AACHF,IAAAA,aAAa,GAAG,IAAhB,CAAA;AACAE,IAAAA,oBAAoB,GAAG,IAAvB,CAAA;AACAD,IAAAA,kBAAkB,GAAG,IAArB,CAAA;AACH,GAAA;AACJ,CAAA;AAEK,SAAUK,mBAAV,CAA8BnE,EAA9B,EAA0D;AAC5D,EAAA,IAAMoE,UAAU,GAAGN,kBAAkB,KAAA,IAAlB,IAAAA,kBAAkB,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAAA,kBAAkB,CAAEO,GAApB,CAAwBrE,EAAxB,CAAnB,CAAA;;AAEA,EAAA,IAAIoE,UAAJ,EAAgB;AACZ,IAAA,OAAOA,UAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAME,cAAc,GAAGC,aAAa,CAACvE,EAAD,EAAK,IAAL,CAApC,CAAA;;AAEA,EAAA,IAAI8D,kBAAJ,EAAwB;AACpBA,IAAAA,kBAAkB,CAACU,GAAnB,CAAuBxE,EAAvB,EAA2BsE,cAA3B,CAAA,CAAA;AACH,GAAA;;AACD,EAAA,OAAOA,cAAP,CAAA;AACH,CAAA;AAEe,SAAAG,4BAAA,CACZ5E,MADY,EAEZC,SAFY,EAE+B;AAE3C,EAAA,IAAIiE,oBAAJ,EAA0B;IACtB,IAAMW,QAAM,GAAG9M,IAAI,CAACmM,oBAAD,EAAuB,UAAAlM,IAAA,EAAI;AAAI,MAAA,OAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAcgI,IAAAA,MAAd,IAAwBhI,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,KAAciI,SAAtC,CAAA;AAA+C,KAA9E,CAAnB,CAAA;;AAEA,IAAA,IAAI4E,QAAJ,EAAY;MACR,OAAOA,QAAM,CAAC,CAAD,CAAb,CAAA;AACH,KAAA;AACJ,GAAA;;EACD,IAAM5R,MAAM,GAAG8M,kBAAkB,CAACC,MAAD,EAASC,SAAT,EAAoB,IAApB,CAAjC,CAAA;;AAEA,EAAA,IAAIiE,oBAAJ,EAA0B;IACtBA,oBAAoB,CAAC5I,IAArB,CAA0B,CAAC,CAAC0E,MAAD,EAASC,SAAT,CAAD,EAAsBhN,MAAtB,CAA1B,CAAA,CAAA;AACH,GAAA;;AACD,EAAA,OAAOA,MAAP,CAAA;AACH,CAAA;AACK,SAAUgO,cAAV,CAAyB6D,OAAzB,EAAyC;AAC3C,EAAA,IAAIC,KAAK,GAAGf,aAAa,KAAA,IAAb,IAAAA,aAAa,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAAA,aAAa,CAAEQ,GAAf,CAAmBM,OAAnB,CAAZ,CAAA;;EAEA,IAAI,CAACC,KAAL,EAAY;AACR,IAAA,IAAMC,WAAS,GAAGtV,MAAM,CAACuV,gBAAP,CAAwBH,OAAxB,CAAlB,CAAA;;IAEA,IAAI,CAACd,aAAL,EAAoB;MAChB,OAAO,UAAC5G,QAAD,EAAiB;QACpB,OAAQ4H,WAAiB,CAAC5H,QAAD,CAAzB,CAAA;OADJ,CAAA;AAGH,KAAA;;AACD2H,IAAAA,KAAK,GAAG;AACJG,MAAAA,KAAK,EAAEF,WADH;AAEJG,MAAAA,MAAM,EAAE,EAAA;KAFZ,CAAA;AAIAnB,IAAAA,aAAa,CAACW,GAAd,CAAkBG,OAAlB,EAA2BC,KAA3B,CAAA,CAAA;AACH,GAAA;;AACD,EAAA,IAAMI,MAAM,GAAGJ,KAAK,CAACI,MAArB,CAAA;AACA,EAAA,IAAMD,KAAK,GAAGH,KAAK,CAACG,KAApB,CAAA;EAEA,OAAO,UAAC9H,QAAD,EAAiB;AACpB,IAAA,IAAI,EAAEA,QAAQ,IAAI+H,MAAd,CAAJ,EAA2B;AACvBA,MAAAA,MAAM,CAAC/H,QAAD,CAAN,GAAoB8H,KAAa,CAAC9H,QAAD,CAAjC,CAAA;AACH,KAAA;;IACD,OAAO+H,MAAM,CAAC/H,QAAD,CAAb,CAAA;GAJJ,CAAA;AAMH;;ACxDe,SAAAgI,SAAA,CAAU9P,IAAV,EAA0B+P,IAA1B,EAAwC;EACpD,OAAO,CACH/P,IAAI,CAAC,CAAD,CAAJ,GAAU+P,IAAI,CAAC,CAAD,CADX,EAEH/P,IAAI,CAAC,CAAD,CAAJ,GAAU+P,IAAI,CAAC,CAAD,CAFX,CAAP,CAAA;AAIH,CAAA;SACeC,SAAM;EAAC,IAAuBC,UAAA,GAAA,EAAvB,CAAA;;OAAA,IAAuBC,EAAA,GAAA,GAAvBA,EAAuB,GAAAC,SAAA,CAAAhO,QAAvB+N,EAAuB,IAAA;AAAvBD,IAAAA,UAAuB,CAAAC,EAAA,CAAvB,GAAuBC,SAAA,CAAAD,EAAA,CAAvB,CAAA;;;AACnB,EAAA,OAAOE,WAAW,CAAAC,KAAX,CAAW,KAAA,CAAX,EAAWvM,aAAA,CAAA,CAACvI,MAAD,CAAA,EAAY0U,UAAZ,EAAwB,KAAxB,CAAX,CAAP,CAAA;AACH,CAAA;AAEK,SAAUK,WAAV,CAAsBC,EAAtB,EAAoC;EACtCA,EAAE,EAAA,CAAA;AACL,CAAA;AAMK,SAAUvE,kBAAV,CAA6BhF,SAA7B,EAAyD;AAC3D,EAAA,IAAI,CAACA,SAAD,IAAcA,SAAS,KAAK,MAAhC,EAAwC;AACpC,IAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAP,CAAA;AAEH,GAAA;;AACD,EAAA,IAAIwJ,QAAQ,CAACxJ,SAAD,CAAZ,EAAyB;AACrB,IAAA,OAAOA,SAAP,CAAA;AACH,GAAA;;EACD,OAAOE,QAAQ,CAACF,SAAD,CAAf,CAAA;AACH,CAAA;SACeF,kBAAkBhG,QAAkBpE,GAAWgE,QAAgB;EAC3E,OAAO+P,UAAU,CACb/T,CADa,EAEb+R,kBAAkB,CAAC/N,MAAD,EAAShE,CAAT,CAFL,EAGboE,MAHa,EAIb2N,kBAAkB,CAAC/N,MAAM,CAACjF,GAAP,CAAW,UAAAiV,CAAA,EAAC;AAAI,IAAA,OAAA,CAACA,CAAD,CAAA;AAAE,GAAlB,CAAD,EAAsBhU,CAAtB,CAJL,CAAjB,CAAA;AAMH,CAAA;SACeiU,eAAe9F,IAAgBpF,MAAcmL,cAAqB;EAC9E,IAAInL,IAAI,KAAK,GAAb,EAAkB;AACd,IAAA,IAAMoL,OAAO,GAAGC,aAAa,CAACjG,EAAE,CAACkG,eAAJ,CAA7B,CAAA;IAEA,OAAOF,OAAO,CAACD,YAAY,GAAG,OAAH,GAAa,QAA1B,CAAP,GAA6C,GAApD,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,CAAP,CAAA;AACH,CAAA;AACK,SAAUI,wBAAV,CAAmCnG,EAAnC,EAAiD;EACnD,IAAMoG,cAAc,GAAGC,kBAAkB,CAACvB,gBAAgB,CAAC9E,EAAD,EAAK,SAAL,CAAjB,CAAzC,CAAA;EAEA,OAAOoG,cAAc,CAACxV,GAAf,CAAmB,UAAC0V,CAAD,EAAI5L,CAAJ,EAAK;AACrB,IAAA,IAAA1H,EAAA,GAAkB2H,SAAS,CAAC2L,CAAD,CAA3B;AAAA,QAAElN,KAAK,GAAApG,EAAA,CAAAoG,KAAP;AAAA,QAASwB,IAAI,GAAA5H,EAAA,CAAA4H,IAAb,CAAA;;IAEN,OAAOxB,KAAK,GAAG0M,cAAc,CAAC9F,EAAD,EAAKpF,IAAL,EAAWF,CAAC,KAAK,CAAjB,CAA7B,CAAA;AACH,GAJM,CAAP,CAAA;AAKH,CAAA;AACK,SAAU6L,uBAAV,CAAkCvQ,eAAlC,EAAyD;AAC3D,EAAA,OAAOA,eAAe,GAAGA,eAAe,CAACsN,KAAhB,CAAsB,GAAtB,CAAH,GAAgC,CAAC,GAAD,EAAM,GAAN,CAAtD,CAAA;AACH,CAAA;AACK,SAAU+C,kBAAV,CAA6BtB,KAA7B,EAAuD;AACzD,EAAA,OAAOwB,uBAAuB,CAACxB,KAAK,CAAC/O,eAAP,CAA9B,CAAA;AACH,CAAA;AACK,SAAUgL,mBAAV,CACFnB,MADE,EAC8B;AAEhC,EAAA,IAAMgB,QAAQ,GAAGC,cAAc,CAACjB,MAAD,CAA/B,CAAA;AACA,EAAA,IAAM2G,iBAAiB,GAAG3F,QAAQ,CAAC,WAAD,CAAlC,CAAA;;AAEA,EAAA,IAAI2F,iBAAiB,IAAIA,iBAAiB,KAAK,MAA/C,EAAuD;AACnD,IAAA,OAAOA,iBAAP,CAAA;AACH,GAAA;;EACD,IAAI,WAAA,IAAe3G,MAAnB,EAA2B;AACvB,IAAA,IAAM4G,IAAI,GAAI5G,MAAc,CAAC1D,SAA7B,CAAA;AACA,IAAA,IAAMuK,OAAO,GAAGD,IAAI,CAACC,OAArB,CAAA;;IAEA,IAAI,CAACA,OAAL,EAAc;AACV,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMpP,MAAM,GAAGoP,OAAO,CAACpP,MAAvB,CAAA;;IAEA,IAAI,CAACA,MAAL,EAAa;AACT,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;IAED,IAAM2I,QAAQ,GAAa,EAA3B,CAAA;;4BAESvF,GAAC;AACN,MAAA,IAAMzE,MAAM,GAAGyQ,OAAO,CAAChM,CAAD,CAAP,CAAWzE,MAA1B,CAAA;MAEAgK,QAAQ,CAAC9E,IAAT,CAAc,SAAA,CAAW1M,MAAX,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAAyCmC,GAAzC,CAA6C,UAAA+V,GAAA,EAAO;QAAA,OAAA1Q,MAAM,CAAC0Q,GAAD,CAAN,CAAA;AAAW,OAA/D,EAAiExV,IAAjE,CAAsE,IAAtE,CAAX,EAAsF,GAAtF,CAAd,CAAA,CAAA;;;IAHJ,KAAK,IAAIuJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpD,MAApB,EAA4B,EAAEoD,CAA9B,EAA+B;cAAtBA;AAIR,KAAA;;AACD,IAAA,OAAOuF,QAAQ,CAAC9O,IAAT,CAAc,GAAd,CAAP,CAAA;AAEH,GAAA;;AACD,EAAA,OAAO,EAAP,CAAA;AACH,CAAA;AAEK,SAAUuP,aAAV,CACFV,EADE,EAEF4G,UAFE,EAGFC,QAHE,EAIFC,SAJE,EAKFC,cALE,EAKuB;;;AAEzB,EAAA,IAAMC,GAAG,GAAGhH,EAAE,IAAIA,EAAE,CAACiH,aAAT,GAAyBjH,EAAE,CAACiH,aAA5B,GAA4C9G,QAAxD,CAAA;EACA,IAAMD,eAAe,GAAG8G,GAAG,CAAC9G,eAAJ,IAAuB8G,GAAG,CAAC5G,IAAnD,CAAA;EACA,IAAI8G,OAAO,GAAG,KAAd,CAAA;AACA,EAAA,IAAIrH,MAAJ,CAAA;AACA,EAAA,IAAIiD,iBAAJ,CAAA;;AAEA,EAAA,IAAI,CAAC9C,EAAD,IAAO6G,QAAX,EAAqB;AACjBhH,IAAAA,MAAM,GAAGG,EAAT,CAAA;AACH,GAFD,MAEO;AACH,IAAA,IAAMmH,yBAAyB,GAAG,CAAAnU,EAAA,GAAAgN,EAAE,KAAF,IAAA,IAAAA,EAAE,KAAF,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAE,CAAEoH,YAAJ,MAAkB,IAAlB,IAAkBpU,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkBA,EAAA,CAAAwM,aAApD,CAAA;AACA,IAAA,IAAMA,aAAa,GAAGQ,EAAE,CAACR,aAAzB,CAAA;;AAEA,IAAA,IAAI2H,yBAAJ,EAA+B;AAC3BD,MAAAA,OAAO,GAAG,IAAV,CAAA;AACApE,MAAAA,iBAAiB,GAAGtD,aAApB,CAAA;AACAK,MAAAA,MAAM,GAAGsH,yBAAT,CAAA;AACH,KAJD,MAIO;AACHtH,MAAAA,MAAM,GAAGL,aAAT,CAAA;AACH,KAAA;AACJ,GAAA;;EAED,IAAIqD,eAAe,GAAG,KAAtB,CAAA;EACA,IAAIvC,KAAK,GAAGN,EAAE,KAAK4G,UAAP,IAAqB/G,MAAM,KAAK+G,UAA5C,CAAA;EACA,IAAI7F,QAAQ,GAAG,UAAf,CAAA;EACA,IAAI6B,UAAU,GAAG,CAAjB,CAAA;EAGA,IAAMF,UAAU,GAAG7S,UAAU,CAACkX,cAAc,KAAd,IAAA,IAAAA,cAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,cAAc,CAAG,MAAH,CAAf,CAAV,IAAwC,CAA3D,CAAA;AACA,EAAA,IAAMM,cAAc,GAAGN,cAAc,KAAd,IAAA,IAAAA,cAAc,WAAd,SAAA,GAAAA,cAAc,CAAG,UAAH,CAArC,CAAA;;AAIA,EAAA,OAAOlH,MAAM,IAAIA,MAAM,KAAKK,eAA5B,EAA6C;IACzC,IAAI0G,UAAU,KAAK/G,MAAnB,EAA2B;AACvBS,MAAAA,KAAK,GAAG,IAAR,CAAA;AACH,KAAA;;AACD,IAAA,IAAMO,QAAQ,GAAGC,cAAc,CAACjB,MAAD,CAA/B,CAAA;AACA,IAAA,IAAMmC,OAAO,GAAGnC,MAAM,CAACmC,OAAP,CAAepS,WAAf,EAAhB,CAAA;AACA,IAAA,IAAMuM,SAAS,GAAG6E,mBAAmB,CAACnB,MAAD,CAArC,CAAA;AACA,IAAA,IAAMyH,UAAU,GAAGzG,QAAQ,CAAC,YAAD,CAA3B,CAAA;IACA,IAAMD,IAAI,GAAG/Q,UAAU,CAACgR,QAAQ,CAAC,MAAD,CAAT,CAAV,IAAgC,CAA7C,CAAA;AAEAE,IAAAA,QAAQ,GAAGF,QAAQ,CAAC,UAAD,CAAnB,CAAA;;AACA,IAAA,IAAIiG,SAAS,IAAIlG,IAAI,KAAK,CAA1B,EAA6B;AACzBgC,MAAAA,UAAU,GAAGhC,IAAb,CAAA;AACA,MAAA,MAAA;AACH,KAAA;;IACD;AAEI,IAAA,CAACiG,QAAD,IAAaC,SAAb,IAA0BpE,UAAU,KAAK,CAAzC,IAA8C2E,cAA9C,IAAgEA,cAAc,KAAK,UAAnF,IACGrF,OAAO,KAAK,KADf,IAEGjB,QAAQ,KAAK,QAFhB,IAGI5E,SAAS,IAAIA,SAAS,KAAK,MAH/B,IAIGmL,UAAU,KAAK,WANtB,EAOE;AACE,MAAA,MAAA;AACH,KAAA;;AACD,IAAA,IAAMC,cAAc,GAAG,CAAAxU,EAAA,GAAAiN,EAAE,KAAF,IAAA,IAAAA,EAAE,KAAF,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAE,CAAEoH,YAAJ,MAAkB,IAAlB,IAAkBrU,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkBA,EAAA,CAAAyU,UAAzC,CAAA;AACA,IAAA,IAAMC,gBAAgB,GAAG5H,MAAM,CAAC2H,UAAhC,CAAA;;AAEA,IAAA,IAAID,cAAJ,EAAoB;AAChBL,MAAAA,OAAO,GAAG,IAAV,CAAA;AACApE,MAAAA,iBAAiB,GAAG2E,gBAApB,CAAA;AACH,KAAA;;IACD,IAAMD,UAAU,GAAGC,gBAAnB,CAAA;;AAEA,IAAA,IAAID,UAAU,IAAIA,UAAU,CAAC7H,QAAX,KAAwB,EAA1C,EAA8C;AAC1C;MACAE,MAAM,GAAI2H,UAAyB,CAACE,IAApC,CAAA;AACA7E,MAAAA,eAAe,GAAG,IAAlB,CAAA;AACA9B,MAAAA,QAAQ,GAAGD,cAAc,CAACjB,MAAD,CAAd,CAAuB,UAAvB,CAAX,CAAA;AACA,MAAA,MAAA;AACH,KAAA;;AACDA,IAAAA,MAAM,GAAG2H,UAAT,CAAA;AACAzG,IAAAA,QAAQ,GAAG,UAAX,CAAA;AACH,GAAA;;EACD,OAAO;AACH6B,IAAAA,UAAU,EAAAA,UADP;AAEHsE,IAAAA,OAAO,EAAAA,OAFJ;AAGHpE,IAAAA,iBAAiB,EAAAA,iBAHd;AAIHD,IAAAA,eAAe,EAAAA,eAJZ;IAKHxB,QAAQ,EAAEN,QAAQ,KAAK,QALpB;IAMHT,KAAK,EAAEA,KAAK,IAAI,CAACT,MAAV,IAAoBA,MAAM,KAAKK,eANnC;IAOHS,YAAY,EAAEd,MAAqB,IAAIK,eAAAA;GAP3C,CAAA;AAUH,CAAA;AACe,SAAA6B,gBAAA,CACZ/B,EADY,EAEZH,MAFY,EAEoB;;;AAEhC,EAAA,IAAMmC,OAAO,GAAGhC,EAAE,CAACgC,OAAH,CAAWpS,WAAX,EAAhB,CAAA;AACA,EAAA,IAAI0S,UAAU,GAAItC,EAAkB,CAACsC,UAArC,CAAA;AACA,EAAA,IAAIC,SAAS,GAAIvC,EAAkB,CAACuC,SAApC,CAAA;AACA,EAAA,IAAM1B,QAAQ,GAAGC,cAAc,CAACd,EAAD,CAA/B,CALgC;;AAOhC,EAAA,IAAMkC,KAAK,GAAGyF,WAAW,CAACrF,UAAD,CAAzB,CAAA;EACA,IAAIL,SAAS,GAAG,CAACC,KAAjB,CAAA;AACA,EAAA,IAAIrM,MAAJ,CAAA;EACA,IAAIsM,YAAJ,CAVgC;;AAYhC,EAAA,IAAI,CAACF,SAAD,IAAcD,OAAO,KAAK,KAA9B,EAAqC;IACjCnM,MAAM,GAAGxG,YAAY,GACf8W,wBAAwB,CAACnG,EAAD,CADT,GAEfuG,uBAAuB,CAAC1F,QAAQ,CAAC,iBAAD,CAAT,CAAvB,CAAqDjQ,GAArD,CAAyD,UAAA6J,GAAA,EAAG;MAAI,OAAA5K,UAAU,CAAC4K,GAAD,CAAV,CAAA;AAAe,KAA/E,CAFN,CAAA;AAIA0H,IAAAA,YAAY,GAAGtM,MAAM,CAAC+R,KAAP,EAAf,CAAA;AACA3F,IAAAA,SAAS,GAAG,IAAZ,CAAA;IAEAjP,EAAA,GAEI6U,oBAAoB,CACpB7H,EADoB,EAEpBnK,MAFoB,EAGpBmK,EAAE,KAAKH,MAAP,IAAiBA,MAAM,CAACmC,OAAP,CAAepS,WAAf,EAAA,KAAiC,GAH9B,CAFxB,EACI0S,UAAU,GAAAtP,EAAA,CAAA,CAAA,CADd,EACgBuP,SAAS,GAAAvP,EAAA,CAAA,CAAA,CADzB,EAC2B6C,MAAM,CAAC,CAAD,CAAN,QAD3B,EACsCA,MAAM,CAAC,CAAD,CAAN,QADtC,CAAA;AAOH,GAfD,MAeO;AACHA,IAAAA,MAAM,GAAG0Q,uBAAuB,CAAC1F,QAAQ,CAAC,iBAAD,CAAT,CAAvB,CAAqDjQ,GAArD,CAAyD,UAAA6J,GAAA,EAAG;MAAI,OAAA5K,UAAU,CAAC4K,GAAD,CAAV,CAAA;AAAe,KAA/E,CAAT,CAAA;AACA0H,IAAAA,YAAY,GAAGtM,MAAM,CAAC+R,KAAP,EAAf,CAAA;AACH,GAAA;;EACD,OAAO;AACH5F,IAAAA,OAAO,EAAAA,OADJ;AAEHE,IAAAA,KAAK,EAAAA,KAFF;AAGHD,IAAAA,SAAS,EAAAA,SAHN;IAIHI,MAAM,EAAE,CAACC,UAAU,IAAI,CAAf,EAAkBC,SAAS,IAAI,CAA/B,CAJL;AAKH1M,IAAAA,MAAM,EAAAA,MALH;AAMHsM,IAAAA,YAAY,EAAAA,YAAAA;GANhB,CAAA;AAQH,CAAA;AACe,SAAAkB,aAAA,CACZrD,EADY,EAEZkC,KAFY,EAEE;AAEd,EAAA,IAAMrB,QAAQ,GAAGC,cAAc,CAACd,EAAD,CAA/B,CAAA;AACA,EAAA,IAAM8H,YAAY,GAAGhH,cAAc,CAACX,QAAQ,CAACC,IAAV,CAAnC,CAAA;AACA,EAAA,IAAM2H,YAAY,GAAGD,YAAY,CAAC,UAAD,CAAjC,CAAA;;EACA,IAAI,CAAC5F,KAAD,KAAW,CAAC6F,YAAD,IAAiBA,YAAY,KAAK,QAA7C,CAAJ,EAA4D;AACxD,IAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACH,GAAA;;EAED,IAAIC,UAAU,GAAGhY,QAAQ,CAAC8X,YAAY,CAAC,YAAD,CAAb,EAA6B,EAA7B,CAAzB,CAAA;EACA,IAAIG,SAAS,GAAGjY,QAAQ,CAAC8X,YAAY,CAAC,WAAD,CAAb,EAA4B,EAA5B,CAAxB,CAAA;;AAEA,EAAA,IAAIjH,QAAQ,CAAC,UAAD,CAAR,KAAyB,UAA7B,EAAyC;AACrC,IAAA,IAAIA,QAAQ,CAAC,KAAD,CAAR,KAAoB,MAApB,IAA8BA,QAAQ,CAAC,QAAD,CAAR,KAAuB,MAAzD,EAAiE;AAC7DoH,MAAAA,SAAS,GAAG,CAAZ,CAAA;AACH,KAAA;;AACD,IAAA,IAAIpH,QAAQ,CAAC,MAAD,CAAR,KAAqB,MAArB,IAA+BA,QAAQ,CAAC,OAAD,CAAR,KAAsB,MAAzD,EAAiE;AAC7DmH,MAAAA,UAAU,GAAG,CAAb,CAAA;AACH,KAAA;AACJ,GAAA;;AAED,EAAA,OAAO,CAACA,UAAD,EAAaC,SAAb,CAAP,CAAA;AACH,CAAA;AACK,SAAUnG,iBAAV,CAA4B7B,QAA5B,EAAkD;AACpDA,EAAAA,QAAQ,CAACiI,OAAT,CAAiB,UAAArQ,IAAA,EAAI;AACjB,IAAA,IAAM5B,MAAM,GAAG4B,IAAI,CAAC5B,MAApB,CAAA;;AAEA,IAAA,IAAIA,MAAJ,EAAY;MACR4B,IAAI,CAAC5B,MAAL,GAAcqG,gBAAgB,CAACrG,MAAD,EAAS,CAAT,EAAY,CAAZ,CAA9B,CAAA;AACH,KAAA;GALL,CAAA,CAAA;AAOH,CAAA;AASK,SAAU4L,oBAAV,CAA+B7B,EAA/B,EAA2D;AAC7D,EAAA,IAAI4B,cAAc,GAAG5B,EAAE,CAACR,aAAxB,CAAA;EACA,IAAImC,YAAY,GAAG,KAAnB,CAAA;;AAEA,EAAA,OAAOC,cAAP,EAAuB;AACnB,IAAA,IAAMzF,SAAS,GAAG2I,gBAAgB,CAAClD,cAAD,CAAhB,CAAiCzF,SAAnD,CAAA;;AAGA,IAAA,IAAIA,SAAS,IAAIA,SAAS,KAAK,MAA/B,EAAuC;AACnCwF,MAAAA,YAAY,GAAG,IAAf,CAAA;AACA,MAAA,MAAA;AACH,KAAA;;AACD,IAAA,IAAIC,cAAc,KAAKzB,QAAQ,CAACC,IAAhC,EAAsC;AAClC,MAAA,MAAA;AACH,KAAA;;IACDwB,cAAc,GAAGA,cAAc,CAACpC,aAAhC,CAAA;AACH,GAAA;;EAED,OAAO;AACHoC,IAAAA,cAAc,EAAEA,cAAc,IAAIzB,QAAQ,CAACC,IADxC;AAEHuB,IAAAA,YAAY,EAAAA,YAAAA;GAFhB,CAAA;AAIH,CAAA;AAEe,SAAAwG,aAAA,CAAclS,MAAd,EAAgCf,IAAhC,EAAiE;AAAjC,EAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,IAAgB,GAAAe,MAAM,CAACqB,MAAP,GAAgB,CAAhC,CAAA;AAAiC,GAAA;;EAC7E,OAAO,EAAA,CAAA7I,MAAA,CAAGyG,IAAI,GAAG,UAAH,GAAgB,QAAvB,EAAmC,GAAnC,CAAA,CAAmCzG,MAAnC,CAAmC2Z,kBAAkB,CAACnS,MAAD,EAAS,CAACf,IAAV,CAAlB,CAAkC/D,IAAlC,CAAuC,GAAvC,CAAnC,EAA8E,GAA9E,CAAP,CAAA;AACH,CAAA;AACK,SAAU8U,aAAV,CAAwBjG,EAAxB,EAAyC;AAC3C,EAAA,IAAMqI,WAAW,GAAGrI,EAAE,CAACqI,WAAvB,CAAA;AACA,EAAA,IAAMC,YAAY,GAAGtI,EAAE,CAACsI,YAAxB,CAAA;;EAEA,IAAI,CAACtI,EAAL,EAAS;IACL,OAAO;AAAEuI,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAX;AAAcpO,MAAAA,KAAK,EAAE,CAArB;AAAwBC,MAAAA,MAAM,EAAE,CAAhC;AAAmCgO,MAAAA,WAAW,aAA9C;AAAgDC,MAAAA,YAAY,EAAAA,YAAAA;KAAnE,CAAA;AACH,GAAA;;AACD,EAAA,IAAMtC,OAAO,GAAGhG,EAAE,CAACgG,OAAnB,CAAA;AACA,EAAA,IAAMU,OAAO,GAAIV,OAAO,IAAIA,OAAO,CAACU,OAApB,IAAgC;AAAE6B,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE,CAAX;AAAcpO,IAAAA,KAAK,EAAE,CAArB;AAAwBC,IAAAA,MAAM,EAAE,CAAA;GAAhF,CAAA;EAEA,OAAO;IACHkO,CAAC,EAAE7B,OAAO,CAAC6B,CADR;IAEHC,CAAC,EAAE9B,OAAO,CAAC8B,CAFR;AAGHpO,IAAAA,KAAK,EAAEsM,OAAO,CAACtM,KAAR,IAAiBiO,WAHrB;AAIHhO,IAAAA,MAAM,EAAEqM,OAAO,CAACrM,MAAR,IAAkBiO,YAJvB;AAKHD,IAAAA,WAAW,EAAAA,WALR;AAMHC,IAAAA,YAAY,EAAAA,YAAAA;GANhB,CAAA;AAQH,CAAA;AACe,SAAA9F,YAAA,CACZxC,EADY,EAEZnO,CAFY,EAEH;AAEH,EAAA,IAAAmB,KAKFiT,aAAa,CAACjG,EAAD,CALX;AAAA,MACKyI,YAAY,GAAAzV,EAAA,CAAAoH,KADjB;AAAA,MAEMsO,aAAa,YAFnB;AAAA,MAGFL,WAAW,iBAHT;AAAA,MAIFC,YAAY,kBAJV,CAAA;;AAMN,EAAA,IAAM/E,MAAM,GAAG8E,WAAW,GAAGI,YAA7B,CAAA;AACA,EAAA,IAAMjF,MAAM,GAAG8E,YAAY,GAAGI,aAA9B,CAAA;EAEA,IAAMC,mBAAmB,GAAG3I,EAAE,CAAC2I,mBAAH,CAAuBjC,OAAnD,CAXS;;AAaT,EAAA,IAAMkC,KAAK,GAAGD,mBAAmB,CAACC,KAAlC,CAbS;;AAeT,EAAA,IAAMC,WAAW,GAAGF,mBAAmB,CAACE,WAAxC,CAAA;AACA,EAAA,IAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAAA;AACA,EAAA,IAAMva,KAAK,GAAG,CAACgV,MAAD,EAASC,MAAT,CAAd,CAAA;AACA,EAAA,IAAMuF,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAAA;;EAEA,IAAIH,KAAK,KAAK,CAAd,EAAiB;AACb,IAAA,IAAMI,MAAM,GAAG,CAACJ,KAAK,GAAG,CAAT,IAAc,CAA7B,CAAA;AACA,IAAA,IAAMK,MAAM,GAAGpa,IAAI,CAACqa,KAAL,CAAW,CAACN,KAAK,GAAG,CAAT,IAAc,CAAzB,CAAf,CAAA;IAEAE,SAAS,CAAC,CAAD,CAAT,GAAeL,YAAY,GAAGO,MAAf,GAAwB,CAAvC,CAAA;IACAF,SAAS,CAAC,CAAD,CAAT,GAAeJ,aAAa,GAAGO,MAAhB,GAAyB,CAAxC,CAAA;IAEA,IAAME,cAAc,GAAGN,WAAW,KAAK,CAAhB,GAAoBha,IAAI,CAACua,GAAL,CAAS5F,MAAT,EAAiBD,MAAjB,CAApB,GAA+C1U,IAAI,CAACwa,GAAL,CAAS9F,MAAT,EAAiBC,MAAjB,CAAtE,CAAA;AAEAjV,IAAAA,KAAK,CAAC,CAAD,CAAL,GAAW4a,cAAX,CAAA;AACA5a,IAAAA,KAAK,CAAC,CAAD,CAAL,GAAW4a,cAAX,CAAA;IAEAJ,SAAS,CAAC,CAAD,CAAT,GAAe,CAACV,WAAW,GAAGI,YAAf,IAA+B,CAA/B,GAAmCO,MAAlD,CAAA;IACAD,SAAS,CAAC,CAAD,CAAT,GAAe,CAACT,YAAY,GAAGI,aAAhB,IAAiC,CAAjC,GAAqCO,MAApD,CAAA;AACH,GAAA;;AACD,EAAA,IAAM1M,WAAW,GAAGC,iBAAiB,CAACjO,KAAD,EAAQsD,CAAR,CAArC,CAAA;AAEI0K,EAAAA,WAAW,CAAC1K,CAAC,IAAIA,CAAC,GAAG,CAAR,CAAF,CAAX,GAEAkX,SAAS,CAAA,CAAA,CAFT,EACAxM,WAAW,CAAC1K,CAAC,IAAIA,CAAC,GAAG,CAAR,CAAD,GAAc,CAAf,CAAX,GACAkX,SAAS,CAAA,CAAA,CAFT,CAAA;AAIJ,EAAA,OAAO9M,iBAAiB,CACpBM,WADoB,EAEpB1K,CAFoB,EAGpBiX,SAHoB,CAAxB,CAAA;AAKH,CAAA;SACejB,qBACZ7H,IACAnK,QACAyT,WAAmB;AAEnB,EAAA,IAAI,CAACtJ,EAAE,CAACuJ,OAAJ,IAAe,CAACD,SAAD,IAActJ,EAAE,CAACgC,OAAH,CAAWpS,WAAX,EAAA,KAA6B,GAA9D,EAAmE;IAC/D,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAM4Z,IAAI,GAAGxJ,EAAE,CAACuJ,OAAH,EAAb,CAAA;AACA,EAAA,IAAMvD,OAAO,GAAGC,aAAa,CAACjG,EAAE,CAACkG,eAAJ,CAA7B,CAAA;EACA,IAAMnV,IAAI,GAAGyY,IAAI,CAACjB,CAAL,GAASvC,OAAO,CAACuC,CAA9B,CAAA;EACA,IAAMzX,GAAG,GAAG0Y,IAAI,CAAChB,CAAL,GAASxC,OAAO,CAACwC,CAA7B,CAAA;AAEA,EAAA,OAAO,CACHzX,IADG,EAEHD,GAFG,EAGH+E,MAAM,CAAC,CAAD,CAAN,GAAY9E,IAHT,EAIH8E,MAAM,CAAC,CAAD,CAAN,GAAY/E,GAJT,CAAP,CAAA;AAMH,CAAA;SACe6N,kBAAkB1I,QAAkBwE,KAAe5I,GAAS;AACxE,EAAA,OAAO4E,SAAS,CAACR,MAAD,EAASK,qBAAqB,CAACmE,GAAD,EAAM5I,CAAN,CAA9B,EAAwCA,CAAxC,CAAhB,CAAA;AACH,CAAA;AACK,SAAUiK,cAAV,CAAyB7F,MAAzB,EAA2CmE,KAA3C,EAA0DC,MAA1D,EAA0ExI,CAA1E,EAAmF;AACrF,EAAA,OAAO,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACuI,KAAD,EAAQ,CAAR,CAAT,EAAqB,CAAC,CAAD,EAAIC,MAAJ,CAArB,EAAkC,CAACD,KAAD,EAAQC,MAAR,CAAlC,CAAmDzJ,CAAAA,GAAnD,CAAuD,UAAA6J,GAAA;AAAO,IAAA,OAAAkE,iBAAiB,CAAC1I,MAAD,EAASwE,GAAT,EAAc5I,CAAd,CAAjB,CAAA;AAAiC,GAA/F,CAAP,CAAA;AACH,CAAA;AACK,SAAU4X,OAAV,CAAkBpO,KAAlB,EAAmC;EACrC,IAAMqO,MAAM,GAAGrO,KAAK,CAACzK,GAAN,CAAU,UAAA6J,GAAA,EAAO;IAAA,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,GAAvB,CAAf,CAAA;EACA,IAAMkP,MAAM,GAAGtO,KAAK,CAACzK,GAAN,CAAU,UAAA6J,GAAA,EAAO;IAAA,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,GAAvB,CAAf,CAAA;EACA,IAAM1J,IAAI,GAAGlC,IAAI,CAACwa,GAAL,MAAA,CAAAxa,IAAA,EAAY6a,MAAZ,CAAb,CAAA;EACA,IAAM5Y,GAAG,GAAGjC,IAAI,CAACwa,GAAL,MAAA,CAAAxa,IAAA,EAAY8a,MAAZ,CAAZ,CAAA;EACA,IAAMC,KAAK,GAAG/a,IAAI,CAACua,GAAL,MAAA,CAAAva,IAAA,EAAY6a,MAAZ,CAAd,CAAA;EACA,IAAMhO,MAAM,GAAG7M,IAAI,CAACua,GAAL,MAAA,CAAAva,IAAA,EAAY8a,MAAZ,CAAf,CAAA;AACA,EAAA,IAAME,SAAS,GAAGD,KAAK,GAAG7Y,IAA1B,CAAA;AACA,EAAA,IAAM+Y,UAAU,GAAGpO,MAAM,GAAG5K,GAA5B,CAAA;EAEA,OAAO;AACHC,IAAAA,IAAI,EAAAA,IADD;AACGD,IAAAA,GAAG,EAAAA,GADN;AAEH8Y,IAAAA,KAAK,EAAAA,KAFF;AAEIlO,IAAAA,MAAM,EAAAA,MAFV;AAGHtB,IAAAA,KAAK,EAAEyP,SAHJ;AAIHxP,IAAAA,MAAM,EAAEyP,UAAAA;GAJZ,CAAA;AAMH,CAAA;AACK,SAAUC,aAAV,CAAwB9T,MAAxB,EAA0CmE,KAA1C,EAAyDC,MAAzD,EAAyExI,CAAzE,EAAkF;EACpF,IAAMwJ,KAAK,GAAGS,cAAc,CAAC7F,MAAD,EAASmE,KAAT,EAAgBC,MAAhB,EAAwBxI,CAAxB,CAA5B,CAAA;EAEA,OAAO4X,OAAO,CAACpO,KAAD,CAAd,CAAA;AACH,CAAA;AACK,SAAU2O,YAAV,CACFrH,UADE,EAEFsH,UAFE,EAGFnK,SAHE,EAIFjO,CAJE,EAKF+D,YALE,EAKoB;;;AAEtB,EAAA,IAAMiK,MAAM,GAAG8C,UAAU,CAAC9C,MAA1B,CAAA;AACA,EAAA,IAAMhK,MAAM,GAAG8M,UAAU,CAAC9M,MAA1B,CAAA;AACA,EAAA,IAAME,YAAY,GAAGkU,UAAU,CAAChU,MAAhC,CAAA;;AACM,EAAA,IAAAlD,EAAA,GAGFmX,OAAO,CAACrK,MAAD,CAHL;AAAA,MACWzF,KAAK,GAAArH,EAAA,CAAAoX,WADhB;AAAA,MAEY9P,MAAM,GAAAtH,EAAA,CAAAqX,YAFlB,CAAA;;AAIN,EAAA,IAAMC,mBAAmB,GAAGvK,SAAS,CAACwK,qBAAV,EAA5B,CAAA;AACA,EAAA,IAAIlH,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb,CAAA;;AAEA,EAAA,IAAItD,SAAS,KAAKK,QAAQ,CAACC,IAA3B,EAAiC;AAC7BgD,IAAAA,MAAM,GAAGC,aAAa,CAACxD,MAAD,EAAS,IAAT,CAAtB,CAAA;AACH,GAAA;;AAED,EAAA,IAAM0K,IAAI,GAAG1K,MAAM,CAACyK,qBAAP,EAAb,CAAA;EACA,IAAME,QAAQ,GACRD,IAAI,CAACxZ,IAAL,GAAYsZ,mBAAmB,CAACtZ,IAAhC,GAAuC+O,SAAS,CAAC4D,UAAjD,IACC5D,SAAS,CAACoD,UAAV,IAAwB,CADzB,CAC8BE,GAAAA,MAAM,CAAC,CAAD,CAF1C,CAAA;EAGA,IAAMqH,OAAO,GACPF,IAAI,CAACzZ,GAAL,GAAWuZ,mBAAmB,CAACvZ,GAA/B,GAAqCgP,SAAS,CAAC6D,SAA/C,IACC7D,SAAS,CAACqD,SAAV,IAAuB,CADxB,CAC6BC,GAAAA,MAAM,CAAC,CAAD,CAFzC,CAAA;AAGA,EAAA,IAAMyG,SAAS,GAAGU,IAAI,CAACnQ,KAAvB,CAAA;AACA,EAAA,IAAM0P,UAAU,GAAGS,IAAI,CAAClQ,MAAxB,CAAA;EAEA,IAAMqQ,GAAG,GAAG9E,UAAU,CAClB/T,CADkB,EAElB+D,YAFkB,EAGlBG,YAHkB,CAAtB,CAAA;;EAKM,IAAAP,EAAA,GAKFuU,aAAa,CAACW,GAAD,EAAMtQ,KAAN,EAAaC,MAAb,EAAqBxI,CAArB,CALX;AAAA,MACI8Y,QAAQ,GAAAnV,EAAA,CAAAzE,IADZ;AAAA,MAEG6Z,OAAO,GAAApV,EAAA,CAAA1E,GAFV;AAAA,MAGKwJ,SAAS,GAAA9E,EAAA,CAAA4E,KAHd;AAAA,MAIMG,UAAU,GAAA/E,EAAA,CAAA6E,MAJhB,CAAA;;EAMN,IAAMwQ,SAAS,GAAGlM,iBAAiB,CAAC+L,GAAD,EAAM7U,MAAN,EAAchE,CAAd,CAAnC,CAAA;EACA,IAAM2I,UAAU,GAAGpF,KAAK,CAACyV,SAAD,EAAY,CAACF,QAAD,EAAWC,OAAX,CAAZ,CAAxB,CAAA;EACA,IAAME,UAAU,GAAG,CACfN,QAAQ,GAAGhQ,UAAU,CAAC,CAAD,CAAV,GAAgBqP,SAAhB,GAA4BvP,SADxB,EAEfmQ,OAAO,GAAGjQ,UAAU,CAAC,CAAD,CAAV,GAAgBsP,UAAhB,GAA6BvP,UAFxB,CAAnB,CAAA;AAIA,EAAA,IAAM8H,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf,CAAA;EACA,IAAI0I,KAAK,GAAG,CAAZ,CAAA;;AAEA,EAAA,OAAO,EAAEA,KAAF,GAAU,EAAjB,EAAqB;AACjB,IAAA,IAAM3U,mBAAmB,GAAGD,MAAM,CAACP,YAAD,EAAe/D,CAAf,CAAlC,CAAA;AACAmB,IAAAA,EAAA,GAAyBoC,KAAK,CAC1BuJ,iBAAiB,CAACvI,mBAAD,EAAsB0U,UAAtB,EAAkCjZ,CAAlC,CADS,EAE1B8M,iBAAiB,CAACvI,mBAAD,EAAsByU,SAAtB,EAAiChZ,CAAjC,CAFS,CAA9B,EAACwQ,MAAM,CAAC,CAAD,CAAN,GAASrP,EAAA,CAAA,CAAA,CAAV,EAAYqP,MAAM,CAAC,CAAD,CAAN,QAAZ,CAAA;AAIA,IAAA,IAAM2I,IAAI,GAAGpF,UAAU,CACnB/T,CADmB,EAEnB+D,YAFmB,EAGnBgO,kBAAkB,CAACvB,MAAD,EAASxQ,CAAT,CAHC,EAInBkE,YAJmB,CAAvB,CAAA;;IAMM,IAAAkV,KAGFlB,aAAa,CAACiB,IAAD,EAAO5Q,KAAP,EAAcC,MAAd,EAAsBxI,CAAtB,CAHX;AAAA,QACIqZ,QAAQ,UADZ;AAAA,QAEGC,OAAO,SAFV,CAAA;;AAIN,IAAA,IAAMC,QAAQ,GAAGF,QAAQ,GAAGV,QAA5B,CAAA;AACA,IAAA,IAAMa,OAAO,GAAGF,OAAO,GAAGV,OAA1B,CAAA;;AAEA,IAAA,IAAI5b,IAAI,CAACyc,GAAL,CAASF,QAAT,CAAqB,GAAA,CAArB,IAA0Bvc,IAAI,CAACyc,GAAL,CAASD,OAAT,CAAA,GAAoB,CAAlD,EAAqD;AACjD,MAAA,MAAA;AACH,KAAA;;AACDP,IAAAA,UAAU,CAAC,CAAD,CAAV,IAAiBM,QAAjB,CAAA;AACAN,IAAAA,UAAU,CAAC,CAAD,CAAV,IAAiBO,OAAjB,CAAA;AACH,GAAA;;AACD,EAAA,OAAOhJ,MAAM,CAACzR,GAAP,CAAW,UAAA2a,CAAA,EAAK;AAAA,IAAA,OAAA1c,IAAI,CAACC,KAAL,CAAWyc,CAAX,CAAA,CAAA;AAAa,GAA7B,CAAP,CAAA;AACH,CAAA;SAEeC,iCACZvW,YACAoG,OACAoQ,gBAAkC;AAElC,EAAA,IAAMvW,IAAI,GAAGD,UAAU,CAACqC,MAAX,KAAsB,EAAnC,CAAA;AACA,EAAA,IAAMzF,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;EACA,IAAMwW,SAAS,GAAGrQ,KAAK,CAACzK,GAAN,CAAU,UAAA6J,GAAA,EAAO;AAAA,IAAA,OAAAkE,iBAAiB,CAAC1J,UAAD,EAAawF,GAAb,EAAkB5I,CAAlB,CAAjB,CAAA;AAAqC,GAAtD,CAAlB,CAAA;AACQ,EAAA,IAAAd,IAAI,GAAU0a,cAAc,CAAA1a,IAA5B;AAAA,MAAMD,GAAG,GAAK2a,cAAc,CAAA3a,GAA5B,CAAA;AAER,EAAA,OAAO4a,SAAS,CAAC9a,GAAV,CAAc,UAAA6J,GAAA,EAAG;AACpB,IAAA,OAAO,CAACA,GAAG,CAAC,CAAD,CAAH,GAAS1J,IAAV,EAAgB0J,GAAG,CAAC,CAAD,CAAH,GAAS3J,GAAzB,CAAP,CAAA;AACH,GAFM,CAAP,CAAA;AAIH,CAAA;AACK,SAAU8F,yBAAV,CACFX,MADE,EAEFJ,MAFE,EAGFuE,KAHE,EAIFC,MAJE,EAIY;AAEd,EAAA,IAAMnF,IAAI,GAAGe,MAAM,CAACqB,MAAP,KAAkB,EAA/B,CAAA;AACA,EAAA,IAAMzF,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;EACA,IAAMmG,KAAK,GAAGS,cAAc,CAAC7F,MAAD,EAASmE,KAAT,EAAgBC,MAAhB,EAAwBxI,CAAxB,CAA5B,CAAA;AAEI,EAAA,IAAAmB,KAIAqI,KAAK,CAAA,CAAA,CAJL;AAAA,MAAC1M,EAAE,QAAH;AAAA,MAAKgd,EAAE,GAAA3Y,EAAA,CAAA,CAAA,CAAP;AAAA,MACAD,KAGAsI,KAAK,CAAA,CAAA,CAJL;AAAA,MACCuQ,EAAE,GAAA7Y,EAAA,CAAA,CAAA,CADH;AAAA,MACK8Y,EAAE,GAAA9Y,EAAA,CAAA,CAAA,CADP;AAAA,MAEAyC,EAAA,GAEA6F,KAAK,CAFG,CAEH,CAJL;AAAA,MAECyQ,EAAE,GAAAtW,EAAA,CAAA,CAAA,CAFH;AAAA,MAEKuW,EAAE,GAAAvW,EAAA,CAAA,CAAA,CAFP;AAAA,MAGAyV,EACA,GAAA5P,KAAK,EAAA,CAJL;AAAA,MAGC2Q,EAAE,QAHH;AAAA,MAGKC,EAAE,QAHP,CAAA;;EAKA,IAAAC,EAAqB,GAAAvN,iBAAiB,CAAC1I,MAAD,EAASJ,MAAT,EAAiBhE,CAAjB,CAAtC;AAAA,MAACb,OAAO,GAAAkb,EAAA,CAAA,CAAA,CAAR;AAAA,MAAUjb,OAAO,QAAjB,CAAA;;AAEJ,EAAA,IAAMF,IAAI,GAAGlC,IAAI,CAACwa,GAAL,CAAS1a,EAAT,EAAaid,EAAb,EAAiBE,EAAjB,EAAqBE,EAArB,CAAb,CAAA;AACA,EAAA,IAAMlb,GAAG,GAAGjC,IAAI,CAACwa,GAAL,CAASsC,EAAT,EAAaE,EAAb,EAAiBE,EAAjB,EAAqBE,EAArB,CAAZ,CAAA;AACA,EAAA,IAAMrC,KAAK,GAAG/a,IAAI,CAACua,GAAL,CAASza,EAAT,EAAaid,EAAb,EAAiBE,EAAjB,EAAqBE,EAArB,CAAd,CAAA;AACA,EAAA,IAAMtQ,MAAM,GAAG7M,IAAI,CAACua,GAAL,CAASuC,EAAT,EAAaE,EAAb,EAAiBE,EAAjB,EAAqBE,EAArB,CAAf,CAAA;AAEAtd,EAAAA,EAAE,GAAIA,EAAE,GAAGoC,IAAN,IAAe,CAApB,CAAA;AACA6a,EAAAA,EAAE,GAAIA,EAAE,GAAG7a,IAAN,IAAe,CAApB,CAAA;AACA+a,EAAAA,EAAE,GAAIA,EAAE,GAAG/a,IAAN,IAAe,CAApB,CAAA;AACAib,EAAAA,EAAE,GAAIA,EAAE,GAAGjb,IAAN,IAAe,CAApB,CAAA;AAEA4a,EAAAA,EAAE,GAAIA,EAAE,GAAG7a,GAAN,IAAc,CAAnB,CAAA;AACA+a,EAAAA,EAAE,GAAIA,EAAE,GAAG/a,GAAN,IAAc,CAAnB,CAAA;AACAib,EAAAA,EAAE,GAAIA,EAAE,GAAGjb,GAAN,IAAc,CAAnB,CAAA;AACAmb,EAAAA,EAAE,GAAIA,EAAE,GAAGnb,GAAN,IAAc,CAAnB,CAAA;AAEAE,EAAAA,OAAO,GAAIA,OAAO,GAAGD,IAAX,IAAoB,CAA9B,CAAA;AACAE,EAAAA,OAAO,GAAIA,OAAO,GAAGH,GAAX,IAAmB,CAA7B,CAAA;AAEA,EAAA,IAAMgG,SAAS,GAAGqV,iBAAiB,CAACrQ,cAAc,CAAC7F,MAAD,EAAS,GAAT,EAAc,GAAd,EAAmBpE,CAAnB,CAAf,CAAnC,CAAA;EACA,OAAO;AACHd,IAAAA,IAAI,EAAAA,IADD;AAEHD,IAAAA,GAAG,EAAAA,GAFA;AAGH8Y,IAAAA,KAAK,EAAAA,KAHF;AAIHlO,IAAAA,MAAM,EAAAA,MAJH;AAKH7F,IAAAA,MAAM,EAAE,CAAC7E,OAAD,EAAUC,OAAV,CALL;AAMHkE,IAAAA,IAAI,EAAE,CAACxG,EAAD,EAAKgd,EAAL,CANH;AAOHzG,IAAAA,IAAI,EAAE,CAAC0G,EAAD,EAAKC,EAAL,CAPH;AAQHO,IAAAA,IAAI,EAAE,CAACN,EAAD,EAAKC,EAAL,CARH;AASHM,IAAAA,IAAI,EAAE,CAACL,EAAD,EAAKC,EAAL,CATH;AAUHnV,IAAAA,SAAS,EAAAA,SAAAA;GAVb,CAAA;AAYH,CAAA;AACK,SAAUwV,WAAV,CAAsBC,GAAtB,EAAmC;EACrC,OAAO1d,IAAI,CAAC2d,IAAL,CAAUD,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAxC,CAAP,CAAA;AACH,CAAA;AACe,SAAAE,eAAA,CAAgBtX,IAAhB,EAAgC+P,IAAhC,EAA8C;EAC1D,OAAOoH,WAAW,CAAC,CACfpH,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CADC,EAEf+P,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAFC,CAAD,CAAlB,CAAA;AAIH,CAAA;AACK,SAAUuX,YAAV,CAAuBvX,IAAvB,EAAuC+P,IAAvC,EAAuDtE,IAAvD,EAAiE+L,GAAjE,EAAiG;AAA1C,EAAA,IAAA/L,IAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,IAAQ,GAAA,CAAR,CAAA;AAAQ,GAAA;;AAAE,EAAA,IAAA+L,GAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,GAAc,GAAAC,MAAM,CAACzX,IAAD,EAAO+P,IAAP,CAApB,CAAA;AAAgC,GAAA;;AACnG,EAAA,IAAM9K,KAAK,GAAGqS,eAAe,CAACtX,IAAD,EAAO+P,IAAP,CAA7B,CAAA;EAEA,OAAO;AACH/I,IAAAA,SAAS,EAAE,6BAAA,CAAA1N,MAAA,CAA8B0G,IAAI,CAAC,CAAD,CAAlC,EAAqC,MAArC,CAAqC1G,CAAAA,MAArC,CAA4C0G,IAAI,CAAC,CAAD,CAAhD,EAAmD,aAAnD,CAAmD1G,CAAAA,MAAnD,CAAiEke,GAAjE,EAAoE,cAApE,CAAA,CAAoEle,MAApE,CAAmFmS,IAAnF,EAA0F,GAA1F,CADR;AAEHxG,IAAAA,KAAK,EAAE,EAAG3L,CAAAA,MAAH,CAAG2L,KAAH,EAAY,IAAZ,CAAA;GAFX,CAAA;AAIH,CAAA;AACe,SAAAyS,mBAAA,CAAoBC,QAApB,EAAsClM,IAAtC,EAAkD;EAAE,IAAoBvF,KAAA,GAAA,EAApB,CAAA;;OAAA,IAAoBgK,EAAA,GAAA,GAApBA,EAAoB,GAAAC,SAAA,CAAAhO,QAApB+N,EAAoB,IAAA;IAApBhK,KAAoB,CAAAgK,EAAA,GAAA,CAAA,CAApB,GAAoBC,SAAA,CAAAD,EAAA,CAApB,CAAA;;;AAChE,EAAA,IAAM/N,MAAM,GAAG+D,KAAK,CAAC/D,MAArB,CAAA;EAEA,IAAMiR,CAAC,GAAGlN,KAAK,CAAC0R,MAAN,CAAa,UAACC,IAAD,EAAOvS,GAAP,EAAe;AAAA,IAAA,OAAAuS,IAAI,GAAGvS,GAAG,CAAC,CAAD,CAAV,CAAA;GAA5B,EAA2C,CAA3C,CAAA,GAAgDnD,MAA1D,CAAA;EACA,IAAMkR,CAAC,GAAGnN,KAAK,CAAC0R,MAAN,CAAa,UAACC,IAAD,EAAOvS,GAAP,EAAe;AAAA,IAAA,OAAAuS,IAAI,GAAGvS,GAAG,CAAC,CAAD,CAAV,CAAA;GAA5B,EAA2C,CAA3C,CAAA,GAAgDnD,MAA1D,CAAA;EACA,OAAO;IACH6E,SAAS,EAAE,mCAAA,CAA6BoM,CAA7B,EAA8B,MAA9B,CAAA,CAA8B9Z,MAA9B,CAAqC+Z,CAArC,EAAoD,aAApD,CAAoD/Z,CAAAA,MAApD,CAAoDqe,QAApD,EAA0E,aAA1E,EAA0Ere,MAA1E,CAA0EmS,IAA1E,EAAiF,GAAjF,CAAA;GADf,CAAA;AAGH,CAAA;AAEe,SAAAqM,QAAA,CAAgB9e,KAAhB,EAA8B0E,QAA9B,EAAmD;AAC/D,EAAA,IAAMqa,IAAI,GAAG/e,KAAK,CAAC0E,QAAD,CAAlB,CAAA;;AAEA,EAAA,IAAI8S,QAAQ,CAACuH,IAAD,CAAZ,EAAoB;IAChB,OACOjf,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAE,KAAA,CAAA,EACA+e,IADA,CADP,CAAA;AAIH,GAAA;;AACD,EAAA,OAAO/e,KAAP,CAAA;AACH,CAAA;AAEK,SAAU+b,OAAV,CACFrK,MADE,EACsC;EAExC,IAAMoC,SAAS,GAAGpC,MAAM,IAAI,CAAC8H,WAAW,CAAE9H,MAAc,CAACsK,WAAjB,CAAxC,CAAA;EAEA,IAAIA,WAAW,GAAG,CAAlB,CAAA;EACA,IAAIC,YAAY,GAAG,CAAnB,CAAA;EACA,IAAI/B,WAAW,GAAG,CAAlB,CAAA;EACA,IAAIC,YAAY,GAAG,CAAnB,CAAA;EACA,IAAI6E,QAAQ,GAAG,CAAf,CAAA;EACA,IAAIC,SAAS,GAAG,CAAhB,CAAA;EACA,IAAIC,YAAY,GAAG,CAAnB,CAAA;EACA,IAAIC,aAAa,GAAG,CAApB,CAAA;EAEA,IAAIC,QAAQ,GAAG,CAAf,CAAA;EACA,IAAIC,SAAS,GAAG,CAAhB,CAAA;EACA,IAAIC,cAAc,GAAG,CAArB,CAAA;EACA,IAAIC,eAAe,GAAG,CAAtB,CAAA;EAEA,IAAIC,QAAQ,GAAGC,QAAf,CAAA;EACA,IAAIC,SAAS,GAAGD,QAAhB,CAAA;EACA,IAAIE,cAAc,GAAGF,QAArB,CAAA;EACA,IAAIG,eAAe,GAAGH,QAAtB,CAAA;EACA,IAAII,cAAc,GAAG,CAArB,CAAA;EACA,IAAIC,eAAe,GAAG,CAAtB,CAAA;EACA,IAAIC,GAAG,GAAG,KAAV,CAAA;;AAEA,EAAA,IAAIrO,MAAJ,EAAY;IACR,IAAI,CAACoC,SAAD,IAAcpC,MAAO,CAACmC,OAAR,CAAgBpS,WAAhB,EAAkC,KAAA,KAApD,EAA2D;AACvD;AACA,MAAA,IAAM4Z,IAAI,GAAI3J,MAA6B,CAAC0J,OAA9B,EAAd,CAAA;AAEA2E,MAAAA,GAAG,GAAG,IAAN,CAAA;MACA/D,WAAW,GAAGX,IAAI,CAACpP,KAAnB,CAAA;MACAgQ,YAAY,GAAGZ,IAAI,CAACnP,MAApB,CAAA;AACA8S,MAAAA,QAAQ,GAAGhD,WAAX,CAAA;AACAiD,MAAAA,SAAS,GAAGhD,YAAZ,CAAA;AACAiD,MAAAA,YAAY,GAAGlD,WAAf,CAAA;AACAmD,MAAAA,aAAa,GAAGlD,YAAhB,CAAA;AACA/B,MAAAA,WAAW,GAAG8B,WAAd,CAAA;AACA7B,MAAAA,YAAY,GAAG8B,YAAf,CAAA;AACH,KAbD,MAaO;AACH;AACA,MAAA,IAAMvJ,QAAQ,GAAGC,cAAc,CAACjB,MAAD,CAA/B,CAAA;AACA,MAAA,IAAMsO,WAAW,GAAGtO,MAAM,CAACkF,KAA3B,CAAA;AACA,MAAA,IAAMqJ,SAAS,GAAGvN,QAAQ,CAAC,WAAD,CAAR,KAA0B,YAA5C,CAAA;MACA,IAAMwN,UAAU,GAAGxe,UAAU,CAACgR,QAAQ,CAAC,iBAAD,CAAT,CAAV,IAA2C,CAA9D,CAAA;MACA,IAAMyN,WAAW,GAAGze,UAAU,CAACgR,QAAQ,CAAC,kBAAD,CAAT,CAAV,IAA4C,CAAhE,CAAA;MACA,IAAM0N,SAAS,GAAG1e,UAAU,CAACgR,QAAQ,CAAC,gBAAD,CAAT,CAAV,IAA0C,CAA5D,CAAA;MACA,IAAM2N,YAAY,GAAG3e,UAAU,CAACgR,QAAQ,CAAC,mBAAD,CAAT,CAAV,IAA6C,CAAlE,CAAA;MACA,IAAM4N,WAAW,GAAG5e,UAAU,CAACgR,QAAQ,CAAC,aAAD,CAAT,CAAV,IAAuC,CAA3D,CAAA;MACA,IAAM6N,YAAY,GAAG7e,UAAU,CAACgR,QAAQ,CAAC,cAAD,CAAT,CAAV,IAAwC,CAA7D,CAAA;MACA,IAAM8N,UAAU,GAAG9e,UAAU,CAACgR,QAAQ,CAAC,YAAD,CAAT,CAAV,IAAsC,CAAzD,CAAA;MACA,IAAM+N,aAAa,GAAG/e,UAAU,CAACgR,QAAQ,CAAC,eAAD,CAAT,CAAV,IAAyC,CAA/D,CAAA;AAEA,MAAA,IAAMgO,iBAAiB,GAAGJ,WAAW,GAAGC,YAAxC,CAAA;AACA,MAAA,IAAMI,eAAe,GAAGH,UAAU,GAAGC,aAArC,CAAA;AACA,MAAA,IAAMG,gBAAgB,GAAGV,UAAU,GAAGC,WAAtC,CAAA;AACA,MAAA,IAAMU,cAAc,GAAGT,SAAS,GAAGC,YAAnC,CAAA;AACA,MAAA,IAAMS,gBAAgB,GAAGJ,iBAAiB,GAAGE,gBAA7C,CAAA;AACA,MAAA,IAAMG,cAAc,GAAGJ,eAAe,GAAGE,cAAzC,CAAA;AACA,MAAA,IAAMjO,QAAQ,GAAGF,QAAQ,CAAC,UAAD,CAAzB,CAAA;MAEA,IAAIsO,cAAc,GAAG,CAArB,CAAA;AACA,MAAA,IAAIC,eAAe,GAAG,CAAtB,CAvBG;;MA0BH,IAAI,YAAA,IAAgBvP,MAApB,EAA4B;QACxB,IAAIL,aAAa,GAAuB,IAAxC,CAAA;;QAEA,IAAIuB,QAAQ,KAAK,UAAjB,EAA6B;UACzB,IAAM4B,UAAU,GAAGjC,aAAa,CAACb,MAAD,EAASM,QAAQ,CAACC,IAAlB,CAAhC,CAAA;UACAZ,aAAa,GAAGmD,UAAU,CAAChC,YAA3B,CAAA;AAEH,SAJD,MAIO;UACHnB,aAAa,GAAGK,MAAM,CAACL,aAAvB,CAAA;AACH,SAAA;;AACD,QAAA,IAAIA,aAAJ,EAAmB;AACf,UAAA,IAAM6P,cAAc,GAAGvO,cAAc,CAACtB,aAAD,CAArC,CAAA;AAEA2P,UAAAA,cAAc,GAAGtf,UAAU,CAACwf,cAAc,CAAC,OAAD,CAAf,CAA3B,CAAA;AACAD,UAAAA,eAAe,GAAGvf,UAAU,CAACwf,cAAc,CAAC,QAAD,CAAf,CAA5B,CAAA;AACH,SAAA;AACJ,OAAA;;AACD9B,MAAAA,QAAQ,GAAG1e,IAAI,CAACua,GAAL,CACPyF,iBADO,EAEPS,eAAe,CAACzO,QAAQ,CAAC,UAAD,CAAT,EAAuBsO,cAAvB,CAAf,IAAyD,CAFlD,CAAX,CAAA;AAIA3B,MAAAA,SAAS,GAAG3e,IAAI,CAACua,GAAL,CACR0F,eADQ,EAERQ,eAAe,CAACzO,QAAQ,CAAC,WAAD,CAAT,EAAwBuO,eAAxB,CAAf,IAA2D,CAFnD,CAAZ,CAAA;MAIAzB,QAAQ,GAAG2B,eAAe,CAACzO,QAAQ,CAAC,UAAD,CAAT,EAAuBsO,cAAvB,CAA1B,CAAA;MACAtB,SAAS,GAAGyB,eAAe,CAACzO,QAAQ,CAAC,WAAD,CAAT,EAAwBuO,eAAxB,CAA3B,CAAA;;AAEA,MAAA,IAAIrU,KAAK,CAAC4S,QAAD,CAAT,EAAqB;AACjBA,QAAAA,QAAQ,GAAGC,QAAX,CAAA;AACH,OAAA;;AACD,MAAA,IAAI7S,KAAK,CAAC8S,SAAD,CAAT,EAAsB;AAClBA,QAAAA,SAAS,GAAGD,QAAZ,CAAA;AACH,OAAA;;MACDI,cAAc,GAAGsB,eAAe,CAACnB,WAAW,CAAC/T,KAAb,EAAoB,CAApB,CAAf,IAAyC,CAA1D,CAAA;MACA6T,eAAe,GAAGqB,eAAe,CAACnB,WAAW,CAAC9T,MAAb,EAAqB,CAArB,CAAf,IAA0C,CAA5D,CAAA;MACA8S,QAAQ,GAAGtd,UAAU,CAACgR,QAAQ,CAAC,OAAD,CAAT,CAAV,IAAiC,CAA5C,CAAA;MACAuM,SAAS,GAAGvd,UAAU,CAACgR,QAAQ,CAAC,QAAD,CAAT,CAAV,IAAkC,CAA9C,CAAA;MAGAwM,YAAY,GAAGxe,IAAI,CAACyc,GAAL,CAAS6B,QAAQ,GAAGa,cAApB,CAAA,GAAsC,CAAtC,GACTuB,OAAO,CAAChC,QAAD,EAAWS,cAAc,IAAIb,QAA7B,EAAuCQ,QAAvC,CADE,GAETR,QAFN,CAAA;MAGAG,aAAa,GAAGze,IAAI,CAACyc,GAAL,CAAS8B,SAAS,GAAGa,eAArB,CAAA,GAAwC,CAAxC,GACVsB,OAAO,CAAC/B,SAAD,EAAYS,eAAe,IAAIb,SAA/B,EAA0CS,SAA1C,CADG,GAEVT,SAFN,CAAA;AAIAjD,MAAAA,WAAW,GAAGkD,YAAd,CAAA;AACAjD,MAAAA,YAAY,GAAGkD,aAAf,CAAA;AACAjF,MAAAA,WAAW,GAAGgF,YAAd,CAAA;AACA/E,MAAAA,YAAY,GAAGgF,aAAf,CAAA;;AAEA,MAAA,IAAIc,SAAJ,EAAe;AACXN,QAAAA,cAAc,GAAGH,QAAjB,CAAA;AACAI,QAAAA,eAAe,GAAGF,SAAlB,CAAA;AACAJ,QAAAA,cAAc,GAAGF,QAAjB,CAAA;AACAG,QAAAA,eAAe,GAAGF,SAAlB,CAAA;QACAH,YAAY,GAAGlD,WAAW,GAAG8E,gBAA7B,CAAA;QACA3B,aAAa,GAAGlD,YAAY,GAAG8E,cAA/B,CAAA;AACH,OAPD,MAOO;QACHpB,cAAc,GAAGH,QAAQ,GAAGsB,gBAA5B,CAAA;QACAlB,eAAe,GAAGF,SAAS,GAAGqB,cAA9B,CAAA;QACAzB,cAAc,GAAGF,QAAQ,GAAG0B,gBAA5B,CAAA;QACAvB,eAAe,GAAGF,SAAS,GAAG0B,cAA9B,CAAA;QACA/E,WAAW,GAAGkD,YAAY,GAAG4B,gBAA7B,CAAA;QACA7E,YAAY,GAAGkD,aAAa,GAAG4B,cAA/B,CAAA;AACH,OAAA;;MACD7G,WAAW,GAAGgF,YAAY,GAAGwB,iBAA7B,CAAA;MACAvG,YAAY,GAAGgF,aAAa,GAAGwB,eAA/B,CAAA;AACH,KAAA;AACJ,GAAA;;EAED,OAAO;AACHZ,IAAAA,GAAG,EAAAA,GADA;AAEH/D,IAAAA,WAAW,EAAAA,WAFR;AAGHC,IAAAA,YAAY,EAAAA,YAHT;AAIH/B,IAAAA,WAAW,EAAAA,WAJR;AAKHC,IAAAA,YAAY,EAAAA,YALT;AAMH+E,IAAAA,YAAY,EAAAA,YANT;AAOHC,IAAAA,aAAa,EAAAA,aAPV;AAQHU,IAAAA,cAAc,EAAAA,cARX;AASHC,IAAAA,eAAe,EAAAA,eATZ;AAUHd,IAAAA,QAAQ,EAAAA,QAVL;AAWHC,IAAAA,SAAS,EAAAA,SAXN;AAYHG,IAAAA,QAAQ,EAAAA,QAZL;AAaHC,IAAAA,SAAS,EAAAA,SAbN;AAcHG,IAAAA,QAAQ,EAAAA,QAdL;AAeHE,IAAAA,SAAS,EAAAA,SAfN;AAgBHJ,IAAAA,cAAc,EAAAA,cAhBX;AAiBHC,IAAAA,eAAe,EAAAA,eAjBZ;AAkBHI,IAAAA,cAAc,EAAAA,cAlBX;AAmBHC,IAAAA,eAAe,EAAAA,eAAAA;GAnBnB,CAAA;AAqBH,CAAA;AACe,SAAAyB,cAAA,CACZnU,KADY,EAEZvE,SAFY,EAEK;AAEjB,EAAA,OAAO8V,MAAM,CAAC9V,SAAS,GAAG,CAAZ,GAAgBuE,KAAK,CAAC,CAAD,CAArB,GAA2BA,KAAK,CAAC,CAAD,CAAjC,EAAsCvE,SAAS,GAAG,CAAZ,GAAgBuE,KAAK,CAAC,CAAD,CAArB,GAA2BA,KAAK,CAAC,CAAD,CAAtE,CAAb,CAAA;AACH,CAAA;SAEeoU,kBAAe;EAC3B,OAAO;AACH1e,IAAAA,IAAI,EAAE,CADH;AACMD,IAAAA,GAAG,EAAE,CADX;AAEHsJ,IAAAA,KAAK,EAAE,CAFJ;AAEOC,IAAAA,MAAM,EAAE,CAFf;AAGHuP,IAAAA,KAAK,EAAE,CAHJ;AAIHlO,IAAAA,MAAM,EAAE,CAJL;AAKHwH,IAAAA,UAAU,EAAE,CALT;AAKYC,IAAAA,SAAS,EAAE,CALvB;AAMHkF,IAAAA,WAAW,EAAE,CANV;AAMaC,IAAAA,YAAY,EAAE,CAN3B;AAOHoH,IAAAA,WAAW,EAAE,CAPV;AAOaC,IAAAA,YAAY,EAAE,CAAA;GAPlC,CAAA;AASH,CAAA;AAEe,SAAAC,cAAA,CACZ5P,EADY,EAEZuK,IAFY,EAEY;AAExB,EAAA,IAAMsF,MAAM,GAAG7P,EAAE,KAAKG,QAAQ,CAACC,IAAhB,IAAwBJ,EAAE,KAAKG,QAAQ,CAACD,eAAvD,CAAA;AAGA,EAAA,IAAM4P,WAAW,GAAG;IAChB5M,UAAU,EAAElD,EAAE,CAACkD,UADC;IAEhBC,SAAS,EAAEnD,EAAE,CAACmD,SAFE;IAGhBkF,WAAW,EAAErI,EAAE,CAACqI,WAHA;IAIhBC,YAAY,EAAEtI,EAAE,CAACsI,YAJD;IAKhBoH,WAAW,EAAE1P,EAAE,CAAC0P,WALA;IAMhBC,YAAY,EAAE3P,EAAE,CAAC2P,YAND;AAOhBI,IAAAA,QAAQ,EAAE,KAAA;GAPd,CAAA;;AAUA,EAAA,IAAIF,MAAJ,EAAY;AACRC,IAAAA,WAAW,CAACxH,YAAZ,GAA2BzZ,IAAI,CAACua,GAAL,CAASmB,IAAI,CAAClQ,MAAd,EAAsByV,WAAW,CAACxH,YAAlC,CAA3B,CAAA;AACAwH,IAAAA,WAAW,CAACH,YAAZ,GAA2B9gB,IAAI,CAACua,GAAL,CAASmB,IAAI,CAAClQ,MAAd,EAAsByV,WAAW,CAACH,YAAlC,CAA3B,CAAA;AACH,GAAA;;EAEDG,WAAW,CAACC,QAAZ,GAAuBjP,cAAc,CAACd,EAAD,CAAd,CAAmB,UAAnB,CAAA,KAAmC,SAA1D,CAAA;EAEA,OACO/R,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAsc,IAAA,CAAA,EACAuF,WADA,CADP,CAAA;AAIH,CAAA;AAEK,SAAUE,uBAAV,CACFjP,QADE,EAEFkP,IAFE,EAGFjQ,EAHE,EAG6BkQ,SAH7B,EAGgD;AAG9C,EAAA,IAAAnf,IAAI,GAIJgQ,QAAQ,KAJR;AAAA,MACA6I,KAAK,GAGL7I,QAAQ,CAAA6I,KAJR;AAAA,MAEA9Y,GAAG,GAEHiQ,QAAQ,CAFLjQ,GAFH;AAAA,MAGA4K,MAAM,GACNqF,QAAQ,OAJR,CAAA;AAKJ,EAAA,IAAMoP,OAAO,GAAGF,IAAI,CAACnf,GAArB,CAAA;AACA,EAAA,IAAMsf,QAAQ,GAAGH,IAAI,CAAClf,IAAtB,CAAA;AAEA,EAAA,IAAMwZ,IAAI,GAAuB;IAC7BxZ,IAAI,EAAEqf,QAAQ,GAAGrf,IADY;IAE7BD,GAAG,EAAEqf,OAAO,GAAGrf,GAFc;IAG7B8Y,KAAK,EAAEwG,QAAQ,GAAGxG,KAHW;IAI7BlO,MAAM,EAAEyU,OAAO,GAAGzU,MAJW;IAK7BtB,KAAK,EAAEwP,KAAK,GAAG7Y,IALc;IAM7BsJ,MAAM,EAAEqB,MAAM,GAAG5K,GAAAA;GANrB,CAAA;;EAUA,IAAIkP,EAAE,IAAIkQ,SAAV,EAAqB;AACjB,IAAA,OAAON,cAAc,CAAC5P,EAAD,EAAKuK,IAAL,CAArB,CAAA;AACH,GAAA;;AACD,EAAA,OAAOA,IAAP,CAAA;AACH,CAAA;AACe,SAAAhG,aAAA,CAAcvE,EAAd,EAA4CkQ,SAA5C,EAA+D;EAC3E,IAAInf,IAAI,GAAG,CAAX,CAAA;EACA,IAAID,GAAG,GAAG,CAAV,CAAA;EACA,IAAIsJ,KAAK,GAAG,CAAZ,CAAA;AACA,EAAA,IAAIC,MAAM,GAAG,CAAb,CAJ2E;;AAO3E,EAAA,IAAI2F,EAAJ,EAAQ;AACJ,IAAA,IAAMoE,UAAU,GAAGpE,EAAE,CAACsK,qBAAH,EAAnB,CAAA;IAEAvZ,IAAI,GAAGqT,UAAU,CAACrT,IAAlB,CAAA;IACAD,GAAG,GAAGsT,UAAU,CAACtT,GAAjB,CAAA;IACAsJ,KAAK,GAAGgK,UAAU,CAAChK,KAAnB,CAAA;IACAC,MAAM,GAAG+J,UAAU,CAAC/J,MAApB,CAAA;AACH,GAAA;;AAED,EAAA,IAAMkQ,IAAI,GAAuB;AAC7BxZ,IAAAA,IAAI,EAAAA,IADyB;AAE7BD,IAAAA,GAAG,EAAAA,GAF0B;AAG7BsJ,IAAAA,KAAK,EAAAA,KAHwB;AAI7BC,IAAAA,MAAM,EAAAA,MAJuB;IAK7BuP,KAAK,EAAE7Y,IAAI,GAAGqJ,KALe;IAM7BsB,MAAM,EAAE5K,GAAG,GAAGuJ,MAAAA;GANlB,CAAA;;EASA,IAAI2F,EAAE,IAAIkQ,SAAV,EAAqB;AACjB,IAAA,OAAON,cAAc,CAAC5P,EAAD,EAAKuK,IAAL,CAArB,CAAA;AACH,GAAA;;AACD,EAAA,OAAOA,IAAP,CAAA;AACH,CAAA;AACK,SAAU8F,iBAAV,CACFC,eADE,EAEF3d,OAFE,EAGFQ,UAHE,EAIFC,KAJE,EAIQ;AAEV,EAAA,IAAI0D,SAAJ,CAAA;;AAEA,EAAA,IAAIwZ,eAAJ,EAAqB;AACjBxZ,IAAAA,SAAS,GAAGwZ,eAAZ,CAAA;GADJ,MAEO,IAAI3d,OAAJ,EAAa;AAChBmE,IAAAA,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAZ,CAAA;AACH,GAFM,MAEA;AACH,IAAA,IAAM+I,MAAM,GAAG1M,UAAU,CAAC0M,MAA1B,CAAA;AAEA/I,IAAAA,SAAS,GAAGyZ,YAAY,CAAC1Q,MAAD,EAASzM,KAAT,CAAxB,CAAA;AACH,GAAA;;AACD,EAAA,OAAO0D,SAAP,CAAA;AACH,CAAA;AACe,SAAAyZ,YAAA,CAAa1Q,MAAb,EAA+CzM,KAA/C,EAAyD;EACrE,IAAI,CAACyM,MAAL,EAAa;AACT,IAAA,OAAA;AACH,GAAA;;EACD,IAAM2Q,GAAG,GAAG3Q,MAAM,CAAC4Q,YAAP,CAAoB,eAApB,KAAwC,EAApD,CAAA;AACA,EAAA,IAAMC,SAAS,GAAG7Q,MAAM,CAAC4Q,YAAP,CAAoB,gBAApB,CAAlB,CAAA;EAEArd,KAAK,CAACod,GAAN,GAAYA,GAAZ,CAAA;;EAEA,IAAI,CAACE,SAAL,EAAgB;AACZ,IAAA,OAAA;AACH,GAAA;;AACD,EAAA,IAAM7f,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAZ,CAAA;AAEC6f,EAAAA,SAAS,CAACxf,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA3B,KAAkCL,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAA5C,CAAA,CAAA;AACC6f,EAAAA,SAAS,CAACxf,OAAV,CAAkB,GAAlB,CAAyB,GAAA,CAAC,CAA3B,KAAkCL,GAAG,CAAC,CAAD,CAAH,GAAS,CAA3C,CAAA,CAAA;AACC6f,EAAAA,SAAS,CAACxf,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA3B,KAAkCL,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,CAA5C,CAAA,CAAA;AACC6f,EAAAA,SAAS,CAACxf,OAAV,CAAkB,GAAlB,CAAyB,GAAA,CAAC,CAA3B,KAAkCL,GAAG,CAAC,CAAD,CAAH,GAAS,CAA3C,CAAA,CAAA;AAEA,EAAA,OAAOA,GAAP,CAAA;AACH,CAAA;AACe,SAAA8f,gBAAA,CAAiBtV,KAAjB,EAAoChC,IAApC,EAAkD;AAC9D,EAAA,OAAO,CACH9C,IAAI,CAAC8C,IAAD,EAAOgC,KAAK,CAAC,CAAD,CAAZ,CADD,EAEH9E,IAAI,CAAC8C,IAAD,EAAOgC,KAAK,CAAC,CAAD,CAAZ,CAFD,EAGH9E,IAAI,CAAC8C,IAAD,EAAOgC,KAAK,CAAC,CAAD,CAAZ,CAHD,EAIH9E,IAAI,CAAC8C,IAAD,EAAOgC,KAAK,CAAC,CAAD,CAAZ,CAJD,CAAP,CAAA;AAMH,CAAA;AACK,SAAU4D,uBAAV,CAAkCjM,EAAlC,EAcL;AAbG,EAAA,IAAAjC,IAAI,GAAAiC,EAAA,CAAAjC,IAAJ;AAAA,MACAD,GAAG,GAAAkC,EAAA,CAAAlC,GADH;AAAA,MAEAqE,IAAI,GAAAnC,EAAA,CAAAmC,IAFJ;AAAA,MAGA+P,IAAI,UAHJ;AAAA,MAIAkH,IAAI,GAAApZ,EAAA,CAAAoZ,IAJJ;AAAA,MAKAC,IAAI,GAAArZ,EAAA,CAAAqZ,IALJ,CAAA;AAcA,EAAA,OAAOsE,gBAAgB,CAAC,CAACxb,IAAD,EAAO+P,IAAP,EAAakH,IAAb,EAAmBC,IAAnB,CAAD,EAA2B,CAACtb,IAAD,EAAOD,GAAP,CAA3B,CAAvB,CAAA;AACH,CAAA;AAEK,SAAU8f,SAAV,CAAoBC,GAApB,EAA+B;AACjC,EAAA,OAAOhiB,IAAI,CAACC,KAAL,CAAW+hB,GAAG,GAAG,CAAN,KAAY,CAAC,GAAb,GAAmBA,GAAG,GAAG,CAAzB,GAA6BA,GAAxC,CAAP,CAAA;AACH,CAAA;AAEe,SAAAC,KAAA,CAAM5D,IAAN,EAAiBnf,IAAjB,EAA6B;;;EACzC,CAAAiF,EAAA,GAAAka,IAAI,CAACnf,IAAD,CAAJ,MAAY,IAAZ,IAAYiF,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAYA,EAAA,CAAA8d,KAAA,EAAZ,CAAA;AACA5D,EAAAA,IAAI,CAACnf,IAAD,CAAJ,GAAa,IAAb,CAAA;AACH,CAAA;AAEe,SAAA+P,aAAA,CAAciH,KAAd,EAA0CgM,aAA1C,EAA6D;AACzE,EAAA,IAAIA,aAAJ,EAAmB;AACf,IAAA,IAAM1d,aAAa,GAAGqJ,wBAAwB,CAACqU,aAAD,CAA9C,CAAA;AAEA1d,IAAAA,aAAa,CAACqK,SAAd,GACOzP,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAoF,aAAa,CAACqK,SAAd,CAAA,EACAqH,KADA,CADP,CAAA;AAIH,GAAA;;EACD,OAAO;AACHA,IAAAA,KAAK,EAAAA,KADF;IAEHiM,OAAO,EAAEC,OAAO,CAAClM,KAAD,CAAP,CAAenU,GAAf,CAAmB,UAAA7C,IAAA,EAAI;MAAI,OAAA,EAAA,CAAAU,MAAA,CAAGyiB,UAAU,CAACnjB,IAAD,EAAO,GAAP,CAAb,EAAwB,IAAxB,CAAwBU,CAAAA,MAAxB,CAA6BsW,KAAK,CAAChX,IAAD,CAAlC,EAAwC,GAAxC,CAAA,CAAA;KAA3B,CAAA,CAAwEoD,IAAxE,CAA6E,EAA7E,CAAA;GAFb,CAAA;AAIH,CAAA;SAEeggB,mBACZC,WACAC,WACAN,eAAmB;EAEnB,IAAMtY,cAAc,GAAG4Y,SAAS,CAAC5Y,cAAV,IAA4B4Y,SAAS,CAAClV,SAA7D,CAAA;EAEA,OACOlO,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA6P,aAAa,CACT7P,QAAA,CAAAA,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAmjB,SAAS,CAACrM,KAAV,CAAA,EACAsM,SAAS,CAACtM,KADV,CAAA,EACe;AAClB5I,IAAAA,SAAS,EAAE1D,cAAAA;AADO,GADf,CADS,EAIbsY,aAJa,CAAb,CAAA,EAIc;AACjBtY,IAAAA,cAAc,EAAAA,cADG;IAEjB0D,SAAS,EAAEiV,SAAS,CAACjV,SAAAA;AAFJ,GAJd,CADP,CAAA;AASH,CAAA;AAEK,SAAUmV,UAAV,CACFvc,QADE,EAEFjD,CAFE,EAGFyf,MAHE,EAIFC,aAJE,EAIqB;AAEvB,EAAA,IAAMpe,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;;AAEA,EAAA,IAAI,CAACA,KAAK,CAACA,KAAX,EAAkB;IACdA,KAAK,CAACA,KAAN,GAAc,EAAd,CAAA;AACH,GAAA;;EACD,IAAMqe,UAAU,GAAGxjB,QACZ,CAAAA,QAAA,CAAA,EAAA,EAAAsjB,MAAA,CAAA,EACH;AAAA1R,IAAAA,MAAM,EAAE9K,QAAQ,CAACtC,KAAT,CAAeoN,MAAvB;IACAxL,OAAO,EAAEvC,CAAC,CAACuC,OADX;IAEAC,OAAO,EAAExC,CAAC,CAACwC,OAFX;IAGAnB,UAAU,EAAErB,CAAC,CAACqB,UAHd;AAIAue,IAAAA,aAAa,EAAE3c,QAJf;AAKAA,IAAAA,QAAQ,EAAAA,QALR;IAMA3B,KAAK,EAAEA,KAAK,CAACA,KANb;AAOAmB,IAAAA,WAAW,EAAE,CAAC,CAACzC,CAAC,CAACyC,WAPjB;AAQAod,IAAAA,SAAS,EAAE7f,CAAC,CAAC6f,SAAF,KAAgB,KAR3B;AASAC,IAAAA,QAAQ,EAAA,YAAA;MACJxe,KAAK,CAACye,YAAN,GAAqB,KAArB,CAAA;KAVJ;AAYAC,IAAAA,QAAQ,EAAA,YAAA;;;MACJ,CAAA9e,EAAA,GAAAlB,CAAC,CAACigB,IAAF,MAAA,IAAA,IAAA/e,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAgf,IAAA,CAAAlgB,CAAA,CAAA,CAAA;AACH,KAAA;AAdD,GADG,CADP,CAAA;;AAmBA,EAAA,IAAI,CAACsB,KAAK,CAAC6e,YAAX,EAAyB;IACrB7e,KAAK,CAAC6e,YAAN,GAAqB,IAArB,CAAA;AACH,GAFD,MAEO,IAAI,CAACT,aAAL,EAAoB;IACvBpe,KAAK,CAAC8e,SAAN,GAAkBT,UAAlB,CAAA;AACH,GAAA;;AACD,EAAA,OAAOA,UAAP,CAAA;AACH,CAAA;SACeU,cACZpd,UACAjD,GACAyf,QAAkD;AAElD,EAAA,IAAMne,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;EACA,IAAMU,MAAM,GAAG,QAAA,IAAYyd,MAAZ,GAAqBA,MAAM,CAACzd,MAA5B,GAAqChC,CAAC,CAACgC,MAAtD,CAAA;;AAEA,EAAA,IAAI,CAACV,KAAK,CAACA,KAAX,EAAkB;IACdA,KAAK,CAACA,KAAN,GAAc,EAAd,CAAA;AACH,GAAA;;EAED,OAAOnF,QACH,CAAAA,QAAA,CAAA;AAAA6F,IAAAA,MAAM,EAAAA,MAAAA;GAAN,EACGyd,MADH,CAAA,EACS;AACTxc,IAAAA,QAAQ,EAAAA,QADC;AAET8K,IAAAA,MAAM,EAAE9K,QAAQ,CAACtC,KAAT,CAAeoN,MAFd;IAGTxL,OAAO,EAAEvC,CAAC,CAACuC,OAHF;IAITC,OAAO,EAAExC,CAAC,CAACwC,OAJF;IAKTnB,UAAU,EAAErB,CAAC,CAACqB,UALL;AAMTue,IAAAA,aAAa,EAAE3c,QANN;IAOTmd,SAAS,EAAE9e,KAAK,CAAC8e,SAPR;IAQTE,QAAQ,EAAEtgB,CAAC,CAACsgB,QARH;IASThf,KAAK,EAAEA,KAAK,CAACA,KATJ;AAUTmB,IAAAA,WAAW,EAAE,CAAC,CAACzC,CAAC,CAACyC,WAAAA;AAVR,GADT,CADJ,CAAA;AAcH,CAAA;SACe8d,WACZtd,UACAhH,MACAukB,UAAoG;AAEpGvd,EAAAA,QAAQ,CAACwd,QAAT,CAAkBC,EAAlB,CAAqBzkB,IAArB,EAA2BukB,QAA3B,CAAA,CAAA;AACH,CAAA;AAEK,SAAUG,YAAV,CACF1d,QADE,EAEFhH,IAFE,EAGFwjB,MAHE,EAIFmB,SAJE,EAIiB;EAEnB,OAAO3d,QAAQ,CAAC0d,YAAT,CAAsB1kB,IAAtB,EAA4BwjB,MAA5B,EAAoCmB,SAApC,CAAP,CAAA;AACH,CAAA;AAEe,SAAA5N,gBAAA,CAAiB9E,EAAjB,EAA8B2S,SAA9B,EAAuD;AACnE,EAAA,OAAOpjB,MAAM,CAACuV,gBAAP,CAAwB9E,EAAxB,EAA4B2S,SAA5B,CAAP,CAAA;AACH,CAAA;SAEeC,YACZC,OAAeC,SACfC,4BAAoC;EAEpC,IAAMC,YAAY,GAAqB,EAAvC,CAAA;EACA,IAAMC,UAAU,GAAqB,EAArC,CAAA;AAEA,EAAA,OAAOJ,KAAK,CAAC/a,MAAN,CAAa,UAAA9J,IAAA,EAAI;AACpB,IAAA,IAAMD,IAAI,GAAGC,IAAI,CAACD,IAAlB,CAAA;;AAEA,IAAA,IAAIilB,YAAY,CAACjlB,IAAD,CAAZ,IAAsB,CAAC+kB,OAAO,CAACI,IAAR,CAAa,UAAAC,MAAA,EAAM;MAAI,OAAAnlB,IAAI,CAACmlB,MAAD,CAAJ,CAAA;AAAY,KAAnC,CAA3B,EAAiE;AAC7D,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAI,CAACJ,0BAAD,IAA+B/kB,IAAI,CAAColB,SAAxC,EAAmD;AAC/C,MAAA,IAAIH,UAAU,CAACjlB,IAAI,CAAColB,SAAN,CAAd,EAAgC;AAC5B,QAAA,OAAO,KAAP,CAAA;AACH,OAAA;;AACDH,MAAAA,UAAU,CAACjlB,IAAI,CAAColB,SAAN,CAAV,GAA6B,IAA7B,CAAA;AACH,KAAA;;AACDJ,IAAAA,YAAY,CAACjlB,IAAD,CAAZ,GAAqB,IAArB,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACH,GAdM,CAAP,CAAA;AAeH,CAAA;AAEe,SAAAslB,MAAA,CAAOC,EAAP,EAAgBC,EAAhB,EAAuB;EACnC,OAAOD,EAAE,KAAKC,EAAP,IAAcD,EAAE,IAAI,IAAN,IAAcC,EAAE,IAAI,IAAzC,CAAA;AACH,CAAA;SAEeC,cAAW;EAAU,IAAgBC,MAAA,GAAA,EAAhB,CAAA;;OAAA,IAAgBpO,EAAA,GAAA,GAAhBA,EAAgB,GAAAC,SAAA,CAAAhO,QAAhB+N,EAAgB,IAAA;AAAhBoO,IAAAA,MAAgB,CAAApO,EAAA,CAAhB,GAAgBC,SAAA,CAAAD,EAAA,CAAhB,CAAA;;;AACjC,EAAA,IAAM/N,MAAM,GAAGmc,MAAM,CAACnc,MAAP,GAAgB,CAA/B,CAAA;;EACA,KAAK,IAAIoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpD,MAApB,EAA4B,EAAEoD,CAA9B,EAAiC;AAC7B,IAAA,IAAMtB,KAAK,GAAGqa,MAAM,CAAC/Y,CAAD,CAApB,CAAA;;AAEA,IAAA,IAAI,CAACiN,WAAW,CAACvO,KAAD,CAAhB,EAAyB;AACrB,MAAA,OAAOA,KAAP,CAAA;AACH,KAAA;AACJ,GAAA;;EAED,OAAOqa,MAAM,CAACnc,MAAD,CAAb,CAAA;AACH,CAAA;AAEe,SAAAoc,OAAA,CAAWC,GAAX,EAAqBzW,IAArB,EAAkE;EAC9E,IAAM0W,MAAM,GAAU,EAAtB,CAAA;EACA,IAAMC,SAAS,GAAU,EAAzB,CAAA;AAEAF,EAAAA,GAAG,CAACzL,OAAJ,CAAY,UAAClI,EAAD,EAAK7I,KAAL,EAAU;IAClB,IAAM2c,QAAQ,GAAG5W,IAAI,CAAC8C,EAAD,EAAK7I,KAAL,EAAYwc,GAAZ,CAArB,CAAA;AACA,IAAA,IAAMI,QAAQ,GAAGF,SAAS,CAAC3iB,OAAV,CAAkB4iB,QAAlB,CAAjB,CAAA;AACA,IAAA,IAAME,KAAK,GAAGJ,MAAM,CAACG,QAAD,CAAN,IAAoB,EAAlC,CAAA;;AAEA,IAAA,IAAIA,QAAQ,KAAK,CAAC,CAAlB,EAAqB;MACjBF,SAAS,CAAC1Y,IAAV,CAAe2Y,QAAf,CAAA,CAAA;MACAF,MAAM,CAACzY,IAAP,CAAY6Y,KAAZ,CAAA,CAAA;AACH,KAAA;;IACDA,KAAK,CAAC7Y,IAAN,CAAW6E,EAAX,CAAA,CAAA;GATJ,CAAA,CAAA;AAWA,EAAA,OAAO4T,MAAP,CAAA;AACH,CAAA;AACe,SAAAK,UAAA,CAAcN,GAAd,EAAwBzW,IAAxB,EAAiF;EAC7F,IAAM0W,MAAM,GAAU,EAAtB,CAAA;EACA,IAAMC,SAAS,GAAiB,EAAhC,CAAA;AAEAF,EAAAA,GAAG,CAACzL,OAAJ,CAAY,UAAClI,EAAD,EAAK7I,KAAL,EAAU;IAClB,IAAM2c,QAAQ,GAAG5W,IAAI,CAAC8C,EAAD,EAAK7I,KAAL,EAAYwc,GAAZ,CAArB,CAAA;AACA,IAAA,IAAIK,KAAK,GAAGH,SAAS,CAACC,QAAD,CAArB,CAAA;;IAEA,IAAI,CAACE,KAAL,EAAY;AACRA,MAAAA,KAAK,GAAG,EAAR,CAAA;AACAH,MAAAA,SAAS,CAACC,QAAD,CAAT,GAAsBE,KAAtB,CAAA;MACAJ,MAAM,CAACzY,IAAP,CAAY6Y,KAAZ,CAAA,CAAA;AACH,KAAA;;IACDA,KAAK,CAAC7Y,IAAN,CAAW6E,EAAX,CAAA,CAAA;GATJ,CAAA,CAAA;AAWA,EAAA,OAAO4T,MAAP,CAAA;AACH,CAAA;AACK,SAAUM,IAAV,CAAkBP,GAAlB,EAA4B;EAC9B,OAAOA,GAAG,CAAC5G,MAAJ,CAAW,UAACC,IAAD,EAAOmH,GAAP,EAAU;AACxB,IAAA,OAAOnH,IAAI,CAACve,MAAL,CAAY0lB,GAAZ,CAAP,CAAA;GADG,EAEJ,EAFI,CAAP,CAAA;AAGH,CAAA;SAMeC,YAAS;EAAC,IAAiBC,IAAA,GAAA,EAAjB,CAAA;;OAAA,IAAiBhP,EAAA,GAAA,GAAjBA,EAAiB,GAAAC,SAAA,CAAAhO,QAAjB+N,EAAiB,IAAA;AAAjBgP,IAAAA,IAAiB,CAAAhP,EAAA,CAAjB,GAAiBC,SAAA,CAAAD,EAAA,CAAjB,CAAA;;;AACtBgP,EAAAA,IAAI,CAACC,IAAL,CAAU,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;IAAK,OAAA1lB,IAAI,CAACyc,GAAL,CAASiJ,CAAT,CAAc1lB,GAAAA,IAAI,CAACyc,GAAL,CAASzF,CAAT,CAAd,CAAA;GAApB,CAAA,CAAA;EAEA,OAAOwO,IAAI,CAAC,CAAD,CAAX,CAAA;AACH,CAAA;SAOehf,yBAAyBY,QAAkBwE,KAAe5I,GAAS;AAC/E,EAAA,OAAO4E,SAAS,CACZN,MAAM,CAACF,MAAD,EAASpE,CAAT,CADM,EAEZyE,qBAAqB,CAACmE,GAAD,EAAM5I,CAAN,CAFT,EAGZA,CAHY,CAAhB,CAAA;AAKH,CAAA;AACe,SAAA0B,eAAA,CAAgBd,KAAhB,EAA6CX,CAA7C,EAAmD;;;AAE3D,EAAA,IAAAoD,IAAI,GAEJzC,KAAK,CAAAyC,IAFL;AAAA,MACAD,UAAU,GACVxC,KAAK,CAAAwC,UAFL,CAAA;AAGJ,EAAA,IAAMpD,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AACAlC,EAAAA,EAEI,GAAAqC,wBAAwB,CAACJ,UAAD,EAAa,CAACnD,CAAC,CAAC2C,KAAH,EAAU3C,CAAC,CAAC4C,KAAZ,CAAb,EAAiC7C,CAAjC,CAF5B,EACIC,CAAC,CAAC2C,KAAF,GAAOzB,EAAA,CAAA,CAAA,CADX,EACalB,CAAC,CAAC4C,KAAF,GAAO1B,EAAA,CAAA,CAAA,CADpB,CAAA;AAIA,EAAA,OAAOlB,CAAP,CAAA;AACH,CAAA;AAEK,SAAU0iB,gBAAV,CACFve,MADE,EAEFwE,GAFE,EAGFzE,eAHE,EAIFH,MAJE,EAKFhE,CALE,EAKO;AAET,EAAA,OAAOuD,KAAK,CAACuJ,iBAAiB,CAAC1I,MAAD,EAASM,IAAI,CAACP,eAAD,EAAkByE,GAAlB,CAAb,EAAqC5I,CAArC,CAAlB,EAA2DgE,MAA3D,CAAZ,CAAA;AACH,CAAA;SAEe4e,eAAerb,OAAe0B,MAAc4Z,YAAoB;EAC5E,OAAOA,UAAU,GAAG,EAAAjmB,CAAAA,MAAA,CAAG2K,KAAK,GAAG0B,IAAR,GAAe,GAAlB,KAAA,CAAH,GAA8B,EAAGrM,CAAAA,MAAH,CAAG2K,KAAH,MAAA,CAA/C,CAAA;AACH,CAAA;AAEK,SAAUub,WAAV,CAAsBC,CAAtB,EAA+B;EACjC,OAAO/lB,IAAI,CAACyc,GAAL,CAASsJ,CAAT,KAAerjB,QAAf,GAA0B,CAA1B,GAA8BqjB,CAArC,CAAA;AACH,CAAA;AAKK,SAAUC,yBAAV,CAAoChiB,QAApC,EAAoD;EACtD,OAAO,UAACkC,QAAD,EAAmC;AACtC,IAAA,IAAI,CAACA,QAAQ,CAAC+f,UAAT,CAAoBjiB,QAApB,CAAL,EAAoC;AAChC,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMwM,IAAI,GAAGH,YAAY,CAACnK,QAAD,EAAWlC,QAAX,CAAzB,CAAA;AACA,IAAA,IAAM2d,GAAG,GAAGnR,IAAI,CAACmR,GAAjB,CAAA;;IACA,IAAI,CAACA,GAAL,EAAU;AACN,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAOrL,MAAM,CAAC,uBAAA,CAAA1W,MAAA,CAAwB+hB,GAAxB,CAAD,CAAb,CAAA;GATJ,CAAA;AAWH,CAAA;AACe,SAAAuE,qBAAA,CAAsBliB,QAAtB,EAAwCmiB,UAAxC,EAAyE;AAAjC,EAAA,IAAAA,UAAA,KAAA,KAAA,CAAA,EAAA;IAAAA,UAAwB,GAAA,CAAAniB,QAAA,CAAxB,CAAA;AAAiC,GAAA;;AACrF,EAAA,OAAO,UAACkC,QAAD,EAAgBjD,CAAhB,EAAsB;IACzB,IAAIA,CAAC,CAACmjB,SAAN,EAAiB;AACb,MAAA,IAAID,UAAU,CAAC9B,IAAX,CAAgB,UAAAnlB,IAAA,EAAQ;AAAA,QAAA,OAAA+D,CAAC,CAACojB,WAAF,KAAkBnnB,IAAlB,CAAA;AAAsB,OAA9C,CAAJ,EAAqD;QACjD,OAAO+D,CAAC,CAACwe,eAAT,CAAA;AACH,OAFD,MAEO;AACH,QAAA,OAAO,KAAP,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,IAAMzQ,MAAM,GAAG/N,CAAC,CAACqB,UAAF,CAAa0M,MAA5B,CAAA;IAEA,OAAOsV,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,WAAD,CAAf,CAAR,KAA0C,CAACtS,QAAD,IAAasiB,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAACtS,QAAD,CAAf,CAA/D,CAAP,CAAA;GAVJ,CAAA;AAYH,CAAA;AAEe,SAAAkF,oBAAA,CAAqBqd,UAArB,EAA2Cje,KAA3C,EAAwD;AACpE,EAAA,IAAMe,mBAAmB,GAAGkd,UAAU,CAACxN,KAAX,CAAiB,CAAjB,EAAoBzQ,KAAK,GAAG,CAAR,GAAYke,SAAZ,GAAwBle,KAA5C,CAA5B,CAAA;AACA,EAAA,IAAMme,oBAAoB,GAAGF,UAAU,CAACxN,KAAX,CAAiB,CAAjB,EAAoBzQ,KAAK,GAAG,CAAR,GAAYke,SAAZ,GAAwBle,KAAK,GAAG,CAApD,CAA7B,CAAA;AACA,EAAA,IAAMoe,kBAAkB,GAAGH,UAAU,CAACje,KAAD,CAAV,IAAqB,EAAhD,CAAA;AACA,EAAA,IAAMgB,kBAAkB,GAAGhB,KAAK,GAAG,CAAR,GAAY,EAAZ,GAAiBie,UAAU,CAACxN,KAAX,CAAiBzQ,KAAjB,CAA5C,CAAA;AACA,EAAA,IAAMqe,mBAAmB,GAAGre,KAAK,GAAG,CAAR,GAAY,EAAZ,GAAiBie,UAAU,CAACxN,KAAX,CAAiBzQ,KAAK,GAAG,CAAzB,CAA7C,CAAA;AAEA,EAAA,IAAMse,eAAe,GAAGtY,KAAK,CAACjF,mBAAD,CAA7B,CAAA;AACA,EAAA,IAAMwd,gBAAgB,GAAGvY,KAAK,CAACmY,oBAAD,CAA9B,CAAA;AACA,EAAA,IAAMK,eAAe,GAAGxY,KAAK,CAAC,CAACoY,kBAAD,CAAD,CAA7B,CAAA;AACA,EAAA,IAAMK,cAAc,GAAGzY,KAAK,CAAChF,kBAAD,CAA5B,CAAA;AACA,EAAA,IAAM0d,eAAe,GAAG1Y,KAAK,CAACqY,mBAAD,CAA7B,CAAA;AAGA,EAAA,IAAMpd,oBAAoB,GAAG0d,KAAK,CAACL,eAAD,CAAlC,CAAA;AACA,EAAA,IAAMnd,qBAAqB,GAAGwd,KAAK,CAACJ,gBAAD,CAAnC,CAAA;AACA,EAAA,IAAMhd,mBAAmB,GAAGod,KAAK,CAACF,cAAD,CAAjC,CAAA;AACA,EAAA,IAAMhd,oBAAoB,GAAGkd,KAAK,CAACD,eAAD,CAAlC,CAAA;EACA,IAAM/c,iBAAiB,GAAGgB,QAAQ,CAC9B1B,oBAD8B,EAE9BM,mBAF8B,EAG9B,CAH8B,CAAlC,CAAA;EAKA,OAAO;AACH0c,IAAAA,UAAU,EAAAA,UADP;AAEHhd,IAAAA,oBAAoB,EAAAA,oBAFjB;AAGHE,IAAAA,qBAAqB,EAAAA,qBAHlB;AAIHE,IAAAA,oBAAoB,EAAEsd,KAAK,CAACH,eAAD,CAJxB;AAKHjd,IAAAA,mBAAmB,EAAAA,mBALhB;AAMHE,IAAAA,oBAAoB,EAAAA,oBANjB;AAOHE,IAAAA,iBAAiB,EAAAA,iBAPd;AAQH2c,IAAAA,eAAe,EAAAA,eARZ;AASHC,IAAAA,gBAAgB,EAAAA,gBATb;AAUH1d,IAAAA,cAAc,EAAE2d,eAAe,CAAC,CAAD,CAV5B;AAWHC,IAAAA,cAAc,EAAAA,cAXX;AAYHC,IAAAA,eAAe,EAAAA,eAZZ;AAaH3d,IAAAA,mBAAmB,EAAAA,mBAbhB;AAcHod,IAAAA,oBAAoB,EAAAA,oBAdjB;AAeHC,IAAAA,kBAAkB,EAAAA,kBAff;AAgBHpd,IAAAA,kBAAkB,EAAAA,kBAhBf;AAiBHqd,IAAAA,mBAAmB,EAAAA,mBAAAA;GAjBvB,CAAA;AAmBH,CAAA;AAEK,SAAUO,aAAV,CAAiCpC,GAAjC,EAAyC;EAC3C,IAAI,CAACA,GAAD,IAAQ,CAAChO,QAAQ,CAACgO,GAAD,CAArB,EAA4B;AACxB,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;;EACD,IAAIA,GAAG,YAAYqC,OAAnB,EAA4B;AACxB,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAOnZ,OAAO,CAAC8W,GAAD,CAAP,IAAgB,YAAYA,GAAnC,CAAA;AACH,CAAA;AAMe,SAAAsC,YAAA,CACZpW,MADY,EAEZqW,UAFY,EAEQ;EAEpB,IAAI,CAACrW,MAAL,EAAa;AACT,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;EACD,IAAIA,MAAM,YAAYmW,OAAtB,EAA+B;AAC3B,IAAA,OAAOnW,MAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAIsW,QAAQ,CAACtW,MAAD,CAAZ,EAAsB;AAClB,IAAA,IAAIqW,UAAJ,EAAgB;AACZ,MAAA,OAAO/V,QAAQ,CAACiW,aAAT,CAAuBvW,MAAvB,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAOA,MAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAIwW,UAAU,CAACxW,MAAD,CAAd,EAAwB;AACpB,IAAA,OAAOA,MAAM,EAAb,CAAA;AACH,GAAA;;EACD,IAAI,SAAA,IAAaA,MAAjB,EAAyB;IACrB,OAAOA,MAAM,CAACyW,OAAd,CAAA;AACH,GAAA;;AACD,EAAA,OAAOzW,MAAP,CAAA;AACH,CAAA;AAQe,SAAA0W,aAAA,CAAcC,OAAd,EAA8CN,UAA9C,EAAkE;EAC9E,IAAI,CAACM,OAAL,EAAc;AACV,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAMC,WAAW,GAAGV,aAAa,CAACS,OAAD,CAAb,GAAyB,EAAA,CAAG5O,KAAH,CAASoK,IAAT,CAAcwE,OAAd,CAAzB,GAAkD,CAACA,OAAD,CAAtE,CAAA;EAEA,OAAOC,WAAW,CAAC1J,MAAZ,CAAmB,UAACC,IAAD,EAAOnN,MAAP,EAAa;AACnC,IAAA,IAAIsW,QAAQ,CAACtW,MAAD,CAAR,IAAoBqW,UAAxB,EAAoC;MAChC,OAAAjd,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAW+T,IAAX,EAAe,IAAf,CAAA,EAAoB,EAAA,CAAGpF,KAAH,CAASoK,IAAT,CAAc7R,QAAQ,CAACuW,gBAAT,CAAuC7W,MAAvC,CAAd,CAApB,EAAmF,IAAnF,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,IAAIhD,OAAO,CAACgD,MAAD,CAAX,EAAqB;MACjBmN,IAAI,CAAC7R,IAAL,CAAUob,aAAa,CAAC1W,MAAD,EAASqW,UAAT,CAAvB,CAAA,CAAA;AACH,KAFD,MAEO;MACHlJ,IAAI,CAAC7R,IAAL,CAAU8a,YAAY,CAACpW,MAAD,EAASqW,UAAT,CAAtB,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,OAAOlJ,IAAP,CAAA;GATG,EAUJ,EAVI,CAAP,CAAA;AAWH,CAAA;SAOe2J,oBAAoBxhB,MAAgB+P,MAAgBpO,WAAiB;AACjF,EAAA,IAAI0Z,GAAG,GAAG5D,MAAM,CAACzX,IAAD,EAAO+P,IAAP,CAAN,GAAqBrW,IAAI,CAAC+nB,EAA1B,GAA+B,GAAzC,CAAA;EAEApG,GAAG,GAAG1Z,SAAS,IAAI,CAAb,GAAiB0Z,GAAjB,GAAuB,MAAMA,GAAnC,CAAA;EACAA,GAAG,GAAGA,GAAG,IAAI,CAAP,GAAWA,GAAX,GAAiB,MAAMA,GAA7B,CAAA;AAEA,EAAA,OAAOA,GAAP,CAAA;AACH,CAAA;AAGe,SAAAqG,kBAAA,CAAmBpkB,KAAnB,EAAgD4G,IAAhD,EAA8D;AAEtE,EAAA,IAAApE,UAAU,GAEVxC,KAAK,CAAAwC,UAFL;AAAA,MACAC,IAAI,GACJzC,KAAK,CAAAyC,IAFL,CAAA;AAGJ,EAAA,IAAMrD,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AAEA,EAAA,IAAIgB,aAAa,GAAGC,MAAM,CAAClB,UAAD,EAAapD,CAAb,CAA1B,CAAA;;EAEA,IAAI,CAACqD,IAAL,EAAW;IACPgB,aAAa,GAAGoG,gBAAgB,CAACpG,aAAD,EAAgB,CAAhB,EAAmB,CAAnB,CAAhC,CAAA;AACH,GAAA;;AACDA,EAAAA,aAAa,CAAC,EAAD,CAAb,GAAoB,CAApB,CAAA;AACAA,EAAAA,aAAa,CAAC,EAAD,CAAb,GAAoB,CAApB,CAAA;AACAA,EAAAA,aAAa,CAAC,EAAD,CAAb,GAAoB,CAApB,CAAA;AAEA,EAAA,OAAO4gB,mBAAmB,CAAC5gB,aAAD,EAAgBmD,IAAhB,CAA1B,CAAA;AACH,CAAA;AAEK,SAAU0d,iBAAV,CACFC,SADE,EAEF3d,IAFE,EAGF4d,KAHE,EAIFngB,SAJE,EAKFogB,SALE,EAKiB;AAEZ,EAAA,IAAAC,gBAAgB,GAAuBH,SAAS,CAAA,CAAA,CAAhD;AAAA,MAAkBI,iBAAiB,GAAIJ,SAAS,CAAA,CAAA,CAAhD,CAAA;EACP,IAAIK,SAAS,GAAG,CAAhB,CAAA;EACA,IAAIC,UAAU,GAAG,CAAjB,CAAA;;AAEA,EAAA,IAAIJ,SAAS,IAAIC,gBAAb,IAAiCC,iBAArC,EAAwD;IACpD,IAAMzK,GAAG,GAAGC,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASvT,IAAT,CAAlB,CAAA;IACA,IAAMke,WAAW,GAAG3K,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS9V,SAAT,CAA1B,CAAA;AACA,IAAA,IAAMgE,IAAI,GAAGwR,WAAW,CAACjT,IAAD,CAAxB,CAAA;IACA,IAAMme,QAAQ,GAAG3oB,IAAI,CAAC4oB,GAAL,CAAS9K,GAAG,GAAG4K,WAAf,CAAA,GAA8Bzc,IAA/C,CAAA;;AAEA,IAAA,IAAI,CAAChE,SAAS,CAAC,CAAD,CAAd,EAAmB;AACf;AACAwgB,MAAAA,UAAU,GAAGE,QAAb,CAAA;MACAH,SAAS,GAAGC,UAAU,GAAGL,KAAzB,CAAA;AACH,KAJD,MAIO,IAAI,CAACngB,SAAS,CAAC,CAAD,CAAd,EAAmB;AACtB;AACAugB,MAAAA,SAAS,GAAGG,QAAZ,CAAA;MACAF,UAAU,GAAGD,SAAS,GAAGJ,KAAzB,CAAA;AACH,KAJM,MAIA;AACH;AACA,MAAA,IAAMS,cAAc,GAAG5gB,SAAS,CAAC,CAAD,CAAT,GAAeqgB,gBAAtC,CAAA;AACA,MAAA,IAAMQ,eAAe,GAAG7gB,SAAS,CAAC,CAAD,CAAT,GAAesgB,iBAAvC,CAAA;AAEA,MAAA,IAAIQ,SAAS,GAAG/oB,IAAI,CAACgpB,KAAL,CAAWH,cAAc,GAAGre,IAAI,CAAC,CAAD,CAAhC,EAAqCse,eAAe,GAAGte,IAAI,CAAC,CAAD,CAA3D,CAAhB,CAAA;MACA,IAAIye,QAAQ,GAAGjpB,IAAI,CAACgpB,KAAL,CAAWH,cAAX,EAA2BC,eAA3B,CAAf,CAAA;;MAEA,IAAIC,SAAS,GAAG,CAAhB,EAAmB;AACfA,QAAAA,SAAS,IAAI/oB,IAAI,CAAC+nB,EAAL,GAAU,CAAvB,CAAA;AACH,OAAA;;MACD,IAAIkB,QAAQ,GAAG,CAAf,EAAkB;AACdA,QAAAA,QAAQ,IAAIjpB,IAAI,CAAC+nB,EAAL,GAAU,CAAtB,CAAA;AACH,OAAA;;MACD,IAAImB,KAAG,GAAG,CAAV,CAAA;;AAEA,MAAA,IAAIlpB,IAAI,CAACyc,GAAL,CAASsM,SAAS,GAAGE,QAArB,CAAA,GAAiCjpB,IAAI,CAAC+nB,EAAL,GAAU,CAA3C,IAAgD/nB,IAAI,CAACyc,GAAL,CAASsM,SAAS,GAAGE,QAArB,CAAA,GAAiCjpB,IAAI,CAAC+nB,EAAL,GAAU,CAAV,GAAc,CAAnG,EAAsG;QAClGmB,KAAG,GAAGH,SAAS,GAAGE,QAAlB,CAAA;AACH,OAFD,MAEO;QACHA,QAAQ,IAAIjpB,IAAI,CAAC+nB,EAAjB,CAAA;QACAmB,KAAG,GAAGH,SAAS,GAAGE,QAAlB,CAAA;AACH,OAAA;;AACD,MAAA,IAAIC,KAAG,GAAGlpB,IAAI,CAAC+nB,EAAL,GAAU,CAApB,EAAuB;AACnBmB,QAAAA,KAAG,IAAIlpB,IAAI,CAAC+nB,EAAL,GAAU,CAAjB,CAAA;AACH,OAFD,MAEO,IAAImB,KAAG,GAAGlpB,IAAI,CAAC+nB,EAAf,EAAmB;AACtBmB,QAAAA,KAAG,GAAG,CAAIlpB,GAAAA,IAAI,CAAC+nB,EAAT,GAAcmB,KAApB,CAAA;OADG,MAEA,IAAIA,KAAG,GAAG,CAAClpB,IAAI,CAAC+nB,EAAhB,EAAoB;QACvBmB,KAAG,GAAG,CAAC,CAAD,GAAKlpB,IAAI,CAAC+nB,EAAV,GAAemB,KAArB,CAAA;AACH,OA5BE;AA8BH;AACA;AACA;AACA;;;MACA,IAAMC,QAAQ,GAAG1L,WAAW,CAAC,CAACoL,cAAc,GAAGre,IAAI,CAAC,CAAD,CAAtB,EAA2Bse,eAAe,GAAGte,IAAI,CAAC,CAAD,CAAjD,CAAD,CAAX,GAAqExK,IAAI,CAAC4oB,GAAL,CAASM,KAAT,CAAtF,CAAA;MAEAV,SAAS,GAAGW,QAAQ,GAAGnpB,IAAI,CAACopB,GAAL,CAASH,QAAT,CAAX,GAAgCJ,cAA5C,CAAA;MACAJ,UAAU,GAAGU,QAAQ,GAAGnpB,IAAI,CAAC4oB,GAAL,CAASK,QAAT,CAAX,GAAgCH,eAA7C,CAAA;;AAEA,MAAA,IAAI7gB,SAAS,CAAC,CAAD,CAAT,GAAe,CAAnB,EAAsB;QAClBugB,SAAS,IAAI,CAAC,CAAd,CAAA;AACH,OAAA;;AACD,MAAA,IAAIvgB,SAAS,CAAC,CAAD,CAAT,GAAe,CAAnB,EAAsB;QAClBwgB,UAAU,IAAI,CAAC,CAAf,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GA5DD,MA4DO;IACHD,SAAS,GAAGvgB,SAAS,CAAC,CAAD,CAAT,GAAeuC,IAAI,CAAC,CAAD,CAA/B,CAAA;IACAie,UAAU,GAAGxgB,SAAS,CAAC,CAAD,CAAT,GAAeuC,IAAI,CAAC,CAAD,CAAhC,CAAA;AACH,GAAA;;AAED,EAAA,OAAO,CAACge,SAAD,EAAYC,UAAZ,CAAP,CAAA;AACH,CAAA;AACK,SAAUY,iBAAV,CACFC,aADE,EAEFjB,SAFE,EAGF9jB,KAHE,EAIFtB,CAJE,EAII;;;AAGF,EAAA,IAAAmlB,KAAK,GAGL7jB,KAAK,CAAA6jB,KAHL;AAAA,MACAE,gBAAgB,GAEhB/jB,KAAK,CAAA+jB,gBAHL;AAAA,MAEAC,iBAAiB,GACjBhkB,KAAK,kBAHL,CAAA;EAIJ,IAAIikB,SAAS,GAAG,CAAhB,CAAA;EACA,IAAIC,UAAU,GAAG,CAAjB,CAAA;AAEI,EAAA,IAAA7iB,KAAK,GAKL3C,CAAC,CALI2C,KAAL;AAAA,MACAC,KAAK,GAIL5C,CAAC,CAJI4C,KADL;AAAA,MAEA0jB,cAAc,GAGdtmB,CAAC,CAHasmB,cAFd;AAAA,MAGAC,UAAU,GAEVvmB,CAAC,CAAAumB,UALD;AAAA,MAIAC,WAAW,GACXxmB,CAAC,CAAAwmB,WALD,CAAA;AAMJ,EAAA,IAAMC,mBAAmB,GAAGnlB,KAAK,CAACyI,cAAlC,CAAA;EACA,IAAM2c,eAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAA,CAAO5nB,GAAP,CAAW,UAAAuG,KAAA,EAAK;AACpC,IAAA,OAAOtI,IAAI,CAACyc,GAAL,CAAS6M,aAAa,CAAChhB,KAAD,CAAb,GAAuBohB,mBAAmB,CAACphB,KAAD,CAAnD,CAAP,CAAA;AACH,GAFuB,CAAxB,CAAA;EAGA,IAAMshB,eAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAA,CAAO7nB,GAAP,CAAW,UAAAuG,KAAA,EAAK;AACpC,IAAA,IAAIkC,IAAI,GAAGmf,eAAe,CAACrhB,KAAD,CAA1B,CAAA;;IAEA,IAAIkC,IAAI,KAAK,CAAb,EAAgB;MACZA,IAAI,GAAG,IAAIA,IAAX,CAAA;AACH,KAAA;;AACD,IAAA,OAAOA,IAAP,CAAA;AACH,GAPuB,CAAxB,CAAA;;AAQA,EAAA,IAAIgf,UAAJ,EAAgB;AACZhB,IAAAA,SAAS,GAAGgB,UAAU,CAAC,CAAD,CAAtB,CAAA;AACAf,IAAAA,UAAU,GAAGe,UAAU,CAAC,CAAD,CAAvB,CAAA;;AAEA,IAAA,IAAInB,SAAJ,EAAe;MACX,IAAI,CAACG,SAAL,EAAgB;QACZA,SAAS,GAAGC,UAAU,GAAGL,KAAzB,CAAA;AACH,OAFD,MAEO,IAAI,CAACK,UAAL,EAAiB;QACpBA,UAAU,GAAGD,SAAS,GAAGJ,KAAzB,CAAA;AACH,OAAA;AACJ,KAAA;GAVL,MAWO,IAAIqB,WAAJ,EAAiB;IACpBjB,SAAS,GAAG,CAACiB,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAlB,IAAuBnB,gBAAnC,CAAA;IACAG,UAAU,GAAG,CAACgB,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAlB,IAAuBlB,iBAApC,CAAA;GAFG,MAGA,IAAIgB,cAAJ,EAAoB;AACvB,IAAA,IAAM7U,MAAM,GAAG4T,gBAAgB,GAAGqB,eAAe,CAAC,CAAD,CAAjD,CAAA;AACA,IAAA,IAAMhV,MAAM,GAAG4T,iBAAiB,GAAGoB,eAAe,CAAC,CAAD,CAAlD,CAAA;IACA,IAAME,aAAa,GAAGpM,WAAW,CAAC,CAAC/I,MAAD,EAASC,MAAT,CAAD,CAAjC,CAAA;IAEA6T,SAAS,GAAGe,cAAc,GAAGM,aAAjB,GAAiCnV,MAAjC,GAA0CkV,eAAe,CAAC,CAAD,CAArE,CAAA;IACAnB,UAAU,GAAGc,cAAc,GAAGM,aAAjB,GAAiClV,MAAjC,GAA0CiV,eAAe,CAAC,CAAD,CAAtE,CAAA;AACH,GAPM,MAOA;IACH,IAAIE,MAAI,GAAGljB,WAAW,CAAC;AAAErC,MAAAA,KAAK,EAAAA,KAAP;AAASqB,MAAAA,KAAK,OAAd;AAAgBC,MAAAA,KAAK,EAAAA,KAAAA;AAArB,KAAD,CAAtB,CAAA;IAEAikB,MAAI,GAAGF,eAAe,CAAC7nB,GAAhB,CAAoB,UAACqmB,KAAD,EAAQvc,CAAR,EAAS;AAChC,MAAA,OAAOie,MAAI,CAACje,CAAD,CAAJ,GAAUuc,KAAjB,CAAA;AACH,KAFM,CAAP,CAAA;AAIAjkB,IAAAA,EAA0B,GAAA+jB,iBAAiB,CACvC,CAACI,gBAAD,EAAmBC,iBAAnB,CADuC,EAEvCuB,MAFuC,EAGvC1B,KAHuC,EAIvCkB,aAJuC,EAKvCjB,SALuC,CAA3C,EAACG,SAAS,GAAArkB,EAAA,CAAA,CAAA,CAAV,EAAYskB,UAAU,GAAAtkB,EAAA,CAAA,CAAA,CAAtB,CAAA;AAOH,GAAA;;EACD,OAAO;AACH;AACA;AACAqkB,IAAAA,SAAS,EAAAA,SAHN;AAIHC,IAAAA,UAAU,EAAAA,UAAAA;GAJd,CAAA;AAMH,CAAA;AAEe,SAAAsB,oBAAA,CACZ/iB,MADY,EAEZgjB,EAFY,EAEA;AAEZ,EAAA,IAAIA,EAAJ,EAAQ;IACJ,IAAIhjB,MAAM,KAAK,MAAf,EAAuB;MACnB,OAAO;AAAE0S,QAAAA,CAAC,EAAE,IAAL;AAAWC,QAAAA,CAAC,EAAE,KAAA;OAArB,CAAA;AACH,KAFD,MAEO,IAAI3S,MAAM,KAAK,KAAf,EAAsB;MACzB,OAAO;AAAE0S,QAAAA,CAAC,EAAE,KAAL;AAAYC,QAAAA,CAAC,EAAE,KAAA;OAAtB,CAAA;AACH,KAFM,MAEA,IAAI3S,MAAM,KAAK,QAAf,EAAyB;MAC5B,OAAO;AAAE0S,QAAAA,CAAC,EAAE,KAAL;AAAYC,QAAAA,CAAC,EAAE,KAAA;OAAtB,CAAA;AACH,KAFM,MAEA,IAAI3S,MAAM,KAAK,OAAf,EAAwB;MAC3B,OAAO;AAAE0S,QAAAA,CAAC,EAAE,MAAL;AAAaC,QAAAA,CAAC,EAAE,KAAA;OAAvB,CAAA;AACH,KAFM,MAEA,IAAI3S,MAAM,KAAK,QAAf,EAAyB;MAC5B,OAAO;AAAE0S,QAAAA,CAAC,EAAE,KAAL;AAAYC,QAAAA,CAAC,EAAE,MAAA;OAAtB,CAAA;AACH,KAAA;;AACK,IAAA,IAAAxV,EAAgB,GAAA6C,MAAM,CAACyN,KAAP,CAAa,GAAb,CAAhB;AAAA,QAACvS,IAAI,GAAAiC,EAAA,CAAA,CAAA,CAAL;AAAA,QAAO4W,KAAK,QAAZ,CAAA;;AACN,IAAA,IAAMkP,UAAU,GAAGF,oBAAoB,CAAC7nB,IAAI,IAAI,EAAT,CAAvC,CAAA;AACA,IAAA,IAAMgoB,WAAW,GAAGH,oBAAoB,CAAChP,KAAK,IAAI,EAAV,CAAxC,CAAA;;AACA,IAAA,IAAMoP,YAAY,GACX/qB,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA6qB,UAAA,CAAA,EACAC,WADA,CADP,CAAA;;AAKA,IAAA,IAAME,gBAAgB,GAAG;AACrB1Q,MAAAA,CAAC,EAAE,KADkB;AAErBC,MAAAA,CAAC,EAAE,KAAA;KAFP,CAAA;;IAIA,IAAIwQ,YAAY,CAACzQ,CAAjB,EAAoB;AAChB0Q,MAAAA,gBAAgB,CAAC1Q,CAAjB,GAAqByQ,YAAY,CAACzQ,CAAlC,CAAA;AACH,KAAA;;IACD,IAAIyQ,YAAY,CAACxQ,CAAjB,EAAoB;AAChByQ,MAAAA,gBAAgB,CAACzQ,CAAjB,GAAqBwQ,YAAY,CAACxQ,CAAlC,CAAA;AACH,KAAA;;IACD,IAAIwQ,YAAY,CAAC5f,KAAjB,EAAwB;MACpB,IAAI4f,YAAY,CAACzQ,CAAb,IAAkB,CAACyQ,YAAY,CAACxQ,CAApC,EAAuC;AACnCyQ,QAAAA,gBAAgB,CAACzQ,CAAjB,GAAqBwQ,YAAY,CAAC5f,KAAlC,CAAA;AACH,OAAA;;MACD,IAAI,CAAC4f,YAAY,CAACzQ,CAAd,IAAmByQ,YAAY,CAACxQ,CAApC,EAAuC;AACnCyQ,QAAAA,gBAAgB,CAAC1Q,CAAjB,GAAqByQ,YAAY,CAAC5f,KAAlC,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,OAAO6f,gBAAP,CAAA;AACH,GAAA;;EACD,IAAIpjB,MAAM,KAAK,MAAf,EAAuB;IACnB,OAAO;AAAE0S,MAAAA,CAAC,EAAE,IAAA;KAAZ,CAAA;AACH,GAAA;;EACD,IAAI1S,MAAM,KAAK,OAAf,EAAwB;IACpB,OAAO;AAAE0S,MAAAA,CAAC,EAAE,MAAA;KAAZ,CAAA;AACH,GAAA;;EACD,IAAI1S,MAAM,KAAK,KAAf,EAAsB;IAClB,OAAO;AAAE2S,MAAAA,CAAC,EAAE,IAAA;KAAZ,CAAA;AACH,GAAA;;EACD,IAAI3S,MAAM,KAAK,QAAf,EAAyB;IACrB,OAAO;AAAE2S,MAAAA,CAAC,EAAE,MAAA;KAAZ,CAAA;AACH,GAAA;;EACD,IAAI,CAAC3S,MAAL,EAAa;AACT,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;EACD,IAAIA,MAAM,KAAK,QAAf,EAAyB;IACrB,OAAO;AAAEuD,MAAAA,KAAK,EAAE,KAAA;KAAhB,CAAA;AACH,GAAA;;EACD,OAAO;AAAEA,IAAAA,KAAK,EAAEvD,MAAAA;GAAhB,CAAA;AACH,CAAA;SACeqjB,4BAA4BljB,iBAAyBoE,OAAeC,QAAc;AACxF,EAAA,IAAArH,EAAW,GAAA4lB,oBAAoB,CAAC5iB,eAAD,EAAkB,IAAlB,CAA/B;AAAA,MAAEuS,CAAC,GAAAvV,EAAA,CAAAuV,CAAH;AAAA,MAAKC,CAAC,OAAN,CAAA;;AAEN,EAAA,OAAO,CACH8G,eAAe,CAAC/G,CAAD,EAAKnO,KAAL,CAAf,IAA8B,CAD3B,EAEHkV,eAAe,CAAC9G,CAAD,EAAKnO,MAAL,CAAf,IAA+B,CAF5B,CAAP,CAAA;AAIH,CAAA;SAEe8e,gBAAgB9d,OAAmBxF,QAAkB8W,KAAW;EAC5E,IAAMyM,SAAS,GAAG/d,KAAK,CAACzK,GAAN,CAAU,UAAC6J,GAAD,EAAI;AAAK,IAAA,OAAArF,KAAK,CAACqF,GAAD,EAAM5E,MAAN,CAAL,CAAA;AAAkB,GAArC,CAAlB,CAAA;EACA,IAAMwjB,SAAS,GAAGD,SAAS,CAACxoB,GAAV,CAAc,UAAC6J,GAAD,EAAI;AAAK,IAAA,OAAA6e,MAAM,CAAC7e,GAAD,EAAMkS,GAAN,CAAN,CAAA;AAAgB,GAAvC,CAAlB,CAAA;EAEA,OAAO;AACHK,IAAAA,IAAI,EAAEoM,SADH;AAEHG,IAAAA,IAAI,EAAEF,SAFH;AAGHvmB,IAAAA,MAAM,EAAEumB,SAAS,CAACzoB,GAAV,CAAc,UAAA6J,GAAA,EAAG;AAAI,MAAA,OAAAlE,IAAI,CAACkE,GAAD,EAAM5E,MAAN,CAAJ,CAAA;KAArB,CAAA;GAHZ,CAAA;AAKH,CAAA;AAIe,SAAA2jB,iBAAA,CAAkBC,IAAlB,EAA+BC,IAA/B,EAA0C;AACtD,EAAA,OAAOD,IAAI,CAACniB,MAAL,KAAgBoiB,IAAI,CAACpiB,MAArB,IAA+BmiB,IAAI,CAACE,KAAL,CAAW,UAACC,MAAD,EAASlf,CAAT,EAAU;AACvD,IAAA,IAAMmf,MAAM,GAAGH,IAAI,CAAChf,CAAD,CAAnB,CAAA;AACA,IAAA,IAAMof,QAAQ,GAAGjd,OAAO,CAAC+c,MAAD,CAAxB,CAAA;AACA,IAAA,IAAMG,QAAQ,GAAGld,OAAO,CAACgd,MAAD,CAAxB,CAAA;;IACA,IAAIC,QAAQ,IAAIC,QAAhB,EAA0B;AACtB,MAAA,OAAOP,iBAAiB,CAACI,MAAD,EAASC,MAAT,CAAxB,CAAA;AACH,KAFD,MAEO,IAAI,CAACC,QAAD,IAAa,CAACC,QAAlB,EAA4B;MAC/B,OAAOH,MAAM,KAAKC,MAAlB,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,KAAP,CAAA;AACH,GAVqC,CAAtC,CAAA;AAWH,CAAA;AAGK,SAAUG,UAAV,CACFC,KADE,EAEFhd,QAFE,EAGFid,SAHE,EAIFC,QAJE,EAIqC;AAEvC,EAAA,IAAMC,SAAS,GAAGH,KAAK,CAAChd,QAAD,CAAvB,CAAA;;AAEA,EAAA,IACIA,QAAQ,IAAIgd,KAAZ,KACIG,SAAS,KAAKF,SAAd,IAA2BC,QAAQ,CAACC,SAAD,CAAR,KAAwBD,QAAQ,CAACD,SAAD,CAD/D,CADJ,EAGE;AACE,IAAA,OAAOE,SAAP,CAAA;AACH,GAAA;;AAEDH,EAAAA,KAAK,CAAChd,QAAD,CAAL,GAAkBid,SAAlB,CAAA;AACA,EAAA,OAAOA,SAAP,CAAA;AACH;;AChoDD;;;AAGG;;AACH,gBAAepsB,QAAQ,CAAC,WAAD,EAAc;EACjCK,KAAK,EAAE,CACH,WADG,CAD0B;AAIjCD,EAAAA,MAAM,EAAE,CACJ,YADI,EAEJ,OAFI,EAGJ,UAHI,EAIJ,iBAJI,EAKJ,YALI,EAMJ,eANI,CAJyB;AAYjC+F,EAAAA,SAAS,EAAA,YAAA;AACL,IAAA,OAAO,IAAP,CAAA;GAb6B;AAejComB,EAAAA,UAAU,EAAV,UACItlB,QADJ,EAEIjD,CAFJ,EAEU;AAEE,IAAA,IAAAsB,KAAK,GAAoCtB,CAAC,MAA1C;AAAA,QAAO0kB,OAAO,GAA2B1kB,CAAC,CAAA0kB,OAA1C;AAAA,QAAgB8D,KAAK,GAAoBxoB,CAAC,CAArBwoB,KAArB;AAAA,QAAuBjnB,aAAa,GAAKvB,CAAC,cAA1C,CAAA;AACF,IAAA,IAAAkB,EAAA,GAAuB+B,QAAQ,CAAC5G,KAAhC;AAAA,QAAEosB,SAAS,GAAAvnB,EAAA,CAAAunB,SAAX;AAAA,QAAa1H,KAAK,GAAA7f,EAAA,CAAA6f,KAAlB,CAAA;;IAEN,IAAI,CAAC0H,SAAL,EAAgB;AACZ,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMC,SAAS,GAAG,SAAU/rB,CAAAA,MAAV,CAAU+nB,OAAO,GAAG,OAAH,GAAa,EAA9B,SAAA,CAAlB,CAAA;AACA,IAAA,IAAMiE,gBAAgB,GAAG,MAAOhsB,CAAAA,MAAP,CAAO+nB,OAAO,GAAG,OAAH,GAAa,EAA3B,gBAAA,CAAzB,CAAA;AAEA,IAAA,IAAMkE,UAAU,GAAG,CAACH,SAAS,KAAK,IAAd,GAAqBxlB,QAAQ,CAAC4lB,YAA9B,GAA6C9H,KAAM,CAAC/a,MAAP,CAAc,UAAA9J,IAAA,EAAI;MAC/E,OAAOusB,SAAS,CAACrpB,OAAV,CAAkBlD,IAAI,CAACD,IAAvB,CAAsC,GAAA,CAAC,CAA9C,CAAA;AACH,KAFgE,CAA9C,EAEf+J,MAFe,CAER,UAAA9J,IAAA;AAAQ,MAAA,OAAAA,IAAI,CAAC4sB,QAAL,IAAiB5sB,IAAI,CAACysB,gBAAD,CAArB,CAAA;AAAuC,KAFvC,CAAnB,CAAA;IAIA,IAAMlJ,MAAM,GAAGD,UAAU,CAAevc,QAAf,EAAyBjD,CAAzB,EAA4B,EAA5B,CAAzB,CAAA;;AAEA,IAAA,IAAI0kB,OAAJ,EAAa;MACTjF,MAAM,CAACiF,OAAP,GAAiBA,OAAjB,CAAA;AACH,KAAA;;IACD,IAAM1jB,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAWylB,SAAX,EAAsBjJ,MAAtB,CAA3B,CAAA;AAEAne,IAAAA,KAAK,CAACT,OAAN,GAAgBG,MAAM,KAAK,KAA3B,CAAA;IACAM,KAAK,CAACyf,KAAN,GAAc6H,UAAd,CAAA;AAEA,IAAA,IAAM/nB,OAAO,GAAGS,KAAK,CAACT,OAAtB,CAAA;;IAEA,IAAI,CAACA,OAAL,EAAc;AACV,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD+nB,IAAAA,UAAU,CAACxS,OAAX,CAAmB,UAAAla,IAAA,EAAI;AACnBqF,MAAAA,aAAa,CAACrF,IAAI,CAACD,IAAN,CAAb,GAA2BsF,aAAa,CAACrF,IAAI,CAACD,IAAN,CAAb,IAA4B,EAAvD,CAAA;;AAEA,MAAA,IAAI,CAACC,IAAI,CAACysB,gBAAD,CAAT,EAA6B;AACzB,QAAA,OAAA;AACH,OAAA;;MACD,IAAMI,SAAS,yBACR/oB,IAAC;AACJsB,QAAAA,KAAK,EAAEC,aAAa,CAACrF,IAAI,CAACD,IAAN,CADhB;AAEJ+sB,QAAAA,YAAY,EAAER,KAFV;AAGJ3nB,QAAAA,OAAO,EAAE,IAAA;AAHL,QADR,CAAA;;AAMA3E,MAAAA,IAAI,CAACysB,gBAAD,CAAJ,CAAwB1lB,QAAxB,EAAkC8lB,SAAlC,CAAA,CAAA;KAZJ,CAAA,CAAA;AAeA9lB,IAAAA,QAAQ,CAACtC,KAAT,CAAesoB,cAAf,GAAgC;MAC5BC,OAAO,EAAElpB,CAAC,CAACmjB,SADiB;AAE5Bne,MAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;KAFf,CAAA;AAIA,IAAA,OAAOnE,OAAP,CAAA;GAlE6B;AAoEjCsoB,EAAAA,KAAK,EAAL,UACIlmB,QADJ,EAEIjD,CAFJ,EAEU;AAGF,IAAA,IAAAsB,KAAK,GAILtB,CAAC,CAAAsB,KAJD;AAAA,QAAc8nB,UAAU,GAIxBppB,CAAC,CAAAvD,KAJD;AAAA,QAA0B4sB,QAAQ,GAIlCrpB,CAAC,CAAAqpB,QAJD;AAAA,QACA9nB,aAAa,GAGbvB,CAAC,CAAAuB,aAJD;AAAA,QAEAF,UAAU,GAEVrB,CAAC,WAJD;AAAA,QAEY0kB,OAAO,GAEnB1kB,CAAC,QAJD;AAAA,QAGAwoB,KAAK,GACLxoB,CAAC,MAJD,CAAA;;AAKJ,IAAA,IAAI,CAACsB,KAAK,CAACT,OAAX,EAAoB;AAChB,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAMylB,cAAc,GAAG+C,QAAQ,IAAI,CAAI,GAAA,CAAA,GAAID,UAAZ,CAA/B,CAAA;IACA,IAAM3J,MAAM,GAAGD,UAAU,CAAUvc,QAAV,EAAoBjD,CAApB,EAAuB,EAAvB,CAAzB,CAAA;;AAEA,IAAA,IAAI0kB,OAAJ,EAAa;MACTjF,MAAM,CAACiF,OAAP,GAAiBA,OAAjB,CAAA;AACH,KAAA;;IACD,IAAMgE,SAAS,GAAG,SAAA,CAAU/rB,MAAV,CAAU+nB,OAAO,GAAG,OAAH,GAAa,EAA9B,CAAlB,CAAA;AACA/D,IAAAA,YAAY,CAAC1d,QAAD,EAAWylB,SAAX,EAAsBjJ,MAAtB,CAAZ,CAAA;AAEA,IAAA,IAAMsB,KAAK,GAAWzf,KAAK,CAACyf,KAA5B,CAAA;AACA,IAAA,IAAM4H,gBAAgB,GAAG,MAAOhsB,CAAAA,MAAP,CAAO+nB,OAAO,GAAG,OAAH,GAAa,EAA3B,WAAA,CAAzB,CAAA;AAEA3D,IAAAA,KAAK,CAAC3K,OAAN,CAAc,UAAAla,IAAA,EAAI;AACd,MAAA,IAAI,CAACA,IAAI,CAACysB,gBAAD,CAAT,EAA6B;AACzB,QAAA,OAAA;AACH,OAAA;;AACDzsB,MAAAA,IAAI,CAACysB,gBAAD,CAAJ,CAAwB1lB,QAAxB,EAAkC9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAC3B6D,CAD2B,CAAA,EAC1B;AACJsB,QAAAA,KAAK,EAAEC,aAAa,CAACrF,IAAI,CAACD,IAAN,CADhB;AAEJoF,QAAAA,UAAU,EAAAA,UAFN;AAGJilB,QAAAA,cAAc,gBAHV;AAIJ0C,QAAAA,YAAY,EAAER,KAJV;AAKJ3nB,QAAAA,OAAO,EAAE,IAAA;AALL,OAD0B,CAAlC,CAAA,CAAA;KAJJ,CAAA,CAAA;AAaA,IAAA,OAAO4e,MAAP,CAAA;GA1G6B;AA4GjC6J,EAAAA,QAAQ,EAAR,UACIrmB,QADJ,EAEIjD,CAFJ,EAEU;AAEE,IAAA,IAAAsB,KAAK,GAAkDtB,CAAC,CAAnDsB,KAAL;AAAA,QAAOT,OAAO,GAAyCb,CAAC,CAA1Ca,OAAd;AAAA,QAAgBQ,UAAU,GAA6BrB,CAAC,CAA9BqB,UAA1B;AAAA,QAA4BqjB,OAAO,GAAoB1kB,CAAC,CAAA0kB,OAAxD;AAAA,QAAqCnjB,aAAa,GAAKvB,CAAC,CAAAuB,aAAxD,CAAA;;AACR,IAAA,IAAI,CAACD,KAAK,CAACT,OAAX,EAAoB;AAChB,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAM6nB,SAAS,GAAG,SAAU/rB,CAAAA,MAAV,CAAU+nB,OAAO,GAAG,OAAH,GAAa,EAA9B,OAAA,CAAlB,CAAA;AAEA,IAAA,IAAMjF,MAAM,GAAGY,aAAa,CAAapd,QAAb,EAAuBjD,CAAvB,EAA0B;AAAEgC,MAAAA,MAAM,EAAEnB,OAAAA;AAAV,KAA1B,CAA5B,CAAA;;AAEA,IAAA,IAAI6jB,OAAJ,EAAa;MACTjF,MAAM,CAACiF,OAAP,GAAiBA,OAAjB,CAAA;AACH,KAAA;;AACD/D,IAAAA,YAAY,CAAC1d,QAAD,EAAWylB,SAAX,EAAsBjJ,MAAtB,CAAZ,CAAA;AACA,IAAA,IAAMsB,KAAK,GAAWzf,KAAK,CAACyf,KAA5B,CAAA;AACA,IAAA,IAAM4H,gBAAgB,GAAG,MAAOhsB,CAAAA,MAAP,CAAO+nB,OAAO,GAAG,OAAH,GAAa,EAA3B,cAAA,CAAzB,CAAA;AAEA3D,IAAAA,KAAK,CAAC3K,OAAN,CAAc,UAAAla,IAAA,EAAI;AACd,MAAA,IAAI,CAACA,IAAI,CAACysB,gBAAD,CAAT,EAA6B;AACzB,QAAA,OAAA;AACH,OAAA;;AACDzsB,MAAAA,IAAI,CAACysB,gBAAD,CAAJ,CAAwB1lB,QAAxB,EAAkC9G,QAC3B,CAAAA,QAAA,CAAA,EAAA,EAAA6D,CAAA,CAAA,EACH;AAAAgC,QAAAA,MAAM,EAAEnB,OAAR;AACAS,QAAAA,KAAK,EAAEC,aAAa,CAACrF,IAAI,CAACD,IAAN,CADpB;AAEAoF,QAAAA,UAAU,EAAAA,UAFV;AAGAR,QAAAA,OAAO,EAAE,IAAA;AAHT,OADG,CADP,CAAA,CAAA;KAJJ,CAAA,CAAA;AAYA,IAAA,OAAOA,OAAP,CAAA;GA3I6B;AA6IjC0oB,EAAAA,eAAe,EAAf,UAAgBtmB,QAAhB,EAA4DjD,CAA5D,EAAkE;AAC9D,IAAA,OAAO,IAAKuoB,CAAAA,UAAL,CAAiBtlB,QAAjB,wBAAgCjD,IAAC;AAAE0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAA1B,MAAjC,CAAP,CAAA;GA9I6B;AAgJjC8E,EAAAA,UAAU,EAAV,UAAWvmB,QAAX,EAA6CjD,CAA7C,EAAmD;AAC/C,IAAA,OAAO,IAAKmpB,CAAAA,KAAL,CAAYlmB,QAAZ,wBAA2BjD,IAAC;AAAE0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAA1B,MAA5B,CAAP,CAAA;GAjJ6B;AAmJjC+E,EAAAA,aAAa,EAAb,UAAcxmB,QAAd,EAAgDjD,CAAhD,EAAsD;AAClD,IAAA,OAAO,IAAKspB,CAAAA,QAAL,CAAermB,QAAf,wBAA8BjD,IAAC;AAAE0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAA1B,MAA/B,CAAP,CAAA;AACH,GAAA;AArJgC,CAAd,CAAvB,CAAA;AAwJA;;;;;;;;;AASG;;AAEH;;;;;;;;;;;;;;;;;;;;;;AAsBG;;AACH;;;;;;;;;;;;;;;;;;;;;;AAsBG;;AACH;;;;;;;;;;;;;;;;;;;;;;AAsBG;;AAEH;;;;;;;;;;;;;;;AAeG;;AAEH;;;;;;;;;;;;;;;AAeG;;AAEH;;;;;;;;;;;;;;;AAeG;;SClSagF,gBACZzmB,UACAhH,MACA+D,GAAM;AAEN,EAAA,IAAMsB,KAAK,GAAGtB,CAAC,CAACuB,aAAhB,CAAA;AAEAD,EAAAA,KAAK,CAAC6K,SAAN,GAAkB7K,KAAK,CAAC6K,SAAN,IAAmB,EAArC,CAAA;AAEA,EAAA,IAAMwd,cAAc,GAAGroB,KAAK,CAAC6K,SAA7B,CAAA;AAEAwd,EAAAA,cAAc,CAACC,UAAf,GAA4BD,cAAc,CAACC,UAAf,IAA6B,EAAzD,CAAA;AAEA,EAAA,IAAMA,UAAU,GAAGD,cAAc,CAACC,UAAlC,CAAA;EAEA,OAAO3mB,QAAQ,CAAC4mB,SAAT,CAAmB/qB,GAAnB,CAAuB,UAACgrB,CAAD,EAAIlhB,CAAJ,EAAK;IAC/BghB,UAAU,CAAChhB,CAAD,CAAV,GAAgBghB,UAAU,CAAChhB,CAAD,CAAV,IAAiB,EAAjC,CAAA;AACAghB,IAAAA,UAAU,CAAChhB,CAAD,CAAV,CAAc3M,IAAd,CAAA,GAAsB2tB,UAAU,CAAChhB,CAAD,CAAV,CAAc3M,IAAd,KAAuB,EAA7C,CAAA;IAEA,OAAAE,QAAA,CAAAA,QAAA,CAAA,EAAA,EACO6D,CADP,CAAA,EAEI;AAAAsB,MAAAA,KAAK,EAAEsoB,UAAU,CAAChhB,CAAD,CAAV,CAAc3M,IAAd,CAAP;MACAsF,aAAa,EAAEqoB,UAAU,CAAChhB,CAAD,CAAA;AADzB,KAFJ,CAAA,CAAA;AAKH,GATM,CAAP,CAAA;AAUH,CAAA;AACe,SAAAmhB,iBAAA,CACZ9mB,QADY,EAEZ/G,IAFY,EAGZmG,IAHY,EAIZzB,KAJY,EAKZZ,CALY,EAMZc,SANY,EAOZC,QAPY,EAOI;EAEhB,IAAMipB,OAAO,GAAG,CAAC,CAAC3nB,IAAI,CAACwD,KAAL,CAAW,SAAX,CAAlB,CAAA;EACA,IAAM2I,KAAK,GAAG,CAAC,CAACnM,IAAI,CAACwD,KAAL,CAAW,OAAX,CAAhB,CAAA;AACA,EAAA,IAAMhF,OAAO,GAAGb,CAAC,CAACa,OAAlB,CAAA;AACA,EAAA,IAAMS,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;EACA,IAAMlF,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW/G,IAAI,CAACD,IAAhB,EAAsB+D,CAAtB,CAA9B,CAAA;AACA,EAAA,IAAM6pB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;EACA,IAAMI,MAAM,GAAG7tB,MAAM,CAAC0C,GAAP,CAAW,UAACorB,EAAD,EAAKthB,CAAL,EAAM;AAC5B,IAAA,IAAMuhB,aAAa,GAAGN,SAAS,CAACjhB,CAAD,CAA/B,CAAA;AACA,IAAA,IAAMjI,KAAK,GAAGwpB,aAAa,CAACxpB,KAA5B,CAAA;AACA,IAAA,IAAMQ,MAAM,GAAGR,KAAK,CAACQ,MAArB,CAAA;IACA,IAAIipB,UAAU,GAAQF,EAAtB,CAAA;;AAEA,IAAA,IAAIF,OAAJ,EAAa;MACTI,UAAU,GAAG,IAAIzoB,WAAJ,CAAgBZ,QAAhB,CAA0BoB,CAAAA,SAA1B,CAAoCvB,KAApC,EAA2CspB,EAA3C,CAAb,CAAA;AACH,KAFD,MAEO;AAGH,MAAA,IAAI,CAAC/oB,MAAM,CAACJ,QAAD,CAAX,EAAuB;QACnBI,MAAM,CAACJ,QAAD,CAAN,GAAmBO,KAAK,CAAC+oB,WAAN,CAAkBzhB,CAAlB,CAAnB,CAAA;AACH,OAAA;;AACD,MAAA,IAAI,CAACzH,MAAM,CAACJ,QAAD,CAAX,EAAuB;AACnB,QAAA,OAAA;AACH,OAAA;;AACDqpB,MAAAA,UAAU,GAAG1pB,aAAa,CAACwpB,EAAD,EAAKvpB,KAAL,EAAYC,KAAZ,EAAmBC,OAAnB,EAA4BC,SAA5B,EAAuCC,QAAvC,CAA1B,CAAA;AACH,KAAA;;AACD,IAAA,IAAMC,MAAM,GAAI9E,IAAY,CAACmG,IAAD,CAAZ,CAAoB8nB,aAApB,EAAiChuB,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAQiuB,UAAR,CAAA,EAAoB;AAAAE,MAAAA,UAAU,EAAE,IAAA;AAAZ,KAApB,CAAjC,CAAhB,CAAA;;AAEA,IAAA,IAAI9b,KAAJ,EAAW;AACPrN,MAAAA,MAAM,CAACJ,QAAD,CAAN,GAAmB,IAAnB,CAAA;AACH,KAAA;;AACD,IAAA,OAAOC,MAAP,CAAA;AACH,GAzBc,CAAf,CAAA;;AA0BA,EAAA,IAAIgpB,OAAJ,EAAa;IACT1oB,KAAK,CAAC+oB,WAAN,GAAoBR,SAAS,CAAC/qB,GAAV,CAAc,UAAAyrB,KAAA,EAAS;AAAA,MAAA,OAAAA,KAAK,CAAC5pB,KAAN,CAAYQ,MAAZ,CAAmBJ,QAAnB,CAAA,CAAA;AAA4B,KAAnD,CAApB,CAAA;AACH,GAAA;;AACD,EAAA,OAAOkpB,MAAP,CAAA;AACH,CAAA;AACe,SAAAO,iBAAA,CACZvnB,QADY,EAEZ/G,IAFY,EAGZmG,IAHY,EAIZrC,CAJY,EAKZyqB,SALY,EAMZjK,QANY,EAMyF;AADrG,EAAA,IAAAiK,SAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,sBAA6EX,GAAGI,IAAO;AAAA,MAAA,OAAAA,EAAA,CAAA;KAAvF,CAAA;AAAyF,GAAA;;EAGzF,IAAM1b,KAAK,GAAG,CAAC,CAACnM,IAAI,CAACwD,KAAL,CAAW,OAAX,CAAhB,CAAA;EACA,IAAMzJ,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW/G,IAAI,CAACD,IAAhB,EAAsB+D,CAAtB,CAA9B,CAAA;AACA,EAAA,IAAM6pB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;EACA,IAAMI,MAAM,GAAG7tB,MAAM,CAAC0C,GAAP,CAAW,UAACorB,EAAD,EAAKthB,CAAL,EAAM;AAC5B,IAAA,IAAMuhB,aAAa,GAAGN,SAAS,CAACjhB,CAAD,CAA/B,CAAA;IACA,IAAIwhB,UAAU,GAAGF,EAAjB,CAAA;AAEAE,IAAAA,UAAU,GAAGK,SAAS,CAACN,aAAD,EAAgBD,EAAhB,CAAtB,CAAA;AAEA,IAAA,IAAMlpB,MAAM,GAAI9E,IAAY,CAACmG,IAAD,CAAZ,CAAoB8nB,aAApB,EAAiChuB,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAQiuB,UAAR,CAAA,EAAoB;AAAAE,MAAAA,UAAU,EAAE,IAAA;AAAZ,KAApB,CAAjC,CAAhB,CAAA;AAEAtpB,IAAAA,MAAM,IAAIwf,QAAV,IAAsBA,QAAQ,CAAC2J,aAAD,EAAgBD,EAAhB,EAAoBlpB,MAApB,EAA4B4H,CAA5B,CAA9B,CAAA;;AAEA,IAAA,IAAI4F,KAAJ,EAAW;AACP2b,MAAAA,aAAa,CAACxpB,KAAd,CAAoBQ,MAApB,GAA6B,EAA7B,CAAA;AACH,KAAA;;AACD,IAAA,OAAOH,MAAP,CAAA;AACH,GAdc,CAAf,CAAA;AAgBA,EAAA,OAAOipB,MAAP,CAAA;AACH;;AC5FM,IAAMS,cAAc,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAAvB,CAAA;AACA,IAAMC,gBAAgB,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CAAzB,CAAA;AACA,IAAMC,kBAAkB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,MADuB;AAE9BC,EAAAA,GAAG,EAAE,OAFyB;AAG9BC,EAAAA,MAAM,EAAE,QAAA;AAHsB,CAA3B,CAAA;AAKA,IAAMC,oBAAoB,GAAG;AAChCH,EAAAA,KAAK,EAAE,KADyB;AAEhCC,EAAAA,GAAG,EAAE,QAF2B;AAGhCC,EAAAA,MAAM,EAAE,QAAA;AAHwB,CAA7B,CAAA;AAOS,SAAAE,aAAA,CACZhoB,QADY,EAEZlC,QAFY,EAEI;AAGZ,EAAA,IAAAG,EAUA,GAAA+B,QAAQ,CAFP5G,KARD;AAAA,MACI6uB,SAAS,GAAAhqB,EAAA,CAAAgqB,SADb;AAAA,MAEIC,MAAM,GAAAjqB,EAAA,CAAAiqB,MAFV;AAAA,MAGIC,WAAW,GAAAlqB,EAAA,CAAAkqB,WAHf;AAAA,MAIIC,kBAAkB,wBAJtB;AAAA,MAKIC,oBAAoB,GAAApqB,EAAA,CAAAoqB,oBALxB;AAAA,MAMIC,aAAa,GAAArqB,EAAA,CAAAqqB,aANjB;AAAA,MAOIC,cAAc,oBAPlB;AAAA,MASAvqB,EAAA,GACAgC,QAAQ,CAAAtC,KAVR;AAAA,MASS8qB,UAAU,GAAAxqB,EAAA,CAAAwqB,UATnB;AAAA,MASqBC,UAAU,gBAT/B,CAAA;;AAYJ,EAAA,IACI,CAACR,SAAD,IACA,CAACQ,UADD,IAEC3qB,QAAQ,IAAImqB,SAAS,KAAK,IAA1B,IAAkCA,SAAS,CAAC9rB,OAAV,CAAkB2B,QAAlB,CAAA,GAA8B,CAHrE,EAIE;AACE,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;;EACD,IACIwqB,aAAa,IACbC,cADA,IAEAL,MAFA,IAGAC,WAHA,IAICK,UAAU,IAAIA,UAAU,CAACjmB,MAJ1B,IAKC6lB,kBAAkB,IAAIA,kBAAkB,CAAC7lB,MAL1C,IAMC8lB,oBAAoB,IAAIA,oBAAoB,CAAC9lB,MAPlD,EAQE;AACE,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,KAAP,CAAA;AACH,CAAA;AAEK,SAAUmmB,iBAAV,CAA4BC,cAA5B,EAAgF;EAClF,IAAIA,cAAc,KAAK,KAAvB,EAA8B;AAC1B,IAAA,OAAO,EAAP,CAAA;GADJ,MAEO,IAAIA,cAAc,KAAK,IAAnB,IAA2B,CAACA,cAAhC,EAAgD;IACnD,OAAO;AAAE3sB,MAAAA,IAAI,EAAE,IAAR;AAAc6Y,MAAAA,KAAK,EAAE,IAArB;AAA2B9Y,MAAAA,GAAG,EAAE,IAAhC;AAAsC4K,MAAAA,MAAM,EAAE,IAAA;KAArD,CAAA;AACH,GAAA;;AACD,EAAA,OAAOgiB,cAAP,CAAA;AACH,CAAA;AAEe,SAAAC,qBAAA,CACZD,cADY,EAEZE,SAFY,EAEiB;AAE7B,EAAA,IAAMC,kBAAkB,GAAGJ,iBAAiB,CAACC,cAAD,CAA5C,CAAA;EACA,IAAMI,aAAa,GAAuB,EAA1C,CAAA;;AAEA,EAAA,KAAK,IAAM/vB,IAAX,IAAmB8vB,kBAAnB,EAAuC;IACnC,IAAI9vB,IAAI,IAAI6vB,SAAR,IAAsBC,kBAA0B,CAAC9vB,IAAD,CAApD,EAA4D;AACvD+vB,MAAAA,aAAqB,CAAC/vB,IAAD,CAArB,GAA+B6vB,SAAiB,CAAC7vB,IAAD,CAAhD,CAAA;AACJ,KAAA;AACJ,GAAA;;AACD,EAAA,OAAO+vB,aAAP,CAAA;AACH,CAAA;AAEe,SAAAC,uBAAA,CACZL,cADY,EAEZE,SAFY,EAEiB;AAE7B,EAAA,IAAME,aAAa,GAAGH,qBAAqB,CAACD,cAAD,EAAiBE,SAAjB,CAA3C,CAAA;EACA,IAAMI,eAAe,GAAGvB,gBAAgB,CAAC3kB,MAAjB,CAAwB,UAAA/J,IAAA,EAAQ;IAAA,OAAAA,IAAI,IAAI+vB,aAAR,CAAA;AAAqB,GAArD,CAAxB,CAAA;EACA,IAAMG,aAAa,GAAGzB,cAAc,CAAC1kB,MAAf,CAAsB,UAAA/J,IAAA,EAAQ;IAAA,OAAAA,IAAI,IAAI+vB,aAAR,CAAA;AAAqB,GAAnD,CAAtB,CAAA;EAEA,OAAO;AACHI,IAAAA,UAAU,EAAEF,eAAe,CAACptB,GAAhB,CAAoB,UAAA7C,IAAA,EAAQ;MAAA,OAAA+vB,aAAa,CAAC/vB,IAAD,CAAb,CAAA;AAAoB,KAAhD,CADT;AAEHowB,IAAAA,QAAQ,EAAEF,aAAa,CAACrtB,GAAd,CAAkB,UAAA7C,IAAA,EAAQ;MAAA,OAAA+vB,aAAa,CAAC/vB,IAAD,CAAb,CAAA;KAA1B,CAAA;GAFd,CAAA;AAIH,CAAA;SAEeqwB,sBACZnpB,YACAopB,eACAxsB,GAAS;AAET,EAAA,IAAMysB,SAAS,GAAG3f,iBAAiB,CAC/B1J,UAD+B,EACnB,CAACopB,aAAa,CAACnb,UAAf,EAA4Bmb,aAAa,CAAClb,SAA1C,CADmB,EACoCtR,CADpC,CAAnC,CAAA;AAGA,EAAA,OAAO,CACHwsB,aAAa,CAACttB,IAAd,GAAqButB,SAAS,CAAC,CAAD,CAD3B,EAEHD,aAAa,CAACvtB,GAAd,GAAoBwtB,SAAS,CAAC,CAAD,CAF1B,CAAP,CAAA;AAIH,CAAA;AAEK,SAAUC,kBAAV,CAA6BvrB,EAA7B,EAAyD;MAA3BwrB,MAAM,GAAAxrB,EAAA,CAAA,CAAA;MAAEyrB,MAAM,GAAAzrB,EAAA,CAAA,CAAA;EAC9C,IAAI0rB,EAAE,GAAGD,MAAM,CAAC,CAAD,CAAN,GAAYD,MAAM,CAAC,CAAD,CAA3B,CAAA;EACA,IAAIG,EAAE,GAAGF,MAAM,CAAC,CAAD,CAAN,GAAYD,MAAM,CAAC,CAAD,CAA3B,CAAA;;AAEA,EAAA,IAAI3vB,IAAI,CAACyc,GAAL,CAASoT,EAAT,CAAA,GAAentB,UAAnB,EAA6B;AACzBmtB,IAAAA,EAAE,GAAG,CAAL,CAAA;AACH,GAAA;;AACD,EAAA,IAAI7vB,IAAI,CAACyc,GAAL,CAASqT,EAAT,CAAA,GAAeptB,UAAnB,EAA6B;AACzBotB,IAAAA,EAAE,GAAG,CAAL,CAAA;AACH,GAT0D;AAY3D;;;EACA,IAAI9Y,CAAC,GAAG,CAAR,CAAA;EACA,IAAI0O,CAAC,GAAG,CAAR,CAAA;EACA,IAAIqK,CAAC,GAAG,CAAR,CAAA;;EAEA,IAAI,CAACF,EAAL,EAAS;AACL;IACA7Y,CAAC,GAAG,CAAC,CAAL,CAAA;AACA+Y,IAAAA,CAAC,GAAGJ,MAAM,CAAC,CAAD,CAAV,CAAA;AACH,GAJD,MAIO,IAAI,CAACG,EAAL,EAAS;AACZ;AACApK,IAAAA,CAAC,GAAG,CAAJ,CAAA;AACAqK,IAAAA,CAAC,GAAG,CAACJ,MAAM,CAAC,CAAD,CAAX,CAAA;AACH,GAJM,MAIA;AACH;AACA;AACA3Y,IAAAA,CAAC,GAAG,CAAC8Y,EAAD,GAAMD,EAAV,CAAA;AACAnK,IAAAA,CAAC,GAAG,CAAJ,CAAA;IACAqK,CAAC,GAAG/Y,CAAC,GAAG2Y,MAAM,CAAC,CAAD,CAAV,GAAgBA,MAAM,CAAC,CAAD,CAA1B,CAAA;AACH,GAAA;;EAED,OAAO,CAAC3Y,CAAD,EAAI0O,CAAJ,EAAOqK,CAAP,CAAA,CAAUhuB,GAAV,CAAc,UAAAgkB,CAAA,EAAK;AAAA,IAAA,OAAAiK,QAAQ,CAACjK,CAAD,EAAIrjB,UAAJ,CAAR,CAAA;AAAqB,GAAxC,CAAP,CAAA;AACH;;ACtIK,SAAUutB,sBAAV,CACF/pB,QADE,EAEF2U,MAFE,EAGFC,MAHE,EAIFoV,mBAJE,EAI0B;AAE5B,EAAA,IAAM5wB,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;EACA,IAAM6wB,aAAa,GAAGxL,WAAW,CAASuL,mBAAT,EAA8B5wB,KAAK,CAAC6wB,aAApC,EAAmD,CAAnD,CAAjC,CAAA;AAEA,EAAA,OAAOC,cAAc,CACjBlqB,QAAQ,CAACtC,KAAT,CAAe8qB,UADE,EAEjB7T,MAFiB,EAGjBC,MAHiB,EAIjBqV,aAJiB,CAArB,CAAA;AAMH,CAAA;AAEK,SAAUC,cAAV,CACF1B,UADE,EAEF7T,MAFE,EAGFC,MAHE,EAIFqV,aAJE,EAImB;EAErB,OAAO;IACHb,QAAQ,EAAEe,SAAS,CAAC3B,UAAD,EAAa,UAAb,EAAyB7T,MAAzB,EAAiCsV,aAAjC,CADhB;IAEHd,UAAU,EAAEgB,SAAS,CAAC3B,UAAD,EAAa,YAAb,EAA2B5T,MAA3B,EAAmCqV,aAAnC,CAAA;GAFzB,CAAA;AAIH,CAAA;SACeG,mBACZpqB,UACA6G,UACAwjB,QAAgB;AAET,EAAA,IAAAC,IAAI,GAAUD,MAAM,CAAA,CAAA,CAApB;AAAA,MAAME,IAAI,GAAIF,MAAM,CAAA,CAAA,CAApB,CAAA;AACA,EAAA,IAAAxrB,MAAM,GAAYgI,QAAQ,CAAA,CAAA,CAA1B;AAAA,MAAQ/H,MAAM,GAAI+H,QAAQ,CAAA,CAAA,CAA1B,CAAA;;AACH,EAAA,IAAA5I,EAAW,GAAAoC,KAAK,CAACgqB,MAAD,EAASxjB,QAAT,CAAhB;AAAA,MAAC8iB,EAAE,GAAA1rB,EAAA,CAAA,CAAA,CAAH;AAAA,MAAK2rB,EAAE,QAAP,CAAA;;AACJ,EAAA,IAAMY,QAAQ,GAAGZ,EAAE,GAAG,CAAtB,CAAA;AACA,EAAA,IAAMa,OAAO,GAAGd,EAAE,GAAG,CAArB,CAAA;AAEAA,EAAAA,EAAE,GAAG/J,WAAW,CAAC+J,EAAD,CAAhB,CAAA;AACAC,EAAAA,EAAE,GAAGhK,WAAW,CAACgK,EAAD,CAAhB,CAAA;AAEA,EAAA,IAAMc,YAAY,GAAmB;AACjCC,IAAAA,MAAM,EAAE,KADyB;AAEjCrd,IAAAA,MAAM,EAAE,CAFyB;AAGjC5H,IAAAA,GAAG,EAAE,CAAA;GAHT,CAAA;AAKA,EAAA,IAAMklB,cAAc,GAAmB;AACnCD,IAAAA,MAAM,EAAE,KAD2B;AAEnCrd,IAAAA,MAAM,EAAE,CAF2B;AAGnC5H,IAAAA,GAAG,EAAE,CAAA;GAHT,CAAA;;AAMA,EAAA,IAAIikB,EAAE,KAAK,CAAP,IAAYC,EAAE,KAAK,CAAvB,EAA0B;IACtB,OAAO;AACHR,MAAAA,QAAQ,EAAEsB,YADP;AAEHvB,MAAAA,UAAU,EAAEyB,cAAAA;KAFhB,CAAA;AAIH,GAAA;;EACK,IAAA5sB,EAGF,GAAA+rB,sBAAsB,CAAC/pB,QAAD,EAAW2pB,EAAE,GAAG,CAACW,IAAD,CAAH,GAAY,EAAzB,EAA6BV,EAAE,GAAG,CAACW,IAAD,CAAH,GAAY,EAA3C,CAHpB;AAAA,MACQM,gBAAgB,GAAA7sB,EAAA,CAAAorB,QADxB;AAAA,MAEU0B,kBAAkB,gBAF5B,CAAA;;AAKND,EAAAA,gBAAgB,CAACE,QAAjB,CAA0BhoB,MAA1B,CAAiC,UAAC9E,EAAD,EAAQ;AAAL,IAAA,IAAAyH,GAAG,GAAAzH,EAAA,CAAAyH,GAAH,CAAA;IAChC,OAAO+kB,OAAO,GAAG/kB,GAAG,IAAI7G,MAAV,GAAmB6G,GAAG,IAAI7G,MAAxC,CAAA;GADJ,CAAA,CAAA;AAGAisB,EAAAA,kBAAkB,CAACC,QAAnB,CAA4BhoB,MAA5B,CAAmC,UAAC9E,EAAD,EAAQ;AAAL,IAAA,IAAAyH,GAAG,GAAAzH,EAAA,CAAAyH,GAAH,CAAA;IAClC,OAAO8kB,QAAQ,GAAG9kB,GAAG,IAAI5G,MAAV,GAAmB4G,GAAG,IAAI5G,MAAzC,CAAA;GADJ,CAAA,CAAA;EAGA+rB,gBAAgB,CAACF,MAAjB,GAA0BE,gBAAgB,CAACE,QAAjB,CAA0BxoB,MAA1B,GAAmC,CAA7D,CAAA;EACAuoB,kBAAkB,CAACH,MAAnB,GAA4BG,kBAAkB,CAACC,QAAnB,CAA4BxoB,MAA5B,GAAqC,CAAjE,CAAA;;AAEM,EAAA,IAAA9B,EAAA,GAGFuqB,2BAA2B,CAACH,gBAAD,CAHzB;AAAA,MACMI,cAAc,GAAAxqB,EAAA,CAAAkqB,MADpB;AAAA,MAESO,iBAAiB,GAAAzqB,EAAA,CAAA0qB,SAF1B,CAAA;;AAIA,EAAA,IAAAjV,EAAA,GAGF8U,2BAA2B,CAACF,kBAAD,CAHzB;AAAA,MACMM,gBAAgB,GAAAlV,EAAA,CAAAyU,MADtB;AAAA,MAESU,mBAAmB,GAAAnV,EAAA,CAAAiV,SAF5B,CAAA;;EAIN,IAAMG,aAAa,GAAGF,gBAAgB,GAAGC,mBAAoB,CAAC3lB,GAArB,CAAyB,CAAzB,CAAH,GAAiC,CAAvE,CAAA;EACA,IAAM6lB,WAAW,GAAGN,cAAc,GAAGC,iBAAkB,CAACxlB,GAAnB,CAAuB,CAAvB,CAAH,GAA+B,CAAjE,CAAA;;EAEA,IAAIikB,EAAE,KAAK,CAAX,EAAc;AACV,IAAA,IAAIyB,gBAAJ,EAAsB;MAClBR,cAAc,CAACD,MAAf,GAAwB,IAAxB,CAAA;MACAC,cAAc,CAACllB,GAAf,GAAqB2lB,mBAAoB,CAAC3lB,GAArB,CAAyB,CAAzB,CAArB,CAAA;AACAklB,MAAAA,cAAc,CAACtd,MAAf,GAAwBid,IAAI,GAAGK,cAAc,CAACllB,GAA9C,CAAA;AACH,KAAA;AACJ,GAND,MAMO,IAAIkkB,EAAE,KAAK,CAAX,EAAc;AACjB,IAAA,IAAIqB,cAAJ,EAAoB;MAChBP,YAAY,CAACC,MAAb,GAAsB,IAAtB,CAAA;MACAD,YAAY,CAAChlB,GAAb,GAAmB6lB,WAAnB,CAAA;AACAb,MAAAA,YAAY,CAACpd,MAAb,GAAsBgd,IAAI,GAAGiB,WAA7B,CAAA;AACH,KAAA;AACJ,GANM,MAMA;AACH;AACA,IAAA,IAAMza,CAAC,GAAG8Y,EAAE,GAAGD,EAAf,CAAA;IACA,IAAMnK,CAAC,GAAG6K,MAAM,CAAC,CAAD,CAAN,GAAYvZ,CAAC,GAAGwZ,IAA1B,CAAA;IACA,IAAI7W,CAAC,GAAG,CAAR,CAAA;IACA,IAAID,CAAC,GAAG,CAAR,CAAA;IACA,IAAImX,MAAM,GAAG,KAAb,CAAA;;AAEA,IAAA,IAAIM,cAAJ,EAAoB;AAChBzX,MAAAA,CAAC,GAAG+X,WAAJ,CAAA;AACA9X,MAAAA,CAAC,GAAG3C,CAAC,GAAG0C,CAAJ,GAAQgM,CAAZ,CAAA;AACAmL,MAAAA,MAAM,GAAG,IAAT,CAAA;KAHJ,MAIO,IAAIS,gBAAJ,EAAsB;AACzB3X,MAAAA,CAAC,GAAG6X,aAAJ,CAAA;AACA9X,MAAAA,CAAC,GAAG,CAACC,CAAC,GAAG+L,CAAL,IAAU1O,CAAd,CAAA;AACA6Z,MAAAA,MAAM,GAAG,IAAT,CAAA;AACH,KAAA;;AACD,IAAA,IAAIA,MAAJ,EAAY;MACRD,YAAY,CAACC,MAAb,GAAsB,IAAtB,CAAA;MACAD,YAAY,CAAChlB,GAAb,GAAmB8N,CAAnB,CAAA;AACAkX,MAAAA,YAAY,CAACpd,MAAb,GAAsBgd,IAAI,GAAG9W,CAA7B,CAAA;MAEAoX,cAAc,CAACD,MAAf,GAAwB,IAAxB,CAAA;MACAC,cAAc,CAACllB,GAAf,GAAqB+N,CAArB,CAAA;AACAmX,MAAAA,cAAc,CAACtd,MAAf,GAAwBid,IAAI,GAAG9W,CAA/B,CAAA;AACH,KAAA;AACJ,GAAA;;EACD,OAAO;AACH2V,IAAAA,QAAQ,EAAEsB,YADP;AAEHvB,IAAAA,UAAU,EAAEyB,cAAAA;GAFhB,CAAA;AAIH,CAAA;SAEeY,WACZxrB,UACAwV,MACAwU,qBAA4B;EAE5B,IAAM1jB,KAAK,GAAG0iB,uBAAuB,CAAChpB,QAAQ,CAAC5G,KAAT,CAAeuvB,cAAhB,EAAgCnT,IAAhC,CAArC,CAAA;AAEA,EAAA,OAAOuU,sBAAsB,CACzB/pB,QADyB,EAEzBsG,KAAK,CAAC8iB,QAFmB,EAGzB9iB,KAAK,CAAC6iB,UAHmB,EAIzBa,mBAJyB,CAA7B,CAAA;AAMH,CAAA;AAEK,SAAUgB,2BAAV,CACFS,QADE,EACgB;AAElB,EAAA,IAAMd,MAAM,GAAGc,QAAQ,CAACd,MAAxB,CAAA;;EAEA,IAAI,CAACA,MAAL,EAAa;IACT,OAAO;AACHA,MAAAA,MAAM,EAAE,KADL;AAEHrd,MAAAA,MAAM,EAAE,CAFL;MAGHhJ,IAAI,EAAE,CAAC,CAHJ;AAIHoB,MAAAA,GAAG,EAAE,CAJF;AAKHylB,MAAAA,SAAS,EAAE,IAAA;KALf,CAAA;AAOH,GAAA;;AACD,EAAA,IAAMO,OAAO,GAAGD,QAAQ,CAACV,QAAT,CAAkB,CAAlB,CAAhB,CAAA;AACA,EAAA,IAAMY,aAAa,GAAGD,OAAQ,CAACE,cAAT,CAAwB,CAAxB,CAAtB,CAAA;AACA,EAAA,IAAMte,MAAM,GAAGqe,aAAc,CAACre,MAA9B,CAAA;AACA,EAAA,IAAMhJ,IAAI,GAAGqnB,aAAc,CAACrnB,IAA5B,CAAA;AACA,EAAA,IAAM6mB,SAAS,GAAGQ,aAAc,CAACR,SAAjC,CAAA;EAEA,OAAO;AACHR,IAAAA,MAAM,EAAAA,MADH;AAEHrd,IAAAA,MAAM,EAAAA,MAFH;AAGHhJ,IAAAA,IAAI,EAAAA,IAHD;IAIHoB,GAAG,EAAEgmB,OAAQ,CAAChmB,GAJX;AAKHylB,IAAAA,SAAS,EAAAA,SAAAA;GALb,CAAA;AAOH,CAAA;;AAED,SAAShB,SAAT,CACI3B,UADJ,EAEIqD,UAFJ,EAGIC,WAHJ,EAII7B,aAJJ,EAIyB;AAErB,EAAA,IAAI,CAACzB,UAAD,IAAe,CAACA,UAAU,CAACjmB,MAA/B,EAAuC;IACnC,OAAO;AACHooB,MAAAA,MAAM,EAAE,KADL;MAEHvoB,KAAK,EAAE,CAAC,CAFL;AAGH2oB,MAAAA,QAAQ,EAAE,EAAA;KAHd,CAAA;AAKH,GAAA;;AACD,EAAA,IAAMgB,UAAU,GAAGF,UAAU,KAAK,UAAlC,CAAA;AACA,EAAA,IAAMG,OAAO,GAAGD,UAAU,GAAG,CAAH,GAAO,CAAjC,CAAA;EAEA,IAAME,YAAY,GAAGH,WAAW,CAACjwB,GAAZ,CAAgB,UAACqwB,SAAD,EAAY9pB,KAAZ,EAAiB;IAClD,IAAMwpB,cAAc,GAAGpD,UAAU,CAAC3sB,GAAX,CAAe,UAAAsvB,SAAA,EAAS;AACnC,MAAA,IAAAzlB,GAAG,GAAKylB,SAAS,CAAAzlB,GAAjB,CAAA;AACR,MAAA,IAAM4H,MAAM,GAAG4e,SAAS,GAAGxmB,GAAG,CAACsmB,OAAD,CAA9B,CAAA;MAEA,OAAO;AACH1e,QAAAA,MAAM,EAAAA,MADH;AAEHhJ,QAAAA,IAAI,EAAExK,IAAI,CAACyc,GAAL,CAASjJ,MAAT,CAFH;AAGH6d,QAAAA,SAAS,EAAAA,SAAAA;OAHb,CAAA;AAKH,KATsB,CASpBpoB,CAAAA,MAToB,CASb,UAAC9E,EAAD,EAAoB;UAAjBktB,SAAS,GAAAltB,EAAA,CAAAktB;UAAE7mB,IAAI,GAAArG,EAAA,CAAAqG;AAChB,MAAA,IAAAlF,IAAI,GAAK+rB,SAAS,CAAA/rB,IAAlB,CAAA;;AACR,MAAA,IACIA,IAAI,KAAKysB,UAAT,IACGvnB,IAAI,GAAG2lB,aAFd,EAGE;AACE,QAAA,OAAO,KAAP,CAAA;AACH,OAAA;;AACD,MAAA,OAAO,IAAP,CAAA;AACH,KAlBsB,EAkBpB1K,IAlBoB,CAmBnB,UAACzO,CAAD,EAAI0O,CAAJ,EAAU;AAAA,MAAA,OAAA1O,CAAC,CAACxM,IAAF,GAASkb,CAAC,CAAClb,IAAX,CAAA;AAAe,KAnBN,CAAvB,CAAA;IAuBA,OAAO;AACHoB,MAAAA,GAAG,EAAEwmB,SADF;AAEH9pB,MAAAA,KAAK,EAAAA,KAFF;AAGHwpB,MAAAA,cAAc,EAAAA,cAAAA;KAHlB,CAAA;AAKH,GA7BoB,CA6BlB7oB,CAAAA,MA7BkB,CA6BX,UAAAopB,WAAA,EAAW;AACjB,IAAA,OAAOA,WAAW,CAACP,cAAZ,CAA2BrpB,MAA3B,GAAoC,CAA3C,CAAA;AACH,GA/BoB,EA+BlBgd,IA/BkB,CA+Bb,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;AACT,IAAA,OAAO1O,CAAC,CAAC8a,cAAF,CAAiB,CAAjB,CAAoBtnB,CAAAA,IAApB,GAA2Bkb,CAAC,CAACoM,cAAF,CAAiB,CAAjB,EAAoBtnB,IAAtD,CAAA;AACH,GAjCoB,CAArB,CAAA;AAmCA,EAAA,IAAMqmB,MAAM,GAAGsB,YAAY,CAAC1pB,MAAb,GAAsB,CAArC,CAAA;EACA,OAAO;AACHooB,IAAAA,MAAM,EAAAA,MADH;IAEHvoB,KAAK,EAAEuoB,MAAM,GAAGsB,YAAY,CAAC,CAAD,CAAZ,CAAgB7pB,KAAnB,GAA2B,CAAC,CAFtC;AAGH2oB,IAAAA,QAAQ,EAAEkB,YAAAA;GAHd,CAAA;AAKH,CAAA;;AAEK,SAAUG,uBAAV,CACFpsB,QADE,EAEFsG,KAFE,EAGF+lB,aAHE,EAIFpC,aAJE,EAIe;AAAjB,EAAA,IAAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,aAAiB,GAAA,CAAjB,CAAA;AAAiB,GAAA;;EAEjB,IAAI3F,SAAS,GAAe,EAA5B,CAAA;;EACA,IAAI+H,aAAa,CAAC,CAAD,CAAb,IAAoBA,aAAa,CAAC,CAAD,CAArC,EAA0C;AACtC/H,IAAAA,SAAS,GAAG,CACR+H,aADQ,EAER,CAAC,CAACA,aAAa,CAAC,CAAD,CAAf,EAAoBA,aAAa,CAAC,CAAD,CAAjC,CAFQ,EAGR,CAACA,aAAa,CAAC,CAAD,CAAd,EAAmB,CAACA,aAAa,CAAC,CAAD,CAAjC,CAHQ,CAIVxwB,CAAAA,GAJU,CAIN,UAAAkG,SAAA;AAAa,MAAA,OAAAwE,iBAAiB,CAACD,KAAD,EAAQvE,SAAR,CAAjB,CAAA;AAAmC,KAJ1C,CAAZ,CAAA;AAKH,GAND,MAMO,IAAI,CAACsqB,aAAa,CAAC,CAAD,CAAd,IAAqB,CAACA,aAAa,CAAC,CAAD,CAAvC,EAA4C;IAC/C,IAAMC,UAAU,GAAG,CAAChmB,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,CAAD,CAA1B,EAA+BA,KAAK,CAAC,CAAD,CAApC,EAAyCA,KAAK,CAAC,CAAD,CAA9C,CAAnB,CAAA;;IAEA,KAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AACxB2e,MAAAA,SAAS,CAACle,IAAV,CAAekmB,UAAU,CAAC3mB,CAAD,CAAzB,CAAA,CAAA;AACA2e,MAAAA,SAAS,CAACle,IAAV,CAAe,CACX,CAACkmB,UAAU,CAAC3mB,CAAD,CAAV,CAAc,CAAd,CAAA,GAAmB2mB,UAAU,CAAC3mB,CAAC,GAAG,CAAL,CAAV,CAAkB,CAAlB,CAApB,IAA4C,CADjC,EAEX,CAAC2mB,UAAU,CAAC3mB,CAAD,CAAV,CAAc,CAAd,CAAmB2mB,GAAAA,UAAU,CAAC3mB,CAAC,GAAG,CAAL,CAAV,CAAkB,CAAlB,CAApB,IAA4C,CAFjC,CAAf,CAAA,CAAA;AAIH,KAAA;AACJ,GAVM,MAUA;AACH,IAAA,IAAI3F,QAAQ,CAAC5G,KAAT,CAAe+oB,SAAnB,EAA8B;AAC1BmC,MAAAA,SAAS,GAAG,CACR,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CADQ,EAER,CAAC,CAAC,CAAF,EAAK,CAAL,CAFQ,EAGR,CAAC,CAAD,EAAI,CAAC,CAAL,CAHQ,EAIR,CAAC,CAAD,EAAI,CAAJ,CAJQ,EAKR+H,aALQ,CAMVxwB,CAAAA,GANU,CAMN,UAAAC,GAAA;AAAO,QAAA,OAAAyK,iBAAiB,CAACD,KAAD,EAAQxK,GAAR,CAAjB,CAAA;AAA6B,OAN9B,CAAZ,CAAA;AAOH,KARD,MAQO;AACHwoB,MAAAA,SAAS,GAAGje,mBAAmB,CAACC,KAAD,EAAQ+lB,aAAR,CAA/B,CAAA;;AAEA,MAAA,IAAI/H,SAAS,CAAC/hB,MAAV,GAAmB,CAAvB,EAA0B;AACtB+hB,QAAAA,SAAS,CAACle,IAAV,CAAe,CACX,CAACke,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAkBA,GAAAA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAnB,IAAsC,CAD3B,EAEX,CAACA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAA,GAAkBA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAnB,IAAsC,CAF3B,CAAf,CAAA,CAAA;AAIH,OAAA;AACJ,KAAA;AACJ,GAAA;;EACD,OAAOyF,sBAAsB,CAAC/pB,QAAD,EAAWskB,SAAS,CAACzoB,GAAV,CAAc,UAAA6J,GAAA;IAAO,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;GAArB,CAAX,EAAyC4e,SAAS,CAACzoB,GAAV,CAAc,UAAA6J,GAAA;IAAO,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;GAArB,CAAzC,EAAuEukB,aAAvE,CAA7B,CAAA;AACH,CAAA;AAEe,SAAAsC,sBAAA,CACZzb,CADY,EAEZ0O,CAFY,EAE4C;EAExD,IAAMgN,KAAK,GAAG1yB,IAAI,CAACyc,GAAL,CAASzF,CAAC,CAACxD,MAAX,CAAd,CAAA;EACA,IAAMmf,KAAK,GAAG3yB,IAAI,CAACyc,GAAL,CAASiJ,CAAC,CAAClS,MAAX,CAAd,CAAA;;AAEA,EAAA,IAAIwD,CAAC,CAAC4b,OAAF,IAAalN,CAAC,CAACkN,OAAnB,EAA4B;IACxB,OAAOD,KAAK,GAAGD,KAAf,CAAA;AACH,GAFD,MAEO,IAAI1b,CAAC,CAAC4b,OAAN,EAAe;AAClB,IAAA,OAAO,CAAC,CAAR,CAAA;AACH,GAFM,MAEA,IAAIlN,CAAC,CAACkN,OAAN,EAAe;AAClB,IAAA,OAAO,CAAP,CAAA;GADG,MAEA,IAAI5b,CAAC,CAAC6Z,MAAF,IAAYnL,CAAC,CAACmL,MAAlB,EAA0B;IAC7B,OAAO8B,KAAK,GAAGD,KAAf,CAAA;AACH,GAFM,MAEA,IAAI1b,CAAC,CAAC6Z,MAAN,EAAc;AACjB,IAAA,OAAO,CAAC,CAAR,CAAA;AACH,GAFM,MAEA,IAAInL,CAAC,CAACmL,MAAN,EAAc;AACjB,IAAA,OAAO,CAAP,CAAA;AACH,GAFM,MAEA,IAAI6B,KAAK,GAAGhwB,QAAZ,EAAsB;AACzB,IAAA,OAAO,CAAP,CAAA;AACH,GAFM,MAEA,IAAIiwB,KAAK,GAAGjwB,QAAZ,EAAsB;AACzB,IAAA,OAAO,CAAC,CAAR,CAAA;AACH,GAAA;;EACD,OAAOgwB,KAAK,GAAGC,KAAf,CAAA;AACH,CAAA;AACe,SAAAE,iBAAA,CACZC,OADY,EAEZxqB,KAFY,EAEC;EAEb,OAAOwqB,OAAO,CAAC/Z,KAAR,EAAgB0M,CAAAA,IAAhB,CAAqB,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;AAC7B,IAAA,IAAMqN,KAAK,GAAG/b,CAAC,CAACgc,IAAF,CAAO1qB,KAAP,CAAd,CAAA;AACA,IAAA,IAAM2qB,KAAK,GAAGvN,CAAC,CAACsN,IAAF,CAAO1qB,KAAP,CAAd,CAAA;AACA,IAAA,IAAM4qB,OAAO,GAAGlc,CAAC,CAACxD,MAAF,CAASlL,KAAT,CAAhB,CAAA;IACA,IAAM6qB,OAAO,GAAGzN,CAAC,CAAClS,MAAF,CAASlL,KAAT,CAAhB,CAJ6B;AAM7B;;IACA,IAAI,CAACyqB,KAAL,EAAY;AACR,MAAA,OAAO,CAAP,CAAA;AACH,KAFD,MAEO,IAAI,CAACE,KAAL,EAAY;AACf,MAAA,OAAO,CAAC,CAAR,CAAA;AACH,KAAA;;AACD,IAAA,OAAOR,sBAAsB,CACzB;MAAEG,OAAO,EAAE5b,CAAC,CAAC4b,OAAb;MAAsB/B,MAAM,EAAE7Z,CAAC,CAAC6Z,MAAhC;AAAwCrd,MAAAA,MAAM,EAAE0f,OAAAA;AAAhD,KADyB,EAEzB;MAAEN,OAAO,EAAElN,CAAC,CAACkN,OAAb;MAAsB/B,MAAM,EAAEnL,CAAC,CAACmL,MAAhC;AAAwCrd,MAAAA,MAAM,EAAE2f,OAAAA;AAAhD,KAFyB,CAA7B,CAAA;GAZG,CAAA,CAgBJ,CAhBI,CAAP,CAAA;AAiBH,CAAA;SAGeC,uBACZnrB,WACA+E,gBACAqb,WAAkB;AAElB,EAAA,IAAMgL,UAAU,GAAiB,EAAjC,CAFkB;;AAKlB,EAAA,IAAIhL,SAAJ,EAAe;IACX,IAAIroB,IAAI,CAACyc,GAAL,CAASzP,cAAc,CAAC,CAAD,CAAvB,CAAgC,KAAA,CAAhC,IAAqChN,IAAI,CAACyc,GAAL,CAASzP,cAAc,CAAC,CAAD,CAAvB,CAAgC,KAAA,CAAzE,EAA4E;MACxEqmB,UAAU,CAAC/mB,IAAX,CACI,CAACU,cAAD,EAAiB,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAjB,CADJ,EAEI,CAACA,cAAD,EAAiB,CAAC,CAAC,CAAF,EAAK,CAAL,CAAjB,CAFJ,EAGI,CAACA,cAAD,EAAiB,CAAC,CAAD,EAAI,CAAC,CAAL,CAAjB,CAHJ,EAII,CAACA,cAAD,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAJJ,CAAA,CAAA;AAMH,KAPD,MAOO;AACHqmB,MAAAA,UAAU,CAAC/mB,IAAX,CACI,CAACU,cAAD,EAAiB,CAAC/E,SAAS,CAAC,CAAD,CAAV,EAAe,CAACA,SAAS,CAAC,CAAD,CAAzB,CAAjB,CADJ,EAEI,CAAC+E,cAAD,EAAiB,CAAC,CAAC/E,SAAS,CAAC,CAAD,CAAX,EAAgBA,SAAS,CAAC,CAAD,CAAzB,CAAjB,CAFJ,CAAA,CAAA;AAIH,KAAA;;AACDorB,IAAAA,UAAU,CAAC/mB,IAAX,CAAgB,CAACU,cAAD,EAAiB/E,SAAjB,CAAhB,CAAA,CAAA;AACH,GAfD,MAeO;IACH,IAAKA,SAAS,CAAC,CAAD,CAAT,IAAgBA,SAAS,CAAC,CAAD,CAA1B,IAAmC,CAACA,SAAS,CAAC,CAAD,CAAV,IAAiB,CAACA,SAAS,CAAC,CAAD,CAAlE,EAAwE;AACpE,MAAA,IAAMqrB,cAAY,GAAGrrB,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAf,GAA2B,CAAC,CAAD,EAAI,CAAJ,CAAhD,CAAA;MAEA,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQoR,OAAR,CAAgB,UAAAka,KAAA,EAAK;QACjB,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQla,OAAR,CAAgB,UAAAma,KAAA,EAAK;AACjB,UAAA,IAAMC,aAAa,GAAG,CAACF,KAAK,GAAGD,cAAY,CAAC,CAAD,CAArB,EAA0BE,KAAK,GAAGF,cAAY,CAAC,CAAD,CAA9C,CAAtB,CAAA;;AAEA,UAAA,IACItmB,cAAc,CAAC,CAAD,CAAd,KAAsBymB,aAAa,CAAC,CAAD,CAAnC,IACGzmB,cAAc,CAAC,CAAD,CAAd,KAAsBymB,aAAa,CAAC,CAAD,CAF1C,EAGE;AACE,YAAA,OAAA;AACH,WAAA;;AACDJ,UAAAA,UAAU,CAAC/mB,IAAX,CAAgB,CAACU,cAAD,EAAiBymB,aAAjB,CAAhB,CAAA,CAAA;SATJ,CAAA,CAAA;OADJ,CAAA,CAAA;AAaH,KAhBD,MAgBO,IAAIxrB,SAAS,CAAC,CAAD,CAAb,EAAkB;MACrB,IAAMyrB,KAAK,GAAG1zB,IAAI,CAACyc,GAAL,CAASzP,cAAc,CAAC,CAAD,CAAvB,CAAA,KAAgC,CAAhC,GAAoC,CAAC,CAAD,CAApC,GAA0C,CAAC,CAAD,EAAI,CAAC,CAAL,CAAxD,CAAA;AAEA0mB,MAAAA,KAAK,CAACra,OAAN,CAAc,UAAA2Z,IAAA,EAAI;AACdK,QAAAA,UAAU,CAAC/mB,IAAX,CACI,CACI,CAACU,cAAc,CAAC,CAAD,CAAf,EAAoB,CAAC,CAArB,CADJ,EAEI,CAACgmB,IAAI,GAAG/qB,SAAS,CAAC,CAAD,CAAjB,EAAsB,CAAC,CAAvB,CAFJ,CADJ,EAKI,CACI,CAAC+E,cAAc,CAAC,CAAD,CAAf,EAAoB,CAApB,CADJ,EAEI,CAACgmB,IAAI,GAAG/qB,SAAS,CAAC,CAAD,CAAjB,EAAsB,CAAtB,CAFJ,CALJ,EASI,CACI,CAAC+E,cAAc,CAAC,CAAD,CAAf,EAAoB,CAApB,CADJ,EAEI,CAACgmB,IAAI,GAAG/qB,SAAS,CAAC,CAAD,CAAjB,EAAsB,CAAtB,CAFJ,CATJ,CAAA,CAAA;OADJ,CAAA,CAAA;AAgBH,KAnBM,MAmBA,IAAIA,SAAS,CAAC,CAAD,CAAb,EAAkB;MACrB,IAAMyrB,KAAK,GAAG1zB,IAAI,CAACyc,GAAL,CAASzP,cAAc,CAAC,CAAD,CAAvB,CAAA,KAAgC,CAAhC,GAAoC,CAAC,CAAD,CAApC,GAA0C,CAAC,CAAD,EAAI,CAAC,CAAL,CAAxD,CAAA;AAEA0mB,MAAAA,KAAK,CAACra,OAAN,CAAc,UAAA2Z,IAAA,EAAI;AACdK,QAAAA,UAAU,CAAC/mB,IAAX,CACI,CACI,CAAC,CAAC,CAAF,EAAKU,cAAc,CAAC,CAAD,CAAnB,CADJ,EAEI,CAAC,CAAC,CAAF,EAAKgmB,IAAI,GAAG/qB,SAAS,CAAC,CAAD,CAArB,CAFJ,CADJ,EAKI,CACI,CAAC,CAAD,EAAI+E,cAAc,CAAC,CAAD,CAAlB,CADJ,EAEI,CAAC,CAAD,EAAIgmB,IAAI,GAAG/qB,SAAS,CAAC,CAAD,CAApB,CAFJ,CALJ,EASI,CACI,CAAC,CAAD,EAAI+E,cAAc,CAAC,CAAD,CAAlB,CADJ,EAEI,CAAC,CAAD,EAAIgmB,IAAI,GAAG/qB,SAAS,CAAC,CAAD,CAApB,CAFJ,CATJ,CAAA,CAAA;OADJ,CAAA,CAAA;AAgBH,KAAA;AACJ,GAAA;;AACD,EAAA,OAAOorB,UAAP,CAAA;AACH;;AC9ZD,SAASM,WAAT,CAAqB/mB,GAArB,EAAoCgnB,IAApC,EAAoD;AAChD;AACA;EACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,CAACF,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAD,EAAaA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAb,CAAD,CAAlB,CAAA;EACA,IAAMG,EAAE,GAAGD,OAAO,CAAC,CAACF,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAD,EAAaA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAb,CAAD,CAAlB,CAAA;EAEA,OAAO;AACHtE,IAAAA,QAAQ,EAAEuE,EAAE,IAAIjnB,GAAG,CAAC,CAAD,CADhB;AAEHyiB,IAAAA,UAAU,EAAE0E,EAAE,IAAInnB,GAAG,CAAC,CAAD,CAAA;GAFzB,CAAA;AAIH,CAAA;;AACD,SAASonB,WAAT,CACIpnB,GADJ,EAEIzI,EAFJ,EAE4B;MAAvBmC,IAAI,GAAAnC,EAAA,CAAA,CAAA;MAAEkS,IAAI,GAAAlS,EAAA,CAAA,CAAA;EAEX,IAAI0rB,EAAE,GAAGxZ,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAAvB,CAAA;EACA,IAAIwpB,EAAE,GAAGzZ,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAAvB,CAAA;;AAEA,EAAA,IAAItG,IAAI,CAACyc,GAAL,CAASoT,EAAT,CAAA,GAAentB,QAAnB,EAA6B;AACzBmtB,IAAAA,EAAE,GAAG,CAAL,CAAA;AACH,GAAA;;AACD,EAAA,IAAI7vB,IAAI,CAACyc,GAAL,CAASqT,EAAT,CAAA,GAAeptB,QAAnB,EAA6B;AACzBotB,IAAAA,EAAE,GAAG,CAAL,CAAA;AACH,GAAA;;AACD,EAAA,IAAImE,KAAJ,CAAA;AACA,EAAA,IAAIC,KAAJ,CAAA;;EACA,IAAI,CAACrE,EAAL,EAAS;AACLoE,IAAAA,KAAK,GAAG3tB,IAAI,CAAC,CAAD,CAAZ,CAAA;AACA4tB,IAAAA,KAAK,GAAGtnB,GAAG,CAAC,CAAD,CAAX,CAAA;AACH,GAHD,MAGO,IAAI,CAACkjB,EAAL,EAAS;AACZmE,IAAAA,KAAK,GAAG3tB,IAAI,CAAC,CAAD,CAAZ,CAAA;AACA4tB,IAAAA,KAAK,GAAGtnB,GAAG,CAAC,CAAD,CAAX,CAAA;AACH,GAHM,MAGA;AACH,IAAA,IAAMoK,CAAC,GAAG8Y,EAAE,GAAGD,EAAf,CADG;;AAIHoE,IAAAA,KAAK,GAAGjd,CAAC,IAAIpK,GAAG,CAAC,CAAD,CAAH,GAAStG,IAAI,CAAC,CAAD,CAAjB,CAAD,GAAyBA,IAAI,CAAC,CAAD,CAArC,CAAA;AACA4tB,IAAAA,KAAK,GAAGtnB,GAAG,CAAC,CAAD,CAAX,CAAA;AACH,GAAA;;EACD,OAAOqnB,KAAK,GAAGC,KAAf,CAAA;AACH,CAAA;;AACD,SAASC,eAAT,CAAyBC,IAAzB,EAA2CR,IAA3C,EAA6DS,UAA7D,EAAkFC,KAAlF,EAA0G;AAAxB,EAAA,IAAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,KAAwB,GAAA5xB,QAAxB,CAAA;AAAwB,GAAA;;AACtG,EAAA,OAAO0xB,IAAI,CAACtJ,KAAL,CAAW,UAAAle,GAAA,EAAG;AACjB,IAAA,IAAMrC,KAAK,GAAGypB,WAAW,CAACpnB,GAAD,EAAMgnB,IAAN,CAAzB,CAAA;AACA,IAAA,IAAMZ,IAAI,GAAGzoB,KAAK,IAAI,CAAtB,CAAA;IACA,OAAOyoB,IAAI,KAAKqB,UAAT,IAAuBr0B,IAAI,CAACyc,GAAL,CAASlS,KAAT,CAAA,IAAmB+pB,KAAjD,CAAA;AACH,GAJM,CAAP,CAAA;AAKH,CAAA;;AACD,SAASC,kBAAT,CACI3oB,GADJ,EAEIkiB,KAFJ,EAGIC,GAHJ,EAIId,OAJJ,EAKIuH,SALJ,EAKiB;AAAb,EAAA,IAAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,SAAa,GAAA,CAAb,CAAA;AAAa,GAAA;;AAEb,EAAA,IACKvH,OAAO,IAAIa,KAAK,GAAG0G,SAAR,IAAqB5oB,GAAjC,IACI,CAACqhB,OAAD,IAAYrhB,GAAG,IAAImiB,GAAG,GAAGyG,SAFjC,EAGE;AACE;AACA;AACA;IACA,OAAO;AACH5B,MAAAA,OAAO,EAAE,IADN;MAEHpf,MAAM,EAAEyZ,OAAO,GAAGa,KAAK,GAAGliB,GAAX,GAAiBmiB,GAAG,GAAGniB,GAAAA;KAF1C,CAAA;AAIH,GAAA;;EACD,OAAO;AACHgnB,IAAAA,OAAO,EAAE,KADN;AAEHpf,IAAAA,MAAM,EAAE,CAAA;GAFZ,CAAA;AAIH,CAAA;;AAED,SAASihB,eAAT,CACIvuB,QADJ,EAEI/B,EAFJ,EAEyF;AAAnF,EAAA,IAAAyvB,IAAI,GAAAzvB,EAAA,CAAAyvB,IAAJ;AAAA,MAAMS,UAAU,GAAAlwB,EAAA,CAAAkwB,UAAhB;AAAA,MAAkBK,YAAY,GAAAvwB,EAAA,CAAAuwB,YAA9B;AAAA,MAAgCC,cAAc,GAAAxwB,EAAA,CAAAwwB,cAA9C;AAAA,MAAgDC,aAAa,GAAAzwB,EAAA,CAAAywB,aAA7D,CAAA;AAEF,EAAA,IAAMxG,MAAM,GAAGloB,QAAQ,CAAC5G,KAAT,CAAe+uB,WAA9B,CAAA;;EAEA,IAAI,CAACD,MAAL,EAAa;IACT,OAAO;AACHyG,MAAAA,UAAU,EAAE,KADT;AAEHjC,MAAAA,OAAO,EAAE,KAFN;AAGHkC,MAAAA,eAAe,EAAE,KAHd;AAIHC,MAAAA,iBAAiB,EAAE,KAJhB;AAKHvhB,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;KALZ,CAAA;AAOH,GAAA;;AACO,EAAA,IAAAtR,IAAI,GAAyBksB,MAAM,KAAnC;AAAA,MAAMnsB,GAAG,GAAoBmsB,MAAM,CAAAnsB,GAAnC;AAAA,MAAWsJ,KAAK,GAAa6iB,MAAM,CAAnB7iB,KAAhB;AAAA,MAAkBC,MAAM,GAAK4iB,MAAM,OAAnC,CAAA;AACR,EAAA,IAAM4G,QAAQ,GAAG,CAAC,CAAC9yB,IAAD,EAAOD,GAAP,CAAD,EAAc,CAACC,IAAD,EAAOD,GAAG,GAAGuJ,MAAb,CAAd,CAAjB,CAAA;AACA,EAAA,IAAMypB,OAAO,GAAG,CAAC,CAAC/yB,IAAD,EAAOD,GAAP,CAAD,EAAc,CAACC,IAAI,GAAGqJ,KAAR,EAAetJ,GAAf,CAAd,CAAhB,CAAA;EACA,IAAMizB,SAAS,GAAG,CAAC,CAAChzB,IAAI,GAAGqJ,KAAR,EAAetJ,GAAf,CAAD,EAAsB,CAACC,IAAI,GAAGqJ,KAAR,EAAetJ,GAAG,GAAGuJ,MAArB,CAAtB,CAAlB,CAAA;EACA,IAAM2pB,UAAU,GAAG,CAAC,CAACjzB,IAAD,EAAOD,GAAG,GAAGuJ,MAAb,CAAD,EAAuB,CAACtJ,IAAI,GAAGqJ,KAAR,EAAetJ,GAAG,GAAGuJ,MAArB,CAAvB,CAAnB,CAAA;;AAEA,EAAA,IAAI2oB,eAAe,CAAC,CAChB,CAACjyB,IAAD,EAAOD,GAAP,CADgB,EAEhB,CAACC,IAAI,GAAGqJ,KAAR,EAAetJ,GAAf,CAFgB,EAGhB,CAACC,IAAD,EAAOD,GAAG,GAAGuJ,MAAb,CAHgB,EAIhB,CAACtJ,IAAI,GAAGqJ,KAAR,EAAetJ,GAAG,GAAGuJ,MAArB,CAJgB,CAAD,EAKhBooB,IALgB,EAKVS,UALU,CAAnB,EAKsB;IAClB,OAAO;AACHQ,MAAAA,UAAU,EAAE,KADT;AAEHjC,MAAAA,OAAO,EAAE,KAFN;AAGHkC,MAAAA,eAAe,EAAE,KAHd;AAIHC,MAAAA,iBAAiB,EAAE,KAJhB;AAKHvhB,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;KALZ,CAAA;AAOH,GAhCoF;;;EAmCrF,IAAM4hB,YAAY,GAAGC,uBAAuB,CAACzB,IAAD,EAAOgB,aAAP,EAAsBK,OAAtB,EAA+BP,YAA/B,CAA5C,CAAA;AACA,EAAA,IAAMY,eAAe,GAAGD,uBAAuB,CAACzB,IAAD,EAAOgB,aAAP,EAAsBO,UAAtB,EAAkCT,YAAlC,CAA/C,CApCqF;;EAuCrF,IAAMa,aAAa,GAAGF,uBAAuB,CAACzB,IAAD,EAAOgB,aAAP,EAAsBI,QAAtB,EAAgCL,cAAhC,CAA7C,CAAA;EACA,IAAMa,cAAc,GAAGH,uBAAuB,CAACzB,IAAD,EAAOgB,aAAP,EAAsBM,SAAtB,EAAiCP,cAAjC,CAA9C,CAAA;EAEA,IAAMc,kBAAkB,GAAGL,YAAY,CAACxC,OAAb,IAAwB0C,eAAe,CAAC1C,OAAnE,CAAA;EACA,IAAMkC,eAAe,GAAGM,YAAY,CAACxC,OAAb,IAAwB0C,eAAe,CAAC1C,OAAhE,CAAA;EACA,IAAM8C,oBAAoB,GAAGH,aAAa,CAAC3C,OAAd,IAAyB4C,cAAc,CAAC5C,OAArE,CAAA;EACA,IAAMmC,iBAAiB,GAAGQ,aAAa,CAAC3C,OAAd,IAAyB4C,cAAc,CAAC5C,OAAlE,CAAA;EACA,IAAMvS,cAAc,GAAGkF,SAAS,CAAC6P,YAAY,CAAC5hB,MAAd,EAAsB8hB,eAAe,CAAC9hB,MAAtC,CAAhC,CAAA;EACA,IAAM4M,gBAAgB,GAAGmF,SAAS,CAACgQ,aAAa,CAAC/hB,MAAf,EAAuBgiB,cAAc,CAAChiB,MAAtC,CAAlC,CAAA;AACA,EAAA,IAAIA,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb,CAAA;EACA,IAAIof,OAAO,GAAG,KAAd,CAAA;EACA,IAAIiC,UAAU,GAAG,KAAjB,CAAA;;AAEA,EAAA,IAAI70B,IAAI,CAACyc,GAAL,CAAS2D,gBAAT,CAAA,GAA6BpgB,IAAI,CAACyc,GAAL,CAAS4D,cAAT,CAAjC,EAA2D;AACvD7M,IAAAA,MAAM,GAAG,CAAC6M,cAAD,EAAiB,CAAjB,CAAT,CAAA;AACAuS,IAAAA,OAAO,GAAGkC,eAAV,CAAA;AACAD,IAAAA,UAAU,GAAGY,kBAAb,CAAA;AACH,GAJD,MAIO;AACHjiB,IAAAA,MAAM,GAAG,CAAC,CAAD,EAAI4M,gBAAJ,CAAT,CAAA;AACAwS,IAAAA,OAAO,GAAGmC,iBAAV,CAAA;AACAF,IAAAA,UAAU,GAAGa,oBAAb,CAAA;AACH,GAAA;;EACD,OAAO;AACHb,IAAAA,UAAU,EAAAA,UADP;AAEHC,IAAAA,eAAe,EAAAA,eAFZ;AAGHC,IAAAA,iBAAiB,EAAAA,iBAHd;AAIHnC,IAAAA,OAAO,EAAAA,OAJJ;AAKHpf,IAAAA,MAAM,EAAAA,MAAAA;GALV,CAAA;AAOH,CAAA;;AAED,SAAS6hB,uBAAT,CACIzB,IADJ,EAEIzvB,EAFJ,EAGIwxB,SAHJ,EAII1I,OAJJ,EAKIuH,SALJ,EAMIoB,QANJ,EAMsB;MAJjB5e,CAAC,GAAA7S,EAAA,CAAA,CAAA;MAAEuhB,CAAC,GAAAvhB,EAAA,CAAA,CAAA;AAML,EAAA,IAAM0xB,IAAI,GAAGjC,IAAI,CAAC,CAAD,CAAjB,CAFkB;;AAIlB,EAAA,IAAMkC,SAAS,GAAGH,SAAS,CAAC,CAAD,CAA3B,CAAA;AACA,EAAA,IAAMI,SAAS,GAAGJ,SAAS,CAAC,CAAD,CAA3B,CALkB;AAQlB;;AACA,EAAA,IAAMK,GAAG,GAAGlQ,WAAW,CAACiQ,SAAS,CAAC,CAAD,CAAT,GAAeD,SAAS,CAAC,CAAD,CAAzB,CAAvB,CAAA;AACA,EAAA,IAAMG,GAAG,GAAGnQ,WAAW,CAACiQ,SAAS,CAAC,CAAD,CAAT,GAAeD,SAAS,CAAC,CAAD,CAAzB,CAAvB,CAAA;EAEA,IAAMI,KAAK,GAAGxQ,CAAd,CAAA;EACA,IAAMyQ,KAAK,GAAGnf,CAAd,CAAA;AACA,EAAA,IAAMof,KAAK,GAAG,CAAEpf,CAAF,GAAM0O,CAApB,CAdkB;AAgBlB;AACA;;EACA,IAAI,CAACuQ,GAAL,EAAU;AACN;AACA;AACA,IAAA,IAAIL,QAAQ,IAAI,CAACO,KAAjB,EAAwB;AACpB;MACA,OAAO;AACHvD,QAAAA,OAAO,EAAE,KADN;AAEHpf,QAAAA,MAAM,EAAE,CAAA;OAFZ,CAAA;KAFJ,MAMO,IAAI0iB,KAAJ,EAAW;AACd;AACA;MACA,IAAMvc,CAAC,GAAGyc,KAAK,IAAIN,SAAS,CAAC,CAAD,CAAT,GAAeD,IAAI,CAAC,CAAD,CAAvB,CAAL,GAAmCA,IAAI,CAAC,CAAD,CAAjD,CAHc;;AAMd,MAAA,OAAOtB,kBAAkB,CAAC5a,CAAD,EAAImc,SAAS,CAAC,CAAD,CAAb,EAAkBC,SAAS,CAAC,CAAD,CAA3B,EAAgC9I,OAAhC,EAAyCuH,SAAzC,CAAzB,CAAA;AACH,KAPM,MAOA;AACH;MACA,IAAMhhB,MAAM,GAAGsiB,SAAS,CAAC,CAAD,CAAT,GAAeD,IAAI,CAAC,CAAD,CAAlC,CAAA;MAEA,IAAMjD,OAAO,GAAG5yB,IAAI,CAACyc,GAAL,CAASjJ,MAAT,CAAqBghB,KAAAA,SAAS,IAAI,CAAlC,CAAhB,CAAA;MAEA,OAAO;AACH5B,QAAAA,OAAO,EAAAA,OADJ;AAEHpf,QAAAA,MAAM,EAAEof,OAAO,GAAGpf,MAAH,GAAY,CAAA;OAF/B,CAAA;AAIH,KAAA;AACJ,GA3BD,MA2BO,IAAI,CAACwiB,GAAL,EAAU;AACb;AACA,IAAA,IAAIJ,QAAQ,IAAI,CAACM,KAAjB,EAAwB;AACpB;MACA,OAAO;AACHtD,QAAAA,OAAO,EAAE,KADN;AAEHpf,QAAAA,MAAM,EAAE,CAAA;OAFZ,CAAA;KAFJ,MAMO,IAAI2iB,KAAJ,EAAW;AACd;AACA;AACA;AACA;MACA,IAAMzc,CAAC,GAAG,CAACoc,SAAS,CAAC,CAAD,CAAT,GAAeD,IAAI,CAAC,CAAD,CAApB,IAA2BO,KAA3B,GAAmCP,IAAI,CAAC,CAAD,CAAjD,CALc;;AAQd,MAAA,OAAOtB,kBAAkB,CAAC7a,CAAD,EAAIoc,SAAS,CAAC,CAAD,CAAb,EAAkBC,SAAS,CAAC,CAAD,CAA3B,EAAgC9I,OAAhC,EAAyCuH,SAAzC,CAAzB,CAAA;AACH,KATM,MASA;MACH,IAAMhhB,MAAM,GAAGsiB,SAAS,CAAC,CAAD,CAAT,GAAeD,IAAI,CAAC,CAAD,CAAlC,CAAA;MAEA,IAAMjD,OAAO,GAAG5yB,IAAI,CAACyc,GAAL,CAASjJ,MAAT,CAAqBghB,KAAAA,SAAS,IAAI,CAAlC,CAAhB,CAAA;MAEA,OAAO;AACH5B,QAAAA,OAAO,EAAAA,OADJ;AAEHpf,QAAAA,MAAM,EAAEof,OAAO,GAAGpf,MAAH,GAAY,CAAA;OAF/B,CAAA;AAIH,KAAA;AACJ,GAAA;;EACD,OAAO;AACHof,IAAAA,OAAO,EAAE,KADN;AAEHpf,IAAAA,MAAM,EAAE,CAAA;GAFZ,CAAA;AAIH,CAAA;;SACe6iB,kBACZnwB,UACAowB,WACA/xB,OAAU;AAEV,EAAA,OAAO+xB,SAAS,CAACv0B,GAAV,CAAc,UAAAiH,IAAA,EAAI;AACf,IAAA,IAAA7E,KAKFswB,eAAe,CAACvuB,QAAD,EAAW8C,IAAX,CALb;AAAA,QACF4pB,OAAO,aADL;AAAA,QAEFpf,MAAM,YAFJ;AAAA,QAGFshB,eAAe,qBAHb;AAAA,QAIFC,iBAAiB,uBAJf,CAAA;;AAON,IAAA,IAAMwB,QAAQ,GAAGvtB,IAAI,CAACutB,QAAtB,CAAA;IAEA,IAAMC,UAAU,GAAG5vB,WAAW,CAAC;AAC3BrC,MAAAA,KAAK,EAAAA,KADsB;AAE3BqB,MAAAA,KAAK,EAAE4N,MAAM,CAAC,CAAD,CAFc;MAG3B3N,KAAK,EAAE2N,MAAM,CAAC,CAAD,CAAA;KAHa,CAAX,CAIhBzR,GAJgB,CAIZ,UAACkK,IAAD,EAAOJ,CAAP,EAAa;AAAA,MAAA,OAAAI,IAAI,IAAIsqB,QAAQ,CAAC1qB,CAAD,CAAR,GAAc,CAAI0qB,GAAAA,QAAQ,CAAC1qB,CAAD,CAA1B,GAAgC,CAApC,CAAJ,CAAA;AAA0C,KAJ3C,CAAnB,CAAA;IAMA,OAAO;AACHmnB,MAAAA,IAAI,EAAEuD,QADH;AAEH3D,MAAAA,OAAO,EAAAA,OAFJ;AAGHkC,MAAAA,eAAe,EAAAA,eAHZ;AAIHC,MAAAA,iBAAiB,EAAAA,iBAJd;AAKHlE,MAAAA,MAAM,EAAE,KALL;AAMHrd,MAAAA,MAAM,EAAEgjB,UAAAA;KANZ,CAAA;AAQH,GAxBM,CAAP,CAAA;AAyBH,CAAA;SAEeC,sBACZvwB,UACAsG,OACAjI,OAAU;;;EAEV,IAAMmyB,KAAK,GAAGC,2BAA2B,CAACzwB,QAAD,EAAWsG,KAAX,EAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB,EAA0B,KAA1B,CAA3B,CAA4DzK,GAA5D,CAAgE,UAAAiH,IAAA,EAAI;IAC9E,OACO5J,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA4J,IAAA,CAAA,EACH;MAAAutB,QAAQ,EAAEvtB,IAAI,CAACutB,QAAL,CAAcx0B,GAAd,CAAkB,UAAAC,GAAA;AAAO,QAAA,OAAAhC,IAAI,CAACyc,GAAL,CAASza,GAAT,IAAgB,CAAhB,CAAA;OAAzB,CAAA;AAAV,KADG,CADP,CAAA;AAIH,GALa,CAAd,CAAA;EAMA,IAAM40B,cAAc,GAAGP,iBAAiB,CAACnwB,QAAD,EAAWwwB,KAAX,EAAkBnyB,KAAlB,CAAxC,CAAA;AACA,EAAA,IAAMsyB,eAAe,GAAGhE,iBAAiB,CAAC+D,cAAD,EAAiB,CAAjB,CAAzC,CAAA;AACA,EAAA,IAAME,gBAAgB,GAAGjE,iBAAiB,CAAC+D,cAAD,EAAiB,CAAjB,CAA1C,CAAA;EACA,IAAIvW,cAAc,GAAG,CAArB,CAAA;EACA,IAAID,gBAAgB,GAAG,CAAvB,CAAA;EACA,IAAM0U,eAAe,GAAG+B,eAAe,CAAC/B,eAAhB,IAAmCgC,gBAAgB,CAAChC,eAA5E,CAAA;EACA,IAAMC,iBAAiB,GAAG8B,eAAe,CAAC9B,iBAAhB,IAAqC+B,gBAAgB,CAAC/B,iBAAhF,CAAA;;EAEA,IAAID,eAAe,IAAIC,iBAAvB,EAA0C;IACtC5wB,EAAA,GAAqCkH,kBAAkB,CAAC;AACpD9G,MAAAA,KAAK,EAAAA,KAD+C;AAEpDqB,MAAAA,KAAK,EAAE,CAACixB,eAAe,CAACrjB,MAAhB,CAAuB,CAAvB,CAF4C;AAGpD3N,MAAAA,KAAK,EAAE,CAACixB,gBAAgB,CAACtjB,MAAjB,CAAwB,CAAxB,CAAA;AAH4C,KAAD,CAAvD,EAAC6M,cAAc,GAAAlc,EAAA,CAAA,CAAA,CAAf,EAAiBic,gBAAgB,QAAjC,CAAA;AAKH,GAAA;;EAED,OAAO;AACHkP,IAAAA,QAAQ,EAAE;AACNsD,MAAAA,OAAO,EAAEkC,eADH;AAENthB,MAAAA,MAAM,EAAE6M,cAAAA;KAHT;AAKHgP,IAAAA,UAAU,EAAE;AACRuD,MAAAA,OAAO,EAAEmC,iBADD;AAERvhB,MAAAA,MAAM,EAAE4M,gBAAAA;AAFA,KAAA;GALhB,CAAA;AAUH,CAAA;AACe,SAAA2W,0BAAA,CACZ9uB,SADY,EAEZogB,SAFY,EAEM;EAElB,IAAM2O,cAAc,GAAiB,EAArC,CAAA;AACA,EAAA,IAAMtd,CAAC,GAAGzR,SAAS,CAAC,CAAD,CAAnB,CAAA;AACA,EAAA,IAAM0R,CAAC,GAAG1R,SAAS,CAAC,CAAD,CAAnB,CAAA;;EACA,IAAIyR,CAAC,IAAIC,CAAT,EAAY;AACRqd,IAAAA,cAAc,CAAC1qB,IAAf,CACI,CAAC,CAAC,CAAD,EAAIqN,CAAC,GAAG,CAAR,CAAD,EAAa1R,SAAb,EAAwB,CAAC,CAACyR,CAAF,EAAKC,CAAL,CAAxB,CADJ,EAEI,CAAC,CAACD,CAAC,GAAG,CAAL,EAAQ,CAAR,CAAD,EAAazR,SAAb,EAAwB,CAACyR,CAAD,EAAI,CAACC,CAAL,CAAxB,CAFJ,CAAA,CAAA;GADJ,MAKO,IAAID,CAAJ,EAAO;AACV;IACAsd,cAAc,CAAC1qB,IAAf,CACI,CAAC,CAACoN,CAAC,GAAG,CAAL,EAAQ,CAAR,CAAD,EAAa,CAACA,CAAD,EAAI,CAAJ,CAAb,EAAqB,CAACA,CAAD,EAAI,CAAC,CAAL,CAArB,CADJ,CAAA,CAAA;;AAGA,IAAA,IAAI2O,SAAJ,EAAe;MACX2O,cAAc,CAAC1qB,IAAf,CACI,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,EAAU,CAACoN,CAAD,EAAI,CAAC,CAAL,CAAV,EAAmB,CAAC,CAACA,CAAF,EAAK,CAAC,CAAN,CAAnB,CADJ,EAEI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACA,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAACA,CAAF,EAAK,CAAL,CAAjB,CAFJ,CAAA,CAAA;AAIH,KAAA;GAVE,MAWA,IAAIC,CAAJ,EAAO;AACV;IACAqd,cAAc,CAAC1qB,IAAf,CACI,CAAC,CAAC,CAAD,EAAIqN,CAAC,GAAG,CAAR,CAAD,EAAa,CAAC,CAAD,EAAIA,CAAJ,CAAb,EAAqB,CAAC,CAAC,CAAF,EAAKA,CAAL,CAArB,CADJ,CAAA,CAAA;;AAGA,IAAA,IAAI0O,SAAJ,EAAe;MACX2O,cAAc,CAAC1qB,IAAf,CACI,CAAC,CAAC,CAAC,CAAF,EAAK,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAKqN,CAAL,CAAV,EAAmB,CAAC,CAAC,CAAF,EAAK,CAACA,CAAN,CAAnB,CADJ,EAEI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAIA,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAACA,CAAL,CAAjB,CAFJ,CAAA,CAAA;AAIH,KAAA;AACJ,GAXM,MAWA;AACH;AACAqd,IAAAA,cAAc,CAAC1qB,IAAf,CACI,CAAC,CAAC,CAAC,CAAF,EAAK,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAV,EAAoB,CAAC,CAAC,CAAF,EAAK,CAAL,CAApB,CADJ,EAEI,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAC,CAAL,CAAT,EAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAFJ,EAGI,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,EAAU,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAV,EAAoB,CAAC,CAAD,EAAI,CAAC,CAAL,CAApB,CAHJ,EAII,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAC,CAAF,EAAK,CAAL,CAAT,EAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAJJ,CAAA,CAAA;AAMH,GAAA;;AAED,EAAA,OAAO0qB,cAAP,CAAA;AACH,CAAA;AASK,SAAUL,2BAAV,CACFzwB,QADE,EAEFsG,KAFE,EAGFvE,SAHE,EAIFogB,SAJE,EAIgB;AAEZ,EAAA,IAAAlkB,EAAA,GAGF+B,QAAQ,CAACtC,KAHP;AAAA,MACFkD,SAAS,GAAA3C,EAAA,CAAA2C,SADP;AAAA,MAEFT,IAAI,GAAAlC,EAAA,CAAAkC,IAFF,CAAA;AAIN,EAAA,IAAM4wB,YAAY,GAAGhqB,cAAc,CAACnG,SAAD,EAAY,GAAZ,EAAiB,GAAjB,EAAsBT,IAAI,GAAG,CAAH,GAAO,CAAjC,CAAnC,CAAA;EACA,IAAM2nB,MAAM,GAAGvhB,iBAAiB,CAACwqB,YAAD,EAAe,CAAC,CAAD,EAAI,CAAJ,CAAf,CAAhC,CAAA;EAEA,OAAOF,0BAA0B,CAAC9uB,SAAD,EAAYogB,SAAZ,CAA1B,CAAiDtmB,GAAjD,CAAqD,UAACoC,EAAD,EAAuB;AAArB,IAAA,IAAAoyB,QAAQ,QAAR;AAAA,QAAUW,IAAI,GAAA/yB,EAAA,CAAA,CAAA,CAAd;AAAA,QAAgBgzB,IAAI,GAAAhzB,EAAA,CAAA,CAAA,CAApB,CAAA;AAC1D,IAAA,IAAMizB,WAAW,GAAG,CAChB3qB,iBAAiB,CAACwqB,YAAD,EAAeC,IAAf,CADD,EAEhBzqB,iBAAiB,CAACwqB,YAAD,EAAeE,IAAf,CAFD,CAApB,CAAA;AAIA,IAAA,IAAMvC,aAAa,GAAGlF,kBAAkB,CAAC0H,WAAD,CAAxC,CAAA;;AACM,IAAA,IAAAlzB,EAGF,GAAAyvB,WAAW,CAAC3F,MAAD,EAASoJ,WAAT,CAHT;AAAA,QACQ1C,YAAY,GAAAxwB,EAAA,CAAAorB,QADpB;AAAA,QAEUqF,cAAc,gBAFxB,CAAA;;IAIN,IAAMN,UAAU,GAAGL,WAAW,CAAChG,MAAD,EAASoJ,WAAT,CAAX,IAAoC,CAAvD,CAAA;IAEA,OAAO;AACHb,MAAAA,QAAQ,EAAAA,QADL;AAEHlC,MAAAA,UAAU,EAAAA,UAFP;AAGHK,MAAAA,YAAY,EAAAA,YAHT;AAIHC,MAAAA,cAAc,EAAAA,cAJX;AAKHC,MAAAA,aAAa,EAAAA,aALV;AAMHhB,MAAAA,IAAI,EAAE,CACFnnB,iBAAiB,CAACD,KAAD,EAAQ0qB,IAAR,CADf,EAEFzqB,iBAAiB,CAACD,KAAD,EAAQ2qB,IAAR,CAFf,CAAA;KANV,CAAA;AAWH,GAvBM,CAAP,CAAA;AAwBH,CAAA;;AAED,SAASE,eAAT,CACIC,aADJ,EAEIC,SAFJ,EAGIvJ,MAHJ,EAIIlQ,GAJJ,EAIe;EAEX,IAAM0M,SAAS,GAAG1M,GAAG,GAAGwZ,aAAa,CAACv1B,GAAd,CAAkB,UAAA6J,GAAA,EAAG;AAAI,IAAA,OAAA6e,MAAM,CAAC7e,GAAD,EAAMkS,GAAN,CAAN,CAAA;GAAzB,CAAH,GAAgDwZ,aAArE,CAAA;EACA,OAAO,CACH,CAAC9M,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CADG,EAEH,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAFG,EAGH,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAHG,EAIH,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAJG,CAAA,CAKLnG,IALK,CAKA,UAAAuP,IAAA,EAAI;IACP,IAAMS,UAAU,GAAGL,WAAW,CAAChG,MAAD,EAAS4F,IAAT,CAAX,IAA6B,CAAhD,CAAA;IAEA,OAAO,CAACO,eAAe,CAACoD,SAAD,EAAY3D,IAAZ,EAAkBS,UAAlB,CAAvB,CAAA;AACH,GATM,CAAP,CAAA;AAUH,CAAA;;AACD,SAASmD,gBAAT,CAA0BrzB,EAA1B,EAAkD;AAC9C;AACA;MAFuBmC,IAAI,GAAAnC,EAAA,CAAA,CAAA;MAAEkS,IAAI,GAAAlS,EAAA,CAAA,CAAA;EAIjC,IAAM0rB,EAAE,GAAGxZ,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAAzB,CAAA;EACA,IAAMwpB,EAAE,GAAGzZ,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAAzB,CAAA;;EAEA,IAAI,CAACupB,EAAL,EAAS;IACL,OAAO7vB,IAAI,CAACyc,GAAL,CAASnW,IAAI,CAAC,CAAD,CAAb,CAAP,CAAA;AACH,GAAA;;EACD,IAAI,CAACwpB,EAAL,EAAS;IACL,OAAO9vB,IAAI,CAACyc,GAAL,CAASnW,IAAI,CAAC,CAAD,CAAb,CAAP,CAAA;AACH,GAZ6C;AAc9C;;;AAEA,EAAA,IAAM0Q,CAAC,GAAG8Y,EAAE,GAAGD,EAAf,CAAA;AAEA,EAAA,OAAO7vB,IAAI,CAACyc,GAAL,CAAS,CAAC,CAACzF,CAAD,GAAK1Q,IAAI,CAAC,CAAD,CAAT,GAAeA,IAAI,CAAC,CAAD,CAApB,IAA2BtG,IAAI,CAAC2d,IAAL,CAAU3d,IAAI,CAAC6C,GAAL,CAASmU,CAAT,EAAY,CAAZ,CAAiB,GAAA,CAA3B,CAApC,CAAP,CAAA;AACH,CAAA;;AACD,SAASygB,gBAAT,CAA0BtzB,EAA1B,EAAkD;MAAvBmC,IAAI,GAAAnC,EAAA,CAAA,CAAA;MAAEkS,IAAI,GAAAlS,EAAA,CAAA,CAAA;EACjC,IAAM0rB,EAAE,GAAGxZ,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAAzB,CAAA;EACA,IAAMwpB,EAAE,GAAGzZ,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAAzB,CAAA;;EAEA,IAAI,CAACupB,EAAL,EAAS;AACL,IAAA,OAAO,CAACvpB,IAAI,CAAC,CAAD,CAAL,EAAU,CAAV,CAAP,CAAA;AACH,GAAA;;EACD,IAAI,CAACwpB,EAAL,EAAS;AACL,IAAA,OAAO,CAAC,CAAD,EAAIxpB,IAAI,CAAC,CAAD,CAAR,CAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAM0Q,CAAC,GAAG8Y,EAAE,GAAGD,EAAf,CAV8C;AAY9C;;AACA,EAAA,IAAMnK,CAAC,GAAG,CAAC1O,CAAD,GAAK1Q,IAAI,CAAC,CAAD,CAAT,GAAeA,IAAI,CAAC,CAAD,CAA7B,CAb8C;AAe9C;AACA;;AAEA,EAAA,OAAO,CACH,CAACof,CAAD,IAAM1O,CAAC,GAAG,IAAIA,CAAd,CADG,EAEH0O,CAAC,IAAK1O,CAAC,GAAGA,CAAL,GAAU,CAAd,CAFE,CAAP,CAAA;AAIH,CAAA;;AACK,SAAU0gB,sBAAV,CACFxxB,QADE,EAEFqkB,SAFE,EAGFC,SAHE,EAIFxjB,MAJE,EAKFiX,QALE,EAKc;AAEhB,EAAA,IAAMmQ,MAAM,GAAGloB,QAAQ,CAAC5G,KAAT,CAAe+uB,WAA9B,CAAA;EACA,IAAMvQ,GAAG,GAAGG,QAAQ,GAAGje,IAAI,CAAC+nB,EAAhB,GAAqB,GAAjC,CAAA;;EAEA,IAAI,CAACqG,MAAL,EAAa;AACT,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;AAEG,EAAA,IAAAlsB,IAAI,GAIJksB,MAAM,KAJN;AAAA,MACAnsB,GAAG,GAGHmsB,MAAM,CAAAnsB,GAJN;AAAA,MAEAsJ,KAAK,GAEL6iB,MAAM,CAFD7iB,KAFL;AAAA,MAGAC,MAAM,GACN4iB,MAAM,OAJN,CAAA;AAMJ,EAAA,IAAMuJ,YAAY,GAAGz1B,IAAI,GAAG8E,MAAM,CAAC,CAAD,CAAlC,CAAA;EACA,IAAM4wB,aAAa,GAAG11B,IAAI,GAAGqJ,KAAP,GAAevE,MAAM,CAAC,CAAD,CAA3C,CAAA;AACA,EAAA,IAAM6wB,WAAW,GAAG51B,GAAG,GAAG+E,MAAM,CAAC,CAAD,CAAhC,CAAA;EACA,IAAM8wB,cAAc,GAAG71B,GAAG,GAAGuJ,MAAN,GAAexE,MAAM,CAAC,CAAD,CAA5C,CAAA;EACA,IAAMotB,IAAI,GAAG,CACT,CAACuD,YAAD,EAAeE,WAAf,CADS,EAET,CAACD,aAAD,EAAgBC,WAAhB,CAFS,EAGT,CAACF,YAAD,EAAeG,cAAf,CAHS,EAIT,CAACF,aAAD,EAAgBE,cAAhB,CAJS,CAAb,CAAA;EAMA,IAAM9J,MAAM,GAAGvhB,iBAAiB,CAAC+d,SAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,CAAhC,CAAA;;EAEA,IAAI,CAAC6M,eAAa,CAAC7M,SAAD,EAAY4J,IAAZ,EAAkBpG,MAAlB,EAA0B,CAA1B,CAAlB,EAAgD;AAC5C,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;EACD,IAAM/pB,MAAM,GAAa,EAAzB,CAAA;EACA,IAAM8zB,QAAQ,GAAG3D,IAAI,CAACryB,GAAL,CAAS,UAAA6K,GAAA,EAAG;AAAI,IAAA,OAAA,CAC7B6Q,WAAW,CAAC7Q,GAAD,CADkB,EAE7BmR,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASnR,GAAT,CAFuB,CAAA,CAAA;AAGhC,GAHgB,CAAjB,CAAA;EAIA,CACI,CAAC4d,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CADJ,EAEI,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAFJ,EAGI,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAHJ,EAII,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAJJ,EAKEnR,OALF,CAKU,UAAAua,IAAA,EAAI;AACV,IAAA,IAAMoE,OAAO,GAAGja,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS0Z,gBAAgB,CAAC7D,IAAD,CAAzB,CAAtB,CAAA;AACA,IAAA,IAAMqE,QAAQ,GAAGT,gBAAgB,CAAC5D,IAAD,CAAjC,CAAA;AAEA3vB,IAAAA,MAAM,CAACqI,IAAP,CAAAqK,KAAA,CAAA1S,MAAA,EAAe8zB,QAAQ,CAClB9uB,MADU,CACH,UAAC9E,EAAD,EAAU;AAAR,MAAA,IAAA+zB,OAAO,GAAA/zB,EAAA,CAAA,CAAA,CAAP,CAAA;AACN,MAAA,OAAO+zB,OAAO,IAAID,QAAQ,IAAIC,OAA9B,CAAA;AACH,KAHU,CAIVn2B,CAAAA,GAJU,CAIN,UAACoC,EAAD,EAAkB;UAAhB+zB,OAAO,GAAA/zB,EAAA,CAAA,CAAA;UAAEg0B,MAAM,GAAAh0B,EAAA,CAAA,CAAA;AAClB,MAAA,IAAMi0B,OAAO,GAAGp4B,IAAI,CAACq4B,IAAL,CAAUH,OAAO,GAAGD,QAAQ,GAAGC,OAAd,GAAwB,CAAzC,CAAhB,CAAA;AACA,MAAA,IAAMI,QAAQ,GAAGH,MAAM,GAAGC,OAA1B,CAAA;AACA,MAAA,IAAMG,QAAQ,GAAGJ,MAAM,GAAGC,OAA1B,CAAA;AAEA,MAAA,OAAO,CACHta,GAAG,GAAGwa,QAAN,GAAiBN,OADd,EAEHla,GAAG,GAAGya,QAAN,GAAiBP,OAFd,CAAP,CAAA;AAIH,KAbU,EAcV9Z,MAdU,CAcH,UAACC,IAAD,EAAOmH,GAAP,EAAU;AACdnH,MAAAA,IAAI,CAAC7R,IAAL,CAASqK,KAAT,CAAAwH,IAAA,EAAamH,GAAb,CAAA,CAAA;AACA,MAAA,OAAOnH,IAAP,CAAA;AACH,KAjBU,EAiBR,EAjBQ,CAAA,CAkBVlV,MAlBU,CAkBH,UAAAuvB,OAAA;MAAW,OAAA,CAACnB,eAAa,CAAC9M,SAAD,EAAY6J,IAAZ,EAAkBpG,MAAlB,EAA0BwK,OAA1B,CAAd,CAAA;AAAgD,KAlBxD,CAmBVz2B,CAAAA,GAnBU,CAmBN,UAAAy2B,OAAA,EAAO;MAAI,OAAAxI,QAAQ,CAACwI,OAAO,GAAG,GAAV,GAAgBx4B,IAAI,CAAC+nB,EAAtB,EAA0BrlB,QAA1B,CAAR,CAAA;AAA2C,KAnBhD,CAAf,CAAA,CAAA;GATJ,CAAA,CAAA;AA8BA,EAAA,OAAOuB,MAAP,CAAA;AACH,CAAA;AAEK,SAAUw0B,oBAAV,CACFvyB,QADE,EACgD;AAElD,EAAA,IAAMmoB,WAAW,GAAGnoB,QAAQ,CAAC5G,KAAT,CAAe+uB,WAAnC,CAAA;;EAEA,IAAI,CAACA,WAAL,EAAkB;IACd,OAAO;AACHiB,MAAAA,QAAQ,EAAE,EADP;AAEHD,MAAAA,UAAU,EAAE,EAAA;KAFhB,CAAA;AAIH,GAAA;;AACK,EAAA,IAAAlrB,KAKF+B,QAAQ,CAAC0U,OAAT,EALE;AAAA,MACFtU,IAAI,GAAAnC,EAAA,CAAAmC,IADF;AAAA,MAEF+P,IAAI,UAFF;AAAA,MAGFkH,IAAI,UAHF;AAAA,MAIFC,IAAI,UAJF,CAAA;;EAMN,IAAMhR,KAAK,GAAG,CAAClG,IAAD,EAAO+P,IAAP,EAAakH,IAAb,EAAmBC,IAAnB,CAAd,CAAA;EACA,IAAMwQ,MAAM,GAAGvhB,iBAAiB,CAACD,KAAD,EAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR,CAAhC,CAAA;AACQ,EAAA,IAAAtK,IAAI,GAAyBmsB,WAAW,KAAxC;AAAA,MAAMpsB,GAAG,GAAoBosB,WAAW,CAAApsB,GAAxC;AAAA,MAAWsJ,KAAK,GAAa8iB,WAAW,CAAxB9iB,KAAhB;AAAA,MAAkBC,MAAM,GAAK6iB,WAAW,OAAxC,CAAA;AACR,EAAA,IAAM2G,QAAQ,GAAG,CAAC,CAAC9yB,IAAD,EAAOD,GAAP,CAAD,EAAc,CAACC,IAAD,EAAOD,GAAG,GAAGuJ,MAAb,CAAd,CAAjB,CAAA;AACA,EAAA,IAAMypB,OAAO,GAAG,CAAC,CAAC/yB,IAAD,EAAOD,GAAP,CAAD,EAAc,CAACC,IAAI,GAAGqJ,KAAR,EAAetJ,GAAf,CAAd,CAAhB,CAAA;EACA,IAAMizB,SAAS,GAAG,CAAC,CAAChzB,IAAI,GAAGqJ,KAAR,EAAetJ,GAAf,CAAD,EAAsB,CAACC,IAAI,GAAGqJ,KAAR,EAAetJ,GAAG,GAAGuJ,MAArB,CAAtB,CAAlB,CAAA;EACA,IAAM2pB,UAAU,GAAG,CAAC,CAACjzB,IAAD,EAAOD,GAAG,GAAGuJ,MAAb,CAAD,EAAuB,CAACtJ,IAAI,GAAGqJ,KAAR,EAAetJ,GAAG,GAAGuJ,MAArB,CAAvB,CAAnB,CAAA;AACA,EAAA,IAAM8qB,SAAS,GAAGK,2BAA2B,CAACzwB,QAAD,EAAWsG,KAAX,EAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB,EAA0B,KAA1B,CAA7C,CAAA;EAEA,IAAMksB,eAAe,GAAa,EAAlC,CAAA;EACA,IAAMC,aAAa,GAAa,EAAhC,CAAA;AAEA,EAAA,IAAMC,QAAQ,GAAG;AACb32B,IAAAA,GAAG,EAAE,KADQ;AAEb4K,IAAAA,MAAM,EAAE,KAFK;AAGb3K,IAAAA,IAAI,EAAE,KAHO;AAIb6Y,IAAAA,KAAK,EAAE,KAAA;GAJX,CAAA;AAOAub,EAAAA,SAAS,CAACjd,OAAV,CAAkB,UAAAwf,QAAA,EAAQ;AACd,IAAA,IAAAjF,IAAI,GAAoBiF,QAAQ,CAAAjF,IAAhC;AAAA,QAAMgB,aAAa,GAAKiE,QAAQ,CAAAjE,aAAhC,CAAA;;AACF,IAAA,IAAAzwB,EAGF,GAAAwvB,WAAW,CAAC3F,MAAD,EAAS4F,IAAT,CAHT;AAAA,QACUkF,iBAAiB,GAAA30B,EAAA,CAAAkrB,UAD3B;AAAA,QAEQ0J,eAAe,cAFvB,CAFgB;;;AAQtB,IAAA,IAAM3D,YAAY,GAAGC,uBAAuB,CAACzB,IAAD,EAAOgB,aAAP,EAAsBK,OAAtB,EAA+B8D,eAA/B,EAAgD,CAAhD,EAAmD,IAAnD,CAA5C,CAAA;AACA,IAAA,IAAMzD,eAAe,GAAGD,uBAAuB,CAACzB,IAAD,EAAOgB,aAAP,EAAsBO,UAAtB,EAAkC4D,eAAlC,EAAmD,CAAnD,EAAsD,IAAtD,CAA/C,CATsB;;AAYtB,IAAA,IAAMxD,aAAa,GAAGF,uBAAuB,CAACzB,IAAD,EAAOgB,aAAP,EAAsBI,QAAtB,EAAgC8D,iBAAhC,EAAmD,CAAnD,EAAsD,IAAtD,CAA7C,CAAA;AACA,IAAA,IAAMtD,cAAc,GAAGH,uBAAuB,CAACzB,IAAD,EAAOgB,aAAP,EAAsBM,SAAtB,EAAiC4D,iBAAjC,EAAoD,CAApD,EAAuD,IAAvD,CAA9C,CAAA;;IAEA,IAAI1D,YAAY,CAACxC,OAAb,IAAwB,CAACgG,QAAQ,CAAC32B,GAAtC,EAA2C;MACvCy2B,eAAe,CAACpsB,IAAhB,CAAqBrK,GAArB,CAAA,CAAA;MACA22B,QAAQ,CAAC32B,GAAT,GAAe,IAAf,CAAA;AACH,KAAA;;IACD,IAAIqzB,eAAe,CAAC1C,OAAhB,IAA2B,CAACgG,QAAQ,CAAC/rB,MAAzC,EAAiD;AAC7C6rB,MAAAA,eAAe,CAACpsB,IAAhB,CAAqBrK,GAAG,GAAGuJ,MAA3B,CAAA,CAAA;MACAotB,QAAQ,CAAC/rB,MAAT,GAAkB,IAAlB,CAAA;AACH,KAAA;;IACD,IAAI0oB,aAAa,CAAC3C,OAAd,IAAyB,CAACgG,QAAQ,CAAC12B,IAAvC,EAA6C;MACzCy2B,aAAa,CAACrsB,IAAd,CAAmBpK,IAAnB,CAAA,CAAA;MACA02B,QAAQ,CAAC12B,IAAT,GAAgB,IAAhB,CAAA;AACH,KAAA;;IACD,IAAIszB,cAAc,CAAC5C,OAAf,IAA0B,CAACgG,QAAQ,CAAC7d,KAAxC,EAA+C;AAC3C4d,MAAAA,aAAa,CAACrsB,IAAd,CAAmBpK,IAAI,GAAGqJ,KAA1B,CAAA,CAAA;MACAqtB,QAAQ,CAAC7d,KAAT,GAAiB,IAAjB,CAAA;AACH,KAAA;GA9BL,CAAA,CAAA;EAiCA,OAAO;AACHsU,IAAAA,UAAU,EAAEqJ,eADT;AAEHpJ,IAAAA,QAAQ,EAAEqJ,aAAAA;GAFd,CAAA;AAIH;;SCxlBeK,gBACZ5K,QACAuK,eACAD,iBAAyB;AAEnB,EAAA,IAAAv0B,KAMFiqB,MAAM,IAAI,EANR;AAAA,MACFlqB,EAAA,GAAAC,EAAA,CAAA+N,QADE;MACFA,QAAQ,GAAAhO,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAWA,EADjB;AAAA,MAEFyC,EAAgB,GAAAxC,EAAA,CAAAjC,IAFd;MAEFA,IAAI,GAAGyE,EAAA,KAAA,KAAA,CAAA,GAAA,CAACoY,QAAD,GAASpY,EAFd;AAAA,MAGFyV,EAAe,GAAAjY,EAAA,CAAAlC,GAHb;MAGFA,GAAG,GAAGma,EAAA,KAAA,KAAA,CAAA,GAAA,CAAC2C,QAAD,GAAS3C,EAHb;AAAA,MAIFiB,aAJE;MAIFtC,KAAK,mBAAGgE,WAAQ1B,EAJd;AAAA,MAKF4b,EAAiB,GAAA90B,EAAA,CAAA0I,MALf;MAKFA,MAAM,GAAGosB,EAAA,KAAA,KAAA,CAAA,GAAAla,QAAA,KALP,CAAA;;AAON,EAAA,IAAMma,UAAU,GAAG;AACfhnB,IAAAA,QAAQ,EAAAA,QADO;AAEfhQ,IAAAA,IAAI,EAAAA,IAFW;AAGfD,IAAAA,GAAG,EAAAA,GAHY;AAIf8Y,IAAAA,KAAK,EAAAA,KAJU;AAKflO,IAAAA,MAAM,EAAAA,MAAAA;GALV,CAAA;EAQA,OAAO;IACHyiB,QAAQ,EAAE6J,WAAW,CAACD,UAAD,EAAaP,aAAb,EAA4B,IAA5B,CADlB;AAEHtJ,IAAAA,UAAU,EAAE8J,WAAW,CAACD,UAAD,EAAaR,eAAb,EAA8B,KAA9B,CAAA;GAF3B,CAAA;AAIH,CAAA;AACe,SAAAU,SAAA,CACZlzB,QADY,EAEZmzB,cAFY,EAE6B;AAEnC,EAAA,IAAAl1B,EAaF,GAAA+B,QAAQ,CAACtC,KAbP;AAAA,MACFM,EAKC,GAAAC,EAAA,CAAAqX,mBANC;AAAA,MAEgB+E,eAAe,GAAArc,EAAA,CAAAuV,YAF/B;AAAA,MAGe6G,cAAc,GAAApc,EAAA,CAAAsV,WAH7B;AAAA,MAIEnF,UAAU,GAAAnQ,EAAA,CAAAmQ,UAJZ;AAAA,MAKEC,SAAS,GAAApQ,EAAA,CAAAoQ,SALX;AAAA,MAOF3N,EAAA,GAAAxC,EAAA,CAAAm1B,UAPE;AAAA,MAQQC,cAAc,UARtB;AAAA,MASOC,aAAa,GAAA7yB,EAAA,CAAA1E,GATpB;AAAA,MAUSw3B,eAAe,GAAA9yB,EAAA,CAAAoU,KAVxB;AAAA,MAWU2e,gBAAgB,YAX1B,CAAA;EAcN,IAAMtL,MAAM,GAAGiL,cAAc,IAAInzB,QAAQ,CAAC5G,KAAT,CAAe8uB,MAAjC,IAA2C,EAA1D,CAAA;AACA,EAAA,IAAMlc,QAAQ,GAAGkc,MAAM,CAAClc,QAAP,IAAmB,QAApC,CAAA;AACA,EAAA,IAAMynB,KAAK,GAAGznB,QAAQ,KAAK,KAA3B,CAAA;AAEI,EAAA,IAAAkK,KAEAgS,MAAM,CAAAlsB,IAFN;MAAAA,IAAI,GAAAka,EAAA,KAAA,KAAA,CAAA,GAAG,CAAC2C,QAAJ,GAAY3C,EAAhB;AAAA,MACAiB,EACA,GAAA+Q,MAAM,IAFN;MACAnsB,GAAG,mBAAG,CAAC8c,aADP,CAAA;AAIA,EAAA,IAAAka,EAEA,GAAA7K,MAAM,CAF8BrT,KAApC;AAAA,MAAAA,KAAK,GAAGke,EAAA,KAAA,KAAA,CAAA,GAAAU,KAAK,GAAG,CAAC5a,QAAJ,GAAeA,QAApB,GAA4Bka,EAApC;AAAA,MACAW,EAAA,GACAxL,MAAM,CAD+BvhB,MADrC;AAAA,MACAA,MAAM,GAAA+sB,EAAA,KAAA,KAAA,CAAA,GAAGD,KAAK,GAAG,CAAC5a,QAAJ,GAAeA,QAAvB,KADN,CAAA;;AAIJ,EAAA,IAAI4a,KAAJ,EAAW;AACP5e,IAAAA,KAAK,GAAGuF,cAAe,GAAGmZ,eAAlB,GAAoCF,cAApC,GAAqDxe,KAA7D,CAAA;AACAlO,IAAAA,MAAM,GAAG0T,eAAgB,GAAGmZ,gBAAnB,GAAsCF,aAAtC,GAAsD3sB,MAA/D,CAAA;AACH,GAAA;;EAED,OAAO;AACH3K,IAAAA,IAAI,EAAEA,IAAI,GAAGq3B,cAAP,GAAwBllB,UAD3B;AAEH0G,IAAAA,KAAK,EAAEA,KAAK,GAAGwe,cAAR,GAAyBllB,UAF7B;AAGHpS,IAAAA,GAAG,EAAEA,GAAG,GAAGu3B,aAAN,GAAsBllB,SAHxB;AAIHzH,IAAAA,MAAM,EAAEA,MAAM,GAAG2sB,aAAT,GAAyBllB,SAAAA;GAJrC,CAAA;AAMH,CAAA;SACeulB,oBACZ3zB,UACA6G,UACAwjB,QAAgB;AAEV,EAAA,IAAApsB,KAKFi1B,SAAS,CAAClzB,QAAD,CALP;AAAA,MACFhE,IAAI,GAAAiC,EAAA,CAAAjC,IADF;AAAA,MAEFD,GAAG,SAFD;AAAA,MAGF8Y,KAAK,WAHH;AAAA,MAIFlO,MAAM,YAJJ,CAAA;;AAOC,EAAA,IAAA2jB,IAAI,GAAUD,MAAM,CAAA,CAAA,CAApB;AAAA,MAAME,IAAI,GAAIF,MAAM,CAAA,CAAA,CAApB,CAAA;;AACH,EAAA,IAAArsB,EAAW,GAAAqC,KAAK,CAACgqB,MAAD,EAASxjB,QAAT,CAAhB;AAAA,MAAC8iB,EAAE,GAAA3rB,EAAA,CAAA,CAAA,CAAH;AAAA,MAAK4rB,EAAE,QAAP,CAAA;;AAEJ,EAAA,IAAI9vB,IAAI,CAACyc,GAAL,CAASoT,EAAT,CAAA,GAAentB,QAAnB,EAA6B;AACzBmtB,IAAAA,EAAE,GAAG,CAAL,CAAA;AACH,GAAA;;AACD,EAAA,IAAI7vB,IAAI,CAACyc,GAAL,CAASqT,EAAT,CAAA,GAAeptB,QAAnB,EAA6B;AACzBotB,IAAAA,EAAE,GAAG,CAAL,CAAA;AACH,GAAA;;AACD,EAAA,IAAMY,QAAQ,GAAGZ,EAAE,GAAG,CAAtB,CAAA;AACA,EAAA,IAAMa,OAAO,GAAGd,EAAE,GAAG,CAArB,CAAA;AAEA,EAAA,IAAMe,YAAY,GAAG;AACjBgC,IAAAA,OAAO,EAAE,KADQ;AAEjBpf,IAAAA,MAAM,EAAE,CAFS;AAGjB5H,IAAAA,GAAG,EAAE,CAAA;GAHT,CAAA;AAKA,EAAA,IAAMklB,cAAc,GAAG;AACnB8B,IAAAA,OAAO,EAAE,KADU;AAEnBpf,IAAAA,MAAM,EAAE,CAFW;AAGnB5H,IAAAA,GAAG,EAAE,CAAA;GAHT,CAAA;;AAKA,EAAA,IAAIikB,EAAE,KAAK,CAAP,IAAYC,EAAE,KAAK,CAAvB,EAA0B;IACtB,OAAO;AACHR,MAAAA,QAAQ,EAAEsB,YADP;AAEHvB,MAAAA,UAAU,EAAEyB,cAAAA;KAFhB,CAAA;AAIH,GALD,MAKO,IAAIjB,EAAE,KAAK,CAAX,EAAc;AACjB,IAAA,IAAIa,QAAJ,EAAc;MACV,IAAI7jB,MAAM,GAAG4jB,IAAb,EAAmB;QACfK,cAAc,CAACllB,GAAf,GAAqBiB,MAArB,CAAA;AACAikB,QAAAA,cAAc,CAACtd,MAAf,GAAwBid,IAAI,GAAG5jB,MAA/B,CAAA;AACH,OAAA;AACJ,KALD,MAKO;MACH,IAAI5K,GAAG,GAAGwuB,IAAV,EAAgB;QACZK,cAAc,CAACllB,GAAf,GAAqB3J,GAArB,CAAA;AACA6uB,QAAAA,cAAc,CAACtd,MAAf,GAAwBid,IAAI,GAAGxuB,GAA/B,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAZM,MAYA,IAAI6tB,EAAE,KAAK,CAAX,EAAc;AACjB,IAAA,IAAIa,OAAJ,EAAa;MACT,IAAI5V,KAAK,GAAGyV,IAAZ,EAAkB;QACdI,YAAY,CAAChlB,GAAb,GAAmBmP,KAAnB,CAAA;AACA6V,QAAAA,YAAY,CAACpd,MAAb,GAAsBgd,IAAI,GAAGzV,KAA7B,CAAA;AACH,OAAA;AACJ,KALD,MAKO;MACH,IAAI7Y,IAAI,GAAGsuB,IAAX,EAAiB;QACbI,YAAY,CAAChlB,GAAb,GAAmB1J,IAAnB,CAAA;AACA0uB,QAAAA,YAAY,CAACpd,MAAb,GAAsBgd,IAAI,GAAGtuB,IAA7B,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAZM,MAYA;AACH;AACA,IAAA,IAAM8U,CAAC,GAAG8Y,EAAE,GAAGD,EAAf,CAAA;IACA,IAAMnK,CAAC,GAAG6K,MAAM,CAAC,CAAD,CAAN,GAAYvZ,CAAC,GAAGwZ,IAA1B,CAAA;IACA,IAAI7W,CAAC,GAAG,CAAR,CAAA;IACA,IAAID,CAAC,GAAG,CAAR,CAAA;IACA,IAAIkZ,OAAO,GAAG,KAAd,CAAA;;AAEA,IAAA,IAAIjC,OAAO,IAAI5V,KAAK,IAAIyV,IAAxB,EAA8B;AAC1B7W,MAAAA,CAAC,GAAG3C,CAAC,GAAG+D,KAAJ,GAAY2K,CAAhB,CAAA;AACAhM,MAAAA,CAAC,GAAGqB,KAAJ,CAAA;AACA6X,MAAAA,OAAO,GAAG,IAAV,CAAA;KAHJ,MAIO,IAAI,CAACjC,OAAD,IAAYH,IAAI,IAAItuB,IAAxB,EAA8B;AACjCyX,MAAAA,CAAC,GAAG3C,CAAC,GAAG9U,IAAJ,GAAWwjB,CAAf,CAAA;AACAhM,MAAAA,CAAC,GAAGxX,IAAJ,CAAA;AACA0wB,MAAAA,OAAO,GAAG,IAAV,CAAA;AACH,KAAA;;AACD,IAAA,IAAIA,OAAJ,EAAa;AACT,MAAA,IAAIjZ,CAAC,GAAG1X,GAAJ,IAAW0X,CAAC,GAAG9M,MAAnB,EAA2B;AACvB+lB,QAAAA,OAAO,GAAG,KAAV,CAAA;AACH,OAAA;AACJ,KAAA;;IACD,IAAI,CAACA,OAAL,EAAc;AACV,MAAA,IAAIlC,QAAQ,IAAI7jB,MAAM,IAAI4jB,IAA1B,EAAgC;AAC5B9W,QAAAA,CAAC,GAAG9M,MAAJ,CAAA;AACA6M,QAAAA,CAAC,GAAG,CAACC,CAAC,GAAG+L,CAAL,IAAU1O,CAAd,CAAA;AACA4b,QAAAA,OAAO,GAAG,IAAV,CAAA;OAHJ,MAIO,IAAI,CAAClC,QAAD,IAAcD,IAAI,IAAIxuB,GAA1B,EAA+B;AAClC0X,QAAAA,CAAC,GAAG1X,GAAJ,CAAA;AACAyX,QAAAA,CAAC,GAAG,CAACC,CAAC,GAAG+L,CAAL,IAAU1O,CAAd,CAAA;AACA4b,QAAAA,OAAO,GAAG,IAAV,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,IAAIA,OAAJ,EAAa;MACThC,YAAY,CAACgC,OAAb,GAAuB,IAAvB,CAAA;MACAhC,YAAY,CAAChlB,GAAb,GAAmB8N,CAAnB,CAAA;AACAkX,MAAAA,YAAY,CAACpd,MAAb,GAAsBgd,IAAI,GAAG9W,CAA7B,CAAA;MAEAoX,cAAc,CAAC8B,OAAf,GAAyB,IAAzB,CAAA;MACA9B,cAAc,CAACllB,GAAf,GAAqB+N,CAArB,CAAA;AACAmX,MAAAA,cAAc,CAACtd,MAAf,GAAwBid,IAAI,GAAG9W,CAA/B,CAAA;AACH,KAAA;AACJ,GAAA;;EAED,OAAO;AACH2V,IAAAA,QAAQ,EAAEsB,YADP;AAEHvB,IAAAA,UAAU,EAAEyB,cAAAA;GAFhB,CAAA;AAIH,CAAA;;AACD,SAASqI,WAAT,CACI/K,MADJ,EAEI5hB,KAFJ,EAGIylB,UAHJ,EAGuB;AAEnB;EACA,IAAM6H,aAAa,GAAG1L,MAAM,CAAC6D,UAAU,GAAG,MAAH,GAAY,KAAvB,CAA5B,CAAA;EACA,IAAM8H,WAAW,GAAG3L,MAAM,CAAC6D,UAAU,GAAG,OAAH,GAAa,QAAxB,CAA1B,CAJmB;;EAOnB,IAAM+H,MAAM,GAAGh6B,IAAI,CAACwa,GAAL,MAAA,CAAAxa,IAAA,EAAYwM,KAAZ,CAAf,CAAA;EACA,IAAMytB,MAAM,GAAGj6B,IAAI,CAACua,GAAL,MAAA,CAAAva,IAAA,EAAYwM,KAAZ,CAAf,CAAA;EACA,IAAM0tB,UAAU,GAAgB,EAAhC,CAAA;;AAEA,EAAA,IAAIJ,aAAa,GAAG,CAAhB,GAAoBE,MAAxB,EAAgC;IAC5BE,UAAU,CAAC5tB,IAAX,CAAgB;AACZsmB,MAAAA,OAAO,EAAE,IADG;MAEZpf,MAAM,EAAEwmB,MAAM,GAAGF,aAFL;AAGZluB,MAAAA,GAAG,EAAEkuB,aAAAA;KAHT,CAAA,CAAA;AAKH,GAAA;;AACD,EAAA,IAAIC,WAAW,GAAG,CAAd,GAAkBE,MAAtB,EAA8B;IAC1BC,UAAU,CAAC5tB,IAAX,CAAgB;AACZsmB,MAAAA,OAAO,EAAE,IADG;MAEZpf,MAAM,EAAEymB,MAAM,GAAGF,WAFL;AAGZnuB,MAAAA,GAAG,EAAEmuB,WAAAA;KAHT,CAAA,CAAA;AAKH,GAAA;;AAED,EAAA,IAAI,CAACG,UAAU,CAACzxB,MAAhB,EAAwB;IACpByxB,UAAU,CAAC5tB,IAAX,CAAgB;AACZsmB,MAAAA,OAAO,EAAE,KADG;AAEZpf,MAAAA,MAAM,EAAE,CAFI;AAGZ5H,MAAAA,GAAG,EAAE,CAAA;KAHT,CAAA,CAAA;AAKH,GAAA;;EAED,OAAOsuB,UAAU,CAACzU,IAAX,CAAgB,UAACzO,CAAD,EAAI0O,CAAJ,EAAU;AAAA,IAAA,OAAA1lB,IAAI,CAACyc,GAAL,CAASiJ,CAAC,CAAClS,MAAX,CAAqBxT,GAAAA,IAAI,CAACyc,GAAL,CAASzF,CAAC,CAACxD,MAAX,CAArB,CAAA;AAAuC,GAAjE,CAAP,CAAA;AACH,CAAA;;SACe6jB,cACZC,eACA6C,WACArc,KAAW;EAEX,IAAM0M,SAAS,GAAG1M,GAAG,GAAGwZ,aAAa,CAACv1B,GAAd,CAAkB,UAAA6J,GAAA,EAAG;AAAI,IAAA,OAAA6e,MAAM,CAAC7e,GAAD,EAAMkS,GAAN,CAAN,CAAA;GAAzB,CAAH,GAAgDwZ,aAArE,CAAA;AAEA,EAAA,OAAO9M,SAAS,CAACnG,IAAV,CAAe,UAAAzY,GAAA,EAAG;IACrB,OAAQA,GAAG,CAAC,CAAD,CAAH,GAASuuB,SAAS,CAACj4B,IAAnB,IAA2BlC,IAAI,CAACyc,GAAL,CAAS7Q,GAAG,CAAC,CAAD,CAAH,GAASuuB,SAAS,CAACj4B,IAA5B,CAAA,GAAoC,GAAhE,IACC0J,GAAG,CAAC,CAAD,CAAH,GAASuuB,SAAS,CAACpf,KAAnB,IAA4B/a,IAAI,CAACyc,GAAL,CAAS7Q,GAAG,CAAC,CAAD,CAAH,GAASuuB,SAAS,CAACpf,KAA5B,CAAqC,GAAA,GADlE,IAECnP,GAAG,CAAC,CAAD,CAAH,GAASuuB,SAAS,CAACl4B,GAAnB,IAA0BjC,IAAI,CAACyc,GAAL,CAAS7Q,GAAG,CAAC,CAAD,CAAH,GAASuuB,SAAS,CAACl4B,GAA5B,CAAmC,GAAA,GAF9D,IAGC2J,GAAG,CAAC,CAAD,CAAH,GAASuuB,SAAS,CAACttB,MAAnB,IAA6B7M,IAAI,CAACyc,GAAL,CAAS7Q,GAAG,CAAC,CAAD,CAAH,GAASuuB,SAAS,CAACttB,MAA5B,CAAA,GAAsC,GAH3E,CAAA;AAIH,GALM,CAAP,CAAA;AAMH,CAAA;SACeutB,YACZ1c,KACA2c,UACA/xB,OAAa;AAEb,EAAA,IAAMgyB,CAAC,GAAG7c,WAAW,CAACC,GAAD,CAArB,CAAA;AACA,EAAA,IAAM6c,OAAO,GAAGv6B,IAAI,CAAC2d,IAAL,CAAU2c,CAAC,GAAGA,CAAJ,GAAQD,QAAQ,GAAGA,QAA7B,KAA0C,CAA1D,CAAA;AAEA,EAAA,OAAO,CAACE,OAAD,EAAU,CAACA,OAAX,CAAA,CAAoB9U,IAApB,CAAyB,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;AACjC,IAAA,OAAO1lB,IAAI,CAACyc,GAAL,CAASzF,CAAC,GAAG0G,GAAG,CAACpV,KAAK,GAAG,CAAH,GAAO,CAAb,CAAhB,CAAmCtI,GAAAA,IAAI,CAACyc,GAAL,CAASiJ,CAAC,GAAGhI,GAAG,CAACpV,KAAK,GAAG,CAAH,GAAO,CAAb,CAAhB,CAA1C,CAAA;AACH,GAFM,CAEJvG,CAAAA,GAFI,CAEA,UAAA6J,GAAA,EAAG;IACN,OAAOmS,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASzV,KAAK,GAAG,CAACsD,GAAD,EAAMyuB,QAAN,CAAH,GAAqB,CAACA,QAAD,EAAWzuB,GAAX,CAAnC,CAAb,CAAA;AACH,GAJM,CAAP,CAAA;AAKH,CAAA;AAEK,SAAU4uB,iBAAV,CACFt0B,QADE,EAEFqkB,SAFE,EAGFC,SAHE,EAIFxjB,MAJE,EAKFiX,QALE,EAKc;AAEhB,EAAA,IAAI,CAAC/X,QAAQ,CAAC5G,KAAT,CAAe8uB,MAApB,EAA4B;AACxB,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;EACD,IAAMtQ,GAAG,GAAGG,QAAQ,GAAGje,IAAI,CAAC+nB,EAAhB,GAAqB,GAAjC,CAAA;;AAEM,EAAA,IAAA5jB,KAKFi1B,SAAS,CAAClzB,QAAD,CALP;AAAA,MACFhE,IAAI,GAAAiC,EAAA,CAAAjC,IADF;AAAA,MAEFD,GAAG,SAFD;AAAA,MAGF8Y,KAAK,WAHH;AAAA,MAIFlO,MAAM,YAJJ,CAAA;;AAON,EAAA,IAAM8qB,YAAY,GAAGz1B,IAAI,GAAG8E,MAAM,CAAC,CAAD,CAAlC,CAAA;AACA,EAAA,IAAM4wB,aAAa,GAAG7c,KAAK,GAAG/T,MAAM,CAAC,CAAD,CAApC,CAAA;AACA,EAAA,IAAM6wB,WAAW,GAAG51B,GAAG,GAAG+E,MAAM,CAAC,CAAD,CAAhC,CAAA;AACA,EAAA,IAAM8wB,cAAc,GAAGjrB,MAAM,GAAG7F,MAAM,CAAC,CAAD,CAAtC,CAAA;AACA,EAAA,IAAMmzB,SAAS,GAAG;AACdj4B,IAAAA,IAAI,EAAEy1B,YADQ;AAEd11B,IAAAA,GAAG,EAAE41B,WAFS;AAGd9c,IAAAA,KAAK,EAAE6c,aAHO;AAId/qB,IAAAA,MAAM,EAAEirB,cAAAA;GAJZ,CAAA;;EAOA,IAAI,CAACT,aAAa,CAAC7M,SAAD,EAAY2P,SAAZ,EAAuB,CAAvB,CAAlB,EAA6C;AACzC,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;EACD,IAAMl2B,MAAM,GAAa,EAAzB,CAAA;AACA,EAAA,CACI,CAAC0zB,YAAD,EAAe,CAAf,CADJ,EAEI,CAACC,aAAD,EAAgB,CAAhB,CAFJ,EAGI,CAACC,WAAD,EAAc,CAAd,CAHJ,EAII,CAACC,cAAD,EAAiB,CAAjB,CAJJ,CAAA,CAKEze,OALF,CAKU,UAAClV,EAAD,EAAkB;QAAhBk2B,QAAQ,GAAAl2B,EAAA,CAAA,CAAA;QAAEmE,KAAK,GAAAnE,EAAA,CAAA,CAAA;AACvBqmB,IAAAA,SAAS,CAACnR,OAAV,CAAkB,UAAAkhB,OAAA,EAAO;MACrB,IAAME,YAAY,GAAG1c,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASwc,OAAT,CAA3B,CAAA;MAEAt2B,MAAM,CAACqI,IAAP,CAAAqK,KAAA,CAAA1S,MAAA,EAAem2B,WAAW,CAACG,OAAD,EAAUF,QAAV,EAAoB/xB,KAApB,CAAX,CACVvG,GADU,CACN,UAAA24B,YAAA,EAAY;AAAI,QAAA,OAAA5c,GAAG,GAAG4c,YAAN,GAAqBD,YAArB,CAAA;AAAiC,OAD3C,CAEVxxB,CAAAA,MAFU,CAEH,UAAAuvB,OAAA,EAAW;QAAA,OAAA,CAACnB,aAAa,CAAC9M,SAAD,EAAY4P,SAAZ,EAAuB3B,OAAvB,CAAd,CAAA;AAA6C,OAFrD,CAGVz2B,CAAAA,GAHU,CAGN,UAAAy2B,OAAA,EAAO;QAAI,OAAAxI,QAAQ,CAACwI,OAAO,GAAG,GAAV,GAAgBx4B,IAAI,CAAC+nB,EAAtB,EAA0BrlB,QAA1B,CAAR,CAAA;AAA2C,OAHhD,CAAf,CAAA,CAAA;KAHJ,CAAA,CAAA;GANJ,CAAA,CAAA;AAgBA,EAAA,OAAOuB,MAAP,CAAA;AACH;;ACzSe,SAAA02B,eAAA,CAAgB3xB,IAAhB,EAA2C4xB,KAA3C,EAA0D;;;AAC9D,EAAA,IAAA3yB,SAAS,GAAuCe,IAAI,CAAAf,SAApD;AAAA,MAAWsO,UAAU,GAA2BvN,IAAI,CAA/BuN,UAArB;AAAA,MAAuBtK,IAAI,GAAqBjD,IAAI,CAAAiD,IAApD;AAAA,MAA6BL,GAAG,GAAgB5C,IAAI,CAApB4C,GAAhC;AAAA,MAAkCmG,IAAI,GAAU/I,IAAI,CAAA+I,IAApD;AAAA,MAAwC8oB,GAAG,GAAK7xB,IAAI,IAApD,CAAA;AACR,EAAA,IAAMkO,YAAY,GAAGjP,SAAS,KAAK,YAAnC,CAAA;EACA,IAAM6yB,SAAS,GAAG5jB,YAAY,GAAG,GAAH,GAAS,GAAvC,CAHsE;;AAMtE,EAAA,OAAO0jB,KAAK,CAACG,aAAN,CAAoB,KAApB,EAA2B;AAC9BF,IAAAA,GAAG,EAAAA,GAD2B;AAE9BG,IAAAA,SAAS,EAAEzkB,UAAU,CAACjU,IAAX,CAAgB,GAAhB,CAFmB;AAG9B4T,IAAAA,KAAK,GAAA/R,EAAA,GAAA,EAAA,EACDA,EAAA,CAAC+S,YAAY,GAAG,OAAH,GAAa,QAA1B,CAAA,GAAqC,EAAGtX,CAAAA,MAAH,CAAGqM,IAAH,CADpC,EAED9H,EAAA,CAAAmJ,SAAA,GAAW,YAAa1N,CAAAA,MAAb,CAAagM,GAAG,CAAC,CAAD,CAAhB,EAAwB,IAAxB,CAAwBhM,CAAAA,MAAxB,CAAwBgM,GAAG,CAAC,CAAD,CAA3B,EAA4C,aAA5C,CAAA,CAA4ChM,MAA5C,CAA4Ck7B,SAA5C,gBAAA,CAAA,OAAA,CAAoEA,SAApE,EAA6E,GAA7E,CAAA,CAA6El7B,MAA7E,CAAiFmS,IAAjF,EAAwF,GAAxF,CAFV,EAGJ5N,EAHI,CAAA;AAHyB,GAA3B,CAAP,CAAA;AAQH,CAAA;AAEe,SAAA82B,oBAAA,CAAqBjyB,IAArB,EAAqD4xB,KAArD,EAAoE;EAChF,OAAOD,eAAe,CAAAv7B,QAAA,CAAAA,QAAA,CAAA,EAAA,EACf4J,IADe,CAAA,EACX;IACPuN,UAAU,EAAEnM,aAAA,CAAA,CACRkM,MAAM,CAAC,MAAD,EAAS,WAAT,EAAsBtN,IAAI,CAACf,SAA3B,CADE,CAAA,EAELe,IAAI,CAACuN,UAFA,EAEU,IAFV,CAAA,CAGVtN,MAHU,CAGH,UAAA+xB,SAAA,EAAa;AAAA,MAAA,OAAAA,SAAA,CAAA;AAAS,KAHnB,CADL;AAKP/uB,IAAAA,IAAI,EAAEjD,IAAI,CAACiD,IAAL,IAAa,EAAA,CAAGrM,MAAH,CAAGoJ,IAAI,CAACkyB,SAAR,EAAqB,IAArB,CALZ;AAMPtvB,IAAAA,GAAG,EAAE5C,IAAI,CAAC4C,GAAL,IAAY5C,IAAI,CAACmyB,QAAL,CAAcp5B,GAAd,CAAkB,UAAAgkB,CAAA,EAAC;MAAI,OAAA,EAAA,CAAAnmB,MAAA,CAAGowB,QAAQ,CAACjK,CAAD,EAAI,GAAJ,CAAX,EAAmB,IAAnB,CAAA,CAAA;KAAvB,CAAA;GAPC,CAAA,EAQnB6U,KARmB,CAAtB,CAAA;AASH,CAAA;SAEeQ,gBACZl1B,UACA+B,WACA8mB,WACAiL,QACA5H,WACAnmB,MACA3D,OACAsyB,OAAe;AAEP,EAAA,IAAA7oB,IAAI,GAAK7L,QAAQ,CAAC5G,KAAT,KAAT,CAAA;EACR,OAAOyvB,SAAS,CAAChtB,GAAV,CAAc,UAACoC,EAAD,EAAgB0H,CAAhB,EAAiB;QAAdvG,IAAI,GAAAnB,EAAA,CAAAmB;QAAEsG,GAAG,GAAAzH,EAAA,CAAAyH;AAC7B,IAAA,IAAMyvB,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAAA;AAEAA,IAAAA,SAAS,CAAC/yB,KAAD,CAAT,GAAmB0xB,MAAnB,CAAA;IACAqB,SAAS,CAAC/yB,KAAK,GAAG,CAAH,GAAO,CAAb,CAAT,GAA2B,CAAC8pB,SAAD,GAAaxmB,GAAxC,CAAA;AAEA,IAAA,OAAOqvB,oBAAoB,CACvB;MACIJ,GAAG,EAAE,EAAAj7B,CAAAA,MAAA,CAAGqI,SAAH,EAAY,iBAAZ,CAAYrI,CAAAA,MAAZ,CAA8BiM,CAA9B,CADT;MAEI0K,UAAU,EAAE,CAACD,MAAM,CAAC,QAAD,EAAW,MAAX,EAAmBhR,IAAnB,CAAP,CAFhB;AAGI61B,MAAAA,QAAQ,EAAEE,SAHd;AAIIH,MAAAA,SAAS,EAAEjvB,IAJf;AAKI8F,MAAAA,IAAI,EAAEA,IALV;AAMI9J,MAAAA,SAAS,EAAEA,SAAAA;KAPQ,EASvB2yB,KATuB,CAA3B,CAAA;AAWH,GAjBM,CAAP,CAAA;AAkBH,CAAA;AACe,SAAAU,gBAAA,CACZp1B,QADY,EAEZZ,IAFY,EAGZopB,UAHY,EAIZ0D,SAJY,EAKZmJ,UALY,EAMZX,KANY,EAMG;AAET,EAAA,IAAAz2B,EAAA,GAAoC+B,QAAQ,CAAC5G,KAA7C;AAAA,MAAEyS,IAAI,GAAA5N,EAAA,CAAA4N,IAAN;AAAA,MAAQypB,uBAAuB,GAAAr3B,EAAA,CAAAq3B,uBAA/B,CAAA;EAEN,IAAMC,SAAS,GAAGn2B,IAAI,KAAK,YAAT,GAAwBuoB,kBAAxB,GAA6CI,oBAA/D,CAAA;AACA,EAAA,IAAMyN,WAAW,GAAGH,UAAU,CAACE,SAAS,CAAC3N,KAAX,CAA9B,CAAA;AACA,EAAA,IAAM6N,SAAS,GAAGJ,UAAU,CAACE,SAAS,CAAC1N,GAAX,CAA5B,CAAA;AACA,EAAA,OAAOW,UAAU,CAACzlB,MAAX,CAAkB,UAAC9E,EAAD,EAAsB;QAAnBy3B,IAAI,GAAAz3B,EAAA,CAAAy3B;QAAEC,WAAW,GAAA13B,EAAA,CAAA03B;;AACzC,IAAA,IAAID,IAAJ,EAAU;AACN,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,IAAIJ,uBAAuB,IAAIK,WAA/B,EAA4C;AACxC;AACA,MAAA,IAAMngB,IAAI,GAAGmgB,WAAW,CAACngB,IAAzB,CAAA;;AAEA,MAAA,IAAIA,IAAI,CAAC+f,SAAS,CAAC3N,KAAX,CAAJ,IAA0B4N,WAA1B,IAAyCC,SAAS,IAAIjgB,IAAI,CAAC+f,SAAS,CAAC1N,GAAX,CAA9D,EAAgF;AAC5E,QAAA,OAAO,KAAP,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACH,GAbM,EAaJhsB,GAbI,CAaA,UAACsvB,SAAD,EAAYxlB,CAAZ,EAAa;AACR,IAAA,IAAAD,GAAG,GAA+BylB,SAAS,IAA3C;AAAA,QAAKplB,IAAI,GAAyBolB,SAAS,CAAAplB,IAA3C;AAAA,QAAW6J,OAAO,GAAgBub,SAAS,CAAzBvb,OAAlB;AAAA,QAAoBklB,SAAS,GAAK3J,SAAS,UAA3C,CAAA;IAER,IAAMgK,SAAS,GAAG,CACd,CAACjJ,SAAS,CAAC,CAAD,CAAV,GAAgBxmB,GAAG,CAAC,CAAD,CADL,EAEd,CAACwmB,SAAS,CAAC,CAAD,CAAV,GAAgBxmB,GAAG,CAAC,CAAD,CAFL,CAAlB,CAAA;AAKA,IAAA,OAAOqvB,oBAAoB,CACvB;MACIJ,GAAG,EAAE,EAAAj7B,CAAAA,MAAA,CAAG0F,IAAH,EAAO,qBAAP,CAAO1F,CAAAA,MAAP,CAA6BiM,CAA7B,CADT;AAEI0K,MAAAA,UAAU,EAAET,OAAO,GAAG,CAACQ,MAAM,CAAC,MAAD,CAAP,EAAiB0kB,SAAjB,CAAH,GAAiC,CAAC1kB,MAAM,CAAC,QAAD,CAAP,EAAmB0kB,SAAnB,CAFxD;AAGI/yB,MAAAA,SAAS,EAAE3C,IAHf;AAII61B,MAAAA,QAAQ,EAAEE,SAJd;AAKIH,MAAAA,SAAS,EAAEjvB,IALf;AAMI8F,MAAAA,IAAI,EAAEA,IAAAA;KAPa,EASvB6oB,KATuB,CAA3B,CAAA;AAWH,GAhCM,CAAP,CAAA;AAiCH,CAAA;SAEekB,gBACZ51B,UACAZ,MACAy2B,UACAzzB,OACA0zB,KACAX,WACAL,WACAJ,OAAe;;;AAET,EAAA,IAAA12B,EAAA,GAWFgC,QAAQ,CAAC5G,KAXP;AAAA,MACFqH,EAAa,GAAAzC,EAAA,CAAA+3B,SADX;MACFA,SAAS,GAAAt1B,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EADX;AAAA,MAEFyV,EAAA,GAAAlY,EAAA,CAAAg4B,kBAFE;MAEFA,kBAAkB,GAAA9f,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAOA,EAFvB;AAAA,MAGFiB,EAAA,GAAAnZ,EAAA,CAAAi4B,cAHE;MAGFA,cAAc,GAAG9e,EAAA,KAAA,KAAA,CAAA,GAAA,UAAC0I,CAAD,EAAYzgB,IAAZ,EAA2C;AACxD;IACA,IAAIA,IAAI,KAAK,UAAb,EAAyB;AACrB,MAAA,OAAOygB,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAOA,CAAP,CAAA;AACH,GANgB,GAMhB1I,EATC;AAAA,MAUFtL,IAAI,GAAA7N,EAAA,CAAA6N,IAVF,CAAA;EAYN,IAAM+oB,SAAS,GAAGx1B,IAAI,KAAK,YAAT,GAAwB,GAAxB,GAA8B,GAAhD,CAAA;EACA,IAAM82B,QAAQ,GAAG92B,IAAI,KAAK,UAAT,GAAsB,QAAtB,GAAiC,OAAlD,CAAA;AACA,EAAA,IAAM+2B,MAAM,GAAGr8B,IAAI,CAACyc,GAAL,CAASuf,GAAT,CAAf,CAAA;AACA,EAAA,IAAMM,QAAQ,GAAGJ,kBAAkB,GAC7Bl7B,UAAU,CAACq7B,MAAM,CAACE,OAAP,CAAeN,SAAf,CAAD,CADmB,GAE7B,CAFN,CAAA;AAGA,EAAA,OAAOrB,KAAA,CAAAG,aAAA,CAAA,KAAA,EAAA;AACHF,IAAAA,GAAG,EAAE,EAAAj7B,CAAAA,MAAA,CAAG0F,IAAH,EAAW,GAAX,CAAA,CAAW1F,MAAX,CAAWm8B,QAAX,eAAA,QAAA,CAAiCzzB,KAAjC,CADF;AAEH0yB,IAAAA,SAAS,EAAE1kB,MAAM,CAAC,iBAAD,EAAoBhR,IAApB,CAFd;IAGH4Q,KAAK,GAAA/R,EAAA,GAAA;MACDjC,IAAI,EAAE,EAAGtC,CAAAA,MAAH,CAAGy7B,SAAS,CAAC,CAAD,CAAZ,EAAmB,IAAnB,CADL;MAEDp5B,GAAG,EAAE,GAAGrC,MAAH,CAAGy7B,SAAS,CAAC,CAAD,CAAZ,EAAmB,IAAnB,CAAA;AAFJ,KAAA,EAGDl3B,EAAA,CAACi4B,QAAD,CAAA,GAAY,EAAA,CAAGx8B,MAAH,CAAGy8B,MAAH,EAAa,IAAb,CAHX,IAAA,CAAA;GAHF,EASFpB,oBAAoB,CACjB;AACIhzB,IAAAA,SAAS,EAAE3C,IADf;IAEIiR,UAAU,EAAE,CAACD,MAAM,CAACylB,QAAD,CAAP,EAAmBf,SAAnB,CAFhB;AAGI/uB,IAAAA,IAAI,EAAE,MAHV;AAIIkvB,IAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJd;AAKID,IAAAA,SAAS,EAAEmB,MALf;AAMItqB,IAAAA,IAAI,EAAEA,IAAAA;GAPO,EASjB6oB,KATiB,CATlB,EAoBHA,KACI,CAAAG,aADJ,CACI,KADJ,EACI;AAAAC,IAAAA,SAAS,EAAE1kB,MAAM,CAAC,YAAD,EAAe,KAAf,CAAjB;AACAJ,IAAAA,KAAK,EAAE;AACH5I,MAAAA,SAAS,EAAE,WAAA,CAAA1N,MAAA,CAAYk7B,SAAZ,EAAqB,eAArB,CAAA,CAAqBl7B,MAArB,CAAqCmS,IAArC,EAA4C,GAA5C,CAAA;AADR,KAAA;AADP,GADJ,EAMKuqB,QAAQ,GAAG,CAAX,GAAeH,cAAc,CAACG,QAAD,EAAWh3B,IAAX,CAA7B,GAAgD,EANrD,CApBG,CAAP,CAAA;AA6BH,CAAA;AAEK,SAAUk3B,wBAAV,CACFl3B,IADE,EAEFopB,UAFE,EAGF6M,UAHE,EAIFC,uBAJE,EAI8B;EAEhC,IAAMlzB,KAAK,GAAGhD,IAAI,KAAK,UAAT,GAAsB,CAAtB,GAA0B,CAAxC,CAAA;EACA,IAAMm3B,UAAU,GAAGn3B,IAAI,KAAK,UAAT,GAAsB,CAAtB,GAA0B,CAA7C,CAAA;AACA,EAAA,IAAMo3B,KAAK,GAAGp0B,KAAK,GAAGulB,kBAAH,GAAwBI,oBAA3C,CAAA;AACA,EAAA,IAAMyN,WAAW,GAAGH,UAAU,CAACmB,KAAK,CAAC5O,KAAP,CAA9B,CAAA;AACA,EAAA,IAAM6N,SAAS,GAAGJ,UAAU,CAACmB,KAAK,CAAC3O,GAAP,CAA5B,CAAA;AACA,EAAA,OAAOlJ,OAAO,CAAC6J,UAAD,EAAa,UAAC2C,SAAD,EAAU;AACjC,IAAA,OAAOA,SAAS,CAACzlB,GAAV,CAActD,KAAd,CAAP,CAAA;AACH,GAFa,CAAP,CAEJvG,GAFI,CAEA,UAAA46B,cAAA,EAAc;IACjB,IAAM7O,KAAK,GAAoB,EAA/B,CAAA;IACA,IAAMC,GAAG,GAAoB,EAA7B,CAAA;IACA,IAAM6O,KAAK,GAAoB,EAA/B,CAAA;AAEAD,IAAAA,cAAc,CAACtjB,OAAf,CAAuB,UAAAgY,SAAA,EAAS;;;AAC5B,MAAA,IAAMvb,OAAO,GAAGub,SAAS,CAACvb,OAA1B,CAAA;AACA,MAAA,IAAM4F,IAAI,GAAG2V,SAAS,CAACwK,WAAV,CAAuBngB,IAApC,CAAA;;MACA,IAAIA,IAAI,CAACghB,KAAK,CAAC3O,GAAP,CAAJ,GAAmB2N,WAAvB,EAAoC;QAChC5N,KAAK,CAACxhB,IAAN,CAAW+kB,SAAX,CAAA,CAAA;OADJ,MAEO,IAAIsK,SAAS,GAAGjgB,IAAI,CAACghB,KAAK,CAAC5O,KAAP,CAApB,EAAoC;QACvCC,GAAG,CAACzhB,IAAJ,CAAS+kB,SAAT,CAAA,CAAA;OADG,MAEA,IAAI3V,IAAI,CAACghB,KAAK,CAAC5O,KAAP,CAAJ,IAAsB4N,WAAtB,IAAqCC,SAAS,IAAIjgB,IAAI,CAACghB,KAAK,CAAC3O,GAAP,CAAtD,IAAsEyN,uBAA1E,EAAmG;AACtG,QAAA,IAAM5vB,GAAG,GAAGylB,SAAS,CAACzlB,GAAtB,CAAA;AACA,QAAA,IAAMixB,YAAY,GAAG;AAAE/mB,UAAAA,OAAO,SAAT;AAAW4F,UAAAA,IAAI,EAAOtc,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAsc,IAAA,CAAA,GAAOvX,EAAA,GAAA,EAAA,EAAAA,EAAA,CAAAu4B,KAAK,CAAC3O,GAAN,CAAA,GAAYrS,IAAI,CAACghB,KAAK,CAAC5O,KAAP,CAAhB,EAAgC3pB,EAAvC,EAAA;SAA3C,CAAA;AACA,QAAA,IAAM24B,YAAY,GAAG;AAAEhnB,UAAAA,OAAO,SAAT;AAAW4F,UAAAA,IAAI,EAAOtc,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAsc,IAAA,CAAA,GAAOxX,EAAA,GAAA,EAAA,EAAAA,EAAA,CAAAw4B,KAAK,CAAC5O,KAAN,CAAA,GAAcpS,IAAI,CAACghB,KAAK,CAAC3O,GAAP,CAAlB,EAAgC7pB,EAAvC,EAAA;SAA3C,CAAA;AACA,QAAA,IAAM64B,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAA;AACA,QAAA,IAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAA;AACAD,QAAAA,QAAQ,CAACz0B,KAAD,CAAR,GAAkBsD,GAAG,CAACtD,KAAD,CAArB,CAAA;AACAy0B,QAAAA,QAAQ,CAACN,UAAD,CAAR,GAAuB7wB,GAAG,CAAC6wB,UAAD,CAA1B,CAAA;AAEAO,QAAAA,QAAQ,CAAC10B,KAAD,CAAR,GAAkBsD,GAAG,CAACtD,KAAD,CAArB,CAAA;QACA00B,QAAQ,CAACP,UAAD,CAAR,GAAuB7wB,GAAG,CAAC6wB,UAAD,CAAH,GAAkBpL,SAAS,CAACplB,IAAnD,CAAA;QAGA6hB,KAAK,CAACxhB,IAAN,CAAW;AACPhH,UAAAA,IAAI,EAAAA,IADG;AAEPsG,UAAAA,GAAG,EAAEmxB,QAFE;AAGP9wB,UAAAA,IAAI,EAAE,CAHC;AAIP4vB,UAAAA,WAAW,EAAEgB,YAAAA;SAJjB,CAAA,CAAA;QAMA9O,GAAG,CAACzhB,IAAJ,CAAS;AACLhH,UAAAA,IAAI,EAAAA,IADC;AAELsG,UAAAA,GAAG,EAAEoxB,QAFA;AAGL/wB,UAAAA,IAAI,EAAE,CAHD;AAIL4vB,UAAAA,WAAW,EAAEiB,YAAAA;AAJR,SAAT,EAnBsG;AA0BzG,OAAA;KAjCL,CAAA,CAAA;AAoCAhP,IAAAA,KAAK,CAACrI,IAAN,CAAW,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;MACZ,OAAOA,CAAC,CAAC9Z,GAAF,CAAM6wB,UAAN,CAAoBzlB,GAAAA,CAAC,CAACpL,GAAF,CAAM6wB,UAAN,CAA3B,CAAA;KADJ,CAAA,CAAA;AAGA1O,IAAAA,GAAG,CAACtI,IAAJ,CAAS,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;MACV,OAAO1O,CAAC,CAACpL,GAAF,CAAM6wB,UAAN,CAAoB/W,GAAAA,CAAC,CAAC9Z,GAAF,CAAM6wB,UAAN,CAA3B,CAAA;KADJ,CAAA,CAAA;IAGA,OAAO;AACHQ,MAAAA,KAAK,EAAEN,cADJ;AAEH7O,MAAAA,KAAK,EAAAA,KAFF;AAGHC,MAAAA,GAAG,EAAAA,GAHA;AAIH6O,MAAAA,KAAK,EAAAA,KAAAA;KAJT,CAAA;AAMH,GAvDM,CAAP,CAAA;AAwDH,CAAA;AACK,SAAUM,sBAAV,CACFh3B,QADE,EAEFwoB,UAFE,EAGF0D,SAHE,EAIFmJ,UAJE,EAKFX,KALE,EAKa;AAGX,EAAA,IAAAY,uBAAuB,GACvBt1B,QAAQ,CAAC5G,KAAT,wBADA,CAAA;EAEJ,IAAM69B,QAAQ,GAAU,EAAxB,CAAA;EAEC,CAAC,UAAD,EAAa,YAAb,CAAA,CAAqC9jB,OAArC,CAA6C,UAAA/T,IAAA,EAAI;IAC9C,IAAMq3B,cAAc,GAAGjO,UAAU,CAACzlB,MAAX,CAAkB,UAAAooB,SAAA,EAAS;AAAI,MAAA,OAAAA,SAAS,CAAC/rB,IAAV,KAAmBA,IAAnB,CAAA;AAAuB,KAAtD,CAAvB,CAAA;IACA,IAAMgD,KAAK,GAAGhD,IAAI,KAAK,UAAT,GAAsB,CAAtB,GAA0B,CAAxC,CAAA;AACA,IAAA,IAAMm3B,UAAU,GAAGn0B,KAAK,GAAG,CAAH,GAAO,CAA/B,CAAA;IAEA,IAAMyc,MAAM,GAAGyX,wBAAwB,CAACl3B,IAAD,EAAOq3B,cAAP,EAAuBpB,UAAvB,EAAmCC,uBAAnC,CAAvC,CAAA;AACA,IAAA,IAAMC,SAAS,GAAGnzB,KAAK,GAAG2lB,oBAAH,GAA0BJ,kBAAjD,CAAA;AACA,IAAA,IAAMuP,SAAS,GAAG90B,KAAK,GAAGulB,kBAAH,GAAwBI,oBAA/C,CAAA;AACA,IAAA,IAAMyN,WAAW,GAAGH,UAAU,CAACE,SAAS,CAAC3N,KAAX,CAA9B,CAAA;AACA,IAAA,IAAM6N,SAAS,GAAGJ,UAAU,CAACE,SAAS,CAAC1N,GAAX,CAA5B,CAAA;AAEAhJ,IAAAA,MAAM,CAAC1L,OAAP,CAAe,UAAClV,EAAD,EAA6B;UAA1B84B,KAAK,GAAA94B,EAAA,CAAA84B;UAAEnP,KAAK,GAAA3pB,EAAA,CAAA2pB;UAAEC,GAAG,GAAA5pB,EAAA,CAAA4pB;UAAE6O,KAAK,GAAAz4B,EAAA,CAAAy4B;MACtC,IAAMS,OAAO,GAAGjL,SAAS,CAACqK,UAAD,CAAT,GAAwBQ,KAAK,CAAC,CAAD,CAAL,CAASrxB,GAAT,CAAa6wB,UAAb,CAAxB,GAAmDlB,UAAU,CAAC6B,SAAS,CAACtP,KAAX,CAA7E,CAAA;MAEA,IAAIwP,QAAQ,GAAG/B,UAAf,CAAA;AAEAzN,MAAAA,KAAK,CAACzU,OAAN,CAAc,UAAAgY,SAAA,EAAS;AACnB,QAAA,IAAMkM,QAAQ,GAAGlM,SAAS,CAACwK,WAAV,CAAuBngB,IAAxC,CAAA;AACA,QAAA,IAAMzP,IAAI,GAAGqxB,QAAQ,CAAC7B,SAAS,CAAC3N,KAAX,CAAR,GAA6ByP,QAAQ,CAAC9B,SAAS,CAAC1N,GAAX,CAAlD,CAAA;;QAEA,IAAI9hB,IAAI,GAAG,CAAX,EAAc;AACV,UAAA,IAAMovB,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAAA;AAEAA,UAAAA,SAAS,CAAC/yB,KAAD,CAAT,GAAmB8pB,SAAS,CAAC9pB,KAAD,CAAT,GAAmBg1B,QAAQ,CAAC7B,SAAS,CAAC3N,KAAX,CAA3B,GAAgD4N,WAAhD,GAA8DzvB,IAAjF,CAAA;AACAovB,UAAAA,SAAS,CAACoB,UAAD,CAAT,GAAwBY,OAAxB,CAAA;UAEAF,QAAQ,CAAC7wB,IAAT,CAAcwvB,eAAe,CACzB51B,QADyB,EAEzBZ,IAFyB,EAGzB,QAHyB,EAIzB63B,QAAQ,CAAC10B,MAJgB,EAKzBwD,IALyB,EAMzBovB,SANyB,EAOzBhK,SAAS,CAAC2J,SAPe,EAQzBJ,KARyB,CAA7B,CAAA,CAAA;AAUH,SAAA;;AACD0C,QAAAA,QAAQ,GAAGC,QAAX,CAAA;OArBJ,CAAA,CAAA;AAwBAD,MAAAA,QAAQ,GAAG/B,UAAX,CAAA;AACAxN,MAAAA,GAAG,CAAC1U,OAAJ,CAAY,UAAAgY,SAAA,EAAS;AACjB,QAAA,IAAMkM,QAAQ,GAAGlM,SAAS,CAACwK,WAAV,CAAuBngB,IAAxC,CAAA;AACA,QAAA,IAAMzP,IAAI,GAAGsxB,QAAQ,CAAC9B,SAAS,CAAC3N,KAAX,CAAR,GAA6BwP,QAAQ,CAAC7B,SAAS,CAAC1N,GAAX,CAAlD,CAAA;;QAEA,IAAI9hB,IAAI,GAAG,CAAX,EAAc;AACV,UAAA,IAAMovB,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAAA;AAEAA,UAAAA,SAAS,CAAC/yB,KAAD,CAAT,GAAmB8pB,SAAS,CAAC9pB,KAAD,CAAT,GAAmBg1B,QAAQ,CAAC7B,SAAS,CAAC1N,GAAX,CAA3B,GAA8C2N,WAAjE,CAAA;AACAL,UAAAA,SAAS,CAACoB,UAAD,CAAT,GAAwBY,OAAxB,CAAA;UAEAF,QAAQ,CAAC7wB,IAAT,CAAcwvB,eAAe,CACzB51B,QADyB,EAEzBZ,IAFyB,EAGzB,QAHyB,EAIzB63B,QAAQ,CAAC10B,MAJgB,EAKzBwD,IALyB,EAMzBovB,SANyB,EAOzBhK,SAAS,CAAC2J,SAPe,EAQzBJ,KARyB,CAA7B,CAAA,CAAA;AAUH,SAAA;;AACD0C,QAAAA,QAAQ,GAAGC,QAAX,CAAA;OArBJ,CAAA,CAAA;AAwBAX,MAAAA,KAAK,CAACvjB,OAAN,CAAc,UAAAgY,SAAA,EAAS;AACnB,QAAA,IAAMkM,QAAQ,GAAGlM,SAAS,CAACwK,WAAV,CAAuBngB,IAAxC,CAAA;QAEA,IAAM8hB,KAAK,GAAG9B,WAAW,GAAG6B,QAAQ,CAAC9B,SAAS,CAAC3N,KAAX,CAApC,CAAA;QACA,IAAM2P,KAAK,GAAGF,QAAQ,CAAC9B,SAAS,CAAC1N,GAAX,CAAR,GAA2B4N,SAAzC,CAAA;AACA,QAAA,IAAM+B,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAA;AACA,QAAA,IAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAA;QAEAD,UAAU,CAACp1B,KAAD,CAAV,GAAoB8pB,SAAS,CAAC9pB,KAAD,CAAT,GAAmBk1B,KAAvC,CAAA;AACAE,QAAAA,UAAU,CAACjB,UAAD,CAAV,GAAyBY,OAAzB,CAAA;QAEAM,UAAU,CAACr1B,KAAD,CAAV,GAAoB8pB,SAAS,CAAC9pB,KAAD,CAAT,GAAmBqzB,SAAnB,GAA+BD,WAAnD,CAAA;AACAiC,QAAAA,UAAU,CAAClB,UAAD,CAAV,GAAyBY,OAAzB,CAAA;QAEAF,QAAQ,CAAC7wB,IAAT,CAAcwvB,eAAe,CACzB51B,QADyB,EAEzBZ,IAFyB,EAGzB,QAHyB,EAIzB63B,QAAQ,CAAC10B,MAJgB,EAKzB+0B,KALyB,EAMzBE,UANyB,EAOzBrM,SAAS,CAAC2J,SAPe,EAQzBJ,KARyB,CAA7B,CAAA,CAAA;QAUAuC,QAAQ,CAAC7wB,IAAT,CAAcwvB,eAAe,CACzB51B,QADyB,EAEzBZ,IAFyB,EAGzB,QAHyB,EAIzB63B,QAAQ,CAAC10B,MAJgB,EAKzBg1B,KALyB,EAMzBE,UANyB,EAOzBtM,SAAS,CAAC2J,SAPe,EAQzBJ,KARyB,CAA7B,CAAA,CAAA;OAxBJ,CAAA,CAAA;KAtDJ,CAAA,CAAA;GAXH,CAAA,CAAA;AAsGD,EAAA,OAAOuC,QAAP,CAAA;AACH,CAAA;AACK,SAAUS,mBAAV,CACF13B,QADE,EAEFwoB,UAFE,EAGF0D,SAHE,EAIFmJ,UAJE,EAKFX,KALE,EAKQ;EAEV,IAAMuC,QAAQ,GAAU,EAAxB,CAAA;EACC,CAAC,YAAD,EAAe,UAAf,CAAA,CAAqC9jB,OAArC,CAA6C,UAAA/T,IAAA,EAAI;IAC9C,IAAMq3B,cAAc,GAAGjO,UAAU,CAACzlB,MAAX,CAAkB,UAAAooB,SAAA,EAAa;AAAA,MAAA,OAAAA,SAAS,CAAC/rB,IAAV,KAAmBA,IAAnB,CAAA;AAAuB,KAAtD,EAAwDyT,KAAxD,CAA8D,CAA9D,EAAiE,CAAjE,CAAvB,CAAA;IACA,IAAMzQ,KAAK,GAAGhD,IAAI,KAAK,UAAT,GAAsB,CAAtB,GAA0B,CAAxC,CAAA;AACA,IAAA,IAAMm3B,UAAU,GAAGn0B,KAAK,GAAG,CAAH,GAAO,CAA/B,CAAA;AACA,IAAA,IAAMmzB,SAAS,GAAGnzB,KAAK,GAAG2lB,oBAAH,GAA0BJ,kBAAjD,CAAA;AACA,IAAA,IAAMuP,SAAS,GAAG90B,KAAK,GAAGulB,kBAAH,GAAwBI,oBAA/C,CAAA;AACA,IAAA,IAAMyN,WAAW,GAAGH,UAAU,CAACE,SAAS,CAAC3N,KAAX,CAA9B,CAAA;AACA,IAAA,IAAM6N,SAAS,GAAGJ,UAAU,CAACE,SAAS,CAAC1N,GAAX,CAA5B,CAAA;AACA,IAAA,IAAM8P,eAAe,GAAGtC,UAAU,CAAC6B,SAAS,CAACtP,KAAX,CAAlC,CAAA;AACA,IAAA,IAAMgQ,aAAa,GAAGvC,UAAU,CAAC6B,SAAS,CAACrP,GAAX,CAAhC,CAAA;AAGA4O,IAAAA,cAAc,CAACtjB,OAAf,CAAuB,UAAClV,EAAD,EAAkB;UAAf63B,GAAG,GAAA73B,EAAA,CAAA63B;UAAE+B,QAAQ,GAAA55B,EAAA,CAAA45B;MACnC,IAAMC,YAAY,GAAGh+B,IAAI,CAACua,GAAL,CAAA5D,KAAA,CAAA3W,IAAA,EACjBoK,aAAA,CAAA,CAAAyzB,eAAA,CAAA,EACGE,QAAS,CAACh8B,GAAV,CAAc,UAACoC,EAAD,EAAS;AAAN,QAAA,IAAAuX,IAAI,GAAAvX,EAAA,CAAAuX,IAAJ,CAAA;AAAW,QAAA,OAAAA,IAAI,CAAC0hB,SAAS,CAACtP,KAAX,CAAJ,CAAA;AAAsB,OAAlD,CADH,OAAA,CADiB,CAArB,CAAA;MAIA,IAAMmQ,UAAU,GAAGj+B,IAAI,CAACwa,GAAL,CAAA7D,KAAA,CAAA3W,IAAA,EACfoK,aAAA,CAAA,CAAA0zB,aAAA,CAAA,EACGC,QAAS,CAACh8B,GAAV,CAAc,UAACoC,EAAD,EAAS;AAAN,QAAA,IAAAuX,IAAI,GAAAvX,EAAA,CAAAuX,IAAJ,CAAA;AAAW,QAAA,OAAAA,IAAI,CAAC0hB,SAAS,CAACrP,GAAX,CAAJ,CAAA;AAAoB,OAAhD,CADH,OAAA,CADe,CAAnB,CAAA;AAIA,MAAA,IAAMmQ,aAAa,GAAG,CAACF,YAAY,GAAGC,UAAhB,IAA8B,CAApD,CAAA;;AAEA,MAAA,IAAID,YAAY,KAAKC,UAAjB,IAA+BC,aAAa,KAAK,CAACL,eAAe,GAAGC,aAAnB,IAAmC,CAAxF,EAA2F;AACvF,QAAA,OAAA;AACH,OAAA;;AACDC,MAAAA,QAAS,CAAC1kB,OAAV,CAAkB,UAAClV,EAAD,EAAoB;YAAjBuX,IAAI,GAAAvX,EAAA,CAAAuX;YAAEsf,SAAS,GAAA72B,EAAA,CAAA62B;AAChC,QAAA,IAAMK,SAAS,GAAG,CAACjJ,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAAlB,CAAA;;QAEA,IAAI1W,IAAI,CAAC+f,SAAS,CAAC1N,GAAX,CAAJ,GAAuB2N,WAA3B,EAAwC;UACpCL,SAAS,CAAC/yB,KAAD,CAAT,IAAoBoT,IAAI,CAAC+f,SAAS,CAAC1N,GAAX,CAAJ,GAAuB2N,WAA3C,CAAA;SADJ,MAEO,IAAIC,SAAS,GAAGjgB,IAAI,CAAC+f,SAAS,CAAC3N,KAAX,CAApB,EAAwC;AAC3CuN,UAAAA,SAAS,CAAC/yB,KAAD,CAAT,IAAoBoT,IAAI,CAAC+f,SAAS,CAAC3N,KAAX,CAAJ,GAAyB4N,WAAzB,GAAuCM,GAA3D,CAAA;AACH,SAFM,MAEA;AACH,UAAA,OAAA;AACH,SAAA;;AAEDX,QAAAA,SAAS,CAACoB,UAAD,CAAT,IAAyByB,aAAa,GAAGL,eAAzC,CAAA;QACAV,QAAQ,CAAC7wB,IAAT,CAAcwvB,eAAe,CACzB51B,QADyB,EAEzBoC,KAAK,GAAG,UAAH,GAAgB,YAFI,EAGzB,KAHyB,EAIzB60B,QAAQ,CAAC10B,MAJgB,EAKzBuzB,GALyB,EAMzBX,SANyB,EAOzBL,SAPyB,EAQzBJ,KARyB,CAA7B,CAAA,CAAA;OAZJ,CAAA,CAAA;KAdJ,CAAA,CAAA;GAZH,CAAA,CAAA;AAmDD,EAAA,OAAOuC,QAAP,CAAA;AACH;;AC9YK,SAAUgB,aAAV,CACF73B,IADE,EAEF+P,IAFE,EAGFijB,UAHE,EAIFrH,UAJE,EAIiB;EAEnB,IAAIpC,EAAE,GAAGxZ,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAAvB,CAAA;EACA,IAAIwpB,EAAE,GAAGzZ,IAAI,CAAC,CAAD,CAAJ,GAAU/P,IAAI,CAAC,CAAD,CAAvB,CAAA;;AAEA,EAAA,IAAItG,IAAI,CAACyc,GAAL,CAASoT,EAAT,CAAA,GAAentB,UAAnB,EAA6B;AACzBmtB,IAAAA,EAAE,GAAG,CAAL,CAAA;AACH,GAAA;;AACD,EAAA,IAAI7vB,IAAI,CAACyc,GAAL,CAASqT,EAAT,CAAA,GAAeptB,UAAnB,EAA6B;AACzBotB,IAAAA,EAAE,GAAG,CAAL,CAAA;AACH,GAAA;;EACD,IAAI,CAACD,EAAL,EAAS;AACL;AACA;IACA,IAAI,CAACoC,UAAL,EAAiB;AACb,MAAA,OAAO,CAAC,CAAD,EAAIqH,UAAJ,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACH,GAAA;;EACD,IAAI,CAACxJ,EAAL,EAAS;AACL;AACA,IAAA,IAAImC,UAAJ,EAAgB;AACZ,MAAA,OAAO,CAACqH,UAAD,EAAa,CAAb,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACH,GAzBkB;;;AA2BnB,EAAA,IAAMtiB,CAAC,GAAG8Y,EAAE,GAAGD,EAAf,CAAA;AACA,EAAA,IAAMnK,CAAC,GAAGpf,IAAI,CAAC,CAAD,CAAJ,GAAU0Q,CAAC,GAAG1Q,IAAI,CAAC,CAAD,CAA5B,CAAA;;AAEA,EAAA,IAAI2rB,UAAJ,EAAgB;AACZ;AACA,IAAA,IAAMtY,CAAC,GAAG3C,CAAC,IAAIX,IAAI,CAAC,CAAD,CAAJ,GAAUijB,UAAd,CAAD,GAA6B5T,CAAvC,CAAA;IAEA,OAAO,CAAC4T,UAAD,EAAa3f,CAAC,GAAGtD,IAAI,CAAC,CAAD,CAArB,CAAP,CAAA;AACH,GALD,MAKO;AACH;AACA,IAAA,IAAMqD,CAAC,GAAG,CAACrD,IAAI,CAAC,CAAD,CAAJ,GAAUijB,UAAV,GAAuB5T,CAAxB,IAA6B1O,CAAvC,CAAA;IAEA,OAAO,CAAC0C,CAAC,GAAGrD,IAAI,CAAC,CAAD,CAAT,EAAcijB,UAAd,CAAP,CAAA;AACH,GAAA;AACJ,CAAA;;AAGD,SAAS8E,eAAT,CACI93B,IADJ,EAEI+P,IAFJ,EAGI7C,MAHJ,EAIIye,UAJJ,EAKI1tB,KALJ,EAKuB;EAEnB,IAAMiyB,UAAU,GAAG2H,aAAa,CAAC73B,IAAD,EAAO+P,IAAP,EAAa7C,MAAb,EAAqBye,UAArB,CAAhC,CAAA;;EAEA,IAAI,CAACuE,UAAL,EAAiB;IACb,OAAO;AACH6H,MAAAA,SAAS,EAAE,KADR;AAEH7qB,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;KAFZ,CAAA;AAIH,GAAA;;AACD,EAAA,IAAMvH,IAAI,GAAGa,SAAO,CAACxG,IAAD,EAAO+P,IAAP,CAApB,CAAA;AACA,EAAA,IAAMioB,KAAK,GAAGxxB,SAAO,CAAC0pB,UAAD,EAAalwB,IAAb,CAArB,CAAA;AACA,EAAA,IAAMi4B,KAAK,GAAGzxB,SAAO,CAAC0pB,UAAD,EAAangB,IAAb,CAArB,CAAA;EAEA,IAAMgoB,SAAS,GAAGC,KAAK,GAAGryB,IAAR,IAAgBsyB,KAAK,GAAGtyB,IAA1C,CAAA;;EACM,IAAA9H,EAAA,GAA8ByC,WAAW,CAAC;AAC5CrC,IAAAA,KAAK,EAAAA,KADuC;AAE5CqB,IAAAA,KAAK,EAAE4wB,UAAU,CAAC,CAAD,CAF2B;IAG5C3wB,KAAK,EAAE2wB,UAAU,CAAC,CAAD,CAAA;AAH2B,GAAD,CAAzC;AAAA,MAACgI,WAAW,GAAAr6B,EAAA,CAAA,CAAA,CAAZ;AAAA,MAAcs6B,YAAY,QAA1B,CAAA;;EAMN,OAAO;AACHjrB,IAAAA,MAAM,EAAE,CAACgrB,WAAD,EAAcC,YAAd,CADL;AAEHJ,IAAAA,SAAS,EAAAA,SAAAA;GAFb,CAAA;AAIH,CAAA;;AAED,SAASK,YAAT,CAAsBC,SAAtB,EAA4ChN,QAA5C,EAA8D;EAC1D,IAAIgN,SAAS,CAAC/L,OAAd,EAAuB;IACnB,OAAO+L,SAAS,CAACnrB,MAAjB,CAAA;AACH,GAFD,MAEO,IAAIme,QAAQ,CAACd,MAAb,EAAqB;AACxB,IAAA,OAAOK,2BAA2B,CAACS,QAAD,CAA3B,CAAsCne,MAA7C,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,CAAP,CAAA;AACH,CAAA;;AAGK,SAAUorB,uBAAV,CACFC,kBADE,EAEF16B,EAFE,EAGFD,EAHE,EAIFyC,EAJE,EAKFyV,EALE,EAK0C;MAH3CxW,KAAK,GAAAzB,EAAA,CAAA,CAAA;MAAE0B,KAAK,GAAA1B,EAAA,CAAA,CAAA;MACZ2wB,eAAe,GAAA5wB,EAAA,CAAA,CAAA;MAAE6wB,iBAAiB,GAAA7wB,EAAA,CAAA,CAAA;MAClCitB,cAAc,GAAAxqB,EAAA,CAAA,CAAA;MAAE2qB,gBAAgB,GAAA3qB,EAAA,CAAA,CAAA;MAChC0Z,cAAc,GAAAjE,EAAA,CAAA,CAAA;MAAEgE,gBAAgB,GAAAhE,EAAA,CAAA,CAAA;EAEjC,IAAI0iB,OAAO,GAAG,CAACze,cAAf,CAAA;EACA,IAAI0e,OAAO,GAAG,CAAC3e,gBAAf,CAAA;;AAEA,EAAA,IAAIye,kBAAkB,IAAIj5B,KAAtB,IAA+BC,KAAnC,EAA0C;AACtCi5B,IAAAA,OAAO,GAAG,CAAV,CAAA;AACAC,IAAAA,OAAO,GAAG,CAAV,CAAA;IACA,IAAMC,WAAW,GAAe,EAAhC,CAAA;;IACA,IAAIlK,eAAe,IAAIC,iBAAvB,EAA0C;AACtCiK,MAAAA,WAAW,CAAC1yB,IAAZ,CAAiB,CAAC,CAAD,EAAI8T,gBAAJ,CAAjB,EAAwC,CAACC,cAAD,EAAiB,CAAjB,CAAxC,CAAA,CAAA;KADJ,MAEO,IAAIyU,eAAJ,EAAqB;AACxBkK,MAAAA,WAAW,CAAC1yB,IAAZ,CAAiB,CAAC+T,cAAD,EAAiB,CAAjB,CAAjB,CAAA,CAAA;KADG,MAEA,IAAI0U,iBAAJ,EAAuB;AAC1BiK,MAAAA,WAAW,CAAC1yB,IAAZ,CAAiB,CAAC,CAAD,EAAI8T,gBAAJ,CAAjB,CAAA,CAAA;AACH,KAFM,MAEA,IAAI+Q,cAAc,IAAIG,gBAAtB,EAAwC;AAC3C0N,MAAAA,WAAW,CAAC1yB,IAAZ,CAAiB,CAAC,CAAD,EAAI8T,gBAAJ,CAAjB,EAAwC,CAACC,cAAD,EAAiB,CAAjB,CAAxC,CAAA,CAAA;KADG,MAEA,IAAI8Q,cAAJ,EAAoB;AACvB6N,MAAAA,WAAW,CAAC1yB,IAAZ,CAAiB,CAAC+T,cAAD,EAAiB,CAAjB,CAAjB,CAAA,CAAA;KADG,MAEA,IAAIiR,gBAAJ,EAAsB;AACzB0N,MAAAA,WAAW,CAAC1yB,IAAZ,CAAiB,CAAC,CAAD,EAAI8T,gBAAJ,CAAjB,CAAA,CAAA;AACH,KAAA;;IACD,IAAI4e,WAAW,CAACv2B,MAAhB,EAAwB;AACpBu2B,MAAAA,WAAW,CAACvZ,IAAZ,CAAiB,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;QAClB,OACIjI,WAAW,CAAClX,KAAK,CAAC,CAACX,KAAD,EAAQC,KAAR,CAAD,EAAiBmR,CAAjB,CAAN,CAAX,GACAyG,WAAW,CAAClX,KAAK,CAAC,CAACX,KAAD,EAAQC,KAAR,CAAD,EAAiB6f,CAAjB,CAAN,CAFf,CAAA;OADJ,CAAA,CAAA;AAMA,MAAA,IAAMuZ,SAAS,GAAGD,WAAW,CAAC,CAAD,CAA7B,CAAA;;AAEA,MAAA,IAAIC,SAAS,CAAC,CAAD,CAAT,IAAgBj/B,IAAI,CAACyc,GAAL,CAAS7W,KAAT,CAAkBlD,GAAAA,UAAtC,EAAgD;AAC5Co8B,QAAAA,OAAO,GAAG,CAACG,SAAS,CAAC,CAAD,CAApB,CAAA;AACAF,QAAAA,OAAO,GACFl5B,KAAK,GAAG7F,IAAI,CAACyc,GAAL,CAAS7W,KAAK,GAAGk5B,OAAjB,CAAT,GAAsC9+B,IAAI,CAACyc,GAAL,CAAS7W,KAAT,CAAtC,GACAC,KAFJ,CAAA;AAGH,OALD,MAKO,IAAIo5B,SAAS,CAAC,CAAD,CAAT,IAAgBj/B,IAAI,CAACyc,GAAL,CAAS5W,KAAT,CAAA,GAAkBnD,UAAtC,EAAgD;QACnD,IAAMw8B,SAAS,GAAGr5B,KAAlB,CAAA;AACAk5B,QAAAA,OAAO,GAAG,CAACE,SAAS,CAAC,CAAD,CAApB,CAAA;AACAH,QAAAA,OAAO,GACFl5B,KAAK,GAAG5F,IAAI,CAACyc,GAAL,CAAS5W,KAAK,GAAGk5B,OAAjB,CAAT,GAAsC/+B,IAAI,CAACyc,GAAL,CAASyiB,SAAT,CAAtC,GACAt5B,KAFJ,CAAA;AAGH,OAAA;;AACD,MAAA,IAAIi5B,kBAAkB,IAAI9J,iBAAtB,IAA2CD,eAA/C,EAAgE;QAC5D,IACI90B,IAAI,CAACyc,GAAL,CAASqiB,OAAT,CAAoBp8B,GAAAA,UAApB,IACA1C,IAAI,CAACyc,GAAL,CAASqiB,OAAT,IAAoB9+B,IAAI,CAACyc,GAAL,CAAS4D,cAAT,CAFxB,EAGE;AACE,UAAA,IAAM3gB,KAAK,GAAGM,IAAI,CAACyc,GAAL,CAAS4D,cAAT,CAAA,GAA2BrgB,IAAI,CAACyc,GAAL,CAASqiB,OAAT,CAAzC,CAAA;AAEAA,UAAAA,OAAO,IAAIp/B,KAAX,CAAA;AACAq/B,UAAAA,OAAO,IAAIr/B,KAAX,CAAA;SAPJ,MAQO,IACHM,IAAI,CAACyc,GAAL,CAASsiB,OAAT,CAAoBr8B,GAAAA,UAApB,IACA1C,IAAI,CAACyc,GAAL,CAASsiB,OAAT,CAAoB/+B,GAAAA,IAAI,CAACyc,GAAL,CAAS2D,gBAAT,CAFjB,EAGL;AACE,UAAA,IAAM1gB,KAAK,GACPM,IAAI,CAACyc,GAAL,CAAS2D,gBAAT,CAAA,GAA6BpgB,IAAI,CAACyc,GAAL,CAASsiB,OAAT,CADjC,CAAA;AAGAD,UAAAA,OAAO,IAAIp/B,KAAX,CAAA;AACAq/B,UAAAA,OAAO,IAAIr/B,KAAX,CAAA;AACH,SATM,MASA;AACHo/B,UAAAA,OAAO,GAAGvZ,SAAS,CAAC,CAAClF,cAAF,EAAkBye,OAAlB,CAAnB,CAAA;AACAC,UAAAA,OAAO,GAAGxZ,SAAS,CAAC,CAACnF,gBAAF,EAAoB2e,OAApB,CAAnB,CAAA;AACH,SAAA;AACJ,OAAA;AACJ,KAAA;AACJ,GA9DD,MA8DO;IACHD,OAAO,GAAGl5B,KAAK,IAAIkvB,eAAT,GAA2B,CAACzU,cAA5B,GAA6C,CAAvD,CAAA;IACA0e,OAAO,GAAGl5B,KAAK,IAAIkvB,iBAAT,GAA6B,CAAC3U,gBAA9B,GAAiD,CAA3D,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,CAAC0e,OAAD,EAAUC,OAAV,CAAP,CAAA;AACH,CAAA;AAEe,SAAAI,mBAAA,CACZj5B,QADY,EAEZN,KAFY,EAGZC,KAHY,EAIZg5B,kBAJY,EAKZzY,SALY,EAMZ7hB,KANY,EAMF;AAEV,EAAA,IAAI,CAAC2pB,aAAa,CAAChoB,QAAD,EAAW,WAAX,CAAlB,EAA2C;AACvC,IAAA,OAAO,CACH;AACI2qB,MAAAA,MAAM,EAAE,KADZ;AAEI+B,MAAAA,OAAO,EAAE,KAFb;AAGIpf,MAAAA,MAAM,EAAE,CAAA;AAHZ,KADG,EAMH;AACIqd,MAAAA,MAAM,EAAE,KADZ;AAEI+B,MAAAA,OAAO,EAAE,KAFb;AAGIpf,MAAAA,MAAM,EAAE,CAAA;AAHZ,KANG,CAAP,CAAA;AAYH,GAAA;;AACD,EAAA,IAAMhH,KAAK,GAAGsV,gBAAgB,CAACvd,KAAK,CAAC66B,aAAP,EAAsB,CAACx5B,KAAD,EAAQC,KAAR,CAAtB,CAA9B,CAAA;;AACM,EAAA,IAAA1B,KAA+ByW,OAAO,CAACpO,KAAD,CAAtC;AAAA,MAAEtK,IAAI,GAAAiC,EAAA,CAAAjC,IAAN;AAAA,MAAQ6Y,KAAK,WAAb;AAAA,MAAe9Y,GAAG,SAAlB;AAAA,MAAoB4K,MAAM,YAA1B,CAAA;;AACN,EAAA,IAAMwyB,UAAU,GAAG;AACfhQ,IAAAA,UAAU,EAAE7iB,KAAK,CAACzK,GAAN,CAAU,UAAC6J,GAAD,EAAS;MAAA,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,KAAzB,CADG;AAEf0jB,IAAAA,QAAQ,EAAE9iB,KAAK,CAACzK,GAAN,CAAU,UAAC6J,GAAD,EAAS;MAAA,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;KAAnB,CAAA;GAFd,CAAA;EAIA,IAAMijB,cAAc,GAAGD,iBAAiB,CAAC1oB,QAAQ,CAAC5G,KAAT,CAAeuvB,cAAhB,CAAxC,CAAA;AACA,EAAA,IAAME,SAAS,GAAGG,uBAAuB,CAACL,cAAD,EAAiB;AACtD3sB,IAAAA,IAAI,EAAAA,IADkD;AAEtD6Y,IAAAA,KAAK,EAAAA,KAFiD;AAGtD9Y,IAAAA,GAAG,EAAAA,GAHmD;AAItD4K,IAAAA,MAAM,EAAAA,MAJgD;AAKtDmhB,IAAAA,MAAM,EAAE,CAAC9rB,IAAI,GAAG6Y,KAAR,IAAiB,CAL6B;AAMtDukB,IAAAA,MAAM,EAAE,CAACr9B,GAAG,GAAG4K,MAAP,IAAiB,CAAA;AAN6B,GAAjB,CAAzC,CAAA;;EAQM,IAAA3I,KAGFq7B,uBAAuB,CAACr5B,QAAD,EAAWkgB,SAAX,EAAsB2I,SAAtB,EAAiCsQ,UAAjC,CAHrB;AAAA,MACQG,qBAAqB,cAD7B;AAAA,MAEUC,uBAAuB,gBAFjC,CAAA;;EAIA,IAAA94B,EAGF,GAAA8vB,qBAAqB,CAACvwB,QAAD,EAAWsG,KAAX,EAAkBjI,KAAlB,CAHnB;AAAA,MACQm7B,sBAAsB,GAAA/4B,EAAA,CAAA2oB,QAD9B;AAAA,MAEUqQ,wBAAwB,gBAFlC,CAAA;;AAKN,EAAA,IAAMxO,cAAc,GAAGqO,qBAAqB,CAAC3O,MAA7C,CAAA;AACA,EAAA,IAAMS,gBAAgB,GAAGmO,uBAAuB,CAAC5O,MAAjD,CAAA;EACA,IAAMiE,eAAe,GACjB0K,qBAAqB,CAAC5M,OAAtB,IAAiC8M,sBAAsB,CAAC9M,OAD5D,CAAA;EAEA,IAAMmC,iBAAiB,GACnB0K,uBAAuB,CAAC7M,OAAxB,IAAmC+M,wBAAwB,CAAC/M,OADhE,CAAA;EAEA,IAAMvS,cAAc,GAAGkF,SAAS,CAC5Bia,qBAAqB,CAAChsB,MADM,EAE5BksB,sBAAsB,CAAClsB,MAFK,CAAhC,CAAA;EAIA,IAAM4M,gBAAgB,GAAGmF,SAAS,CAC9Bka,uBAAuB,CAACjsB,MADM,EAE9BmsB,wBAAwB,CAACnsB,MAFK,CAAlC,CAAA;;AAKM,EAAA,IAAA4I,EAAqB,GAAAwiB,uBAAuB,CAC9CC,kBAD8C,EAE9C,CAACj5B,KAAD,EAAQC,KAAR,CAF8C,EAG9C,CAACivB,eAAD,EAAkBC,iBAAlB,CAH8C,EAI9C,CAAC5D,cAAD,EAAiBG,gBAAjB,CAJ8C,EAK9C,CAACjR,cAAD,EAAiBD,gBAAjB,CAL8C,CAA5C;AAAA,MAAC0e,OAAO,GAAA1iB,EAAA,CAAA,CAAA,CAAR;AAAA,MAAU2iB,OAAO,QAAjB,CAAA;;AAQN,EAAA,OAAO,CACH;AACInM,IAAAA,OAAO,EAAEkC,eADb;AAEIjE,IAAAA,MAAM,EAAEM,cAFZ;AAGI3d,IAAAA,MAAM,EAAEsrB,OAAAA;AAHZ,GADG,EAMH;AACIlM,IAAAA,OAAO,EAAEmC,iBADb;AAEIlE,IAAAA,MAAM,EAAES,gBAFZ;AAGI9d,IAAAA,MAAM,EAAEurB,OAAAA;AAHZ,GANG,CAAP,CAAA;AAYH,CAAA;AAEK,SAAUQ,uBAAV,CACFr5B,QADE,EAEFkgB,SAFE,EAGF5Z,KAHE,EAIF6yB,UAJE,EAI+D;AAAjE,EAAA,IAAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,UAAiE,GAAA7yB,KAAjE,CAAA;AAAiE,GAAA;;AAE3D,EAAA,IAAArI,EAAA,GAGF60B,eAAe,CACfI,SAAS,CAAClzB,QAAD,CADM,EAEfm5B,UAAU,CAAC/P,QAFI,EAGf+P,UAAU,CAAChQ,UAHI,CAHb;AAAA,MACUuQ,oBAAoB,GAAAz7B,EAAA,CAAAkrB,UAD9B;AAAA,MAEQwQ,kBAAkB,GAAA17B,EAAA,CAAAmrB,QAF1B,CAAA;;EAQA,IAAAprB,EAGF,GAAAkiB,SAAS,GAAG;AACZiJ,IAAAA,UAAU,EAAE;AAAEwB,MAAAA,MAAM,EAAE,KAAV;AAAiBvoB,MAAAA,KAAK,EAAE,CAAC,CAAA;KADzB;AAEZgnB,IAAAA,QAAQ,EAAE;AAAEuB,MAAAA,MAAM,EAAE,KAAV;AAAiBvoB,MAAAA,KAAK,EAAE,CAAC,CAAA;AAAzB,KAAA;AAFE,GAAH,GAGT2nB,sBAAsB,CACtB/pB,QADsB,EAEtBsG,KAAK,CAAC8iB,QAFgB,EAGtB9iB,KAAK,CAAC6iB,UAHgB,CANpB;AAAA,MACU2B,kBAAkB,gBAD5B;AAAA,MAEQD,gBAAgB,cAFxB,CAAA;;EAWN,IAAM3Q,gBAAgB,GAAGse,YAAY,CACjCkB,oBAAoB,CAAC,CAAD,CADa,EAEjC5O,kBAFiC,CAArC,CAAA;EAIA,IAAM3Q,cAAc,GAAGqe,YAAY,CAC/BmB,kBAAkB,CAAC,CAAD,CADa,EAE/B9O,gBAF+B,CAAnC,CAAA;AAKA,EAAA,IAAM+O,cAAc,GAAG9/B,IAAI,CAACyc,GAAL,CAAS2D,gBAAT,CAAvB,CAAA;AACA,EAAA,IAAM2f,YAAY,GAAG//B,IAAI,CAACyc,GAAL,CAAS4D,cAAT,CAArB,CAAA;EAEA,OAAO;AACHgP,IAAAA,UAAU,EAAE;AACRuD,MAAAA,OAAO,EAAEgN,oBAAoB,CAAC,CAAD,CAApB,CAAwBhN,OADzB;MAER/B,MAAM,EAAEG,kBAAkB,CAACH,MAFnB;MAGRmP,SAAS,EAAEhP,kBAAkB,CAAC1oB,KAHtB;AAIRkL,MAAAA,MAAM,EAAE4M,gBAJA;AAKR5V,MAAAA,IAAI,EAAEs1B,cALE;AAMR1R,MAAAA,MAAM,EAAEwR,oBANA;AAORK,MAAAA,IAAI,EAAEjP,kBAAAA;KARP;AAUH1B,IAAAA,QAAQ,EAAE;AACNsD,MAAAA,OAAO,EAAEiN,kBAAkB,CAAC,CAAD,CAAlB,CAAsBjN,OADzB;MAEN/B,MAAM,EAAEE,gBAAgB,CAACF,MAFnB;MAGNmP,SAAS,EAAEjP,gBAAgB,CAACzoB,KAHtB;AAINkL,MAAAA,MAAM,EAAE6M,cAJF;AAKN7V,MAAAA,IAAI,EAAEu1B,YALA;AAMN3R,MAAAA,MAAM,EAAEyR,kBANF;AAONI,MAAAA,IAAI,EAAElP,gBAAAA;AAPA,KAAA;GAVd,CAAA;AAoBH,CAAA;AACK,SAAUmP,eAAV,CACFC,SADE,EAEF/R,MAFE,EAGFvT,MAHE,EAIFC,MAJE,EAKFqV,aALE,EAKmB;EAEf,IAAAhsB,EAGF,GAAA60B,eAAe,CAAC5K,MAAD,EAASvT,MAAT,EAAiBC,MAAjB,CAHb;AAAA,MACU8kB,oBAAoB,GAAAz7B,EAAA,CAAAkrB,UAD9B;AAAA,MAEQwQ,kBAAkB,cAF1B,CAFe;AAQrB;AACA;AACA;;;EACM,IAAA37B,KAGFksB,cAAc,CAAC+P,SAAD,EAAYtlB,MAAZ,EAAoBC,MAApB,EAA4BqV,aAA5B,CAHZ;AAAA,MACUa,kBAAkB,gBAD5B;AAAA,MAEQD,gBAAgB,cAFxB,CAAA;;EAKN,IAAM3Q,gBAAgB,GAAGse,YAAY,CACjCkB,oBAAoB,CAAC,CAAD,CADa,EAEjC5O,kBAFiC,CAArC,CAAA;EAIA,IAAM3Q,cAAc,GAAGqe,YAAY,CAC/BmB,kBAAkB,CAAC,CAAD,CADa,EAE/B9O,gBAF+B,CAAnC,CAAA;AAKA,EAAA,IAAM+O,cAAc,GAAG9/B,IAAI,CAACyc,GAAL,CAAS2D,gBAAT,CAAvB,CAAA;AACA,EAAA,IAAM2f,YAAY,GAAG//B,IAAI,CAACyc,GAAL,CAAS4D,cAAT,CAArB,CAAA;EAEA,OAAO;AACHgP,IAAAA,UAAU,EAAE;AACRuD,MAAAA,OAAO,EAAEgN,oBAAoB,CAAC,CAAD,CAApB,CAAwBhN,OADzB;MAER/B,MAAM,EAAEG,kBAAkB,CAACH,MAFnB;MAGRmP,SAAS,EAAEhP,kBAAkB,CAAC1oB,KAHtB;AAIRkL,MAAAA,MAAM,EAAE4M,gBAJA;AAKR5V,MAAAA,IAAI,EAAEs1B,cALE;AAMR1R,MAAAA,MAAM,EAAEwR,oBANA;AAORK,MAAAA,IAAI,EAAEjP,kBAAAA;KARP;AAUH1B,IAAAA,QAAQ,EAAE;AACNsD,MAAAA,OAAO,EAAEiN,kBAAkB,CAAC,CAAD,CAAlB,CAAsBjN,OADzB;MAEN/B,MAAM,EAAEE,gBAAgB,CAACF,MAFnB;MAGNmP,SAAS,EAAEjP,gBAAgB,CAACzoB,KAHtB;AAINkL,MAAAA,MAAM,EAAE6M,cAJF;AAKN7V,MAAAA,IAAI,EAAEu1B,YALA;AAMN3R,MAAAA,MAAM,EAAEyR,kBANF;AAONI,MAAAA,IAAI,EAAElP,gBAAAA;AAPA,KAAA;GAVd,CAAA;AAoBH,CAAA;;AAGD,SAASqP,kBAAT,CACIrzB,QADJ,EAEIwjB,MAFJ,EAGI8P,aAHJ,EAIIhY,SAJJ,EAIsB;AAElB,EAAA,IAAMvK,GAAG,GAAIC,MAAM,CAAChR,QAAD,EAAWwjB,MAAX,CAAN,GAA2BvwB,IAAI,CAAC+nB,EAAjC,GAAuC,GAAnD,CAAA;AAEI,EAAA,IAAA5jB,EAAA,GAUAk8B,aAAa,CAAA/Q,QAVb;AAAA,MACawF,eAAe,aAD5B;AAAA,MAEY3D,cAAc,GAAAhtB,EAAA,CAAA0sB,MAF1B;AAAA,MAGUkP,YAAY,GAAA57B,EAAA,CAAAqG,IAHtB;AAAA,MAKAtG,EAKA,GAAAm8B,aAAa,CADZhR,UATD;AAAA,MAMa0F,iBAAiB,GAAA7wB,EAAA,CAAA0uB,OAN9B;AAAA,MAOYtB,gBAAgB,GAAAptB,EAAA,CAAA2sB,MAP5B;AAAA,MAQUiP,cAAc,GAAA57B,EAAA,CAAAsG,IARxB,CAAA;AAYJ,EAAA,IAAM81B,MAAM,GAAGxiB,GAAG,GAAG,GAArB,CAAA;EACA,IAAMyiB,gBAAgB,GAAGD,MAAM,GAAG,CAAT,IAAcA,MAAM,GAAG,GAAhD,CAAA;EACA,IAAME,cAAc,GAAGF,MAAM,GAAG,EAAT,IAAeA,MAAM,GAAG,EAA/C,CAAA;;EAEA,IAAIR,cAAc,GAAGC,YAArB,EAAmC;AAC/B,IAAA,IACIjL,eAAe,IACd3D,cAAc,IACX,CAACqP,cADJ,KAEI,CAACnY,SAAD,IAAc,CAACkY,gBAFnB,CAFL,EAKE;AACE,MAAA,OAAO,UAAP,CAAA;AACH,KAAA;AACJ,GAAA;;AACD,EAAA,IACIxL,iBAAiB,IAChBzD,gBAAgB,IACb,CAACiP,gBADJ,KAEI,CAAClY,SAAD,IAAc,CAACmY,cAFnB,CAFL,EAKE;AACE,IAAA,OAAO,YAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,EAAP,CAAA;AACH,CAAA;;AAGe,SAAAC,gBAAA,CACZv6B,QADY,EAEZsG,KAFY,EAGZ6mB,UAHY,EAIZhL,SAJY,EAKZjC,SALY,EAMZ7hB,KANY,EAMF;AAEV,EAAA,OAAO8uB,UAAU,CAACtxB,GAAX,CAAe,UAACoC,EAAD,EAA+B;QAA7Bu8B,cAAc,GAAAv8B,EAAA,CAAA,CAAA;QAAEw8B,YAAY,GAAAx8B,EAAA,CAAA,CAAA;AAChD,IAAA,IAAMy8B,aAAa,GAAGn0B,iBAAiB,CAACD,KAAD,EAAQk0B,cAAR,CAAvC,CAAA;AACA,IAAA,IAAMG,WAAW,GAAGp0B,iBAAiB,CAACD,KAAD,EAAQm0B,YAAR,CAArC,CAAA;IACA,IAAMN,aAAa,GAAGhY,SAAS,GACzByY,wBAAwB,CACtB56B,QADsB,EAEtB06B,aAFsB,EAGtBC,WAHsB,EAItBza,SAJsB,CADC,GAOzBmZ,uBAAuB,CAACr5B,QAAD,EAAWkgB,SAAX,EAAsB;AAC3CkJ,MAAAA,QAAQ,EAAE,CAACuR,WAAW,CAAC,CAAD,CAAZ,CADiC;AAE3CxR,MAAAA,UAAU,EAAE,CAACwR,WAAW,CAAC,CAAD,CAAZ,CAAA;AAF+B,KAAtB,CAP7B,CAAA;AAaI,IAAA,IAAA38B,EAAA,GAYAm8B,aAAa,CAPZhR,UALD;;IAEY0R,qBAAqB,GAAA78B,EAAA,CAAAsP,MAFjC;AAAA,QAGawtB,sBAAsB,GAAA98B,EAAA,CAAA0uB,OAHnC;AAAA,QAIYqO,qBAAqB,GAAA/8B,EAAA,CAAA2sB,MAJjC;AAAA,QAMAlqB,EAMA,GAAA05B,aAAa,CADZ/Q,QAXD;;IAQY4R,mBAAmB,YAR/B;AAAA,QASaC,oBAAoB,aATjC;AAAA,QAUYC,mBAAmB,YAV/B,CAAA;AAcJ,IAAA,IAAM7K,QAAQ,GAAGhwB,KAAK,CAACo6B,YAAD,EAAeD,cAAf,CAAtB,CAAA;;AAEA,IAAA,IAAI,CAACQ,mBAAD,IAAwB,CAACH,qBAA7B,EAAoD;MAChD,OAAO;QACHnO,OAAO,EAAEuO,oBAAoB,IAAIH,sBAD9B;QAEHnQ,MAAM,EAAEuQ,mBAAmB,IAAIH,qBAF5B;AAGHjO,QAAAA,IAAI,EAAEuD,QAHH;AAIH/iB,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;OAJZ,CAAA;AAMH,KAAA;;IACD,IAAM6tB,QAAQ,GAAGjB,kBAAkB,CAC/BQ,aAD+B,EAE/BC,WAF+B,EAG/BR,aAH+B,EAI/BhY,SAJ+B,CAAnC,CAAA;;IAOA,IAAI,CAACgZ,QAAL,EAAe;MACX,OAAO;AACHrO,QAAAA,IAAI,EAAEuD,QADH;AAEH3D,QAAAA,OAAO,EAAE,KAFN;AAGH/B,QAAAA,MAAM,EAAE,KAHL;AAIHrd,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;OAJZ,CAAA;AAMH,KAAA;;AAED,IAAA,IAAMye,UAAU,GAAGoP,QAAQ,KAAK,UAAhC,CAAA;AACA,IAAA,IAAI7K,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAA;;IAEA,IACI,CAACnO,SAAD,IACGroB,IAAI,CAACyc,GAAL,CAASkkB,YAAY,CAAC,CAAD,CAArB,CAA8B,KAAA,CADjC,IAEG3gC,IAAI,CAACyc,GAAL,CAASkkB,YAAY,CAAC,CAAD,CAArB,MAA8B,CAFjC,IAGGD,cAAc,CAAC,CAAD,CAAd,KAAsBC,YAAY,CAAC,CAAD,CAHrC,IAIGD,cAAc,CAAC,CAAD,CAAd,KAAsBC,YAAY,CAAC,CAAD,CALzC,EAME;MACEnK,UAAU,GAAG5vB,WAAW,CAAC;AACrBrC,QAAAA,KAAK,EAAAA,KADgB;QAErBqB,KAAK,EAAE,CAACs7B,mBAFa;AAGrBr7B,QAAAA,KAAK,EAAE,CAACk7B,qBAAAA;AAHa,OAAD,CAAxB,CAAA;AAKH,KAZD,MAYO;MACHvK,UAAU,GAAG4H,eAAe,CACxBwC,aADwB,EAExBC,WAFwB,EAGxB,EAAE5O,UAAU,GAAGiP,mBAAH,GAAyBH,qBAArC,CAHwB,EAIxB9O,UAJwB,EAKxB1tB,KALwB,CAAf,CAMXiP,MANF,CAAA;AAOH,KAAA;;IACDgjB,UAAU,GAAGA,UAAU,CAACz0B,GAAX,CAAe,UAACkK,IAAD,EAAOJ,CAAP;AAAa,MAAA,OAAAI,IAAI,IAAIsqB,QAAQ,CAAC1qB,CAAD,CAAR,GAAc,CAAI0qB,GAAAA,QAAQ,CAAC1qB,CAAD,CAA1B,GAAgC,CAApC,CAAJ,CAAA;AAA0C,KAAtE,CAAb,CAAA;IAGA,OAAO;AACHmnB,MAAAA,IAAI,EAAEuD,QADH;AAEH3D,MAAAA,OAAO,EAAEX,UAAU,GAAGkP,oBAAH,GAA0BH,sBAF1C;AAGHnQ,MAAAA,MAAM,EAAEoB,UAAU,GAAGmP,mBAAH,GAAyBH,qBAHxC;AAIHztB,MAAAA,MAAM,EAAEgjB,UAAAA;KAJZ,CAAA;AAMH,GAzFM,CAAP,CAAA;AA0FH,CAAA;;AAGD,SAAS8K,kBAAT,CAA4B3C,SAA5B,EAAkDhN,QAAlD,EAA0E;EACtE,IAAIgN,SAAS,CAAC/L,OAAd,EAAuB;IACnB,OAAO+L,SAAS,CAACnrB,MAAjB,CAAA;AACH,GAFD,MAEO,IAAIme,QAAQ,CAACd,MAAb,EAAqB;IACxB,OAAOc,QAAQ,CAACne,MAAhB,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,CAAP,CAAA;AACH,CAAA;;AAEK,SAAUstB,wBAAV,CACF56B,QADE,EAEF6G,QAFE,EAGFwjB,MAHE,EAIFnK,SAJE,EAIgB;EAEZ,IAAAjiB,EAGF,GAAA01B,mBAAmB,CAAC3zB,QAAD,EAAW6G,QAAX,EAAqBwjB,MAArB,CAHjB;AAAA,MACUgR,mBAAmB,GAAAp9B,EAAA,CAAAkrB,UAD7B;AAAA,MAEQmS,iBAAiB,cAFzB,CAAA;;EAIA,IAAAt9B,EAGF,GAAAkiB,SAAS,GAAI;AACbiJ,IAAAA,UAAU,EAAE;AAAEwB,MAAAA,MAAM,EAAE,KAAA;KADT;AAEbvB,IAAAA,QAAQ,EAAE;AAAEuB,MAAAA,MAAM,EAAE,KAAA;AAAV,KAAA;GAFD,GAGDP,kBAAkB,CAACpqB,QAAD,EAAW6G,QAAX,EAAqBwjB,MAArB,CANxB;AAAA,MACUS,kBAAkB,GAAA9sB,EAAA,CAAAmrB,UAD5B;AAAA,MAEQ0B,gBAAgB,cAFxB,CAAA;;AAQN,EAAA,IAAM3Q,gBAAgB,GAAGkhB,kBAAkB,CACvCC,mBADuC,EAEvCvQ,kBAFuC,CAA3C,CAAA;AAIA,EAAA,IAAM3Q,cAAc,GAAGihB,kBAAkB,CACrCE,iBADqC,EAErCzQ,gBAFqC,CAAzC,CAAA;AAKA,EAAA,IAAM+O,cAAc,GAAG9/B,IAAI,CAACyc,GAAL,CAAS2D,gBAAT,CAAvB,CAAA;AACA,EAAA,IAAM2f,YAAY,GAAG//B,IAAI,CAACyc,GAAL,CAAS4D,cAAT,CAArB,CAAA;EAEA,OAAO;AACHgP,IAAAA,UAAU,EAAE;MACRuD,OAAO,EAAE2O,mBAAmB,CAAC3O,OADrB;MAER/B,MAAM,EAAEG,kBAAkB,CAACH,MAFnB;AAGRrd,MAAAA,MAAM,EAAE4M,gBAHA;AAIR5V,MAAAA,IAAI,EAAEs1B,cAAAA;KALP;AAOHxQ,IAAAA,QAAQ,EAAE;MACNsD,OAAO,EAAE4O,iBAAiB,CAAC5O,OADrB;MAEN/B,MAAM,EAAEE,gBAAgB,CAACF,MAFnB;AAGNrd,MAAAA,MAAM,EAAE6M,cAHF;AAIN7V,MAAAA,IAAI,EAAEu1B,YAAAA;AAJA,KAAA;GAPd,CAAA;AAcH,CAAA;AAEK,SAAU0B,cAAV,CACFv7B,QADE,EAEFsG,KAFE,EAGFvE,SAHE,EAIFkH,aAJE,EAKF5K,KALE,EAKQ;AAEV,EAAA,IAAMyI,cAAc,GAAG,CAAC,CAAC/E,SAAS,CAAC,CAAD,CAAX,EAAgB,CAACA,SAAS,CAAC,CAAD,CAA1B,CAAvB,CAAA;AACM,EAAA,IAAA9D,EAAA,GAAoB+B,QAAQ,CAACtC,KAA7B;AAAA,MAAE2H,KAAK,GAAApH,EAAA,CAAAoH,KAAP;AAAA,MAASC,MAAM,GAAArH,EAAA,CAAAqH,MAAf,CAAA;AACN,EAAA,IAAM4iB,MAAM,GAAGloB,QAAQ,CAAC5G,KAAT,CAAe8uB,MAA9B,CAAA;EACA,IAAItP,QAAQ,GAAGC,QAAf,CAAA;EACA,IAAIC,SAAS,GAAGD,QAAhB,CAAA;;AAEA,EAAA,IAAIqP,MAAJ,EAAY;AACR,IAAA,IAAMiF,UAAU,GAAG,CACf,CAACprB,SAAS,CAAC,CAAD,CAAV,EAAe,CAACA,SAAS,CAAC,CAAD,CAAzB,CADe,EAEf,CAAC,CAACA,SAAS,CAAC,CAAD,CAAX,EAAgBA,SAAS,CAAC,CAAD,CAAzB,CAFe,CAAnB,CAAA;AAKI,IAAA,IAAA/D,KAIAkqB,MAAM,CAAAlsB,IAJN;QAAAw/B,MAAI,mBAAG,CAAC3iB,WAAQ7a,EAAhB;AAAA,QACAyC,KAGAynB,MAAM,CAAAnsB,GAJN;QACA0/B,KAAG,mBAAG,CAAC5iB,WAAQpY,EADf;AAAA,QAEAyV,KAEAgS,MAAM,CAAArT,KAJN;QAEA6mB,OAAK,mBAAG7iB,WAAQ3C,EAFhB;AAAA,QAGAiB,EAAA,GACA+Q,MAAM,CADWvhB,MAHjB;QAGAg1B,QAAM,GAAGxkB,EAAA,KAAA,KAAA,CAAA,GAAA0B,QAAA,KAHT,CAAA;AAMJsU,IAAAA,UAAU,CAACha,OAAX,CAAmB,UAACyoB,cAAD,EAAe;MAC9B,IAAMC,eAAe,GAAGD,cAAc,CAAC,CAAD,CAAd,KAAsB90B,cAAc,CAAC,CAAD,CAA5D,CAAA;MACA,IAAMg1B,iBAAiB,GAAGF,cAAc,CAAC,CAAD,CAAd,KAAsB90B,cAAc,CAAC,CAAD,CAA9D,CAAA;AACA,MAAA,IAAMi1B,QAAQ,GAAGx1B,iBAAiB,CAACD,KAAD,EAAQs1B,cAAR,CAAlC,CAAA;AACA,MAAA,IAAMngB,GAAG,GAAI5D,MAAM,CAAC5O,aAAD,EAAgB8yB,QAAhB,CAAN,GAAkC,GAAnC,GAA0CjiC,IAAI,CAAC+nB,EAA3D,CAAA;;AAEA,MAAA,IAAIia,iBAAJ,EAAuB;AACnB,QAAA,IAAME,YAAY,GAAGD,QAAQ,CAAClpB,KAAT,EAArB,CAAA;;AAEA,QAAA,IAAI/Y,IAAI,CAACyc,GAAL,CAASkF,GAAG,GAAG,GAAf,CAAsB,GAAA,CAAtB,IAA2B3hB,IAAI,CAACyc,GAAL,CAASkF,GAAG,GAAG,GAAf,CAAA,GAAsB,CAArD,EAAwD;AACpDugB,UAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB/yB,aAAa,CAAC,CAAD,CAA/B,CAAA;AACH,SAAA;;AACK,QAAA,IAAAhL,EAAA,GAGFi6B,eAAe,CACfjvB,aADe,EAEf+yB,YAFe,EAGf,CAAC/yB,aAAa,CAAC,CAAD,CAAb,GAAmB8yB,QAAQ,CAAC,CAAD,CAA3B,GAAiCJ,QAAjC,GAA0CF,KAA3C,IACAM,QAAQ,CAAC,CAAD,CAJO,EAKf,KALe,EAMf19B,KANe,CAHb;AAAA,YACFL,EAAA,GAAAC,EAAA,CAAAqP,MADE;AAAA,YACSirB,YAAY,GAAAv6B,EAAA,CAAA,CAAA,CADrB;AAAA,YAESi+B,eAAe,eAFxB,CAAA;;AAWN,QAAA,IAAI,CAACj2B,KAAK,CAACuyB,YAAD,CAAV,EAA0B;AACtBzf,UAAAA,SAAS,GAAGxT,MAAM,GAAG,CAAC22B,eAAe,GAAG,CAAH,GAAO,CAAC,CAAxB,IAA6BniC,IAAI,CAACyc,GAAL,CAASgiB,YAAT,CAAlD,CAAA;AACH,SAAA;AACJ,OAAA;;AACD,MAAA,IAAIsD,eAAJ,EAAqB;AACjB,QAAA,IAAMG,YAAY,GAAGD,QAAQ,CAAClpB,KAAT,EAArB,CAAA;;AAEA,QAAA,IAAI/Y,IAAI,CAACyc,GAAL,CAASkF,GAAG,GAAG,EAAf,CAAqB,GAAA,CAArB,IAA0B3hB,IAAI,CAACyc,GAAL,CAASkF,GAAG,GAAG,GAAf,CAAA,GAAsB,CAApD,EAAuD;AACnDugB,UAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB/yB,aAAa,CAAC,CAAD,CAA/B,CAAA;AACH,SAAA;;AACK,QAAA,IAAAxI,KAGFy3B,eAAe,CACfjvB,aADe,EAEf+yB,YAFe,EAGf,CAAC/yB,aAAa,CAAC,CAAD,CAAb,GAAmB8yB,QAAQ,CAAC,CAAD,CAA3B,GAAiCL,OAAjC,GAAyCF,MAA1C,IAAkDO,QAAQ,CAAC,CAAD,CAH3C,EAIf,IAJe,EAKf19B,KALe,CAHb;AAAA,YACOi6B,WAAW,eADlB;AAAA,YAES4D,cAAc,eAFvB,CAAA;;AAUN,QAAA,IAAI,CAACl2B,KAAK,CAACsyB,WAAD,CAAV,EAAyB;AACrB1f,UAAAA,QAAQ,GAAGvT,KAAK,GAAG,CAAC62B,cAAc,GAAG,CAAH,GAAO,CAAC,CAAvB,IAA4BpiC,IAAI,CAACyc,GAAL,CAAS+hB,WAAT,CAA/C,CAAA;AACH,SAAA;AACJ,OAAA;KA9CL,CAAA,CAAA;AAgDH,GAAA;;EACD,OAAO;AACH1f,IAAAA,QAAQ,EAAAA,QADL;AAEHE,IAAAA,SAAS,EAAAA,SAAAA;GAFb,CAAA;AAIH;;AC1oBK,SAAUqjB,kBAAV,CACFn8B,QADE,EACgE;AAElE,EAAA,IAAMtC,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,EAAA,IAAA4X,mBAAmB,GAEnB5X,KAAK,CAAA4X,mBAFL;AAAA,MACA7J,QAAQ,GACR/N,KAAK,CAAA+N,QAFL,CAAA;AAIA,EAAA,IAAAuP,QAAQ,GAOR1F,mBAAmB,CAAA0F,QAPnB;AAAA,MACcX,eAAe,GAM7B/E,mBAAmB,CAAAsF,YAPnB;AAAA,MAEaR,cAAc,GAK3B9E,mBAAmB,CAAAqF,WAPnB;AAAA,MAGcyhB,qBAAqB,GAInC9mB,mBAAmB,CAAA/B,YAPnB;AAAA,MAIa8oB,oBAAoB,GAGjC/mB,mBAAmB,YAPnB;AAAA,MAKAnH,UAAU,GAEVmH,mBAAmB,WAPnB;AAAA,MAMAlH,SAAS,GACTkH,mBAAmB,UAPnB,CAAA;AAQE,EAAA,IAAArX,EAAA,GAQF+B,QAAQ,CAAC5G,KARP;AAAA,MACF4E,EAAc,GAAAC,EAAA,CAAAq+B,OADZ;MACFA,OAAO,GAAGt+B,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,KADR;AAAA,MAEFoqB,kBAAkB,wBAFhB;AAAA,MAGFC,oBAAoB,0BAHlB;AAAA,MAIF5nB,EAAA,GAAAxC,EAAA,CAAAgsB,aAJE;MAIFA,aAAa,GAAAxpB,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EAJf;AAAA,MAKFyV,qBALE;MAKFoS,aAAa,mBAAG,IAACpS,EALf;AAAA,MAMFiB,EAAkB,GAAAlZ,EAAA,CAAAsqB,cANhB;MAMFA,cAAc,GAAGpR,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,KANf;AAAA,MAOF4b,EAAA,GAAA90B,EAAA,CAAAs+B,+BAPE;MAOFA,+BAA+B,GAAAxJ,EAAA,KAAA,KAAA,CAAA,GAAGla,QAAH,GAAWka,EAPxC,CAAA;;EASA,IAAAW,EAAA,GAA+Bhf,OAAO,CAACxK,uBAAuB,CAAClK,QAAQ,CAACtC,KAAV,CAAxB,CAAtC;AAAA,MAAE3B,GAAG,GAAA23B,EAAA,CAAA33B,GAAL;AAAA,MAAOC,IAAI,GAAA03B,EAAA,CAAA13B,IAAX;AAAA,MAAa2K,MAAM,GAAA+sB,EAAA,CAAA/sB,MAAnB;AAAA,MAAqBkO,KAAK,GAAA6e,EAAA,CAAA7e,KAA1B,CAAA;;AACN,EAAA,IAAMwgB,UAAU,GAAG;AAAEt5B,IAAAA,GAAG,KAAL;AAAOC,IAAAA,IAAI,EAAAA,IAAX;AAAa2K,IAAAA,MAAM,EAAAA,MAAnB;AAAqBkO,IAAAA,KAAK,EAAAA,KAA1B;AAA4BiT,IAAAA,MAAM,EAAE,CAAC9rB,IAAI,GAAG6Y,KAAR,IAAiB,CAArD;AAAwDukB,IAAAA,MAAM,EAAE,CAACr9B,GAAG,GAAG4K,MAAP,IAAiB,CAAA;GAApG,CAAA;AACA,EAAA,IAAM61B,iBAAiB,GAAGC,oBAAoB,CAACz8B,QAAD,CAA9C,CAAA;;EACA,IAAI08B,eAAe,GAAAx4B,aAAA,CAAA,EAAA,EAAwBs4B,iBAAxB,EAAyC,IAAzC,CAAnB,CAAA;;AAEA,EAAA,IAAIF,OAAJ,EAAa;AACTI,IAAAA,eAAe,CAACt2B,IAAhB,CAAAqK,KAAA,CAAAisB,eAAA,EAAwBC,gBAAgB,CACpC38B,QADoC,EAC1Bq1B,UAD0B,EACdpL,aADc,CAAxC,CAAA,CAAA;AAGH,GAAA;;AACDyS,EAAAA,eAAe,CAACt2B,IAAhB,CAAAqK,KAAA,CAAAisB,eAAA,EAAwBE,iBAAiB,CACrCtU,aADqC,EAErCC,cAFqC,EAGrCvN,QAAQ,GAAGZ,cAAH,GAAqBiiB,oBAHQ,EAIrCrhB,QAAQ,GAAGX,eAAH,GAAsB+hB,qBAJO,EAKrCjuB,UALqC,EAMrCC,SANqC,CAAzC,CAAA,CAAA;;EAQA,IAAMglB,UAAU,GACTl6B,QAAA,CAAA,EAAA,EAACwE,KAAK,CAAC01B,UAAN,IAAoB;AACpBp3B,IAAAA,IAAI,EAAE,CADc;AAEpBD,IAAAA,GAAG,EAAE,CAFe;AAGpB4K,IAAAA,MAAM,EAAE,CAHY;AAIpBkO,IAAAA,KAAK,EAAE,CAAA;AAJa,GAArB,CADP,CAAA;;AAUA,EAAA,IAAIpJ,QAAJ,EAAc;AACF,IAAA,IAAA+vB,MAAI,GAAUlmB,mBAAmB,CAAAtZ,IAAjC;AAAA,QAAMy/B,KAAG,GAAKnmB,mBAAmB,CAAAvZ,GAAjC,CAAA;IAERq3B,UAAU,CAACp3B,IAAX,IAAmBw/B,MAAnB,CAAA;IACApI,UAAU,CAACr3B,GAAX,IAAkB0/B,KAAlB,CAAA;IACArI,UAAU,CAACve,KAAX,IAAoB2mB,MAApB,CAAA;IACApI,UAAU,CAACzsB,MAAX,IAAqB80B,KAArB,CAAA;AACH,GAAA;;AAEDiB,EAAAA,eAAe,CAACt2B,IAAhB,CAAoBqK,KAApB,CAAAisB,eAAA,EAAwBG,oBAAoB,CACxCxU,oBAAoB,IAAI,KADgB,EAExCD,kBAAkB,IAAI,KAFkB,EAGxCpN,QAAQ,GAAGZ,cAAH,GAAqBiiB,oBAHW,EAIxCrhB,QAAQ,GAAGX,eAAH,GAAsB+hB,qBAJU,EAKxCjuB,UALwC,EAMxCC,SANwC,EAOxCglB,UAPwC,CAA5C,CAAA,CAAA;AAUAsJ,EAAAA,eAAe,GAAGA,eAAe,CAAC35B,MAAhB,CAAuB,UAAC9E,EAAD,EAA+B;AAA5B,IAAA,IAAA2R,OAAO,aAAP;AAAA,QAAS+lB,WAAW,GAAA13B,EAAA,CAAA03B,WAApB;AAAA,QAAsBv2B,IAAI,GAAAnB,EAAA,CAAAmB,IAA1B,CAAA;;AACxC,IAAA,IAAI,CAACwQ,OAAD,IAAY,CAAC+lB,WAAjB,EAA8B;AAC1B,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMngB,IAAI,GAAGmgB,WAAW,CAACngB,IAAzB,CAAA;IAEA,OAAOsnB,iBAAiB,CAACzH,UAAD,EAAa7f,IAAb,EAAmBpW,IAAnB,EAAyBm9B,+BAAzB,CAAxB,CAAA;AACH,GAPiB,CAAlB,CAAA;AASA,EAAA,OAAOG,eAAP,CAAA;AACH,CAAA;SAEeC,iBACZ38B,UACAq1B,YACApL,eAAqB;AAEf,EAAA,IAAAhsB,KAGF+B,QAAQ,CAAC5G,KAHP;AAAA,MACF4E,EAAA,GAAAC,EAAA,CAAAs+B,+BADE;MACFA,+BAA+B,GAAAv+B,EAAA,KAAA,KAAA,CAAA,GAAG6a,QAAH,GAAW7a,EADxC;AAAA,MAEFyC,EAAoC,GAAAxC,EAAA,CAAA8+B,yBAFlC;MAEFA,yBAAyB,GAAGt8B,EAAA,KAAA,KAAA,CAAA,GAAAoY,QAAA,KAF1B,CAAA;AAIN,EAAA,IAAMmkB,YAAY,GAAGh9B,QAAQ,CAACtC,KAAT,CAAes/B,YAApC,CAAA;EACA,IAAMC,aAAa,GAAoB,EAAvC,CAAA;EACA,CACI,CAAC,UAAD,EAAatV,kBAAb,EAAiCI,oBAAjC,CADJ,EAEI,CAAC,YAAD,EAAeA,oBAAf,EAAqCJ,kBAArC,CAFJ,CAAA,CAGExU,OAHF,CAGU,UAAClV,EAAD,EAA6B;AAA3B,IAAA,IAAAmB,IAAI,QAAJ;AAAA,QAAMm2B,SAAS,GAAAt3B,EAAA,CAAA,CAAA,CAAf;AAAA,QAAiBi5B,SAAS,GAAAj5B,EAAA,CAAA,CAAA,CAA1B,CAAA;AACR,IAAA,IAAMu3B,WAAW,GAAGH,UAAU,CAACE,SAAS,CAAC3N,KAAX,CAA9B,CAAA;AACA,IAAA,IAAM6N,SAAS,GAAGJ,UAAU,CAACE,SAAS,CAAC1N,GAAX,CAA5B,CAAA;AACA,IAAA,IAAMqV,YAAY,GAAG7H,UAAU,CAACE,SAAS,CAACzN,MAAX,CAA/B,CAAA;AACA,IAAA,IAAMqV,YAAY,GAAG9H,UAAU,CAAC6B,SAAS,CAACtP,KAAX,CAA/B,CAAA;IACA,IAAMwV,UAAU,GAAG/H,UAAU,CAAC6B,SAAS,CAACrP,GAAX,CAA7B,CALmC;;IAQnC,SAASjhB,OAAT,CAAiB+uB,WAAjB,EAA6C;AACzC,MAAA,IAAMngB,IAAI,GAAGmgB,WAAW,CAACngB,IAAzB,CAAA;;MAEA,IAAIA,IAAI,CAAC+f,SAAS,CAAC1N,GAAX,CAAJ,GAAuB2N,WAAW,GAAGvL,aAAzC,EAAwD;AACpD,QAAA,OAAOuL,WAAW,GAAGhgB,IAAI,CAAC+f,SAAS,CAAC1N,GAAX,CAAzB,CAAA;AACH,OAFD,MAEO,IAAI4N,SAAS,GAAGxL,aAAZ,GAA4BzU,IAAI,CAAC+f,SAAS,CAAC3N,KAAX,CAApC,EAAwD;AAC3D,QAAA,OAAOpS,IAAI,CAAC+f,SAAS,CAAC3N,KAAX,CAAJ,GAAyB6N,SAAhC,CAAA;AACH,OAFM,MAEA;AACH,QAAA,OAAO,CAAC,CAAR,CAAA;AACH,OAAA;AACJ,KAAA;;IACD,IAAM4H,gBAAgB,GAAGL,YAAY,CAACj6B,MAAb,CAAoB,UAAA4yB,WAAA,EAAW;AACpD,MAAA,IAAMngB,IAAI,GAAGmgB,WAAW,CAACngB,IAAzB,CAAA;;AAEA,MAAA,IAAIA,IAAI,CAAC0hB,SAAS,CAACtP,KAAX,CAAJ,GAAyBwV,UAAzB,IAAuC5nB,IAAI,CAAC0hB,SAAS,CAACrP,GAAX,CAAJ,GAAuBsV,YAAlE,EAAgF;AAC5E,QAAA,OAAO,KAAP,CAAA;AACH,OAAA;;AAED,MAAA,OAAOv2B,OAAO,CAAC+uB,WAAD,CAAP,GAAuB,CAA9B,CAAA;AACH,KARwB,EAQtBpW,IARsB,CAQjB,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;MACT,OAAO5Y,OAAO,CAACkK,CAAD,CAAP,GAAalK,OAAO,CAAC4Y,CAAD,CAA3B,CAAA;AACH,KAVwB,CAAzB,CAAA;IAYA,IAAMX,MAAM,GAAwB,EAApC,CAAA;AAEAwe,IAAAA,gBAAgB,CAAClqB,OAAjB,CAAyB,UAAAmqB,SAAA,EAAS;AAC9BD,MAAAA,gBAAgB,CAAClqB,OAAjB,CAAyB,UAAAoqB,SAAA,EAAS;QAC9B,IAAID,SAAS,KAAKC,SAAlB,EAA6B;AACzB,UAAA,OAAA;AACH,SAAA;;AACO,QAAA,IAAMC,KAAK,GAAKF,SAAS,CAAA9nB,IAAzB,CAAA;AACA,QAAA,IAAMioB,KAAK,GAAKF,SAAS,CAAA/nB,IAAzB,CAAA;AAER,QAAA,IAAMkoB,UAAU,GAAGF,KAAK,CAACtG,SAAS,CAACtP,KAAX,CAAxB,CAAA;AACA,QAAA,IAAM+V,QAAQ,GAAGH,KAAK,CAACtG,SAAS,CAACrP,GAAX,CAAtB,CAAA;AACA,QAAA,IAAM+V,UAAU,GAAGH,KAAK,CAACvG,SAAS,CAACtP,KAAX,CAAxB,CAAA;AACA,QAAA,IAAMiW,QAAQ,GAAGJ,KAAK,CAACvG,SAAS,CAACrP,GAAX,CAAtB,CAAA;;AAEA,QAAA,IAAI6V,UAAU,GAAGG,QAAb,IAAyBD,UAAU,GAAGD,QAA1C,EAAoD;AAChD,UAAA,OAAA;AACH,SAAA;;AAED9e,QAAAA,MAAM,CAACzY,IAAP,CAAY,CAACk3B,SAAD,EAAYC,SAAZ,CAAZ,CAAA,CAAA;OAhBJ,CAAA,CAAA;KADJ,CAAA,CAAA;AAqBA1e,IAAAA,MAAM,CAAC1L,OAAP,CAAe,UAAClV,EAAD,EAAuB;UAArBq/B,SAAS,GAAAr/B,EAAA,CAAA,CAAA;UAAEs/B,SAAS,GAAAt/B,EAAA,CAAA,CAAA;AACzB,MAAA,IAAMu/B,KAAK,GAAKF,SAAS,CAAA9nB,IAAzB,CAAA;AACA,MAAA,IAAMioB,KAAK,GAAKF,SAAS,CAAA/nB,IAAzB,CAAA;AAER,MAAA,IAAMkoB,UAAU,GAAGF,KAAK,CAACjI,SAAS,CAAC3N,KAAX,CAAxB,CAAA;AACA,MAAA,IAAM+V,QAAQ,GAAGH,KAAK,CAACjI,SAAS,CAAC1N,GAAX,CAAtB,CAAA;AACA,MAAA,IAAM+V,UAAU,GAAGH,KAAK,CAAClI,SAAS,CAAC3N,KAAX,CAAxB,CAAA;AACA,MAAA,IAAMiW,QAAQ,GAAGJ,KAAK,CAAClI,SAAS,CAAC1N,GAAX,CAAtB,CAAA;MACA,IAAIiO,GAAG,GAAG,CAAV,CAAA;MACA,IAAIpwB,GAAG,GAAG,CAAV,CAAA;MACA,IAAIqhB,OAAO,GAAG,KAAd,CAAA;MACA,IAAI+W,QAAQ,GAAG,KAAf,CAAA;MACA,IAAIvyB,KAAK,GAAG,KAAZ,CAAA;;AAEA,MAAA,IAAIoyB,QAAQ,IAAInI,WAAZ,IAA2BC,SAAS,IAAImI,UAA5C,EAAwD;AACpD;AACAE,QAAAA,QAAQ,GAAG,IAAX,CAAA;QACAhI,GAAG,GAAG,CAAE8H,UAAU,GAAGD,QAAd,IAA2BlI,SAAS,GAAGD,WAAvC,CAAD,IAAwD,CAA9D,CAAA;QACA9vB,GAAG,GAAGi4B,QAAQ,GAAG7H,GAAX,GAAiB,CAACL,SAAS,GAAGD,WAAb,IAA4B,CAAnD,CAAA;;QAEA,IAAI17B,IAAI,CAACyc,GAAL,CAAS7Q,GAAG,GAAGw3B,YAAf,CAA+BjT,GAAAA,aAAnC,EAAkD;AAC9C,UAAA,OAAA;AACH,SAAA;OARL,MASO,IAAI0T,QAAQ,GAAGC,UAAX,IAAyBC,QAAQ,GAAGrI,WAAW,GAAGvL,aAAtD,EAAqE;AACxE;AACAlD,QAAAA,OAAO,GAAG,IAAV,CAAA;QAEA+O,GAAG,GAAG8H,UAAU,GAAGD,QAAnB,CAAA;QACAj4B,GAAG,GAAGm4B,QAAQ,GAAG/H,GAAjB,CAAA;;QAEA,IAAIh8B,IAAI,CAACyc,GAAL,CAAS7Q,GAAG,GAAG8vB,WAAf,CAA8BvL,GAAAA,aAAlC,EAAiD;AAC7C,UAAA,OAAA;AACH,SAAA;OATE,MAUA,IAAI0T,QAAQ,GAAGC,UAAX,IAAyBnI,SAAS,GAAGxL,aAAZ,GAA4ByT,UAAzD,EAAqE;AACxE;AAEAnyB,QAAAA,KAAK,GAAG,IAAR,CAAA;QACAuqB,GAAG,GAAG8H,UAAU,GAAGD,QAAnB,CAAA;QACAj4B,GAAG,GAAGg4B,UAAU,GAAG5H,GAAnB,CAAA;;QAEA,IAAIh8B,IAAI,CAACyc,GAAL,CAAS7Q,GAAG,GAAG+vB,SAAf,CAA4BxL,GAAAA,aAAhC,EAA+C;AAC3C,UAAA,OAAA;AACH,SAAA;AACJ,OAVM,MAUA;AACH,QAAA,OAAA;AACH,OAAA;;MACD,IAAI,CAAC6L,GAAL,EAAU;AACN,QAAA,OAAA;AACH,OAAA;;MACD,IAAI,CAACgH,iBAAiB,CAACzH,UAAD,EAAaoI,KAAb,EAAoBr+B,IAApB,EAA0Bm9B,+BAA1B,CAAtB,EAAkF;AAC9E,QAAA,OAAA;AACH,OAAA;;MACD,IAAIzG,GAAG,GAAGiH,yBAAV,EAAqC;AACjC,QAAA,OAAA;AACH,OAAA;;MACDE,aAAa,CAAC72B,IAAd,CAAmB;AACfhH,QAAAA,IAAI,EAAAA,IADW;AAEfsG,QAAAA,GAAG,EAAEtG,IAAI,KAAK,UAAT,GAAsB,CAACsG,GAAD,EAAM,CAAN,CAAtB,GAAiC,CAAC,CAAD,EAAIA,GAAJ,CAFvB;QAGfkK,OAAO,EAAE2tB,SAAS,CAAC3tB,OAHJ;AAIf7J,QAAAA,IAAI,EAAE,CAJS;QAKf+uB,SAAS,EAAEyI,SAAS,CAACzI,SALN;AAMf/N,QAAAA,OAAO,EAAAA,OANQ;AAOf+W,QAAAA,QAAQ,EAAAA,QAPO;AAQfvyB,QAAAA,KAAK,EAAAA,KARU;AASfuqB,QAAAA,GAAG,EAAAA,GATY;AAUfJ,QAAAA,IAAI,EAAE,IAVS;AAWfmC,QAAAA,QAAQ,EAAE,CAACyF,SAAD,EAAYC,SAAZ,CAAA;OAXd,CAAA,CAAA;KAvDJ,CAAA,CAAA;GAzDJ,CAAA,CAAA;AA+HA,EAAA,OAAON,aAAP,CAAA;AACH,CAAA;AACe,SAAAL,iBAAA,CACZtU,aADY,EAEZC,cAFY,EAGZnO,cAHY,EAIZC,eAJY,EAKZlM,UALY,EAMZC,SANY,EAMC;AADb,EAAA,IAAAD,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,UAAc,GAAA,CAAd,CAAA;AAAc,GAAA;;AACd,EAAA,IAAAC,SAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,SAAa,GAAA,CAAb,CAAA;AAAa,GAAA;;EAEb,IAAMoa,UAAU,GAAoB,EAApC,CAAA;;AAEA,EAAA,IAAID,cAAJ,EAAoB;AAChB,IAAA,KAAK,IAAI7iB,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAI2U,eAAzB,EAA0C3U,GAAG,IAAI6iB,cAAjD,EAAiE;MAC7DC,UAAU,CAACpiB,IAAX,CAAgB;AACZhH,QAAAA,IAAI,EAAE,YADM;AAEZsG,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAIokB,QAAQ,CAACpkB,GAAG,GAAG0I,SAAP,EAAkB,GAAlB,CAAZ,CAFO;AAGZrI,QAAAA,IAAI,EAAEqU,cAHM;AAIZsb,QAAAA,IAAI,EAAE,IAAA;OAJV,CAAA,CAAA;AAMH,KAAA;AACJ,GAAA;;AACD,EAAA,IAAIpN,aAAJ,EAAmB;AACf,IAAA,KAAK,IAAI5iB,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAI0U,cAAzB,EAAyC1U,GAAG,IAAI4iB,aAAhD,EAA+D;MAC3DE,UAAU,CAACpiB,IAAX,CAAgB;AACZhH,QAAAA,IAAI,EAAE,UADM;AAEZsG,QAAAA,GAAG,EAAE,CAACokB,QAAQ,CAACpkB,GAAG,GAAGyI,UAAP,EAAmB,GAAnB,CAAT,EAAkC,CAAlC,CAFO;AAGZpI,QAAAA,IAAI,EAAEsU,eAHM;AAIZqb,QAAAA,IAAI,EAAE,IAAA;OAJV,CAAA,CAAA;AAMH,KAAA;AACJ,GAAA;;AACD,EAAA,OAAOlN,UAAP,CAAA;AACH,CAAA;AAEK,SAAUsU,iBAAV,CACFU,KADE,EAEFC,KAFE,EAGFr+B,IAHE,EAIFgnB,QAJE,EAIc;EAEhB,IAAIhnB,IAAI,KAAK,YAAb,EAA2B;AACvB,IAAA,OAAOtF,IAAI,CAACyc,GAAL,CAASinB,KAAK,CAAC3oB,KAAN,GAAe4oB,KAAK,CAACzhC,IAA9B,CAAA,IAAwCoqB,QAAxC,IACAtsB,IAAI,CAACyc,GAAL,CAASinB,KAAK,CAACxhC,IAAN,GAAcyhC,KAAK,CAAC5oB,KAA7B,CAAA,IAAwCuR,QADxC,IAEAoX,KAAK,CAACxhC,IAAN,IAAeyhC,KAAK,CAAC5oB,KAArB,IAA+B4oB,KAAK,CAACzhC,IAAN,IAAewhC,KAAK,CAAC3oB,KAF3D,CAAA;AAGH,GAJD,MAIO,IAAIzV,IAAI,KAAK,UAAb,EAAyB;AAC5B,IAAA,OAAOtF,IAAI,CAACyc,GAAL,CAASinB,KAAK,CAAC72B,MAAN,GAAgB82B,KAAK,CAAC1hC,GAA/B,CAAA,IAAwCqqB,QAAxC,IACAtsB,IAAI,CAACyc,GAAL,CAASinB,KAAK,CAACzhC,GAAN,GAAa0hC,KAAK,CAAC92B,MAA5B,CAAA,IAAwCyf,QADxC,IAEAoX,KAAK,CAACzhC,GAAN,IAAc0hC,KAAK,CAAC92B,MAApB,IAA+B82B,KAAK,CAAC1hC,GAAN,IAAcyhC,KAAK,CAAC72B,MAF1D,CAAA;AAGH,GAAA;;AACD,EAAA,OAAO,IAAP,CAAA;AACH,CAAA;AAGK,SAAU81B,oBAAV,CACFz8B,QADE,EACgE;AAElE,EAAA,IAAMtC,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAGI,EAAA,IAAAO,EAAA,GACA+B,QAAQ,CAAC5G,KAAT,CAAcojC,iBADd;MAAAA,iBAAiB,GAAAv+B,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAKA,EAAtB,CAAA;;AAGJ,EAAA,IAAI,CAACu+B,iBAAiB,CAACj6B,MAAvB,EAA+B;IAC3B7E,KAAK,CAACs/B,YAAN,GAAqB,EAArB,CAAA;AACA,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;AAED,EAAA,IAAMe,UAAU,GAAG,CAACrgC,KAAK,CAACs/B,YAAN,IAAsB,EAAvB,EAA2Bj6B,MAA3B,CAAkC,UAAAi7B,QAAA,EAAY;IAAA,OAAA,CAACA,QAAQ,CAACC,OAAV,CAAA;AAAiB,GAA/D,CAAnB,CAAA;EACA,IAAMC,qBAAqB,GAAG1B,iBAAiB,CAAC3gC,GAAlB,CAAsB,UAAAoP,EAAA,EAAE;AAClD,IAAA,IAAI2F,QAAQ,CAAC3F,EAAD,CAAR,IAAgB,SAAA,IAAaA,EAAjC,EAAqC;MACjC,OAAA/R,QAAA,CAAAA,QAAA,CAAA,EAAA,EACO+R,EADP,CAAA,EACS;AACL2E,QAAAA,OAAO,EAAEsR,YAAY,CAACjW,EAAE,CAAC2E,OAAJ,EAAa,IAAb,CAAA;AADhB,OADT,CAAA,CAAA;AAIH,KAAA;;IACD,OAAO;AACHA,MAAAA,OAAO,EAAEsR,YAAY,CAACjW,EAAD,EAAK,IAAL,CAAA;KADzB,CAAA;AAGH,GAV6B,CAU3BlI,CAAAA,MAV2B,CAUpB,UAAAsB,KAAA,EAAK;IACX,OAAOA,KAAK,CAACuL,OAAb,CAAA;AACH,GAZ6B,CAA9B,CAAA;;EAcM,IAAA5R,KAGFmgC,IAAI,CAACJ,UAAU,CAACliC,GAAX,CAAe,UAAAgkB,CAAA,EAAC;IAAI,OAAAA,CAAC,CAACjQ,OAAF,CAAA;GAApB,CAAD,EAAiCsuB,qBAAqB,CAACriC,GAAtB,CAA0B,UAAAgkB,CAAA;IAAK,OAAAA,CAAC,CAACjQ,OAAF,CAAA;AAAS,GAAxC,CAAjC,CAHF;AAAA,MACFwuB,UAAU,gBADR;AAAA,MAEFC,KAAK,WAFH,CAAA;;EAMN,IAAMC,UAAU,GAAsB,EAAtC,CAAA;AACAF,EAAAA,UAAU,CAACjrB,OAAX,CAAmB,UAAClV,EAAD,EAAuB;QAArBsgC,SAAS,GAAAtgC,EAAA,CAAA,CAAA;QAAEwE,SAAS,GAAAxE,EAAA,CAAA,CAAA;AACrCqgC,IAAAA,UAAU,CAAC77B,SAAD,CAAV,GAAwBs7B,UAAU,CAACQ,SAAD,CAAlC,CAAA;GADJ,CAAA,CAAA;EAIAC,mBAAmB,CAACx+B,QAAD,EAAWq+B,KAAK,CAACxiC,GAAN,CAAU,UAAAuG,KAAA,EAAK;IAAI,OAAA87B,qBAAqB,CAAC97B,KAAD,CAArB,CAAA;GAAnB,CAAX,CAAnB,CAAgFvG,GAAhF,CAAoF,UAAC2Z,IAAD,EAAO7P,CAAP,EAAQ;AACxF24B,IAAAA,UAAU,CAACD,KAAK,CAAC14B,CAAD,CAAN,CAAV,GAAuB6P,IAAvB,CAAA;GADJ,CAAA,CAAA;EAKA9X,KAAK,CAACs/B,YAAN,GAAqBsB,UAArB,CAAA;EACA,IAAMG,qBAAqB,GAAG/V,iBAAiB,CAAC1oB,QAAQ,CAAC5G,KAAT,CAAeqlC,qBAAhB,CAA/C,CAAA;EACA,IAAMhI,cAAc,GAAoB,EAAxC,CAAA;AAEA6H,EAAAA,UAAU,CAACnrB,OAAX,CAAmB,UAAA6qB,QAAA,EAAQ;AAEnB,IAAA,IAAApuB,OAAO,GASPouB,QAAQ,CATDpuB,OAAP;AAAA,QACA3R,KAQA+/B,QAAQ,CAAAjiC,GATR;QACK2iC,QAAQ,mBAAGD,qBAAqB,CAAC1iC,MAAGkC,EADzC;AAAA,QAEAD,KAOAggC,QAAQ,CAAAhiC,IATR;QAEM2iC,SAAS,mBAAGF,qBAAqB,CAACziC,OAAIgC,EAF5C;AAAA,QAGAyC,EAMA,GAAAu9B,QAAQ,CANuCnpB,KAH/C;QAGO+pB,UAAU,GAAGn+B,EAAA,KAAA,KAAA,CAAA,GAAAg+B,qBAAqB,CAAC5pB,KAAtB,GAA2BpU,EAH/C;AAAA,QAIAyV,EAKA,GAAA8nB,QAAQ,CAL0Cr3B,MAJlD;QAIQk4B,WAAW,GAAG3oB,EAAA,KAAA,KAAA,CAAA,GAAAuoB,qBAAqB,CAAC93B,MAAtB,KAJtB;AAAA,QAKAwQ,EAAA,GAIA6mB,QAAQ,CAAAlW,MATR;QAKQgX,WAAW,GAAA3nB,EAAA,KAAA,KAAA,CAAA,GAAGsnB,qBAAqB,CAAC3W,MAAzB,KALnB;AAAA,QAMAiL,EAAA,GAGAiL,QAAQ,CAAA5E,MATR;QAMQ2F,WAAW,GAAAhM,EAAA,KAAA,KAAA,CAAA,GAAG0L,qBAAqB,CAACrF,MAAzB,GAA+BrG,EANlD;AAAA,QAOA+B,SAAS,GAETkJ,QAAQ,CAFClJ,SAPT;AAAA,QAQAtf,IAAI,GACJwoB,QAAQ,KATR,CAAA;;IAUE,IAAAtK,EAAA,GAGF1K,uBAAuB,CAAC;AACxBjtB,MAAAA,GAAG,EAAE2iC,QADmB;AAExB7pB,MAAAA,KAAK,EAAE+pB,UAFiB;AAGxB5iC,MAAAA,IAAI,EAAE2iC,SAHkB;AAIxBh4B,MAAAA,MAAM,EAAEk4B,WAJgB;AAKxB/W,MAAAA,MAAM,EAAEgX,WALgB;AAMxB1F,MAAAA,MAAM,EAAE2F,WAAAA;KANe,EAOxBvpB,IAPwB,CAHrB;AAAA,QACF2T,UAAU,gBADR;AAAA,QAEFC,QAAQ,cAFN,CAAA;;AAWN,IAAA,IAAM1T,OAAO,GAAGF,IAAI,CAACzZ,GAArB,CAAA;AACA,IAAA,IAAM0Z,QAAQ,GAAGD,IAAI,CAACxZ,IAAtB,CAAA;AACA,IAAA,IAAMqJ,KAAK,GAAGmQ,IAAI,CAACX,KAAL,GAAcY,QAA5B,CAAA;AACA,IAAA,IAAMnQ,MAAM,GAAGkQ,IAAI,CAAC7O,MAAL,GAAe+O,OAA9B,CAAA;AACA,IAAA,IAAMspB,KAAK,GAAG,CAAC35B,KAAD,EAAQC,MAAR,CAAd,CAAA;AAEA8jB,IAAAA,QAAQ,CAACjW,OAAT,CAAiB,UAAAzN,GAAA,EAAG;MAChB+wB,cAAc,CAACrwB,IAAf,CAAoB;AAChBhH,QAAAA,IAAI,EAAE,UADU;AACEwQ,QAAAA,OAAO,EAAAA,OADT;QACWlK,GAAG,EAAE,CAC5BokB,QAAQ,CAACpkB,GAAD,EAAM,GAAN,CADoB,EAE5BgQ,OAF4B,CADhB;AAIb3P,QAAAA,IAAI,EAAET,MAJO;AAKhB05B,QAAAA,KAAK,EAAAA,KALW;AAMhBlK,QAAAA,SAAS,EAAAA,SANO;AAOhBa,QAAAA,WAAW,EAAEqI,QAAAA;OAPjB,CAAA,CAAA;KADJ,CAAA,CAAA;AAWA7U,IAAAA,UAAU,CAAChW,OAAX,CAAmB,UAAAzN,GAAA,EAAG;MAClB+wB,cAAc,CAACrwB,IAAf,CAAoB;AAChBhH,QAAAA,IAAI,EAAE,YADU;AACIwQ,QAAAA,OAAO,EAAAA,OADX;QACalK,GAAG,EAAE,CAC9B+P,QAD8B,EAE9BqU,QAAQ,CAACpkB,GAAD,EAAM,GAAN,CAFsB,CADlB;AAIbK,QAAAA,IAAI,EAAEV,KAJO;AAKhB25B,QAAAA,KAAK,EAAAA,KALW;AAMhBlK,QAAAA,SAAS,EAAAA,SANO;AAOhBa,QAAAA,WAAW,EAAEqI,QAAAA;OAPjB,CAAA,CAAA;KADJ,CAAA,CAAA;GAxCJ,CAAA,CAAA;AAqDA,EAAA,OAAOvH,cAAP,CAAA;AACH,CAAA;;AAGD,SAASwI,mBAAT,CACIzW,UADJ,EAEI0W,aAFJ,EAEyB;EAErB,OAAO1W,UAAU,GAAGA,UAAU,CAAC3sB,GAAX,CAAe,UAAAiH,IAAA,EAAI;IACnC,IAAMq8B,YAAY,GAAGvuB,QAAQ,CAAC9N,IAAD,CAAR,GAAiBA,IAAjB,GAAwB;AAAE4C,MAAAA,GAAG,EAAE5C,IAAAA;KAApD,CAAA;AACA,IAAA,IAAM4C,GAAG,GAAGy5B,YAAY,CAACz5B,GAAzB,CAAA;;AAEA,IAAA,IAAI05B,QAAQ,CAAC15B,GAAD,CAAZ,EAAmB;AACf,MAAA,OAAOy5B,YAAP,CAAA;AACH,KAFD,MAEO;MACH,OACOjmC,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAimC,YAAA,CAAA,EACH;AAAAz5B,QAAAA,GAAG,EAAE6U,eAAe,CAAC7U,GAAD,EAAMw5B,aAAN,CAAA;AAApB,OADG,CADP,CAAA;AAIH,KAAA;GAXe,CAAH,GAYZ,EAZL,CAAA;AAaH,CAAA;;AAEe,SAAArC,oBAAA,CACZxU,oBADY,EAEZD,kBAFY,EAGZ/iB,KAHY,EAIZC,MAJY,EAKZ6I,UALY,EAMZC,SANY,EAOZglB,UAPY,EAOyC;AAFrD,EAAA,IAAAjlB,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,UAAc,GAAA,CAAd,CAAA;AAAc,GAAA;;AACd,EAAA,IAAAC,SAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,SAAa,GAAA,CAAb,CAAA;AAAa,GAAA;;AACb,EAAA,IAAAglB,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,UAAe,GAAA;AAAAp3B,MAAAA,IAAI,EAAE,CAAN;AAASD,MAAAA,GAAG,EAAE,CAAd;AAAiB8Y,MAAAA,KAAK,EAAE,CAAxB;AAA2BlO,MAAAA,MAAM,EAAE,CAAA;KAAlD,CAAA;AAAqD,GAAA;;EAErD,IAAM6hB,UAAU,GAAoB,EAApC,CAAA;AAEI,EAAA,IAAM6K,cAAc,GAIpBD,UAAU,KAJV;AAAA,MACKE,aAAa,GAGlBF,UAAU,CAAAr3B,GAJV;AAAA,MAEQy3B,gBAAgB,GAExBJ,UAAU,CAFczsB,MAFxB;AAAA,MAGO4sB,eAAe,GACtBH,UAAU,MAJV,CAAA;AAKJ,EAAA,IAAMiM,SAAS,GAAGh6B,KAAM,GAAGkuB,eAAT,GAA2BF,cAA7C,CAAA;AACA,EAAA,IAAMiM,UAAU,GAAGh6B,MAAO,GAAGkuB,gBAAV,GAA6BF,aAAhD,CAAA;EAEA2L,mBAAmB,CAAC5W,oBAAD,EAAuBiX,UAAvB,CAAnB,CAAsDnsB,OAAtD,CAA8D,UAAAuY,OAAA,EAAO;IACjElD,UAAU,CAACpiB,IAAX,CAAgB;AACZhH,MAAAA,IAAI,EAAE,YADM;AAEZsG,MAAAA,GAAG,EAAE,CACD2tB,cADC,EAEDvJ,QAAQ,CAAC4B,OAAO,CAAChmB,GAAR,GAAc0I,SAAd,GAA0BklB,aAA3B,EAA0C,GAA1C,CAFP,CAFO;AAMZvtB,MAAAA,IAAI,EAAEs5B,SANM;MAOZvK,SAAS,EAAEpJ,OAAO,CAACoJ,SAAAA;KAPvB,CAAA,CAAA;GADJ,CAAA,CAAA;EAWAmK,mBAAmB,CAAC7W,kBAAD,EAAqBiX,SAArB,CAAnB,CAAmDlsB,OAAnD,CAA2D,UAAAuY,OAAA,EAAO;IAC9DlD,UAAU,CAACpiB,IAAX,CAAgB;AACZhH,MAAAA,IAAI,EAAE,UADM;AAEZsG,MAAAA,GAAG,EAAE,CACDokB,QAAQ,CAAC4B,OAAO,CAAChmB,GAAR,GAAcyI,UAAd,GAA2BklB,cAA5B,EAA4C,GAA5C,CADP,EAEDC,aAFC,CAFO;AAMZvtB,MAAAA,IAAI,EAAEu5B,UANM;MAOZxK,SAAS,EAAEpJ,OAAO,CAACoJ,SAAAA;KAPvB,CAAA,CAAA;GADJ,CAAA,CAAA;AAWA,EAAA,OAAOtM,UAAP,CAAA;AACH,CAAA;AAIe,SAAAgW,mBAAA,CACZx+B,QADY,EAEZ0e,MAFY,EAEmB;AAE/B,EAAA,IAAI,CAACA,MAAM,CAACnc,MAAZ,EAAoB;AAChB,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAM7E,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,EAAA,IAAA4X,mBAAmB,GAQnB5X,KAAK,CAAA4X,mBARL;AAAA,MACArX,EAAA,GAOAP,KAAK,CAAA6hC,gBARL;AAAA,MAESnxB,SAAS,GAAAnQ,EAAA,CAAAlC,GAFlB;AAAA,MAGUoS,UAAU,GAAAlQ,EAAA,CAAAjC,IAHpB;AAAA,MAKAkE,UAAU,GAGVxC,KAAK,CAHKwC,UALV;AAAA,MAMAC,IAAI,GAEJzC,KAAK,CAAAyC,IARL;AAAA,MAOAq/B,WAAW,GACX9hC,KAAK,YARL,CAAA;AASJ,EAAA,IAAMZ,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;;EACM,IAAAnC,EAAgC,GAAAqrB,qBAAqB,CAACnpB,UAAD,EAAaoV,mBAAb,EAAkCxY,CAAlC,CAArD;AAAA,MAAC2iC,aAAa,GAAAzhC,EAAA,CAAA,CAAA,CAAd;AAAA,MAAgB0hC,YAAY,QAA5B,CAAA;;AACN,EAAA,IAAMp5B,KAAK,GAAG4D,uBAAuB,CAACxM,KAAD,CAArC,CAAA;;AACM,EAAA,IAAA+C,EAAA,GAGFk/B,UAAU,CAACr5B,KAAD,CAHR;AAAA,MACIs5B,UAAU,GAAAn/B,EAAA,CAAAo/B,IADd;AAAA,MAEIC,SAAS,GAAAr/B,EAAA,CAAAs/B,IAFb,CAAA;;AAIA,EAAA,IAAA7pB,EAAsB,GAAA7V,KAAK,CAAC,CAACu/B,UAAD,EAAaE,SAAb,CAAD,EAA0Bx/B,wBAAwB,CAACJ,UAAD,EAAa,CAC5FiO,UAAU,GAAGsxB,aAD+E,EAE5FrxB,SAAS,GAAGsxB,YAFgF,CAAb,EAGhF5iC,CAHgF,CAAlD,CAAL,CAGrBjB,GAHqB,CAGjB,UAAA6J,GAAA,EAAG;IAAI,OAAAmW,SAAS,CAACnW,GAAD,CAAT,CAAA;AAAc,GAHJ,CAAtB;AAAA,MAAC2Q,QAAQ,GAAAH,EAAA,CAAA,CAAA,CAAT;AAAA,MAAWI,OAAO,GAAAJ,EAAA,CAAA,CAAA,CAAlB,CAAA;;AAKN,EAAA,OAAOwI,MAAM,CAAC7iB,GAAP,CAAW,UAAAwI,KAAA,EAAK;AACnB,IAAA,IAAMmR,IAAI,GAAGnR,KAAK,CAACuL,OAAN,CAAc2F,qBAAd,EAAb,CAAA;IACA,IAAMvZ,IAAI,GAAGwZ,IAAI,CAACxZ,IAAL,GAAYyjC,aAAZ,GAA4BD,WAAW,CAAC,CAAD,CAApD,CAAA;IACA,IAAMzjC,GAAG,GAAGyZ,IAAI,CAACzZ,GAAL,GAAW2jC,YAAX,GAA0BF,WAAW,CAAC,CAAD,CAAjD,CAAA;AACA,IAAA,IAAM74B,MAAM,GAAG5K,GAAG,GAAGyZ,IAAI,CAAClQ,MAA1B,CAAA;AACA,IAAA,IAAMuP,KAAK,GAAG7Y,IAAI,GAAGwZ,IAAI,CAACnQ,KAA1B,CAAA;;AACM,IAAA,IAAApH,KAA4BqC,wBAAwB,CAACJ,UAAD,EAAa,CAAClE,IAAD,EAAOD,GAAP,CAAb,EAA0Be,CAA1B,CAApD;AAAA,QAACkjC,WAAW,QAAZ;AAAA,QAAcC,UAAU,QAAxB,CAAA;;AACA,IAAA,IAAAjiC,KAAgCsC,wBAAwB,CAACJ,UAAD,EAAa,CAAC2U,KAAD,EAAQlO,MAAR,CAAb,EAA8B7J,CAA9B,CAAxD;AAAA,QAACojC,YAAY,QAAb;AAAA,QAAeC,aAAa,QAA5B,CAAA;;IAEN,OACOjnC,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAmL,KAAA,CAAA,EACH;AAAAmR,MAAAA,IAAI,EAAE;QACFxZ,IAAI,EAAEgkC,WAAW,GAAG3pB,QADlB;QAEFxB,KAAK,EAAEqrB,YAAY,GAAG7pB,QAFpB;QAGFta,GAAG,EAAEkkC,UAAU,GAAG3pB,OAHhB;QAIF3P,MAAM,EAAEw5B,aAAa,GAAG7pB,OAJtB;QAKFwR,MAAM,EAAE,CAACkY,WAAW,GAAGE,YAAf,IAA+B,CAA/B,GAAmC7pB,QALzC;AAMF+iB,QAAAA,MAAM,EAAE,CAAC6G,UAAU,GAAGE,aAAd,IAA+B,CAA/B,GAAmC7pB,OAAAA;AANzC,OAAA;AAAN,KADG,CADP,CAAA;AAWH,GApBM,CAAP,CAAA;AAqBH;;ACvbK,SAAU8pB,aAAV,CACFpgC,QADE,EACgE;AAElE,EAAA,IAAMtC,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AACA,EAAA,IAAMqN,SAAS,GAAGrN,KAAK,CAACqN,SAAxB,CAAA;EACA,IAAMs1B,aAAa,GAAGrgC,QAAQ,CAAC5G,KAAT,CAAeinC,aAAf,IAAgCt1B,SAAtD,CAAA;;AAEA,EAAA,IAAIrN,KAAK,CAAC2iC,aAAN,KAAwBA,aAAxB,IAAyC3iC,KAAK,CAAC8qB,UAA/C,IAA6D9qB,KAAK,CAAC8qB,UAAN,CAAiBjmB,MAAlF,EAA0F;AACtF,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;;AAED,EAAA,IAAM+S,mBAAmB,GAAG5X,KAAK,CAAC4X,mBAAlC,CAAA;AACA,EAAA,IAAM8d,UAAU,GAAG;AACfp3B,IAAAA,IAAI,EAAE,CADS;AAEfD,IAAAA,GAAG,EAAE,CAFU;AAGf4K,IAAAA,MAAM,EAAE,CAHO;AAIfkO,IAAAA,KAAK,EAAE,CAAA;GAJX,CAAA;;EAOA,IAAI9J,SAAS,KAAKs1B,aAAlB,EAAiC;AAC7B,IAAA,IAAMC,mBAAmB,GAAGpf,YAAY,CAACmf,aAAD,EAAgB,IAAhB,CAAxC,CAAA;;AAEA,IAAA,IAAIC,mBAAJ,EAAyB;AACrB,MAAA,IAAMC,iBAAiB,GAAG/wB,aAAa,CAAC8wB,mBAAD,CAAvC,CAAA;MACA,IAAME,OAAO,GAAG1e,kBAAkB,CAACpkB,KAAD,EAAQ,CACtC6iC,iBAAiB,CAACvkC,IAAlB,GAAyBsZ,mBAAmB,CAACtZ,IADP,EAEtCukC,iBAAiB,CAACxkC,GAAlB,GAAwBuZ,mBAAmB,CAACvZ,GAFN,CAAR,CAAlC,CAAA;MAIA,IAAM0kC,OAAO,GAAG3e,kBAAkB,CAACpkB,KAAD,EAAQ,CACtC6iC,iBAAiB,CAAC1rB,KAAlB,GAA0BS,mBAAmB,CAACT,KADR,EAEtC0rB,iBAAiB,CAAC55B,MAAlB,GAA2B2O,mBAAmB,CAAC3O,MAFT,CAAR,CAAlC,CAAA;MAKAysB,UAAU,CAACp3B,IAAX,GAAkB8tB,QAAQ,CAAC0W,OAAO,CAAC,CAAD,CAAR,EAAa,OAAb,CAA1B,CAAA;MACApN,UAAU,CAACr3B,GAAX,GAAiB+tB,QAAQ,CAAC0W,OAAO,CAAC,CAAD,CAAR,EAAa,OAAb,CAAzB,CAAA;MACApN,UAAU,CAACve,KAAX,GAAmBiV,QAAQ,CAAC2W,OAAO,CAAC,CAAD,CAAR,EAAa,OAAb,CAA3B,CAAA;MACArN,UAAU,CAACzsB,MAAX,GAAoBmjB,QAAQ,CAAC2W,OAAO,CAAC,CAAD,CAAR,EAAa,OAAb,CAA5B,CAAA;AACH,KAAA;AACJ,GAAA;;EAED/iC,KAAK,CAAC2iC,aAAN,GAAsBA,aAAtB,CAAA;EACA3iC,KAAK,CAAC01B,UAAN,GAAmBA,UAAnB,CAAA;AACA11B,EAAAA,KAAK,CAAC8qB,UAAN,GAAmB2T,kBAAkB,CAACn8B,QAAD,CAArC,CAAA;EACAtC,KAAK,CAAC+qB,UAAN,GAAmB,IAAnB,CAAA;AACA,EAAA,OAAO,IAAP,CAAA;AACH,CAAA;;AAED,SAASiY,iBAAT,CACIx/B,MADJ,EAEImE,KAFJ,EAGIC,MAHJ,EAIIwB,cAJJ,EAKIE,QALJ,EAMI7G,IANJ,EAMiB;AAEb,EAAA,IAAMmkB,SAAS,GAAGvd,cAAc,CAAC7F,MAAD,EAASmE,KAAT,EAAgBC,MAAhB,EAAwBnF,IAAI,GAAG,CAAH,GAAO,CAAnC,CAAhC,CAAA;AACA,EAAA,IAAMwgC,YAAY,GAAGp6B,iBAAiB,CAAC+d,SAAD,EAAYxd,cAAZ,CAAtC,CAAA;EAEA,OAAO8U,gBAAgB,CAAC0I,SAAD,EAAYjkB,KAAK,CAAC2G,QAAD,EAAW25B,YAAX,CAAjB,CAAvB,CAAA;AACH,CAAA;AAOe,SAAAC,iBAAA,CACZ5gC,QADY,EAEZsG,KAFY,EAGZvE,SAHY,EAIZogB,SAJY,EAKZjC,SALY,EAMZ7hB,KANY,EAMF;AAEF,EAAA,IAAAyI,cAAc,GAAKzI,KAAK,CAAAyI,cAAxB,CAAA;EACR,IAAMqmB,UAAU,GAAGD,sBAAsB,CAACnrB,SAAD,EAAY+E,cAAZ,EAA4Bqb,SAA5B,CAAzC,CAAA;EACA,IAAM0e,mBAAmB,GAAGpQ,2BAA2B,CAACzwB,QAAD,EAAWsG,KAAX,EAAkBvE,SAAlB,EAA6BogB,SAA7B,CAAvD,CAAA;;AACA,EAAA,IAAMyK,OAAO,GACN1oB,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAAq2B,gBAAgB,CACfv6B,QADe,EAEfsG,KAFe,EAGf6mB,UAHe,EAIfhL,SAJe,EAKfjC,SALe,EAMf7hB,KANe,CAAhB,EAQA,IARA,CAAA,EAQA8xB,iBAAiB,CAChBnwB,QADgB,EAEhB6gC,mBAFgB,EAGhBxiC,KAHgB,CARjB,EAYF,IAZE,CADP,CAAA;;AAeA,EAAA,IAAMsyB,eAAe,GAAGhE,iBAAiB,CAACC,OAAD,EAAU,CAAV,CAAzC,CAAA;AACA,EAAA,IAAMgE,gBAAgB,GAAGjE,iBAAiB,CAACC,OAAD,EAAU,CAAV,CAA1C,CAAA;EAEA,OAAO;AACHvnB,IAAAA,KAAK,EAAE;MACHqnB,OAAO,EAAEiE,eAAe,CAACjE,OADtB;AAEHpf,MAAAA,MAAM,EAAEqjB,eAAe,CAACrjB,MAAhB,CAAuB,CAAvB,CAAA;KAHT;AAKHhI,IAAAA,MAAM,EAAE;MACJonB,OAAO,EAAEkE,gBAAgB,CAAClE,OADtB;AAEJpf,MAAAA,MAAM,EAAEsjB,gBAAgB,CAACtjB,MAAjB,CAAwB,CAAxB,CAAA;AAFJ,KAAA;GALZ,CAAA;AAUH,CAAA;SACewzB,0BACZ9gC,UACAsG,OACAjB,OACAC,QACAsT,UACAE,WACA/W,WACAme,WACA7hB,OAAU;AAEV,EAAA,IAAM0iC,OAAO,GAAGx6B,iBAAiB,CAACD,KAAD,EAAQvE,SAAR,CAAjC,CAAA;;AAEM,EAAA,IAAA9D,KAGFo7B,uBAAuB,CAACr5B,QAAD,EAAWkgB,SAAX,EAAsB;AAC7CkJ,IAAAA,QAAQ,EAAE,CAAC2X,OAAO,CAAC,CAAD,CAAR,CADmC;AAE7C5X,IAAAA,UAAU,EAAE,CAAC4X,OAAO,CAAC,CAAD,CAAR,CAAA;AAFiC,GAAtB,CAHrB;AAAA,MACoB7mB,gBAAgB,GAAAjc,EAAA,CAAAkrB,UAAA,CAAA7b,MADpC;AAAA,MAEkB6M,cAAc,qBAFhC,CAAA;;AAQN,EAAA,IAAI2P,QAAQ,CAAC3P,cAAD,EAAiB5d,eAAjB,CAAR,IAA6CutB,QAAQ,CAAC5P,gBAAD,EAAmB3d,eAAnB,CAAzD,EAA8F;IACpF,IAAAyB,EAAA,GAAsC0C,WAAW,CAAC;AACpDrC,MAAAA,KAAK,EAAAA,KAD+C;MAEpDqB,KAAK,EAAE,CAACya,cAF4C;AAGpDxa,MAAAA,KAAK,EAAE,CAACua,gBAAAA;AAH4C,KAAD,CAAjD;AAAA,QAAC8mB,eAAe,GAAAhjC,EAAA,CAAA,CAAA,CAAhB;AAAA,QAAkBijC,gBAAgB,QAAlC,CAAA;;AAKN,IAAA,IAAMC,SAAS,GAAGpnC,IAAI,CAACwa,GAAL,CACdsE,QAAQ,IAAIC,QADE,EAEdxT,KAAK,GAAGtD,SAAS,CAAC,CAAD,CAAT,GAAei/B,eAFT,CAAlB,CAAA;AAIA,IAAA,IAAMG,UAAU,GAAGrnC,IAAI,CAACwa,GAAL,CACfwE,SAAS,IAAID,QADE,EAEfvT,MAAM,GAAGvD,SAAS,CAAC,CAAD,CAAT,GAAek/B,gBAFT,CAAnB,CAAA;IAKA,OAAO,CAACC,SAAS,GAAG77B,KAAb,EAAoB87B,UAAU,GAAG77B,MAAjC,CAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACH,CAAA;SACe87B,cACZphC,UACAqhC,cACAh8B,OACAC,QACAvD,WACAkH,eACAiX,WACA7hB,OAAU;AAEV,EAAA,IAAMiI,KAAK,GAAG4D,uBAAuB,CAAClK,QAAQ,CAACtC,KAAV,CAArC,CAAA;AACA,EAAA,IAAMykB,SAAS,GAAGniB,QAAQ,CAAC5G,KAAT,CAAe+oB,SAAjC,CAAA;EAEA,IAAImW,WAAW,GAAG,CAAlB,CAAA;EACA,IAAIC,YAAY,GAAG,CAAnB,CAAA;;EAEA,KAAK,IAAI5yB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AACxB,IAAA,IAAM2e,SAAS,GAAG+c,YAAY,CAAC/I,WAAD,EAAcC,YAAd,CAA9B,CAAA;;AACM,IAAA,IAAAt6B,EAAA,GAGF2iC,iBAAiB,CACjB5gC,QADiB,EAEjBskB,SAFiB,EAGjBviB,SAHiB,EAIjBogB,SAJiB,EAKjBjC,SALiB,EAMjB7hB,KANiB,CAHf;AAAA,QACKsyB,eAAe,GAAA1yB,EAAA,CAAAoH,KADpB;AAAA,QAEMurB,gBAAgB,GAAA3yB,EAAA,CAAAqH,MAFtB,CAAA;;AAYN,IAAA,IAAMg8B,YAAY,GAAG3Q,eAAe,CAACjE,OAArC,CAAA;AACA,IAAA,IAAM6U,aAAa,GAAG3Q,gBAAgB,CAAClE,OAAvC,CAAA;AACA,IAAA,IAAIsU,eAAe,GAAGrQ,eAAe,CAACrjB,MAAtC,CAAA;AACA,IAAA,IAAI2zB,gBAAgB,GAAGrQ,gBAAgB,CAACtjB,MAAxC,CAAA;;IAGA,IAAI3H,CAAC,KAAK,CAAV,EAAa;MACT,IAAI,CAAC27B,YAAL,EAAmB;AACfN,QAAAA,eAAe,GAAG,CAAlB,CAAA;AACH,OAAA;;MACD,IAAI,CAACO,aAAL,EAAoB;AAChBN,QAAAA,gBAAgB,GAAG,CAAnB,CAAA;AACH,OAAA;AACJ,KAAA;;IACD,IAAIt7B,CAAC,KAAK,CAAN,IAAWua,SAAX,IAAwB,CAACohB,YAAzB,IAAyC,CAACC,aAA9C,EAA6D;AACzD,MAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAIpf,SAAJ,EAAe;AACX,MAAA,IAAMqf,SAAS,GACX1nC,IAAI,CAACyc,GAAL,CAASyqB,eAAT,CAA6B37B,IAAAA,KAAK,GAAG,CAAA,GAAIA,KAAP,GAAe,CAAjD,CADJ,CAAA;AAEA,MAAA,IAAMo8B,UAAU,GACZ3nC,IAAI,CAACyc,GAAL,CAAS0qB,gBAAT,CAA8B37B,IAAAA,MAAM,GAAG,CAAA,GAAIA,MAAP,GAAgB,CAApD,CADJ,CAAA;AAEA,MAAA,IAAMo8B,gBAAgB,GAClBJ,YAAY,IAAIC,aAAhB,GACMC,SAAS,GAAGC,UADlB,GAEMF,aAAa,IACd,CAACD,YAAD,IAAiBE,SAAS,GAAGC,UAJtC,CAAA;;AAKA,MAAA,IAAIC,gBAAJ,EAAsB;AAClB;AACAV,QAAAA,eAAe,GAAI37B,KAAK,GAAG47B,gBAAT,GAA6B37B,MAA/C,CAAA;AACH,OAHD,MAGO;AACH;AACA27B,QAAAA,gBAAgB,GAAI37B,MAAM,GAAG07B,eAAV,GAA6B37B,KAAhD,CAAA;AACH,OAAA;AACJ,KAAA;;AACDizB,IAAAA,WAAW,IAAI0I,eAAf,CAAA;AACAzI,IAAAA,YAAY,IAAI0I,gBAAhB,CAAA;AACH,GAAA;;EAED,IAAIl/B,SAAS,CAAC,CAAD,CAAT,IAAgBA,SAAS,CAAC,CAAD,CAA7B,EAAkC;AACxB,IAAA,IAAA/D,KAA0Bu9B,cAAc,CAC1Cv7B,QAD0C,EAE1CsG,KAF0C,EAG1CvE,SAH0C,EAI1CkH,aAJ0C,EAK1C5K,KAL0C,CAAxC;AAAA,QAAEua,QAAQ,cAAV;AAAA,QAAYE,SAAS,eAArB,CAAA;;AAQA,IAAA,IAAArY,EAAsC,GAAAqgC,yBAAyB,CACjE9gC,QADiE,EAEjEqhC,YAAY,CAAC/I,WAAD,EAAcC,YAAd,CAAZ,CAAwC18B,GAAxC,CAA4C,UAAA6J,GAAA,EAAO;AAAA,MAAA,OAAAA,GAAG,CAAC7J,GAAJ,CAAQ,UAAA2a,CAAA,EAAK;AAAA,QAAA,OAAAsT,QAAQ,CAACtT,CAAD,EAAIja,eAAJ,CAAR,CAAA;AAA4B,OAAzC,CAAA,CAAA;AAA0C,KAA7F,CAFiE,EAGjE8I,KAAK,GAAGizB,WAHyD,EAIjEhzB,MAAM,GAAGizB,YAJwD,EAKjE3f,QALiE,EAMjEE,SANiE,EAOjE/W,SAPiE,EAQjEme,SARiE,EASjE7hB,KATiE,CAA/D;AAAA,QAAC2iC,eAAe,GAAAvgC,EAAA,CAAA,CAAA,CAAhB;AAAA,QAAkBwgC,gBAAgB,QAAlC,CAAA;;AAYN3I,IAAAA,WAAW,IAAI0I,eAAf,CAAA;AACAzI,IAAAA,YAAY,IAAI0I,gBAAhB,CAAA;AACH,GAAA;;AAED,EAAA,OAAO,CAAC3I,WAAD,EAAcC,YAAd,CAAP,CAAA;AACH,CAAA;SAEeoJ,gBACZ3hC,UACAwV,MACAuC,UAAgB;AAEhB,EAAA,IAAI,CAACiQ,aAAa,CAAChoB,QAAD,EAAW,WAAX,CAAlB,EAA2C;IACvC,OAAO;AACH2qB,MAAAA,MAAM,EAAE,KADL;AAEH5S,MAAAA,QAAQ,EAAAA,QAAAA;KAFZ,CAAA;AAIH,GAAA;;AAEO,EAAA,IAAA3X,IAAI,GAAwCoV,IAAI,CAA5CpV,IAAJ;AAAA,MAAM+P,IAAI,GAAkCqF,IAAI,CAAtCrF,IAAV;AAAA,MAAYkH,IAAI,GAA4B7B,IAAI,CAAhC6B,IAAhB;AAAA,MAAkBC,IAAI,GAAsB9B,IAAI,CAAA8B,IAAhD;AAAA,MAAgCsqB,OAAO,GAAKpsB,IAAI,CAAA1U,MAAhD,CAAA;EACR,IAAM8W,GAAG,GAAIG,QAAQ,GAAGje,IAAI,CAAC+nB,EAAjB,GAAuB,GAAnC,CAAA;AACA,EAAA,IAAMwC,SAAS,GAAG,CAACjkB,IAAD,EAAO+P,IAAP,EAAakH,IAAb,EAAmBC,IAAnB,CAAyBzb,CAAAA,GAAzB,CAA6B,UAAC6J,GAAD,EAAI;AAAK,IAAA,OAAArF,KAAK,CAACqF,GAAD,EAAMk8B,OAAN,CAAL,CAAA;AAAmB,GAAzD,CAAlB,CAAA;EACA,IAAMtd,SAAS,GAAGD,SAAS,CAACxoB,GAAV,CAAc,UAAC6J,GAAD,EAAI;AAAK,IAAA,OAAA6e,MAAM,CAAC7e,GAAD,EAAMkS,GAAN,CAAN,CAAA;GAAvB,CAAlB,CAZgB;AAehB;;AACA,EAAA,IAAM7Z,MAAM,GAAAmG,aAAA,CAAAA,aAAA,CAAA,EAAA,EACLowB,iBAAiB,CAACt0B,QAAD,EAAWqkB,SAAX,EAAsBC,SAAtB,EAAiCsd,OAAjC,EAA0C7pB,QAA1C,CADZ,EAEL,IAFK,CAAA,EAELyZ,sBAAsB,CACrBxxB,QADqB,EAErBqkB,SAFqB,EAGrBC,SAHqB,EAIrBsd,OAJqB,EAKrB7pB,QALqB,CAFjB,EAQP,IARO,CAAZ,CAAA;;AAUAha,EAAAA,MAAM,CAACwhB,IAAP,CAAY,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;AAAK,IAAA,OAAA1lB,IAAI,CAACyc,GAAL,CAASzF,CAAC,GAAGiH,QAAb,CAAyBje,GAAAA,IAAI,CAACyc,GAAL,CAASiJ,CAAC,GAAGzH,QAAb,CAAzB,CAAA;GAAtB,CAAA,CAAA;AACA,EAAA,IAAM4S,MAAM,GAAG5sB,MAAM,CAACwE,MAAP,GAAgB,CAA/B,CAAA;EAEA,OAAO;AACHooB,IAAAA,MAAM,EAAAA,MADH;AAEH5S,IAAAA,QAAQ,EAAE4S,MAAM,GAAG5sB,MAAM,CAAC,CAAD,CAAT,GAAega,QAAAA;GAFnC,CAAA;AAIH,CAAA;AACe,SAAA8pB,eAAA,CACZ7hC,QADY,EAEZqF,KAFY,EAGZC,MAHY,EAIZvD,SAJY,EAKZkH,aALY,EAMZiX,SANY,EAOZ7hB,KAPY,EAOF;AAEV,EAAA,IAAI,CAAC2pB,aAAa,CAAChoB,QAAD,EAAW,WAAX,CAAlB,EAA2C;AACvC,IAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACH,GAAA;;AACO,EAAA,IAAA8G,cAAc,GAAoBzI,KAAK,CAAAyI,cAAvC;AAAA,MAAgBg7B,aAAa,GAAKzjC,KAAK,CAAAyjC,aAAvC,CAAA;AACF,EAAA,IAAA7jC,EAAA,GAAsB+B,QAAQ,CAACtC,KAA/B;AAAA,MAAEkD,SAAS,GAAA3C,EAAA,CAAA2C,SAAX;AAAA,MAAaT,IAAI,GAAAlC,EAAA,CAAAkC,IAAjB,CAAA;EAEN,OAAOihC,aAAa,CAChBphC,QADgB,EAEhB,UAACs4B,WAAD,EAAsBC,YAAtB,EAA0C;AACtC,IAAA,OAAOmI,iBAAiB,CACpBoB,aAAa,IAAIlhC,SADG,EAEpByE,KAAK,GAAGizB,WAFY,EAGpBhzB,MAAM,GAAGizB,YAHW,EAIpBzxB,cAJoB,EAKpBmC,aALoB,EAMpB9I,IANoB,CAAxB,CAAA;AAQH,GAXe,EAYhBkF,KAZgB,EAahBC,MAbgB,EAchBvD,SAdgB,EAehBkH,aAfgB,EAgBhBiX,SAhBgB,EAiBhB7hB,KAjBgB,CAApB,CAAA;AAmBH,CAAA;AACK,SAAU0jC,cAAV,CACF/hC,QADE,EAEFxG,KAFE,EAGFuI,SAHE,EAIFme,SAJE,EAKF7hB,KALE,EAKQ;AAEV,EAAA,IAAI,CAAC2pB,aAAa,CAAChoB,QAAD,EAAW,UAAX,CAAlB,EAA0C;AACtC,IAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACH,GAAA;;AACO,EAAA,IAAAoiB,gBAAgB,GAA6D/jB,KAAK,CAAlE+jB,gBAAhB;AAAA,MAAkBC,iBAAiB,GAA0ChkB,KAAK,CAA/CgkB,iBAAnC;AAAA,MAAqCpZ,aAAa,GAA2B5K,KAAK,CAAhC4K,aAAlD;AAAA,MAAoDnC,cAAc,GAAWzI,KAAK,CAAAyI,cAAlF;AAAA,MAAoE3G,IAAI,GAAK9B,KAAK,CAAA8B,IAAlF,CAAA;EACR,IAAM6hC,QAAQ,GAAGZ,aAAa,CAC1BphC,QAD0B,EAE1B,UAACs4B,WAAD,EAAsBC,YAAtB,EAA0C;AACtC,IAAA,OAAOmI,iBAAiB,CACpBl5B,WAAW,CACPnJ,KADO,EAEPmD,IAAI,CAAChI,KAAD,EAAQ,CAAC8+B,WAAW,GAAGlW,gBAAf,EAAiCmW,YAAY,GAAGlW,iBAAhD,CAAR,CAFG,CADS,EAKpBD,gBALoB,EAMpBC,iBANoB,EAOpBvb,cAPoB,EAQpBmC,aARoB,EASpB9I,IAToB,CAAxB,CAAA;AAWH,GAdyB,EAe1BiiB,gBAf0B,EAgB1BC,iBAhB0B,EAiB1BtgB,SAjB0B,EAkB1BkH,aAlB0B,EAmB1BiX,SAnB0B,EAoB1B7hB,KApB0B,CAA9B,CAAA;AAsBA,EAAA,OAAO,CAAC2jC,QAAQ,CAAC,CAAD,CAAR,GAAc5f,gBAAf,EAAiC4f,QAAQ,CAAC,CAAD,CAAR,GAAc3f,iBAA/C,CAAP,CAAA;AACH,CAAA;AAEe,SAAA4f,kBAAA,CACZjiC,QADY,EAEZ3B,KAFY,EAEF;EAEVA,KAAK,CAAC66B,aAAN,GAAsBhvB,uBAAuB,CAAClK,QAAQ,CAACtC,KAAV,CAA7C,CAAA;AACH,CAAA;;AAID,SAASwkC,iBAAT,CAA2BnX,QAA3B,EAAkD;EAC9C,IAAMvC,UAAU,GAAoB,EAApC,CAAA;AAEAuC,EAAAA,QAAQ,CAAC5X,OAAT,CAAiB,UAACuY,OAAD,EAAQ;AACrBA,IAAAA,OAAO,CAACE,cAAR,CAAuBzY,OAAvB,CAA+B,UAAClV,EAAD,EAAc;AAAX,MAAA,IAAAktB,SAAS,GAAAltB,EAAA,CAAAktB,SAAT,CAAA;;MAC9B,IAAI3C,UAAU,CAACrsB,OAAX,CAAmBgvB,SAAnB,CAAgC,GAAA,CAAC,CAArC,EAAwC;AACpC,QAAA,OAAA;AACH,OAAA;;MACD3C,UAAU,CAACpiB,IAAX,CAAgB+kB,SAAhB,CAAA,CAAA;KAJJ,CAAA,CAAA;GADJ,CAAA,CAAA;AASA,EAAA,OAAO3C,UAAP,CAAA;AACH,CAAA;;AAED,SAAS2Z,kBAAT,CACIniC,QADJ,EAEIyyB,aAFJ,EAGID,eAHJ,EAII4P,iBAJJ,EAKIC,mBALJ,EAMIlP,cANJ,EAM6C;AAEnC,EAAA,IAAAl1B,EAAA,GAGF60B,eAAe,CACfI,SAAS,CAAClzB,QAAD,EAAWmzB,cAAX,CADM,EAEfV,aAFe,EAGfD,eAHe,CAHb;AAAA,MACQmH,kBAAkB,cAD1B;AAAA,MAEUD,oBAAoB,gBAF9B,CAAA;;AAQNC,EAAAA,kBAAkB,CAACxmB,OAAnB,CAA2B,UAACrQ,IAAD,EAAK;IAC5B,IAAIA,IAAI,CAAC4pB,OAAT,EAAkB;MACd0V,iBAAiB,CAACh8B,IAAlB,CAAuB;AACnBhH,QAAAA,IAAI,EAAE,QADa;QAEnBsG,GAAG,EAAE5C,IAAI,CAAC4C,GAAAA;OAFd,CAAA,CAAA;AAIH,KAAA;GANL,CAAA,CAAA;AAQAg0B,EAAAA,oBAAoB,CAACvmB,OAArB,CAA6B,UAACrQ,IAAD,EAAK;IAC9B,IAAIA,IAAI,CAAC4pB,OAAT,EAAkB;MACd2V,mBAAmB,CAACj8B,IAApB,CAAyB;AACrBhH,QAAAA,IAAI,EAAE,QADe;QAErBsG,GAAG,EAAE5C,IAAI,CAAC4C,GAAAA;OAFd,CAAA,CAAA;AAIH,KAAA;GANL,CAAA,CAAA;;AAQM,EAAA,IAAA1H,EAAA,GAGFu0B,oBAAoB,CAACvyB,QAAD,CAHlB;AAAA,MACQsiC,uBAAuB,GAAAtkC,EAAA,CAAAorB,QAD/B;AAAA,MAEUmZ,yBAAyB,GAAAvkC,EAAA,CAAAmrB,UAFnC,CAAA;;AAKNmZ,EAAAA,uBAAuB,CAACnvB,OAAxB,CAAgC,UAACqvB,QAAD,EAAS;AACrC,IAAA,IACI9/B,SAAS,CACL0/B,iBADK,EAEL,UAACnkC,EAAD,EAAc;UAAXmB,IAAI,GAAAnB,EAAA,CAAAmB;UAAEsG,GAAG,GAAAzH,EAAA,CAAAyH;AAAO,MAAA,OAAAtG,IAAI,KAAK,QAAT,IAAqBsG,GAAG,KAAK88B,QAA7B,CAAA;KAFd,CAAT,IAGK,CAJT,EAKE;AACE,MAAA,OAAA;AACH,KAAA;;IACDJ,iBAAiB,CAACh8B,IAAlB,CAAuB;AACnBhH,MAAAA,IAAI,EAAE,QADa;AAEnBsG,MAAAA,GAAG,EAAE88B,QAAAA;KAFT,CAAA,CAAA;GATJ,CAAA,CAAA;AAeAD,EAAAA,yBAAyB,CAACpvB,OAA1B,CAAkC,UAACqvB,QAAD,EAAS;AACvC,IAAA,IACI9/B,SAAS,CACL2/B,mBADK,EAEL,UAACpkC,EAAD,EAAc;UAAXmB,IAAI,GAAAnB,EAAA,CAAAmB;UAAEsG,GAAG,GAAAzH,EAAA,CAAAyH;AAAO,MAAA,OAAAtG,IAAI,KAAK,QAAT,IAAqBsG,GAAG,KAAK88B,QAA7B,CAAA;KAFd,CAAT,IAGK,CAJT,EAKE;AACE,MAAA,OAAA;AACH,KAAA;;IACDH,mBAAmB,CAACj8B,IAApB,CAAyB;AACrBhH,MAAAA,IAAI,EAAE,QADe;AAErBsG,MAAAA,GAAG,EAAE88B,QAAAA;KAFT,CAAA,CAAA;GATJ,CAAA,CAAA;AAcH,CAAA;;AAED,IAAMC,oBAAkB,GAAGziB,qBAAqB,CAAC,EAAD,EAAK,CAAC,WAAD,EAAc,UAAd,CAAL,CAAhD,CAAA;AAEA;;;;AAIG;;AACH,gBAAe;AACXhnB,EAAAA,IAAI,EAAE,WADK;AAEX0pC,EAAAA,YAAY,EAAE,QAFH;AAGXtpC,EAAAA,KAAK,EAAE,CACH,WADG,EAEH,eAFG,EAGH,gBAHG,EAIH,uBAJG,EAKH,SALG,EAMH,eANG,EAOH,gBAPG,EAQH,oBARG,EASH,yBATG,EAUH,WAVG,EAWH,eAXG,EAYH,qBAZG,EAaH,sBAbG,EAcH,oBAdG,EAeH,mBAfG,EAgBH,QAhBG,EAiBH,aAjBG,EAkBH,gBAlBG,EAmBH,iCAnBG,EAoBH,2BApBG,CAHI;EAyBXD,MAAM,EAAE,CAAC,MAAD,CAzBG;EA0BXwpC,GAAG,EAAE,CACD,ixBADC,CA1BM;AAwEXC,EAAAA,MAAM,EAAN,UACI5iC,QADJ,EAEI00B,KAFJ,EAEmB;AAEf,IAAA,IAAMh3B,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,IAAA,IAAKoiC,SAAS,GAOdpiC,KAAK,CAAA3B,GAPL;AAAA,QACM6jC,UAAU,GAMhBliC,KAAK,CAAA1B,IAPL;AAAA,QAEAoE,IAAI,GAKJ1C,KAAK,CAAA0C,IAPL;AAAA,QAGA+P,IAAI,GAIJzS,KAAK,CAAAyS,IAPL;AAAA,QAIAkH,IAAI,GAGJ3Z,KAAK,KAPL;AAAA,QAKA4Z,IAAI,GAEJ5Z,KAAK,KAPL;AAAA,QAMAsoB,cAAc,GACdtoB,KAAK,eAPL,CAAA;AASA,IAAA,IAAAO,EAAA,GACA+B,QAAQ,CAAC5G,KAAT,CAAcypC,mBADd;QAAAA,mBAAmB,GAAA5kC,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EAAvB,CAAA;;AAGJ,IAAA,IAAI,CAAC+nB,cAAD,IAAmB,CAACA,cAAc,CAAC4c,MAAnC,IAA6C,CAAC5a,aAAa,CAAChoB,QAAD,EAAW,EAAX,CAA/D,EAA+E;AAC3E,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACDtC,IAAAA,KAAK,CAAC8qB,UAAN,GAAmB2T,kBAAkB,CAACn8B,QAAD,CAArC,CAAA;IAGA,IAAM8iC,OAAO,GAAGhpC,IAAI,CAACwa,GAAL,CAASlU,IAAI,CAAC,CAAD,CAAb,EAAkB+P,IAAI,CAAC,CAAD,CAAtB,EAA2BkH,IAAI,CAAC,CAAD,CAA/B,EAAoCC,IAAI,CAAC,CAAD,CAAxC,CAAhB,CAAA;IACA,IAAMyrB,MAAM,GAAGjpC,IAAI,CAACwa,GAAL,CAASlU,IAAI,CAAC,CAAD,CAAb,EAAkB+P,IAAI,CAAC,CAAD,CAAtB,EAA2BkH,IAAI,CAAC,CAAD,CAA/B,EAAoCC,IAAI,CAAC,CAAD,CAAxC,CAAf,CAAA;AACA,IAAA,IAAM0rB,aAAa,GAAGhd,cAAc,CAACgd,aAAf,IAAgC,EAAtD,CAAA;AACA,IAAA,IAAM18B,KAAK,GAAG4D,uBAAuB,CAAClK,QAAQ,CAACtC,KAAV,CAArC,CAAA;IACA,IAAM0kC,iBAAiB,GAA0B,EAAjD,CAAA;IACA,IAAMC,mBAAmB,GAA0B,EAAnD,CAAA;IACA,IAAMja,kBAAkB,GAAoB,EAA5C,CAAA;IACA,IAAMC,oBAAoB,GAAoB,EAA9C,CAAA;IACA,IAAM4a,SAAS,GAGV,EAHL,CAAA;;AAIM,IAAA,IAAAjlC,EAAA,GAA8C0W,OAAO,CAACpO,KAAD,CAArD;AAAA,QAAEjB,KAAK,GAAArH,EAAA,CAAAqH,KAAP;AAAA,QAASC,MAAM,GAAAtH,EAAA,CAAAsH,MAAf;AAAA,QAAiBvJ,GAAG,GAAAiC,EAAA,CAAAjC,GAApB;AAAA,QAAsBC,IAAI,GAAAgC,EAAA,CAAAhC,IAA1B;AAAA,QAA4B2K,MAAM,GAAA3I,EAAA,CAAA2I,MAAlC;AAAA,QAAoCkO,KAAK,GAAA7W,EAAA,CAAA6W,KAAzC,CAAA;;AACN,IAAA,IAAMwgB,UAAU,GAAG;AAAEr5B,MAAAA,IAAI,MAAN;AAAQ6Y,MAAAA,KAAK,EAAAA,KAAb;AAAe9Y,MAAAA,GAAG,EAAAA,GAAlB;AAAoB4K,MAAAA,MAAM,EAAAA,MAA1B;AAA4BmhB,MAAAA,MAAM,EAAE,CAAC9rB,IAAI,GAAG6Y,KAAR,IAAiB,CAArD;AAAwDukB,MAAAA,MAAM,EAAE,CAACr9B,GAAG,GAAG4K,MAAP,IAAiB,CAAA;KAApG,CAAA;AACA,IAAA,IAAMu8B,gBAAgB,GAAGF,aAAa,CAACzgC,MAAd,GAAuB,CAAhD,CAAA;IACA,IAAM4gC,YAAY,GAAGD,gBAAgB,GAC/BxuB,OAAO,CAACsuB,aAAD,CADwB,GAE9B,EAFP,CAAA;;AAIA,IAAA,IAAI,CAAChd,cAAc,CAACC,OAApB,EAA6B;MACzB,IAAID,cAAc,CAACjkB,SAAnB,EAA8B;AAC1BkhC,QAAAA,SAAS,CAAC78B,IAAV,CACIgmB,uBAAuB,CACnBpsB,QADmB,EAEnBsG,KAFmB,EAGnB0f,cAAc,CAACjkB,SAHI,EAInB8gC,mBAJmB,CAD3B,CAAA,CAAA;AAQH,OAAA;;MACD,IAAI7c,cAAc,CAAC+T,IAAnB,EAAyB;AACrB,QAAA,IAAMvkB,IAAI,GAAGd,OAAO,CAACpO,KAAD,CAApB,CAAA;;QACA,IAAI0f,cAAc,CAAC8B,MAAnB,EAA2B;AACtBtS,UAAAA,IAAY,CAAC4jB,MAAb,GAAsB,CAAC5jB,IAAI,CAACzZ,GAAL,GAAWyZ,IAAI,CAAC7O,MAAjB,IAA2B,CAAjD,CAAA;AACA6O,UAAAA,IAAY,CAACsS,MAAb,GAAsB,CAACtS,IAAI,CAACxZ,IAAL,GAAYwZ,IAAI,CAACX,KAAlB,IAA2B,CAAjD,CAAA;AACJ,SAAA;;QACDouB,SAAS,CAAC78B,IAAV,CAAeolB,UAAU,CAACxrB,QAAD,EAAWwV,IAAX,EAAiBqtB,mBAAjB,CAAzB,CAAA,CAAA;AACH,OAAA;;AACD,MAAA,IAAIK,gBAAJ,EAAsB;QAClB,IAAIld,cAAc,CAAC8B,MAAnB,EAA2B;AACtBqb,UAAAA,YAAoB,CAAC/J,MAArB,GACG,CAAC+J,YAAY,CAACpnC,GAAb,GAAmBonC,YAAY,CAACx8B,MAAjC,IAA2C,CAD9C,CAAA;AAEAw8B,UAAAA,YAAoB,CAACrb,MAArB,GACG,CAACqb,YAAY,CAACnnC,IAAb,GAAoBmnC,YAAY,CAACtuB,KAAlC,IAA2C,CAD9C,CAAA;AAEJ,SAAA;;QACDouB,SAAS,CAAC78B,IAAV,CAAeolB,UAAU,CAACxrB,QAAD,EAAWmjC,YAAX,EAAyBN,mBAAzB,CAAzB,CAAA,CAAA;AACH,OAAA;;AACDI,MAAAA,SAAS,CAAC9vB,OAAV,CAAkB,UAACsY,QAAD,EAAS;AAEP,QAAA,IAAU2X,gBAAgB,GAEtC3X,QAAQ,CAAArC,QAAR,CAAQ2B,QAFI;AAAA,YACYsY,kBAAkB,GAC1C5X,QAAQ,CAAAtC,UAAR,CAAQ4B,QAFI,CAAA;AAGhBqX,QAAAA,iBAAiB,CAACh8B,IAAlB,CAAsBqK,KAAtB,CAAA2xB,iBAAA,EACOgB,gBAAgB,CAACrgC,MAAjB,CAAwB,UAAC9E,EAAD,EAAmB;AAAhB,UAAA,IAAA2tB,cAAc,GAAA3tB,EAAA,CAAA2tB,cAAd,CAAA;AAC1B,UAAA,OAAOA,cAAc,CAACzN,IAAf,CAAoB,UAAClgB,EAAD,EAAc;AAAX,YAAA,IAAAktB,SAAS,GAAAltB,EAAA,CAAAktB,SAAT,CAAA;YAAgB,OAAA,CAACA,SAAS,CAACuK,IAAX,CAAA;AAAe,WAAtD,CAAP,CAAA;AACH,SAFE,CAEA75B,CAAAA,GAFA,CAGC,UAAC6vB,OAAD,EAAQ;UAAK,OAAC;AACVtsB,YAAAA,IAAI,EAAE,MADI;YAEVsG,GAAG,EAAEgmB,OAAO,CAAChmB,GAAAA;WAFJ,CAAA;AAGF,SANZ,CADP,CAAA,CAAA;AAUA28B,QAAAA,mBAAmB,CAACj8B,IAApB,CAAwBqK,KAAxB,CAAA4xB,mBAAA,EACOgB,kBAAkB,CAACtgC,MAAnB,CAA0B,UAAC9E,EAAD,EAAmB;AAAhB,UAAA,IAAA2tB,cAAc,GAAA3tB,EAAA,CAAA2tB,cAAd,CAAA;AAC5B,UAAA,OAAOA,cAAc,CAACzN,IAAf,CAAoB,UAAClgB,EAAD,EAAc;AAAX,YAAA,IAAAktB,SAAS,GAAAltB,EAAA,CAAAktB,SAAT,CAAA;YAAgB,OAAA,CAACA,SAAS,CAACuK,IAAX,CAAA;AAAe,WAAtD,CAAP,CAAA;AACH,SAFE,CAEA75B,CAAAA,GAFA,CAGC,UAAC6vB,OAAD,EAAQ;UAAK,OAAC;AACVtsB,YAAAA,IAAI,EAAE,MADI;YAEVsG,GAAG,EAAEgmB,OAAO,CAAChmB,GAAAA;WAFJ,CAAA;AAGF,SANZ,CADP,CAAA,CAAA;QAUA0iB,kBAAkB,CAAChiB,IAAnB,CAAAqK,KAAA,CAAA2X,kBAAA,EAA2B8Z,iBAAiB,CAACkB,gBAAD,CAA5C,CAAA,CAAA;QACA/a,oBAAoB,CAACjiB,IAArB,CAAAqK,KAAA,CAAA4X,oBAAA,EAA6B6Z,iBAAiB,CAACmB,kBAAD,CAA9C,CAAA,CAAA;OA1BJ,CAAA,CAAA;AA4BH,KAAA;;AAEDlB,IAAAA,kBAAkB,CACdniC,QADc,EAEd,CAAChE,IAAD,EAAO6Y,KAAP,CAFc,EAGd,CAAC9Y,GAAD,EAAM4K,MAAN,CAHc,EAIdy7B,iBAJc,EAKdC,mBALc,CAAlB,CAAA;;AAOA,IAAA,IAAIa,gBAAJ,EAAsB;AAClBf,MAAAA,kBAAkB,CACdniC,QADc,EAEd,CAACmjC,YAAY,CAACnnC,IAAd,EAAoBmnC,YAAY,CAACtuB,KAAjC,CAFc,EAGd,CAACsuB,YAAY,CAACpnC,GAAd,EAAmBonC,YAAY,CAACx8B,MAAhC,CAHc,EAIdy7B,iBAJc,EAKdC,mBALc,EAMdrc,cAAc,CAACmN,cAND,CAAlB,CAAA;AAQH,KAAA;;AACD,IAAA,IAAMmQ,aAAa,GAAOp/B,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAAkkB,kBAAA,EAAuB,IAAvB,CAAA,EAAuBC,oBAAvB,MAAA,CAA1B,CAAA;;IACA,IAAMmU,iBAAiB,GAAG8G,aAAa,CAACvgC,MAAd,CAAqB,UAAAooB,SAAA,EAAa;AAAA,MAAA,OAAAA,SAAS,CAACvb,OAAV,IAAqB,CAACub,SAAS,CAAC0M,QAAhC,CAAA;AAAwC,KAA1E,CAA1B,CAAA;IACA,IAAMoF,aAAa,GAAGqG,aAAa,CAACvgC,MAAd,CAAqB,UAAAooB,SAAA,EAAS;MAAI,OAAAA,SAAS,CAAC0M,QAAV,CAAA;AAAkB,KAApD,EAAsDtY,IAAtD,CAA2D,UAACzO,CAAD,EAAI0O,CAAJ,EAAK;AAClF,MAAA,OAAO1O,CAAC,CAACglB,GAAF,GAAStW,CAAC,CAACsW,GAAlB,CAAA;AACH,KAFqB,CAAtB,CAAA;AAIApY,IAAAA,YAAY,CACR1d,QADQ,EAER,QAFQ,EAGR;AACIwoB,MAAAA,UAAU,EAAE8a,aAAa,CAACvgC,MAAd,CAAqB,UAAC9E,EAAD,EAAY;AAAT,QAAA,IAAA2R,OAAO,GAAA3R,EAAA,CAAA2R,OAAP,CAAA;AAAc,QAAA,OAAA,CAACA,OAAD,CAAA;AAAQ,OAA9C,CADhB;AAEI2zB,MAAAA,QAAQ,EAAE/G,iBAFd;AAGIgH,MAAAA,IAAI,EAAEvG,aAAAA;KANF,EAQR,IARQ,CAAZ,CAAA;AAUA,IAAA,OACO/4B,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAA8yB,sBAAsB,CACrBh3B,QADqB,EAErBw8B,iBAFqB,EAGrB,CAACsG,OAAD,EAAUC,MAAV,CAHqB,EAIrB1N,UAJqB,EAKrBX,KALqB,CAAtB,EAMF,IANE,CAAA,EAOAgD,mBAAmB,CAClB13B,QADkB,EAElBi9B,aAFkB,EAGlB,CAAC6F,OAAD,EAAUC,MAAV,CAHkB,EAIlB1N,UAJkB,EAKlBX,KALkB,CAPnB,MAAA,CAAA,EAcAU,gBAAgB,CACfp1B,QADe,EAEf,YAFe,EAGfqoB,oBAHe,EAIf,CAACuX,UAAD,EAAaE,SAAb,CAJe,EAKfzK,UALe,EAMfX,KANe,CAdhB,EAsBA,IAtBA,CAAA,EAsBAU,gBAAgB,CACfp1B,QADe,EAEf,UAFe,EAGfooB,kBAHe,EAIf,CAACwX,UAAD,EAAaE,SAAb,CAJe,EAKfzK,UALe,EAMfX,KANe,CAtBhB,EA8BA,IA9BA,CAAA,EA8BAQ,eAAe,CACdl1B,QADc,EAEd,YAFc,EAGdqiC,mBAHc,EAIdS,OAJc,EAKdhD,SALc,EAMdz6B,KANc,EAOd,CAPc,EAQdqvB,KARc,CA9Bf,EAwCA,IAxCA,CAAA,EAwCAQ,eAAe,CACdl1B,QADc,EAEd,UAFc,EAGdoiC,iBAHc,EAIdW,MAJc,EAKdnD,UALc,EAMdt6B,MANc,EAOd,CAPc,EAQdovB,KARc,CAxCf,EAkDL,IAlDK,CADP,CAAA;GA9MO;AAmQXx1B,EAAAA,SAAS,EAAT,UACIc,QADJ,EAEIjD,CAFJ,EAEU;AAENiD,IAAAA,QAAQ,CAACtC,KAAT,CAAesoB,cAAf,GAAgC;MAC5BC,OAAO,EAAElpB,CAAC,CAACmjB,SADiB;AAE5B6Z,MAAAA,IAAI,EAAE,IAFsB;AAG5BjS,MAAAA,MAAM,EAAE,IAAA;KAHZ,CAAA;IAKAsY,aAAa,CAACpgC,QAAD,CAAb,CAAA;GA5QO;EA8QXX,IAAI,EAAJ,UACIW,QADJ,EACsE;AAElE,IAAA,IAAMtC,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;;AACA,IAAA,IAAI,CAAC0iC,aAAa,CAACpgC,QAAD,CAAlB,EAA8B;AAC1BtC,MAAAA,KAAK,CAAC8qB,UAAN,GAAmB2T,kBAAkB,CAACn8B,QAAD,CAArC,CAAA;AACH,KAAA;;IACD,IAAItC,KAAK,CAACsoB,cAAV,EAA0B;AACtBtoB,MAAAA,KAAK,CAACsoB,cAAN,CAAqB4c,MAArB,GAA8B,IAA9B,CAAA;AACH,KAAA;GAvRM;EAyRXtd,UAAU,EAAV,UACItlB,QADJ,EACsE;IAElE,IAAK+b,CAAAA,KAAL,CAAW/b,QAAX,CAAA,CAAA;GA5RO;EA8RXyjC,OAAO,EAAP,UACIzjC,QADJ,EACsE;IAElE,IAAK+b,CAAAA,KAAL,CAAW/b,QAAX,CAAA,CAAA;GAjSO;AAmSX0jC,EAAAA,oBAAoB,EAApB,UAAqB1jC,QAArB,EAAyDjD,CAAzD,EAA+D;AAC3D,IAAA,IAAI0lC,oBAAkB,CAACziC,QAAD,EAAWjD,CAAX,CAAlB,IAAmC4mC,oBAA4B,CAAC3jC,QAAD,EAAWjD,CAAX,CAAnE,EAAkF;AAC9E,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;IACD,IAAI,CAACA,CAAC,CAACmjB,SAAH,IAAgBnjB,CAAC,CAACqB,UAAtB,EAAkC;AAC9B,MAAA,OAAOgiB,QAAQ,CAACrjB,CAAC,CAACqB,UAAF,CAAa0M,MAAd,EAAsBsF,MAAM,CAAC,cAAD,CAA5B,CAAf,CAAA;AACH,KAAA;GAzSM;EA2SXwzB,gBAAgB,EAAhB,UACI5jC,QADJ,EACsE;AAElEA,IAAAA,QAAQ,CAACtC,KAAT,CAAesoB,cAAf,GAAgC,IAAhC,CAAA;IACAoa,aAAa,CAACpgC,QAAD,CAAb,CAAA;GA/SO;EAiTX6jC,WAAW,EAAX,UACI7jC,QADJ,EACsE;IAElE,IAAKX,CAAAA,IAAL,CAAUW,QAAV,CAAA,CAAA;GApTO;EAsTX8jC,cAAc,EAAd,UACI9jC,QADJ,EACsE;IAElE,IAAK+b,CAAAA,KAAL,CAAW/b,QAAX,CAAA,CAAA;GAzTO;AA2TX+jC,EAAAA,cAAc,EAAd,UAAe/jC,QAAf,EAA8BjD,CAA9B,EAAoC;AAChC,IAAA,IAAA,CAAKmC,SAAL,CAAec,QAAf,EAAyBjD,CAAzB,CAAA,CAAA;GA5TO;EA8TXinC,SAAS,EAAT,UACIhkC,QADJ,EACoE;IAEhE,IAAKX,CAAAA,IAAL,CAAUW,QAAV,CAAA,CAAA;GAjUO;EAmUXikC,YAAY,EAAZ,UACIjkC,QADJ,EACoE;IAEhE,IAAK+b,CAAAA,KAAL,CAAW/b,QAAX,CAAA,CAAA;GAtUO;EAwUXkkC,qBAAqB,EAArB,UACIlkC,QADJ,EACoE;AAEhEA,IAAAA,QAAQ,CAACtC,KAAT,CAAesoB,cAAf,GAAgC,IAAhC,CAAA;IACAoa,aAAa,CAACpgC,QAAD,CAAb,CAAA;GA5UO;EA8UXmkC,gBAAgB,EAAhB,UACInkC,QADJ,EACsE;IAElE,IAAKX,CAAAA,IAAL,CAAUW,QAAV,CAAA,CAAA;GAjVO;EAmVXokC,mBAAmB,EAAnB,UACIpkC,QADJ,EACoE;IAEhE,IAAK+b,CAAAA,KAAL,CAAW/b,QAAX,CAAA,CAAA;GAtVO;EAwVX+b,KAAK,EAAL,UAAM/b,QAAN,EAAmB;AACf,IAAA,IAAMtC,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;IAEAA,KAAK,CAAC+qB,UAAN,GAAmB,KAAnB,CAAA;IACA/qB,KAAK,CAAC8qB,UAAN,GAAmB,EAAnB,CAAA;IACA9qB,KAAK,CAACsoB,cAAN,GAAuB,IAAvB,CAAA;IACAtoB,KAAK,CAACs/B,YAAN,GAAqB,EAArB,CAAA;AACH,GAAA;AA/VU,CAAf,CAAA;AAmWA;;;;;;;;;;AAUG;;AACH;;;;;;;;;;AAUG;;AACH;;;;;;;;;;;;;AAaG;;AAEH;;;;;;;;;;;;;AAaG;;AACH;;;;;;;;;;;;;;AAcG;;AACH;;;;;;;;;;AAUG;;AAEH;;;;;;;;;;AAUG;;AAEH;;;;;;;;;;AAUG;;AACH;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;AAWG;;AACH;;;;;;;;;;;AAWG;;AACH;;;;;;;;;;AAUG;;AAEH;;;;;;;;;;AAUG;;AAEH;;;;;;;;;;AAUG;;AACH;;;;;;;;;;AAUG;;AAEH;;;;;;;;;;AAUG;;AAGH;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;;;AAcG;;ACrkCG,SAAUqH,8BAAV,CACFrkC,QADE,EAEFlC,QAFE,EAGFwmC,gBAHE,EAIF5P,KAJE,EAIa;AAGT,EAAA,IAAAz2B,EAIF,GAAA+B,QAAQ,CAACukC,QAAT,EAJE;AAAA,MACFC,WAAW,GAAAvmC,EAAA,CAAAumC,WADT;AAAA,MAEQC,WAAW,GAAAxmC,EAAA,CAAA8Z,QAFnB;AAAA,MAGFhW,SAAS,eAHP,CAAA;;EAMF,IAAA8J,IAAI,GACJqM,QAAQ,CAAClY,QAAQ,CAAC5G,KAAV,EAAiB0E,QAAjB,CAAR,CAAyC+N,IADzC,CAAA;EAIJ,IAAMihB,IAAI,GAAI/qB,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoB,CAAC,CAAnC,CAAA;EACA,IAAM2iC,WAAW,GAAGD,WAAW,GAAG3qC,IAAI,CAAC+nB,EAAnB,GAAwB,GAA5C,CAAA;EACA,IAAM8iB,YAAY,GAAqB,EAAvC,CAAA;AAEA,EAAA,IAAMC,WAAW,GAAG5kC,QAAQ,CAAC4kC,WAA7B,CAAA;;AACA,EAAA,IAAI,CAACA,WAAW,CAACC,kBAAjB,EAAqC;IACjCD,WAAW,CAACC,kBAAZ,GAAiC,EAAjC,CAAA;AACH,GAAA;;AACD,EAAA,IAAMA,kBAAkB,GAAGD,WAAW,CAACC,kBAAvC,CAAA;AAEAP,EAAAA,gBAAgB,CAACnxB,OAAjB,CAAyB,UAAClV,EAAD,EAAQ;AAAL,IAAA,IAAAnC,GAAG,GAAAmC,EAAA,CAAAnC,GAAH,CAAA;AACxB6oC,IAAAA,YAAY,CAAC7oC,GAAD,CAAZ,GAAoB,IAApB,CAAA;GADJ,CAAA,CAAA;AAIA,EAAA,OAAOwoC,gBAAgB,CAACzoC,GAAjB,CAAqB,UAACoC,EAAD,EAA0B;AAAvB,IAAA,IAAAqM,IAAI,UAAJ;AAAA,QAAM+F,UAAU,GAAApS,EAAA,CAAAoS,UAAhB;AAAA,QAAkBvU,GAAG,GAAAmC,EAAA,CAAAnC,GAArB,CAAA;AAC3B,IAAA,IAAMqK,OAAO,GAAG7I,iBAAiB,CAACxB,GAAD,CAAjC,CAAA;;IAEA,IAAI,CAACqK,OAAD,IAAY,CAACw+B,YAAY,CAAC7oC,GAAD,CAA7B,EAAoC;AAChC,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;AACD+oC,IAAAA,kBAAkB,CAAC/oC,GAAD,CAAlB,GAA0B,IAA1B,CAAA;AACA,IAAA,IAAMgpC,iBAAiB,GAAG,CAAChb,QAAQ,CAAC4a,WAAD,EAAc,EAAd,CAAR,GAA4B5X,IAAI,GAAGvvB,mBAAmB,CAACzB,GAAD,CAAtD,GAA8D,GAA/D,IAAsE,GAAhG,CAAA;IAEA,IAAMipC,SAAS,GAA2B,EAA1C,CAAA;IAEA7oB,OAAO,CAAC5R,IAAD,CAAP,CAAc6I,OAAd,CAAsB,UAAAna,IAAA,EAAI;MACtB+rC,SAAS,CAAC,OAAQrrC,CAAAA,MAAR,CAAQV,IAAR,CAAD,CAAT,GAA4BsR,IAAI,CAACtR,IAAD,CAAhC,CAAA;KADJ,CAAA,CAAA;AAGA,IAAA,OACI07B,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK37B,QAAA,CAAA;MAAA47B,SAAS,EAAE1kB,MAAM,MAAN,OAAA,iBAAO,WAAW,aAAatU,KAAKgC,WAAauS,YAC9C,MADH,CAAX;AACc,MAAA,eAAA,EAAAy0B,iBADd;MAEe,gBAAAhpC,EAAAA,GAAAA;KAFf,EAGGipC,SAHH,EAGY;AACbpQ,MAAAA,GAAG,EAAE,YAAA,CAAaj7B,MAAb,CAAaoC,GAAb,CADQ;MAEbkU,KAAK,EAAE8H,mBAAmB,CAACrH,KAApB,CAAoB,KAAA,CAApB,EAAoBvM,aAAA,CAAA,CAAAugC,WAAA,EAAa54B,IAAb,CAAA,EAAuB1F,OAAO,CAACtK,GAAR,CAAY,UAAAuG,KAAA,EAAK;QAAI,OAAAoiC,WAAW,CAACpiC,KAAD,CAAX,CAAA;OAArB,CAAvB,EAAwE,KAAxE,CAApB,CAAA;AAFM,KAHZ,CAAL,CADJ,CAAA;AAQH,GAtBM,CAAP,CAAA;AAuBH,CAAA;AACK,SAAU4iC,uBAAV,CACFhlC,QADE,EAEFilC,iBAFE,EAGFnnC,QAHE,EAIF42B,KAJE,EAIa;EAET,IAAAz2B,KAGFia,QAAQ,CAAClY,QAAQ,CAAC5G,KAAV,EAAiB0E,QAAjB,CAHN;AAAA,MACFE,EAAgD,GAAAC,EAAA,CAAAqmC,gBAD9C;MACgBnX,UAAU,GAAGnvB,EAAA,KAAA,KAAA,CAAA,GAAAinC,iBAAA,KAD7B;AAAA,MAEFC,qBAAqB,2BAFnB,CAAA;;EAKN,IAAI,CAAC/X,UAAL,EAAiB;AACb,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;EACD,IAAMmX,gBAAgB,GAAGnX,UAAU,KAAK,IAAf,GAAsB7zB,UAAtB,GAAmC6zB,UAA5D,CAAA;AAEA,EAAA,OAAAjpB,aAAA,CAAAA,aAAA,CAAA,EAAA,EACQghC,qBAAqB,GAAGC,oBAAoB,CAACnlC,QAAD,EAAW00B,KAAX,EAAkB52B,QAAlB,EAA4BwmC,gBAA5B,CAAvB,GAAuE,EADpG,EAEO,IAFP,CAAA,EAEOD,8BAA8B,CAC7BrkC,QAD6B,EAE7BlC,QAF6B,EAG7BwmC,gBAAgB,CAACzoC,GAAjB,CAAqB,UAAAC,GAAA,EAAG;IACpB,OAAO;AACHwO,MAAAA,IAAI,EAAE,EADH;AAEH+F,MAAAA,UAAU,EAAE,EAFT;AAGHvU,MAAAA,GAAG,EAAAA,GAAAA;KAHP,CAAA;AAKH,GAND,CAH6B,EAU7B44B,KAV6B,CAFrC,EAcE,IAdF,CAAA,CAAA;AAeH,CAAA;AAEe,SAAA0Q,UAAA,CACZ1Q,KADY,EAEZ3yB,SAFY,EAGZ3B,IAHY,EAIZ+P,IAJY,EAKZtE,IALY,EAMZ8oB,GANY,EAMQ;EACpB,IAAuBtkB,UAAA,GAAA,EAAvB,CAAA;;OAAA,IAAuBC,EAAA,GAAA,GAAvBA,EAAuB,GAAAC,SAAA,CAAAhO,QAAvB+N,EAAuB,IAAA;IAAvBD,UAAuB,CAAAC,EAAA,GAAA,CAAA,CAAvB,GAAuBC,SAAA,CAAAD,EAAA,CAAvB,CAAA;;;AAEA,EAAA,IAAMsH,GAAG,GAAGC,MAAM,CAACzX,IAAD,EAAO+P,IAAP,CAAlB,CAAA;EACA,IAAM4H,QAAQ,GAAGhW,SAAS,GAAI+nB,QAAQ,CAAClS,GAAG,GAAG9d,IAAI,CAAC+nB,EAAX,GAAgB,GAAjB,EAAsB,EAAtB,CAAT,GAAsC,GAAzC,GAA+C,CAAC,CAA1E,CAAA;AAEA,EAAA,OAAO6S,KAAA,CAAAG,aAAA,CAAA,KAAA,EAAA;AAAKF,IAAAA,GAAG,EAAE,OAAA,CAAAj7B,MAAA,CAAQi7B,GAAR,CAAV;AACHG,IAAAA,SAAS,EAAE1kB,MAAM,CAAAK,KAAN,CAAM,KAAA,CAAN,EAAMvM,aAAA,CAAA,CAAC,MAAD,EAAS,WAAT,EAAsBnC,SAAS,GAAG,MAAH,GAAY,EAA3C,EAA+CA,SAA/C,CAAA,EAA6DsO,UAA7D,EACF,KADE,CAAN,CADR;AAEY,IAAA,eAAA,EAAA0H,QAFZ;qBAGY4c,GAHZ;AAGe,IAAA,gBAAA,EACF5yB,SAJb;IAIwBiO,KAAK,EAAE2H,YAAY,CAACvX,IAAD,EAAO+P,IAAP,EAAatE,IAAb,EAAmB+L,GAAnB,CAAA;AAJ3C,GAAA,CAAP,CAAA;AAKH,CAAA;AAEK,SAAUytB,eAAV,CACF3Q,KADE,EAEF52B,QAFE,EAGFwnC,IAHE,EAIFh/B,KAJE,EAKFuF,IALE,EAKU;EAEZ,IAAMshB,UAAU,GAAGmY,IAAI,KAAK,IAAT,GAAgBjsC,WAAhB,GAA8BisC,IAAjD,CAAA;EAEA,OAAOnY,UAAU,CAACtxB,GAAX,CAAe,UAACkG,SAAD,EAAY4D,CAAZ,EAAa;AACzB,IAAA,IAAA1H,EAAA,GAAmBX,iBAAiB,CAACyE,SAAD,CAApC;AAAA,QAACwjC,MAAM,GAAAtnC,EAAA,CAAA,CAAA,CAAP;AAAA,QAASunC,MAAM,GAAAvnC,EAAA,CAAA,CAAA,CAAf,CAAA;;IAEN,IAAIunC,MAAM,IAAI,IAAd,EAAoB;AAChB,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,OAAOJ,UAAU,CAAC1Q,KAAD,EAAQ3yB,SAAR,EAAmBuE,KAAK,CAACi/B,MAAD,CAAxB,EAAkCj/B,KAAK,CAACk/B,MAAD,CAAvC,EAAiD35B,IAAjD,EAAuD,EAAA,CAAGnS,MAAH,CAAGoE,QAAH,EAAkB,MAAlB,CAAkBpE,CAAAA,MAAlB,CAAkBiM,CAAlB,CAAvD,EAA8E7H,QAA9E,CAAjB,CAAA;AACH,GAPM,CAOJiF,CAAAA,MAPI,CAOG0iC,OAPH,CAAP,CAAA;AAQH,CAAA;AAEK,SAAUC,mBAAV,CAA8B5nC,QAA9B,EAA8C;AAChD,EAAA,OAAO,UACHkC,QADG,EAEH00B,KAFG,EAEY;IAEf,IAAM4Q,IAAI,GAAGptB,QAAQ,CAAClY,QAAQ,CAAC5G,KAAV,EAAiB0E,QAAjB,CAAR,CAA0CwnC,IAAvD,CAAA;;IAEA,IAAIA,IAAI,KAAKA,IAAI,KAAK,IAAT,IAAiBA,IAAI,CAAC/iC,MAA3B,CAAR,EAA4C;AACxC,MAAA,OAAA2B,aAAA,CAAAA,aAAA,CAAA,EAAA,EACOmhC,eAAe,CACd3Q,KADc,EAEd52B,QAFc,EAGdwnC,IAHc,EAIdtlC,QAAQ,CAACukC,QAAT,GAAoBC,WAJN,EAKdxkC,QAAQ,CAAC5G,KAAT,CAAeyS,IALD,CADtB,EAQO,IARP,CAAA,EAQO85B,wBAAwB,CAAC3lC,QAAD,EAAWlC,QAAX,EAAqB42B,KAArB,CAR/B,EASE,IATF,CAAA,CAAA;AAUH,KAAA;;AACD,IAAA,OAAOkR,mBAAmB,CAAC5lC,QAAD,EAAWlC,QAAX,EAAqB42B,KAArB,CAA1B,CAAA;GAlBJ,CAAA;AAoBH,CAAA;SAEekR,oBACZ5lC,UACAlC,UACA42B,OAAe;EAEf,OAAOsQ,uBAAuB,CAAChlC,QAAD,EAAW1G,UAAX,EAAuBwE,QAAvB,EAAiC42B,KAAjC,CAA9B,CAAA;AACH,CAAA;SAEeiR,yBACZ3lC,UACAlC,UACA42B,OAAe;AAEf,EAAA,OAAOsQ,uBAAuB,CAAChlC,QAAD,EAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAX,EAAqClC,QAArC,EAA+C42B,KAA/C,CAA9B,CAAA;AACH,CAAA;AAEK,SAAUyQ,oBAAV,CACFnlC,QADE,EAEF00B,KAFE,EAGF52B,QAHE,EAIFwmC,gBAJE,EAIyB;AAE3B,EAAA,IAAMM,WAAW,GAAG5kC,QAAQ,CAAC4kC,WAA7B,CAAA;;AACA,EAAA,IAAI,CAACA,WAAW,CAACC,kBAAjB,EAAqC;IACjCD,WAAW,CAACC,kBAAZ,GAAiC,EAAjC,CAAA;AACH,GAAA;;AACK,EAAA,IAAA5mC,EAIF,GAAA+B,QAAQ,CAACukC,QAAT,EAJE;AAAA,MACFC,WAAW,GAAAvmC,EAAA,CAAAumC,WADT;AAAA,MAEQC,WAAW,GAAAxmC,EAAA,CAAA8Z,QAFnB;AAAA,MAGFhW,SAAS,eAHP,CAAA;;AAMN,EAAA,IAAM8iC,kBAAkB,GAAGD,WAAW,CAACC,kBAAvC,CAAA;AAGI,EAAA,IAAAh5B,IAAI,GACJ7L,QAAQ,CAAC5G,KAAT,KADA,CAAA;EAEJ,IAAM0zB,IAAI,GAAI/qB,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoB,CAAC,CAAnC,CAAA;EACA,IAAM2iC,WAAW,GAAGD,WAAW,GAAG3qC,IAAI,CAAC+nB,EAAnB,GAAwB,GAA5C,CAAA;AAEA,EAAA,OAAO,CAACyiB,gBAAgB,IAAIpoB,OAAO,CAAC2oB,kBAAD,CAA5B,EAAkDhpC,GAAlD,CAAsD,UAAAC,GAAA,EAAG;AAC5D,IAAA,IAAMqK,OAAO,GAAG7I,iBAAiB,CAACxB,GAAD,CAAjC,CAAA;;IAEA,IAAI,CAACqK,OAAL,EAAc;AACV,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAM2+B,iBAAiB,GAAG,CAAChb,QAAQ,CAAC4a,WAAD,EAAc,EAAd,CAAR,GAA4B5X,IAAI,GAAGvvB,mBAAmB,CAACzB,GAAD,CAAtD,GAA8D,GAA/D,IAAsE,GAAhG,CAAA;AAEA,IAAA,IAAMuU,UAAU,GAAa,CAAC,gBAAD,CAA7B,CAAA;;AAEA,IAAA,IAAIvS,QAAJ,EAAc;AACVuS,MAAAA,UAAU,CAACjK,IAAX,CAAgB,WAAhB,EAA6BtI,QAA7B,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,OACI42B,KACI,CAAAG,aADJ,CACI,KADJ,EACI;MAAAC,SAAS,EAAE1kB,MAAM,CAAAK,KAAN,CAAM,KAAA,CAAN,EAAUJ,UAAV,CAAX;AACe,MAAA,eAAA,EAAAy0B,iBADf;wBACkDhpC,GADlD;AACuD64B,MAAAA,GAAG,EAAE,mBAAA,CAAAj7B,MAAA,CAAoBoC,GAApB,CAD5D;MAEAkU,KAAK,EAAE8H,mBAAmB,MAAnB,OAAA,iBAAoB2sB,aAAa54B,OAAU1F,OAAO,CAACtK,GAAR,CAAY,UAAAuG,KAAA,EAAK;QAAI,OAAAoiC,WAAW,CAACpiC,KAAD,CAAX,CAAA;OAArB,GAAwC,MAAnF,CAAA;AAFP,KADJ,CADJ,CAAA;AAMH,GAnBM,CAAP,CAAA;AAoBH;;ACzMD;;;;AAIG;;AACH,gBAAe;AACXpJ,EAAAA,IAAI,EAAE,WADK;EAEXI,KAAK,EAAE,CACH,WADG,EAEH,cAFG,EAGH,oBAHG,EAIH,iBAJG,EAKH,eALG,CAFI;AASXD,EAAAA,MAAM,EAAE,CACJ,WADI,EAEJ,MAFI,EAGJ,SAHI,EAIJ,gBAJI,EAKJ,WALI,EAMJ,cANI,CATG;AAiBX0sC,EAAAA,YAAY,EAAZ,YAAA;IACI,OAAO,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,CAAP,CAAA;GAlBO;AAoBXC,EAAAA,iBAAiB,EAAjB,YAAA;IACI,OAAO,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,CAAP,CAAA;GArBO;AAuBXlD,EAAAA,MAAM,EAAN,UACI5iC,QADJ,EAEI00B,KAFJ,EAEmB;AAET,IAAA,IAAAz2B,EAAA,GAA+B+B,QAAQ,CAAC5G,KAAxC;AAAA,QAAEu/B,kBAAkB,GAAA16B,EAAA,CAAA06B,kBAApB;AAAA,QAAsB9sB,IAAI,GAAA5N,EAAA,CAAA4N,IAA1B,CAAA;;AACA,IAAA,IAAA7N,EAAA,GAA6BgC,QAAQ,CAACukC,QAAT,EAA7B;AAAA,QAAEwB,QAAQ,GAAA/nC,EAAA,CAAA+nC,QAAV;AAAA,QAAYC,YAAY,GAAAhoC,EAAA,CAAAgoC,YAAxB,CAAA;;AAEN,IAAA,IAAI,CAACrN,kBAAD,IAAuB,CAACoN,QAA5B,EAAsC;AAClC,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMzhC,IAAI,GAAGyhC,QAAQ,CAACzhC,IAAtB,CAAA;;IAEA,IAAI,CAACA,IAAI,CAAC,CAAD,CAAL,IAAY,CAACA,IAAI,CAAC,CAAD,CAArB,EAA0B;AACtB,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AAED,IAAA,IAAMe,KAAK,GAAGkS,WAAW,CAACjT,IAAD,CAAzB,CAAA;IACA,IAAMsT,GAAG,GAAGC,MAAM,CAACvT,IAAD,EAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAlB,CAAA;AAEA,IAAA,OAAO,CAACowB,mBAAA,MAAA;MAAKI,SAAS,EAAE1kB,MAAM,CAC1B,MAD0B,EAE1B,YAF0B,EAG1B,UAH0B,EAI1B,QAJ0B;AAK3BukB,MAAAA,GAAG,EAAE;AAAuB3kB,MAAAA,KAAK,EAAE;AAClC3K,QAAAA,KAAK,EAAE,EAAG3L,CAAAA,MAAH,CAAG2L,KAAH,EAAY,IAAZ,CAD2B;AAElC+B,QAAAA,SAAS,EAAE,YAAA,CAAA1N,MAAA,CAAassC,YAAY,CAAC,CAAD,CAAzB,EAA4B,MAA5B,CAA4BtsC,CAAAA,MAA5B,CAAmCssC,YAAY,CAAC,CAAD,CAA/C,EAAkD,aAAlD,CAAkDtsC,CAAAA,MAAlD,CAAgEke,GAAhE,EAAmE,cAAnE,CAAmEle,CAAAA,MAAnE,CAAkFmS,IAAlF,EAAyF,GAAzF,CAAA;AAFuB,OAAA;KAL9B,CAAD,CAAP,CAAA;GA1CO;AAoDX3M,EAAAA,SAAS,EAAT,UACIc,QADJ,EAEIjD,CAFJ,EAEU;AAEE,IAAA,IAAAsB,KAAK,GAA+BtB,CAAC,CAAAsB,KAArC;AAAA,QAAOI,WAAW,GAAkB1B,CAAC,CAAA0B,WAArC;AAAA,QAAoBqB,WAAW,GAAK/C,CAAC,YAArC,CAAA;AACR,IAAA,IAAMW,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,IAAA,IAAAQ,MAAM,GAENR,KAAK,CAAAQ,MAFL;AAAA,QACA8R,KAAK,GACLtS,KAAK,CAAAsS,KAFL,CAAA;;IAIJ,IAAI9R,MAAM,CAACe,SAAX,EAAsB;AAClB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACDf,IAAAA,MAAM,CAACe,SAAP,GAAmBa,WAAW,IAAIE,QAAQ,CAACoK,WAA3C,CAAA;IAEA/L,KAAK,CAACA,KAAN,GAAc,EAAd,CAAA;AACAA,IAAAA,KAAK,CAACrC,IAAN,GAAalB,UAAU,CAACkV,KAAK,CAAChU,IAAN,IAAc,EAAf,CAAV,IAAgC,CAA7C,CAAA;AACAqC,IAAAA,KAAK,CAACtC,GAAN,GAAYjB,UAAU,CAACkV,KAAK,CAACjU,GAAN,IAAa,EAAd,CAAV,IAA+B,CAA3C,CAAA;AACAsC,IAAAA,KAAK,CAACsI,MAAN,GAAe7L,UAAU,CAACkV,KAAK,CAACrJ,MAAN,IAAgB,EAAjB,CAAV,IAAkC,CAAjD,CAAA;AACAtI,IAAAA,KAAK,CAACwW,KAAN,GAAc/Z,UAAU,CAACkV,KAAK,CAAC6E,KAAN,IAAe,EAAhB,CAAV,IAAiC,CAA/C,CAAA;AACAxW,IAAAA,KAAK,CAACgK,UAAN,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAA;AAEA1H,IAAAA,YAAY,CAACX,QAAD,EAAWjD,CAAX,CAAZ,CAAA;AACAkL,IAAAA,wBAAwB,CAAClL,CAAD,EAAI,WAAJ,CAAxB,CAAA;AACAklC,IAAAA,kBAAkB,CAACjiC,QAAD,EAAW3B,KAAX,CAAlB,CAAA;AAEAA,IAAAA,KAAK,CAAC4nC,QAAN,GAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAA;AACA5nC,IAAAA,KAAK,CAAC6nC,cAAN,GAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAA;IACA7nC,KAAK,CAACU,MAAN,GAAe,KAAf,CAAA;AACAV,IAAAA,KAAK,CAAC8nC,WAAN,GAAoB,CAAC,CAAD,EAAI,CAAJ,CAApB,CAAA;IAEA,IAAM3pB,MAAM,GAAGD,UAAU,CAAcvc,QAAd,EAAwBjD,CAAxB,EACrB7D,QAAA,CAAA;MAAAuW,GAAG,EAAE,UAACuE,SAAD,EAAoB;QACrB3V,KAAK,CAACgK,UAAN,GAAmB2L,SAAnB,CAAA;AACH,OAAA;AAFD,KAAA,EAGGtM,uBAAuB,CAAC3K,CAAD,CAH1B,CADqB,CAAzB,CAAA;IAMA,IAAMgB,MAAM,GAAGU,WAAW,IAAIif,YAAY,CAAC1d,QAAD,EAAW,aAAX,EAA0Bwc,MAA1B,CAA1C,CAAA;;IAEA,IAAIze,MAAM,KAAK,KAAf,EAAsB;MAClBM,KAAK,CAACU,MAAN,GAAe,IAAf,CAAA;AACAiB,MAAAA,QAAQ,CAACtC,KAAT,CAAeqoC,QAAf,GAA0B;AACtBK,QAAAA,SAAS,EAAEpmC,QAAQ,CAAC0U,OAAT,EADW;AAEtBpQ,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;OAFV,CAAA;AAIH,KAND,MAMO;MACHpG,MAAM,CAACe,SAAP,GAAmB,IAAnB,CAAA;MACAZ,KAAK,CAACT,OAAN,GAAgB,KAAhB,CAAA;AACH,KAAA;;AACD,IAAA,OAAOS,KAAK,CAACU,MAAN,GAAeyd,MAAf,GAAwB,KAA/B,CAAA;GAtGO;AAwGXnd,EAAAA,IAAI,EAAJ,UACIW,QADJ,EAEIjD,CAFJ,EAEU;IAEN,IAAI,CAACA,CAAL,EAAQ;AACJ,MAAA,OAAA;AACH,KAAA;;AACDiF,IAAAA,qBAAqB,CAACjF,CAAD,EAAI,WAAJ,CAArB,CAAA;AAEQ,IAAA,IAAAsB,KAAK,GAA+DtB,CAAC,CAAAsB,KAArE;AAAA,QAAOI,WAAW,GAAkD1B,CAAC,CAAnD0B,WAAlB;AAAA,QAAoB4oB,UAAU,GAAsCtqB,CAAC,CAAAsqB,UAArE;AAAA,QAAgCzpB,OAAO,GAA6Bb,CAAC,CAA9Ba,OAAvC;AAAA,QAAyCsiB,SAAS,GAAkBnjB,CAAC,CAAAmjB,SAArE;AAAA,QAAoDimB,WAAW,GAAKppC,CAAC,YAArE,CAAA;AACF,IAAA,IAAA2C,KAAK,GAAY3C,CAAC,CAAA2C,KAAlB;AAAA,QAAOC,KAAK,GAAK5C,CAAC,CAAA4C,KAAlB,CAAA;AACE,IAAA,IAAAZ,MAAM,GAA2CV,KAAK,OAAtD;AAAA,QAAQ4nC,QAAQ,GAAiC5nC,KAAK,CAAA4nC,QAAtD;AAAA,QAAkBC,cAAc,GAAiB7nC,KAAK,CAAtB6nC,cAAhC;AAAA,QAAkC79B,UAAU,GAAKhK,KAAK,WAAtD,CAAA;;IAER,IAAI,CAACU,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAIonC,WAAJ,EAAiB;AACbzmC,MAAAA,KAAK,IAAIymC,WAAW,CAAC,CAAD,CAApB,CAAA;AACAxmC,MAAAA,KAAK,IAAIwmC,WAAW,CAAC,CAAD,CAApB,CAAA;AACH,KAAA;;AACD,IAAA,IAAM/sC,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;AAEA,IAAA,IAAMitC,cAAc,GAAGjtC,KAAK,CAACitC,cAA7B,CAAA;IACA,IAAMC,YAAY,GAAG7nC,WAAW,GAAG,CAAH,GAAQrF,KAAK,CAACktC,YAAN,IAAsB,CAA9D,CAAA;IACA,IAAM3N,kBAAkB,GAAGl6B,WAAW,GAAG,CAAH,GAAQrF,KAAK,CAACu/B,kBAAN,IAA4B,CAA1E,CAAA;IAEA,IAAI4N,aAAa,GAAG,CAApB,CAAA;IACA,IAAItb,cAAc,GAAG,KAArB,CAAA;IACA,IAAI2D,eAAe,GAAG,KAAtB,CAAA;IACA,IAAIxD,gBAAgB,GAAG,KAAvB,CAAA;IACA,IAAIyD,iBAAiB,GAAG,KAAxB,CAAA;;IAEA,IAAI,CAACpwB,WAAD,IAAgBk6B,kBAAkB,GAAG,CAArC,KAA2Cj5B,KAAK,IAAIC,KAApD,CAAJ,EAAgE;AAC5D,MAAA,IAAM6mC,eAAe,GAAGptC,KAAK,CAACotC,eAAN,IAAyB,CAAjD,CAAA;AACA,MAAA,IAAM/qB,GAAG,GACHqO,QAAQ,CAAC0c,eAAe,GAAG3uB,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACnY,KAAD,EAAQC,KAAR,CAAT,CAAN,GAAiC,GAAjC,GAAuC7F,IAAI,CAAC+nB,EAA/D,EAAmE8W,kBAAnE,CAAR,GACA6N,eAFN,CAAA;MAGA,IAAMC,EAAE,GAAG9mC,KAAK,GAAG7F,IAAI,CAACyc,GAAL,CAASzc,IAAI,CAAC4oB,GAAL,CAAS,CAACjH,GAAG,GAAG,EAAP,IAAa,GAAb,GAAmB3hB,IAAI,CAAC+nB,EAAjC,CAAT,CAAnB,CAAA;MACA,IAAM6kB,EAAE,GAAGhnC,KAAK,GAAG5F,IAAI,CAACyc,GAAL,CAASzc,IAAI,CAAC4oB,GAAL,CAASjH,GAAG,GAAG,GAAN,GAAY3hB,IAAI,CAAC+nB,EAA1B,CAAT,CAAnB,CAAA;MACA,IAAMuS,CAAC,GAAG7c,WAAW,CAAC,CAACmvB,EAAD,EAAKD,EAAL,CAAD,CAArB,CAAA;AACAF,MAAAA,aAAa,GAAG9qB,GAAG,GAAG3hB,IAAI,CAAC+nB,EAAX,GAAgB,GAAhC,CAAA;MAEAniB,KAAK,GAAG00B,CAAC,GAAGt6B,IAAI,CAAC4oB,GAAL,CAAS6jB,aAAT,CAAZ,CAAA;MACA5mC,KAAK,GAAGy0B,CAAC,GAAGt6B,IAAI,CAACopB,GAAL,CAASqjB,aAAT,CAAZ,CAAA;AACH,KAAA;;IAED,IAAI,CAAC3oC,OAAD,IAAY,CAACa,WAAb,IAA4B,CAAC4oB,UAAjC,EAA6C;AACnC,MAAA,IAAAppB,EAAA,GAAiCg7B,mBAAmB,CACtDj5B,QADsD,EAC5CN,KAD4C,EACrCC,KADqC,EAEtDg5B,kBAFsD,EAGtDzY,SAAS,IAAIimB,WAHyC,EAG5B9nC,KAH4B,CAApD;AAAA,UAACqsB,YAAY,GAAAzsB,EAAA,CAAA,CAAA,CAAb;AAAA,UAAe2sB,cAAc,GAAA3sB,EAAA,CAAA,CAAA,CAA7B,CAAA;;MAKNgtB,cAAc,GAAGP,YAAY,CAACC,MAA9B,CAAA;MACAiE,eAAe,GAAGlE,YAAY,CAACgC,OAA/B,CAAA;MACAtB,gBAAgB,GAAGR,cAAc,CAACD,MAAlC,CAAA;MACAkE,iBAAiB,GAAGjE,cAAc,CAAC8B,OAAnC,CAAA;AAEA,MAAA,IAAMvS,cAAc,GAAGuQ,YAAY,CAACpd,MAApC,CAAA;AACA,MAAA,IAAM4M,gBAAgB,GAAG0Q,cAAc,CAACtd,MAAxC,CAAA;AAEA5N,MAAAA,KAAK,IAAIya,cAAT,CAAA;AACAxa,MAAAA,KAAK,IAAIua,gBAAT,CAAA;AACH,KAAA;;AAED,IAAA,IAAMysB,eAAe,GAAGnlC,IAAI,CAACgD,iBAAiB,CAAC;AAAEnG,MAAAA,KAAK,EAAAA,KAAP;AAASqB,MAAAA,KAAK,EAAAA,KAAd;AAAgBC,MAAAA,KAAK,EAAAA,KAAAA;KAAtB,CAAlB,EAA6C0I,UAA7C,CAA5B,CAAA;AACA,IAAA,IAAM2L,SAAS,GAAGxS,IAAI,CAAC+C,gBAAgB,CAAC;AAAElG,MAAAA,KAAK,EAAAA,KAAP;AAASqB,MAAAA,KAAK,EAAAA,KAAd;AAAgBC,MAAAA,KAAK,EAAAA,KAAAA;KAAtB,CAAjB,EAA4C0I,UAA5C,CAAtB,CAAA;AAEAu+B,IAAAA,aAAa,CAAC5yB,SAAD,EAAYxX,QAAZ,CAAb,CAAA;AACAoqC,IAAAA,aAAa,CAACD,eAAD,EAAkBnqC,QAAlB,CAAb,CAAA;;IAEA,IAAI,CAACm8B,kBAAL,EAAyB;AACrB,MAAA,IAAI,CAAC1N,cAAD,IAAmB,CAAC2D,eAAxB,EAAyC;AACrC5a,QAAAA,SAAS,CAAC,CAAD,CAAT,GAAe8V,QAAQ,CAAC9V,SAAS,CAAC,CAAD,CAAV,EAAesyB,YAAf,CAAvB,CAAA;AACAK,QAAAA,eAAe,CAAC,CAAD,CAAf,GAAqB7c,QAAQ,CAAC6c,eAAe,CAAC,CAAD,CAAhB,EAAqBL,YAArB,CAA7B,CAAA;AACH,OAAA;;AACD,MAAA,IAAI,CAAClb,gBAAD,IAAqB,CAACyD,iBAA1B,EAA6C;AACzC7a,QAAAA,SAAS,CAAC,CAAD,CAAT,GAAe8V,QAAQ,CAAC9V,SAAS,CAAC,CAAD,CAAV,EAAesyB,YAAf,CAAvB,CAAA;AACAK,QAAAA,eAAe,CAAC,CAAD,CAAf,GAAqB7c,QAAQ,CAAC6c,eAAe,CAAC,CAAD,CAAhB,EAAqBL,YAArB,CAA7B,CAAA;AACH,OAAA;AACJ,KAAA;;AAGD,IAAA,IAAMO,UAAU,GAAGxmC,KAAK,CAACsmC,eAAD,EAAkBt+B,UAAlB,CAAxB,CAAA;AACA,IAAA,IAAM/D,IAAI,GAAGjE,KAAK,CAAC2T,SAAD,EAAY3L,UAAZ,CAAlB,CAAA;AACA,IAAA,IAAM1K,KAAK,GAAG0C,KAAK,CAACiE,IAAD,EAAO2hC,QAAP,CAAnB,CAAA;AACA,IAAA,IAAMa,WAAW,GAAGzmC,KAAK,CAACwmC,UAAD,EAAaX,cAAb,CAAzB,CAAA;IAEA7nC,KAAK,CAAC4nC,QAAN,GAAiB3hC,IAAjB,CAAA;IACAjG,KAAK,CAAC6nC,cAAN,GAAuBW,UAAvB,CAAA;AAGAxoC,IAAAA,KAAK,CAAC0oC,SAAN,GAAkBppC,KAAlB,CA1FM;AA2FN;;AACAU,IAAAA,KAAK,CAAC2oC,QAAN,GAAiB1iC,IAAjB,CA5FM;AA6FN;;IAEA,IAAMtI,IAAI,GAAGqC,KAAK,CAACrC,IAAN,GAAa6qC,UAAU,CAAC,CAAD,CAApC,CAAA;IACA,IAAM9qC,GAAG,GAAGsC,KAAK,CAACtC,GAAN,GAAY8qC,UAAU,CAAC,CAAD,CAAlC,CAAA;IACA,IAAMhyB,KAAK,GAAGxW,KAAK,CAACwW,KAAN,GAAcgyB,UAAU,CAAC,CAAD,CAAtC,CAAA;IACA,IAAMlgC,MAAM,GAAGtI,KAAK,CAACsI,MAAN,GAAekgC,UAAU,CAAC,CAAD,CAAxC,CAAA;IACA,IAAMh+B,aAAa,GAAGzE,sBAAsB,CAAC/F,KAAD,EACxC,YAAA,CAAa3E,MAAb,CAAasa,SAAS,CAAC,CAAD,CAAtB,EAAyB,MAAzB,CAAA,CAAyBta,MAAzB,CAAgCsa,SAAS,CAAC,CAAD,CAAzC,EAA4C,KAA5C,CADwC,EACW,YAAAta,CAAAA,MAAA,CAAa4K,IAAI,CAAC,CAAD,CAAjB,EAA2B,MAA3B,CAA2B5K,CAAAA,MAA3B,CAA2B4K,IAAI,CAAC,CAAD,CAA/B,EAAkC,KAAlC,CADX,CAA5C,CAAA;AAGAiE,IAAAA,qBAAqB,CAACxL,CAAD,EAAI8L,aAAJ,CAArB,CAAA;AAEA7I,IAAAA,QAAQ,CAACtC,KAAT,CAAeqoC,QAAf,CAAwBzhC,IAAxB,GAA+B7F,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAAY6F,IAAtD,CAAA;;AACA,IAAA,IAAI,CAAC7F,WAAD,IAAgB,CAAC4nC,cAAjB,IAAmC1oC,KAAK,CAACinB,KAAN,CAAY,UAAA9I,GAAA,EAAG;AAAI,MAAA,OAAA,CAACA,GAAD,CAAA;KAAnB,CAAnC,IAA+DgrB,WAAW,CAAC3oB,IAAZ,CAAiB,UAAArC,GAAA,EAAG;AAAI,MAAA,OAAA,CAACA,GAAD,CAAA;AAAI,KAA5B,CAAnE,EAAkG;AAC9F,MAAA,OAAA;AACH,KAAA;;AAEK,IAAA,IAAA9d,EAAA,GAGFgC,QAAQ,CAACtC,KAHP;AAAA,QACF2H,KAAK,GAAArH,EAAA,CAAAqH,KADH;AAAA,QAEFC,MAAM,GAAAtH,EAAA,CAAAsH,MAFJ,CAAA;IAIN,IAAMkX,MAAM,GAAGD,UAAU,CAASvc,QAAT,EAAmBjD,CAAnB,EAAoB7D,QAAA,CAAA;AACzCkO,MAAAA,SAAS,EAAEyB,aAD8B;AAEzCvE,MAAAA,IAAI,EAAAA,IAFqC;AAGzC3G,MAAAA,KAAK,EAAAA,KAHoC;AAIzCqW,MAAAA,SAAS,WAJgC;AAKzC6yB,MAAAA,UAAU,EAAAA,UAL+B;AAMzCC,MAAAA,WAAW,EAAAA,WAN8B;AAOzCH,MAAAA,eAAe,EAAAA,eAP0B;AAQzC3qC,MAAAA,IAAI,EAAAA,IARqC;AASzCD,MAAAA,GAAG,EAAAA,GATsC;AAUzC8Y,MAAAA,KAAK,EAAAA,KAVoC;AAWzClO,MAAAA,MAAM,QAXmC;AAYzCtB,MAAAA,KAAK,EAAAA,KAZoC;AAazCC,MAAAA,MAAM,EAAAA,MAbmC;AAczC1H,MAAAA,OAAO,EAAAA,OAAAA;KAdkC,EAetCmL,aAAa,CAAC;AACb3B,MAAAA,SAAS,EAAEyB,aAAAA;AADE,KAAD,EAEb9L,CAFa,CAfyB,CAApB,CAAzB,CAAA;IAoBA,CAAC0B,WAAD,IAAgBif,YAAY,CAAC1d,QAAD,EAAW,QAAX,EAAqBwc,MAArB,CAA5B,CAAA;AACA,IAAA,OAAOA,MAAP,CAAA;GAhPO;AAkPXyqB,EAAAA,SAAS,EAAT,UACIjnC,QADJ,EAEIjD,CAFJ,EAEU;AAEN,IAAA,IAAMsB,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;AAEI,IAAA,IAAA8nC,WAAW,GACX9nC,KAAK,CAAA8nC,WADL,CAAA;;IAGJ,IAAIA,WAAW,CAAC,CAAD,CAAX,IAAkBA,WAAW,CAAC,CAAD,CAAjC,EAAsC;AAClC9nC,MAAAA,KAAK,CAAC8nC,WAAN,GAAoB,CAAC,CAAD,EAAI,CAAJ,CAApB,CAAA;AACA,MAAA,OAAO,IAAK9mC,CAAAA,IAAL,CAAUW,QAAV,EAAwB9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA6D,CAAA,CAAA,EAAG;AAAAopC,QAAAA,WAAW,EAAAA,WAAAA;AAAX,OAAH,CAAxB,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,KAAP,CAAA;GA/PO;AAiQX1C,EAAAA,OAAO,EAAP,UACIzjC,QADJ,EAEIjD,CAFJ,EAEU;AAEE,IAAA,IAAA0B,WAAW,GAAY1B,CAAC,CAAA0B,WAAxB;AAAA,QAAaJ,KAAK,GAAKtB,CAAC,CAAAsB,KAAxB,CAAA;AAER2B,IAAAA,QAAQ,CAACtC,KAAT,CAAeqoC,QAAf,GAA0B,IAA1B,CAAA;;AACA,IAAA,IAAI,CAAC1nC,KAAK,CAACU,MAAX,EAAmB;AACf,MAAA,OAAA;AACH,KAAA;;IACDV,KAAK,CAACU,MAAN,GAAe,KAAf,CAAA;IACA,IAAMmoC,KAAK,GAAG9pB,aAAa,CAAYpd,QAAZ,EAAsBjD,CAAtB,EAAyB,EAAzB,CAA3B,CAAA;IACA,CAAC0B,WAAD,IAAgBif,YAAY,CAAC1d,QAAD,EAAW,WAAX,EAAwBknC,KAAxB,CAA5B,CAAA;AACA,IAAA,OAAOA,KAAP,CAAA;GA9QO;AAgRXnD,EAAAA,cAAc,EAAd,UAAe/jC,QAAf,EAA2DjD,CAA3D,EAAiE;AACrD,IAAA,IAAAsB,KAAK,GAAuBtB,CAAC,CAAAsB,KAA7B;AAAA,QAAOiB,OAAO,GAAcvC,CAAC,CAAAuC,OAA7B;AAAA,QAAgBC,OAAO,GAAKxC,CAAC,QAA7B,CAAA;IAER,IAAMyf,MAAM,GAAG,IAAKtd,CAAAA,SAAL,CAAec,QAAf,EAAyBjD,CAAzB,CAAf,CAAA;;IAEA,IAAI,CAACyf,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,IAAMrjB,MAAM,GAAG2tB,iBAAiB,CAAC9mB,QAAD,EAAW,IAAX,EAAiB,WAAjB,EAA8B,CAC1DV,OAAO,IAAI,CAD+C,EAE1DC,OAAO,IAAI,CAF+C,CAA9B,EAG7BxC,CAH6B,EAG1B,KAH0B,EAGnB,WAHmB,CAAhC,CAAA;;IAKA,IAAM2f,UAAU,GAAAxjB,QAAA,CAAAA,QAAA,CAAA,EAAA,EACTsjB,MADS,CAAA,EACH;AACTiF,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OADf;AAETtoB,MAAAA,MAAM,EAAAA,MAAAA;AAFG,KADG,CAAhB,CAAA;;IAKA,IAAM4E,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,kBAAX,EAA+B0c,UAA/B,CAA3B,CAAA;AAEAre,IAAAA,KAAK,CAACU,MAAN,GAAehB,MAAM,KAAK,KAA1B,CAAA;AAEA,IAAA,OAAOM,KAAK,CAACU,MAAN,GAAeyd,MAAf,GAAwB,KAA/B,CAAA;GAtSO;AAwSXwnB,EAAAA,SAAS,EAAT,UAAUhkC,QAAV,EAAsDjD,CAAtD,EAA4D;AAChD,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;;AAER,IAAA,IAAI,CAACA,KAAK,CAACU,MAAX,EAAmB;AACf,MAAA,OAAA;AACH,KAAA;;IACD,IAAMyd,MAAM,GAAG,IAAKnd,CAAAA,IAAL,CAAUW,QAAV,EAAoBjD,CAApB,CAAf,CAAA;AACQ,IAAA,IAAAgqC,SAAS,GAAKhqC,CAAC,CAACsB,KAAF,UAAd,CAAA;AACR,IAAA,IAAMlF,MAAM,GAAG2tB,iBAAiB,CAAC9mB,QAAD,EAAW,IAAX,EAAiB,MAAjB,EAAyB+mC,SAAzB,EAAoChqC,CAApC,EAAuC,KAAvC,EAA8C,WAA9C,CAAhC,CAAA;;IAEA,IAAI,CAACyf,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;IACD,IAAME,UAAU,GAAAxjB,QAAA,CAAA;AACZuoB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OADZ;AAEZtoB,MAAAA,MAAM,EAAAA,MAAAA;KAFM,EAGTqjB,MAHS,CAAhB,CAAA;;AAMAkB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,aAAX,EAA0B0c,UAA1B,CAAZ,CAAA;AACA,IAAA,OAAOA,UAAP,CAAA;GA5TO;AA8TXunB,EAAAA,YAAY,EAAZ,UAAajkC,QAAb,EAAyDjD,CAAzD,EAA+D;AACnD,IAAA,IAAAgC,MAAM,GAAYhC,CAAC,CAAAgC,MAAnB;AAAA,QAAQV,KAAK,GAAKtB,CAAC,CAAAsB,KAAnB,CAAA;;AAER,IAAA,IAAI,CAACA,KAAK,CAACU,MAAX,EAAmB;AACf,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAA,CAAK0kC,OAAL,CAAazjC,QAAb,EAAuBjD,CAAvB,CAAA,CAAA;IACA,IAAM5D,MAAM,GAAG2tB,iBAAiB,CAAC9mB,QAAD,EAAW,IAAX,EAAiB,SAAjB,EAA4B,CAAC,CAAD,EAAI,CAAJ,CAA5B,EAAoCjD,CAApC,EAAuC,KAAvC,EAA8C,WAA9C,CAAhC,CAAA;IACA2gB,YAAY,CAAC1d,QAAD,EAAW,gBAAX,EAA6Bod,aAAa,CAAiBpd,QAAjB,EAA2BjD,CAA3B,EAA8B;AAChF0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OADwD;AAEhFtoB,MAAAA,MAAM,EAAAA,MAAAA;AAF0E,KAA9B,CAA1C,CAAZ,CAAA;AAKA,IAAA,OAAO4F,MAAP,CAAA;GA3UO;;AA6UX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgCAknB,OAAO,EAAP,UAAQjmB,QAAR,EAAoD;IAChD,IAAM3B,KAAK,GAAG,EAAd,CAAA;AACA,IAAA,IAAMmX,IAAI,GAAGxV,QAAQ,CAAC0U,OAAT,EAAb,CAAA;IACA,IAAIhV,KAAK,GAAG,CAAZ,CAAA;IACA,IAAIC,KAAK,GAAG,CAAZ,CAAA;IAEA,OAAO;AACHwnC,MAAAA,SAAS,EAAE,KADR;AAEHC,MAAAA,YAAY,EAAA,YAAA;QACR,OAAO;AAAE/oC,UAAAA,KAAK,EAAAA,KAAAA;SAAd,CAAA;OAHD;MAKH4nB,OAAO,EAAP,UAAQlpB,CAAR,EAAuB;QACnB,IAAI,GAAA,IAAOA,CAAX,EAAc;AACV2C,UAAAA,KAAK,GAAG3C,CAAC,CAACyW,CAAF,GAAMgC,IAAI,CAACxZ,IAAnB,CAAA;AACH,SAFD,MAEO,IAAI,QAAYe,IAAAA,CAAhB,EAAmB;UACtB2C,KAAK,IAAI3C,CAAC,CAAC6C,MAAX,CAAA;AACH,SAAA;;QACD,IAAI,GAAA,IAAO7C,CAAX,EAAc;AACV4C,UAAAA,KAAK,GAAG5C,CAAC,CAAC0W,CAAF,GAAM+B,IAAI,CAACzZ,GAAnB,CAAA;AACH,SAFD,MAEO,IAAI,QAAYgB,IAAAA,CAAhB,EAAmB;UACtB4C,KAAK,IAAI5C,CAAC,CAAC8C,MAAX,CAAA;AACH,SAAA;;QAED,OAAO;AAAExB,UAAAA,KAAK,EAAAA,KAAP;AAASqB,UAAAA,KAAK,OAAd;AAAgBC,UAAAA,KAAK,EAAAA,KAAAA;SAA5B,CAAA;OAjBD;AAmBH2L,MAAAA,UAAU,EAAA,YAAA;QACN,OAAO;AAAEjN,UAAAA,KAAK,EAAAA,KAAP;AAASU,UAAAA,MAAM,EAAE,IAAA;SAAxB,CAAA;AACH,OAAA;KArBL,CAAA;GAnXO;EA2YXgd,KAAK,EAAL,UAAM/b,QAAN,EAAkE;AAC9DA,IAAAA,QAAQ,CAACtC,KAAT,CAAeQ,MAAf,CAAsBe,SAAtB,GAAkC,IAAlC,CAAA;AACAe,IAAAA,QAAQ,CAACtC,KAAT,CAAeqoC,QAAf,GAA0B,IAA1B,CAAA;AACH,GAAA;AA9YU,CAAf,CAAA;AAiZA;;;;;;;;;AASG;;AAEH;;;;;;;;;AASG;;AAEH;;;;;;;;;AASE;;AAEF;;;;;;;;;;;AAWE;;AAEF;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;;;;AAeE;;AAEF;;;;;;;;;;;;;;;;;;;;;;;AAuBE;;AAEF;;;;;;;;;;;;;;;AAeG;;AC7gBH;;;;AAIG;;AAEH,IAAMtD,oBAAkB,GAAGziB,qBAAqB,CAAC,WAAD,CAAhD,CAAA;AAEA,gBAAe;AACXhnB,EAAAA,IAAI,EAAE,WADK;AAEXqlB,EAAAA,SAAS,EAAE,MAFA;AAGXwH,EAAAA,QAAQ,EAAE,IAHC;AAIXzsB,EAAAA,KAAK,EAAE,CACH,WADG,EAEH,gBAFG,EAGH,kBAHG,EAIH,uBAJG,EAKH,WALG,EAMH,cANG,EAOH,kBAPG,EAQH,MARG,EASH,qBATG,CAJI;AAeXD,EAAAA,MAAM,EAAE,CACJ,aADI,EAEJ,cAFI,EAGJ,QAHI,EAIJ,WAJI,EAKJ,kBALI,EAMJ,mBANI,EAOJ,aAPI,EAQJ,gBARI,CAfG;AAyBXypC,EAAAA,MAAM,EAAE8C,mBAAmB,CAAC,WAAD,CAzBhB;AA0BXhC,EAAAA,oBAAoB,EAAEjB,oBA1BX;AA2BX4E,EAAAA,aAAa,EAAEvnB,yBAAyB,CAAC,WAAD,CA3B7B;AA4BX8jB,EAAAA,gBAAgB,EAAhB,UACI5jC,QADJ,EAEIjD,CAFJ,EAEU;;;AAGF,IAAA,IAAAqB,UAAU,GAQVrB,CAAC,CARSqB,UAAV;AAAA,QACAR,OAAO,GAOPb,CAAC,CAPMa,OADP;AAAA,QAEA0pC,OAAO,GAMPvqC,CAAC,QARD;AAAA,QAGAwe,eAAe,GAKfxe,CAAC,CAAAwe,eARD;AAAA,QAIAzb,WAAW,GAIX/C,CAAC,CAAA+C,WARD;AAAA,QAKAzB,KAAK,GAGLtB,CAAC,CAHIsB,KALL;AAAA,QAMAkpC,oBAAoB,GAEpBxqC,CAAC,CAFmBwqC,oBANpB;AAAA,QAOA9oC,WAAW,GACX1B,CAAC,YARD,CAAA;IAUJ,IAAMgF,SAAS,GAAGuZ,iBAAiB,CAC/BC,eAD+B,EAE/B3d,OAF+B,EAG/BQ,UAH+B,EAI/BC,KAJ+B,CAAnC,CAAA;AAOA,IAAA,IAAMX,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AACQ,IAAA,IAAAoN,MAAM,GAA4BpN,KAAK,OAAvC;AAAA,QAAQ2H,KAAK,GAAqB3H,KAAK,CAAA2H,KAAvC;AAAA,QAAeC,MAAM,GAAa5H,KAAK,CAAlB4H,MAArB;AAAA,QAAuBpH,MAAM,GAAKR,KAAK,OAAvC,CAAA;;AAER,IAAA,IAAI,CAACqE,SAAD,IAAc,CAAC+I,MAAnB,EAA2B;AACvB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,IAAI5M,MAAM,CAACspC,SAAX,EAAsB;AAClB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACDtpC,IAAAA,MAAM,CAACspC,SAAP,GAAmB1nC,WAAW,IAAIE,QAAQ,CAACqK,YAA3C,CAAA;AACA,IAAA,CAACzM,OAAD,IAAY+C,YAAY,CAACX,QAAD,EAAWjD,CAAX,CAAxB,CAAA;IAEAsB,KAAK,CAACA,KAAN,GAAc,EAAd,CAAA;IACAA,KAAK,CAAC0D,SAAN,GAAkBA,SAAlB,CAAA;IACA1D,KAAK,CAAC+jB,gBAAN,GAAyB/c,KAAzB,CAAA;IACAhH,KAAK,CAACgkB,iBAAN,GAA0B/c,MAA1B,CAAA;IACAjH,KAAK,CAACkH,SAAN,GAAkB,CAAlB,CAAA;IACAlH,KAAK,CAACmH,UAAN,GAAmB,CAAnB,CAAA;AAEAnH,IAAAA,KAAK,CAACopC,OAAN,GAAgB,CAAC,CAAD,EAAI,CAAJ,CAAhB,CAAA;IAGAppC,KAAK,CAACqpC,UAAN,GAAmBhqC,KAAK,CAACub,cAAN,IAAwBvb,KAAK,CAAC0a,QAAjD,CAAA;IACA/Z,KAAK,CAACspC,WAAN,GAAoBjqC,KAAK,CAACwb,eAAN,IAAyBxb,KAAK,CAAC2a,SAAnD,CAAA;AACAha,IAAAA,KAAK,CAACupC,OAAN,GAAgB,CAAC/uB,QAAD,EAAWA,QAAX,CAAhB,CAAA;;IAEA,IAAI,CAACyuB,OAAL,EAAc;MACVjpC,KAAK,CAACopC,OAAN,GAAgB,CACZ/pC,KAAK,CAACgb,cADM,EAEZhb,KAAK,CAACib,eAFM,CAAhB,CAAA;MAIAta,KAAK,CAACupC,OAAN,GAAgB,CACZlqC,KAAK,CAACqb,cADM,EAEZrb,KAAK,CAACsb,eAFM,CAAhB,CAAA;AAIH,KAAA;;IACD,IAAM/X,eAAe,GAAGjB,QAAQ,CAAC5G,KAAT,CAAe6H,eAAf,IAAkC,KAA1D,CAAA;AAEA5C,IAAAA,KAAK,CAAC4C,eAAN,GAAwBA,eAAe,IAAImgB,QAAQ,CAACngB,eAAD,CAA3B,GAClBA,eAAe,CAACsN,KAAhB,CAAsB,GAAtB,CADkB,GAElBtN,eAFN,CAAA;AAIA5C,IAAAA,KAAK,CAACwpC,iBAAN,GAA0BnqC,KAAK,CAACqD,YAAhC,CAAA;AACA1C,IAAAA,KAAK,CAACypC,oBAAN,GAA6BpqC,KAAK,CAACuD,eAAnC,CAAA;IAEA5C,KAAK,CAAC0pC,OAAN,GAAgB,CAAA9pC,EAAA,GAAAlB,CAAC,SAAD,IAAAA,CAAC,KAAA,KAAA,CAAD,GAAC,KAAA,CAAD,GAAAA,CAAC,CAAEirC,aAAH,MAAoB,IAApB,IAAoB/pC,EAAA,KAAA,KAAA,CAApB,GAAoBA,EAApB,GAAsB,CAAC8D,SAAS,CAAC,CAAD,CAAV,IAAiB,CAACA,SAAS,CAAC,CAAD,CAA5B,IAAoCA,SAAS,CAAC,CAAD,CAA7C,IAAoD,CAACA,SAAS,CAAC,CAAD,CAAnG,CAAA;;IAEA,SAASkmC,QAAT,CAAkB/lB,KAAlB,EAA+B;AAC3B7jB,MAAAA,KAAK,CAAC6jB,KAAN,GAAcA,KAAK,IAAIgmB,QAAQ,CAAChmB,KAAD,CAAjB,GAA2BA,KAA3B,GAAmC,CAAjD,CAAA;AACH,KAAA;;IAGD7jB,KAAK,CAAC8pC,cAAN,GAAuBj+B,uBAAuB,CAAClK,QAAQ,CAACtC,KAAV,CAA9C,CAAA;;IAEA,SAAS0qC,iBAAT,CAA2BthC,cAA3B,EAAmD;MAC/CzI,KAAK,CAACyI,cAAN,GAAuBA,cAAvB,CAAA;MACAzI,KAAK,CAAC4K,aAAN,GAAsB1C,iBAAiB,CAAClI,KAAK,CAAC8pC,cAAP,EAAuBrhC,cAAvB,CAAvC,CAAA;AACH,KAAA;;IACD,SAASuhC,gBAAT,CAA0Bp/B,aAA1B,EAAiD;AACvC,MAAA,IAAAhL,EAAA,GAGF+B,QAAQ,CAACtC,KAHP;AAAA,UACF2H,KAAK,GAAApH,EAAA,CAAAoH,KADH;AAAA,UAEFC,MAAM,GAAArH,EAAA,CAAAqH,MAFJ,CAAA;MAKNjH,KAAK,CAAC4K,aAAN,GAAsBA,aAAtB,CAAA;MACA5K,KAAK,CAACyI,cAAN,GAAuB4C,iBAAiB,CAACT,aAAD,EAAgB5D,KAAhB,EAAuBC,MAAvB,CAAxC,CAAA;AACH,KAAA;;IACD,SAASgjC,MAAT,CAAgBb,OAAhB,EAA+C;AAC3CppC,MAAAA,KAAK,CAACopC,OAAN,GAAgB,CACZltB,eAAe,CAAC,EAAA,CAAG7gB,MAAH,CAAG+tC,OAAO,CAAC,CAAD,CAAV,CAAD,EAAkB,CAAlB,CAAf,IAAuC,CAD3B,EAEZltB,eAAe,CAAC,EAAG7gB,CAAAA,MAAH,CAAG+tC,OAAO,CAAC,CAAD,CAAV,CAAD,EAAkB,CAAlB,CAAf,IAAuC,CAF3B,CAAhB,CAAA;AAIH,KAAA;;IACD,SAASc,MAAT,CAAgBX,OAAhB,EAA+C;AAC3C,MAAA,IAAMY,WAAW,GAAG,CAChBZ,OAAO,CAAC,CAAD,CAAP,IAAc/uB,QADE,EAEhB+uB,OAAO,CAAC,CAAD,CAAP,IAAc/uB,QAFE,CAApB,CAAA;;AAIA,MAAA,IAAI,CAACumB,QAAQ,CAACoJ,WAAW,CAAC,CAAD,CAAZ,CAAT,IAA6BN,QAAQ,CAACM,WAAW,CAAC,CAAD,CAAZ,CAAzC,EAA2D;AACvDA,QAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBjuB,eAAe,CAAC,GAAG7gB,MAAH,CAAG8uC,WAAW,CAAC,CAAD,CAAd,CAAD,EAAsB,CAAtB,CAAf,IAA2C3vB,QAA5D,CAAA;AACH,OAAA;;AACD,MAAA,IAAI,CAACumB,QAAQ,CAACoJ,WAAW,CAAC,CAAD,CAAZ,CAAT,IAA6BN,QAAQ,CAACM,WAAW,CAAC,CAAD,CAAZ,CAAzC,EAA2D;AACvDA,QAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBjuB,eAAe,CAAC,GAAG7gB,MAAH,CAAG8uC,WAAW,CAAC,CAAD,CAAd,CAAD,EAAsB,CAAtB,CAAf,IAA2C3vB,QAA5D,CAAA;AACH,OAAA;;MACDxa,KAAK,CAACupC,OAAN,GAAgBY,WAAhB,CAAA;AACH,KAAA;;AAEDP,IAAAA,QAAQ,CAAC5iC,KAAK,GAAGC,MAAT,CAAR,CAAA;AACA8iC,IAAAA,iBAAiB,CAACb,oBAAoB,IAAI,CAAC,CAACxlC,SAAS,CAAC,CAAD,CAAX,EAAgB,CAACA,SAAS,CAAC,CAAD,CAA1B,CAAzB,CAAjB,CAAA;IAEA1D,KAAK,CAAC+pC,iBAAN,GAA0BA,iBAA1B,CAAA;IACA/pC,KAAK,CAACgqC,gBAAN,GAAyBA,gBAAzB,CAAA;IACAhqC,KAAK,CAACiqC,MAAN,GAAeA,MAAf,CAAA;IACAjqC,KAAK,CAACkqC,MAAN,GAAeA,MAAf,CAAA;AACA,IAAA,IAAM/rB,MAAM,GAAGD,UAAU,CAAgBvc,QAAhB,EAA0BjD,CAA1B,EAA6B;AAClDgF,MAAAA,SAAS,EAAAA,SADyC;MAElD0mC,UAAU,EAAEpqC,KAAK,CAAC6jB,KAFgC;MAGlDzS,GAAG,EAAE,UAACxR,EAAD,EAAoC;YAAlCypC,UAAU,GAAAzpC,EAAA,CAAA,CAAA;YAAE0pC,WAAW,GAAA1pC,EAAA,CAAA,CAAA;QAC1BI,KAAK,CAACqpC,UAAN,GAAmBA,UAAnB,CAAA;QACArpC,KAAK,CAACspC,WAAN,GAAoBA,WAApB,CAAA;OAL8C;AAOlDW,MAAAA,MAAM,EAAAA,MAP4C;AAQlDC,MAAAA,MAAM,EAAAA,MAR4C;AASlDN,MAAAA,QAAQ,EAAAA,QAT0C;AAUlDG,MAAAA,iBAAiB,EAAAA,iBAViC;AAWlDC,MAAAA,gBAAgB,EAAAA,gBAXkC;MAYlDK,SAAS,EAAE,UAAC5nC,MAAD,EAA+B;QACtCzC,KAAK,CAAC4C,eAAN,GAAwBH,MAAxB,CAAA;OAb8C;AAelD5B,MAAAA,SAAS,EAAE4J,SAAS,CAAC5J,SAAV,CACPc,QADO,EAEP,IAAItB,WAAJ,GAAkBQ,SAAlB,CAA4B,CAAC,CAAD,EAAI,CAAJ,CAA5B,EAAoCnC,CAApC,CAFO,CAAA;AAfuC,KAA7B,CAAzB,CAAA;IAoBA,IAAMgB,MAAM,GAAGU,WAAW,IAAIif,YAAY,CAAC1d,QAAD,EAAW,eAAX,EAA4Bwc,MAA5B,CAA1C,CAAA;AAEAne,IAAAA,KAAK,CAACmlB,mBAAN,GAA4BnlB,KAAK,CAACyI,cAAlC,CAAA;AACAzI,IAAAA,KAAK,CAACsqC,kBAAN,GAA2BtqC,KAAK,CAAC4K,aAAjC,CAAA;;IACA,IAAIlL,MAAM,KAAK,KAAf,EAAsB;MAClBM,KAAK,CAACuqC,QAAN,GAAiB,IAAjB,CAAA;AACA5oC,MAAAA,QAAQ,CAACtC,KAAT,CAAesoB,cAAf,GAAgC;QAC5BC,OAAO,EAAElpB,CAAC,CAACmjB,SADiB;AAE5Bne,QAAAA,SAAS,EAAAA,SAAAA;OAFb,CAAA;AAIH,KAAA;;AACD,IAAA,OAAO1D,KAAK,CAACuqC,QAAN,GAAiBpsB,MAAjB,GAA0B,KAAjC,CAAA;GA/KO;AAiLXqnB,EAAAA,WAAW,EAAX,UACI7jC,QADJ,EAEIjD,CAFJ,EAEU;;;AAGF,IAAA,IAAAsB,KAAK,GAULtB,CAAC,CAAAsB,KAVD;AAAA,QACAgpB,UAAU,GASVtqB,CAAC,CAAAsqB,UAVD;AAAA,QAEAzpB,OAAO,GAQPb,CAAC,CAAAa,OAVD;AAAA,QAGAirC,eAAe,GAOf9rC,CAAC,CAPc8rC,eAHf;AAAA,QAIAC,UAAU,GAMV/rC,CAAC,CAAA+rC,UAVD;AAAA,QAKAxlB,UAAU,GAKVvmB,CAAC,CALSumB,UALV;AAAA,QAMApD,SAAS,GAITnjB,CAAC,CAJQmjB,SANT;AAAA,QAOAonB,OAAO,GAGPvqC,CAAC,CAHMuqC,OAPP;AAAA,QAQA7oC,WAAW,GAEX1B,CAAC,CAAA0B,WAVD;AAAA,QASAsqC,aAAa,GACbhsC,CAAC,CAAAgsC,aAVD,CAAA;AAaA,IAAA,IAAAH,QAAQ,GAYRvqC,KAAK,CAZGuqC,QAAR;AAAA,QACA3nC,eAAe,GAWf5C,KAAK,CAAA4C,eAZL;AAAA,QAEAymC,UAAU,GAUVrpC,KAAK,CAVKqpC,UAFV;AAAA,QAGAC,WAAW,GASXtpC,KAAK,CAAAspC,WAZL;AAAA,QAIApiC,SAAS,GAQTlH,KAAK,CARIkH,SAJT;AAAA,QAKAC,UAAU,GAOVnH,KAAK,CAAAmH,UAZL;AAAA,QAMAiiC,OAAO,GAMPppC,KAAK,CANEopC,OANP;AAAA,QAOAG,OAAO,GAKPvpC,KAAK,CAAAupC,OAZL;AAAA,QAQA1lB,KAAK,GAIL7jB,KAAK,CAJA6jB,KARL;AAAA,QASAE,gBAAgB,GAGhB/jB,KAAK,CAAA+jB,gBAZL;AAAA,QAUAC,iBAAiB,GAEjBhkB,KAAK,CAFYgkB,iBAVjB;AAAA,QAWA0lB,OAAO,GACP1pC,KAAK,CAAA0pC,OAZL,CAAA;;IAcJ,IAAI,CAACa,QAAL,EAAe;AACX,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAIG,aAAJ,EAAmB;AAEX,MAAA,IAAA5oC,IAAI,GACJH,QAAQ,CAACtC,KAAT,KADA,CAAA;AAGA,MAAA,IAAAmqC,iBAAiB,GAEjBxpC,KAAK,CAAAwpC,iBAFL;AAAA,UACAC,oBAAoB,GACpBzpC,KAAK,CAAAypC,oBAFL,CAAA;AAGJ,MAAA,IAAMhrC,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;MACA,IAAIa,YAAY,GAAGsG,QAAQ,CAACkB,iBAAiB,CAACzL,CAAD,CAAlB,CAA3B,CAAA;MACA,IAAMisC,OAAO,GAAGlvC,IAAI,CAAC2d,IAAL,CAAUzW,YAAY,CAACuB,MAAvB,CAAhB,CAAA;;MAEA,IAAIzF,CAAC,KAAKksC,OAAV,EAAmB;QACfhoC,YAAY,GAAGuG,gBAAgB,CAACvG,YAAD,EAAegoC,OAAf,EAAwBlsC,CAAxB,CAA/B,CAAA;AACH,OAAA;;MAED,IAAMglC,aAAa,GAAG76B,aAAa,CAC/B4gC,iBAD+B,EAE/B7mC,YAF+B,EAG/B8mC,oBAH+B,EAI/BhrC,CAJ+B,CAAnC,CAAA;MAMA,IAAMwJ,KAAK,GAAGS,cAAc,CAAC+6B,aAAD,EAAgB1f,gBAAhB,EAAkCC,iBAAlC,EAAqDvlB,CAArD,CAA5B,CAAA;MAEAuB,KAAK,CAAC8pC,cAAN,GAAuB7hC,KAAvB,CAAA;MACAjI,KAAK,CAACyG,gBAAN,GAAyB9D,YAAzB,CAAA;MACA3C,KAAK,CAACyjC,aAAN,GAAsBA,aAAtB,CAAA;AACH,KAAA;;IACD,IAAM1oC,KAAK,GAAG8e,QAAQ,CAAClY,QAAQ,CAAC5G,KAAV,EAAiB,WAAjB,CAAtB,CAAA;AAEI,IAAA,IAAA6vC,YAAY,GAIZ7vC,KAAK,CAAA6vC,YAJL;AAAA,QACAjrC,EAAA,GAGA5E,KAAK,CAAA8vC,cAJL;AAAA,QACAA,cAAc,GAAGlrC,EAAA,KAAA,KAAA,CAAA,GAAAqpB,UAAU,GAAG,CAAH,GAAO,CAAjB,GAAkBrpB,EADnC;AAAA,QAEAqoC,cAAc,GAEdjtC,KAAK,CAAAitC,cAJL;AAAA,QAGA8C,gBAAgB,GAChB/vC,KAAK,iBAJL,CAAA;AAKJ,IAAA,IAAM2I,SAAS,GAAG1D,KAAK,CAAC0D,SAAxB,CAAA;IACA,IAAIqhB,aAAa,GAAGrhB,SAApB,CAAA;IACA,IAAIugB,SAAS,GAAG,CAAhB,CAAA;IACA,IAAIC,UAAU,GAAG,CAAjB,CAAA;;IAEA,IAAI,CAACxgB,SAAS,CAAC,CAAD,CAAV,IAAiB,CAACA,SAAS,CAAC,CAAD,CAA/B,EAAoC;AAChCqhB,MAAAA,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAhB,CAAA;AACH,KAAA;;AACD,IAAA,IAAMjB,SAAS,GAAID,KAAK,KAAK2mB,eAAe,IAAI,IAAnB,GAA0BA,eAA1B,GAA4CzvC,KAAK,CAAC+oB,SAAvD,CAAN,IAA4E,KAA9F,CAAA;;AAEA,IAAA,SAASinB,mBAAT,GAA4B;AACxB,MAAA,IAAMtiC,cAAc,GAAGzI,KAAK,CAACyI,cAA7B,CAAA;MACA,IAAMuiC,QAAQ,GAAGlmB,iBAAiB,CAACC,aAAD,EAAgBjB,SAAhB,EAA2B9jB,KAA3B,EAAkCtB,CAAlC,CAAlC,CAAA;MAEAulB,SAAS,GAAG+mB,QAAQ,CAAC/mB,SAArB,CAAA;MACAC,UAAU,GAAG8mB,QAAQ,CAAC9mB,UAAtB,CAAA;MAEA,IAAI2e,SAAS,GAAI9d,aAAa,CAAC,CAAD,CAAb,GAAmBtc,cAAc,CAAC,CAAD,CAAlC,IAA0Cqb,SAA1C,GACVroB,IAAI,CAACua,GAAL,CAAS+N,gBAAgB,GAAGE,SAA5B,EAAuC9lB,QAAvC,CADU,GACyC4lB,gBADzD,CAAA;MAEA,IAAI+e,UAAU,GAAI/d,aAAa,CAAC,CAAD,CAAb,GAAmBtc,cAAc,CAAC,CAAD,CAAlC,IAA0Cqb,SAA1C,GACXroB,IAAI,CAACua,GAAL,CAASgO,iBAAiB,GAAGE,UAA7B,EAAyC/lB,QAAzC,CADW,GAC0C6lB,iBAD3D,CAAA;;AAGA,MAAA,IAAIF,SAAS,IAAIC,gBAAb,IAAiCC,iBAArC,EAAwD;AACpD;AACA,QAAA,IAAI0lB,OAAJ,EAAa;UACT5G,UAAU,GAAGD,SAAS,GAAGhf,KAAzB,CAAA;AACH,SAFD,MAEO;UACHgf,SAAS,GAAGC,UAAU,GAAGjf,KAAzB,CAAA;AACH,SAAA;AACJ,OAAA;;AACD,MAAA,OAAO,CAACgf,SAAD,EAAYC,UAAZ,CAAP,CAAA;AACH,KAAA;;IAEG,IAAA1gC,EAAA,GAAkC2oC,mBAAmB,EAArD;AAAA,QAACE,aAAa,GAAA7oC,EAAA,CAAA,CAAA,CAAd;AAAA,QAAgB8oC,cAAc,GAAA9oC,EAAA,CAAA,CAAA,CAA9B,CAAA;;IAEJ,IAAI,CAAChC,WAAL,EAAkB;AACdJ,MAAAA,KAAK,CAAC+pC,iBAAN,CAAwB/pC,KAAK,CAACyI,cAA9B,CAAA,CAAA;MAEA4W,YAAY,CAAC1d,QAAD,EAAW,gBAAX,EAA6Buc,UAAU,CAAiBvc,QAAjB,EAA2BjD,CAA3B,EAA8B;QAC7EymB,mBAAmB,EAAEnlB,KAAK,CAACmlB,mBADkD;QAE7EmlB,kBAAkB,EAAEtqC,KAAK,CAACsqC,kBAFmD;QAG7EP,iBAAiB,EAAjB,UAAkBoB,kBAAlB,EAA8C;;;UAC1CnrC,KAAK,CAAC+pC,iBAAN,CAAwBoB,kBAAxB,CAAA,CAAA;AAEAvrC,UAAAA,EAAkC,GAAAmrC,mBAAmB,EAArD,EAACE,aAAa,QAAd,EAAgBC,cAAc,QAA9B,CAAA;AAEA,UAAA,OAAO,CAACD,aAAD,EAAgBC,cAAhB,CAAP,CAAA;SARyE;QAU7ElB,gBAAgB,EAAhB,UAAiB/+B,iBAAjB,EAA4C;;;UACxCjL,KAAK,CAACgqC,gBAAN,CAAuB/+B,iBAAvB,CAAA,CAAA;AAEArL,UAAAA,EAAkC,GAAAmrC,mBAAmB,EAArD,EAACE,aAAa,QAAd,EAAgBC,cAAc,QAA9B,CAAA;AAEA,UAAA,OAAO,CAACD,aAAD,EAAgBC,cAAhB,CAAP,CAAA;SAfyE;AAiB7ED,QAAAA,aAAa,EAAAA,aAjBgE;AAkB7EC,QAAAA,cAAc,EAAAA,cAlB+D;QAmB7EE,OAAO,EAAP,UAAQ1jC,IAAR,EAAsB;UACjBujC,aAAa,GAAoBvjC,IAAI,CAAxB,CAAwB,CAArC,EAAewjC,cAAc,GAAIxjC,IAAI,EAAA,CAArC,CAAA;AACJ,SAAA;OArB8C,EAsBhD,IAtBgD,CAAvC,CAAZ,CAAA;AAuBH,KAAA;;IAED,IAAIkD,aAAa,GAAG6/B,UAApB,CAAA;;IAEA,IAAI,CAACA,UAAL,EAAiB;AACb,MAAA,IAAI,CAACzhB,UAAD,IAAezpB,OAAnB,EAA4B;QACxBqL,aAAa,GAAGgB,mBAAmB,CAACjK,QAAD,EAAW,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAnC,CAAA;AACH,OAFD,MAEO;QACHiJ,aAAa,GAAG5K,KAAK,CAAC4K,aAAtB,CAAA;AACH,OAAA;AACJ,KAAA;;AAED,IAAA,IAAIygC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf,CAAA;;IAEA,IAAI,CAAC9rC,OAAL,EAAc;AACV8rC,MAAAA,QAAQ,GAAG7H,eAAe,CACtB7hC,QADsB,EAEtBspC,aAFsB,EAGtBC,cAHsB,EAItBxnC,SAJsB,EAKtBkH,aALsB,EAMtBiX,SANsB,EAOtB7hB,KAPsB,CAA1B,CAAA;AASH,KAAA;;AACD,IAAA,IAAIilB,UAAJ,EAAgB;MACZ,CAACA,UAAU,CAAC,CAAD,CAAX,KAAmBomB,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAjC,CAAA,CAAA;MACA,CAACpmB,UAAU,CAAC,CAAD,CAAX,KAAmBomB,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAjC,CAAA,CAAA;AACH,KAAA;;AAED,IAAA,SAASC,WAAT,GAAoB;;;AAChB,MAAA,IAAIV,YAAJ,EAAkB;QACdhrC,EAAA,GAAkCgrC,YAAY,CAAC,CAACK,aAAD,EAAgBC,cAAhB,CAAD,CAA9C,EAACD,aAAa,GAAArrC,EAAA,CAAA,CAAA,CAAd,EAAgBsrC,cAAc,QAA9B,CAAA;AACH,OAAA;;AACDD,MAAAA,aAAa,GAAGxf,QAAQ,CAACwf,aAAD,EAAgBJ,cAAhB,CAAxB,CAAA;AACAK,MAAAA,cAAc,GAAGzf,QAAQ,CAACyf,cAAD,EAAiBL,cAAjB,CAAzB,CAAA;AACH,KAAA;;AACD,IAAA,IAAI/mB,SAAJ,EAAe;AACX,MAAA,IAAIiB,aAAa,CAAC,CAAD,CAAb,IAAoBA,aAAa,CAAC,CAAD,CAAjC,IAAwCsmB,QAAQ,CAAC,CAAD,CAAhD,IAAuDA,QAAQ,CAAC,CAAD,CAAnE,EAAwE;AACpE,QAAA,IAAI5vC,IAAI,CAACyc,GAAL,CAASmzB,QAAQ,CAAC,CAAD,CAAjB,CAAA,GAAwB5vC,IAAI,CAACyc,GAAL,CAASmzB,QAAQ,CAAC,CAAD,CAAjB,CAA5B,EAAmD;AAC/CA,UAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,CAAA;AACH,SAFD,MAEO;AACHA,UAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,CAAA;AACH,SAAA;AACJ,OAAA;;AACD,MAAA,IAAME,QAAQ,GAAG,CAACF,QAAQ,CAAC,CAAD,CAAT,IAAgB,CAACA,QAAQ,CAAC,CAAD,CAA1C,CAAA;;AAEA,MAAA,IAAIE,QAAJ,EAAc;AACV;QACAD,WAAW,EAAA,CAAA;AACd,OAAA;;MACD,IACKvmB,aAAa,CAAC,CAAD,CAAb,IAAoB,CAACA,aAAa,CAAC,CAAD,CAAnC,IACIsmB,QAAQ,CAAC,CAAD,CAAR,IAAe,CAACA,QAAQ,CAAC,CAAD,CAD5B,IAEIE,QAAQ,IAAI7B,OAHpB,EAIE;AACEuB,QAAAA,aAAa,IAAII,QAAQ,CAAC,CAAD,CAAzB,CAAA;QACAH,cAAc,GAAGD,aAAa,GAAGpnB,KAAjC,CAAA;AACH,OAPD,MAOO,IACF,CAACkB,aAAa,CAAC,CAAD,CAAd,IAAqBA,aAAa,CAAC,CAAD,CAAnC,IACI,CAACsmB,QAAQ,CAAC,CAAD,CAAT,IAAgBA,QAAQ,CAAC,CAAD,CAD5B,IAEIE,QAAQ,IAAI,CAAC7B,OAHd,EAIL;AACEwB,QAAAA,cAAc,IAAIG,QAAQ,CAAC,CAAD,CAA1B,CAAA;QACAJ,aAAa,GAAGC,cAAc,GAAGrnB,KAAjC,CAAA;AACH,OAAA;AACJ,KA7BD,MA6BO;AACHonB,MAAAA,aAAa,IAAII,QAAQ,CAAC,CAAD,CAAzB,CAAA;AACAH,MAAAA,cAAc,IAAIG,QAAQ,CAAC,CAAD,CAA1B,CAAA;MAEAJ,aAAa,GAAGxvC,IAAI,CAACua,GAAL,CAAS,CAAT,EAAYi1B,aAAZ,CAAhB,CAAA;MACAC,cAAc,GAAGzvC,IAAI,CAACua,GAAL,CAAS,CAAT,EAAYk1B,cAAZ,CAAjB,CAAA;AACH,KAAA;;AAEDtrC,IAAAA,EAAA,GAAkC4rC,kBAAkB,CAChD,CAACP,aAAD,EAAgBC,cAAhB,CADgD,EAEhD9B,OAFgD,EAGhDG,OAHgD,EAIhDzlB,SAAS,GAAGD,KAAH,GAAW,KAJ4B,CAApD,EAAConB,aAAa,GAAArrC,EAAA,CAAA,CAAA,CAAd,EAAgBsrC,cAAc,GAAAtrC,EAAA,CAAA,CAAA,CAA9B,CAAA;IAMA0rC,WAAW,EAAA,CAAA;;AAEX,IAAA,IAAIxnB,SAAS,KAAKmlB,OAAO,IAAI6B,gBAAhB,CAAb,EAAgD;AAC5C,MAAA,IAAIpB,OAAJ,EAAa;QACTwB,cAAc,GAAGD,aAAa,GAAGpnB,KAAjC,CAAA;AACH,OAFD,MAEO;QACHonB,aAAa,GAAGC,cAAc,GAAGrnB,KAAjC,CAAA;AACH,OAAA;AACJ,KAAA;;IACDI,SAAS,GAAGgnB,aAAa,GAAGlnB,gBAA5B,CAAA;IACAG,UAAU,GAAGgnB,cAAc,GAAGlnB,iBAA9B,CAAA;IAEA,IAAM1kB,KAAK,GAAG,CAAC2kB,SAAS,GAAG/c,SAAb,EAAwBgd,UAAU,GAAG/c,UAArC,CAAd,CAAA;IAEAnH,KAAK,CAACkH,SAAN,GAAkB+c,SAAlB,CAAA;IACAjkB,KAAK,CAACmH,UAAN,GAAmB+c,UAAnB,CAAA;AAEA,IAAA,IAAMunB,YAAY,GAAG//B,aAAa,CAC9B/J,QAD8B,EAE9BspC,aAF8B,EAG9BC,cAH8B,EAI9BtgC,aAJ8B,EAK9BhI,eAL8B,EAM9B5C,KAN8B,CAAlC,CAAA;;IASA,IAAI,CAACgoC,cAAD,IAAmB1oC,KAAK,CAACinB,KAAN,CAAY,UAAA9I,GAAA,EAAG;AAAI,MAAA,OAAA,CAACA,GAAD,CAAA;KAAnB,CAAnB,IAA+CguB,YAAY,CAACllB,KAAb,CAAmB,UAAA9I,GAAA,EAAO;AAAA,MAAA,OAAA,CAACA,GAAD,CAAA;AAAI,KAA9B,CAAnD,EAAoF;AAChF,MAAA,OAAA;AACH,KAAA;;IACD,IAAMzc,IAAI,GAAGyJ,SAAS,CAACzJ,IAAV,CACTW,QADS,EAETvC,aAAa,CAACV,CAAD,EAAIiD,QAAQ,CAACtC,KAAb,EAAoBosC,YAApB,EAAkC,CAAC,CAAClsC,OAApC,EAA6C,KAA7C,EAAoD,WAApD,CAFJ,CAAb,CAAA;AAIA,IAAA,IAAMwJ,SAAS,GAAG/H,IAAI,CAAC+H,SAAvB,CAAA;AAEA,IAAA,IAAM85B,SAAS,GAAGwG,UAAU,GAAGplB,SAA/B,CAAA;AACA,IAAA,IAAM6e,UAAU,GAAGwG,WAAW,GAAGplB,UAAjC,CAAA;IAEA,IAAM/F,MAAM,GAAGD,UAAU,CAAWvc,QAAX,EAAqBjD,CAArB,EACrB7D,QAAA,CAAA;AAAAmM,MAAAA,KAAK,EAAE67B,SAAP;AACA57B,MAAAA,MAAM,EAAE67B,UADR;AAEA/rB,MAAAA,WAAW,EAAEtb,IAAI,CAACC,KAAL,CAAWuvC,aAAX,CAFb;AAGAj0B,MAAAA,YAAY,EAAEvb,IAAI,CAACC,KAAL,CAAWwvC,cAAX,CAHd;AAIAd,MAAAA,UAAU,EAAEvmB,KAJZ;AAKAonB,MAAAA,aAAa,EAAAA,aALb;AAMAC,MAAAA,cAAc,EAAAA,cANd;AAOAxnC,MAAAA,SAAS,EAAAA,SAPT;AAQAuC,MAAAA,IAAI,EAAE,CAACge,SAAD,EAAYC,UAAZ,CARN;AASA5kB,MAAAA,KAAK,EAAAA,KATL;MAUAC,OAAO,EAAE,CAAC,CAACA,OAVX;AAWAyB,MAAAA,IAAI,EAAAA,IAAAA;KAXJ,EAYG+c,kBAAkB,CAAC;AAClBpM,MAAAA,KAAK,EAAE;AACH3K,QAAAA,KAAK,EAAE,EAAG3L,CAAAA,MAAH,CAAGwnC,SAAH,EAAgB,IAAhB,CADJ;AAEH57B,QAAAA,MAAM,EAAE,EAAG5L,CAAAA,MAAH,CAAGynC,UAAH,EAAiB,IAAjB,CAAA;OAHM;AAKlB/5B,MAAAA,SAAS,EAAAA,SAAAA;AALS,KAAD,EAMlB/H,IANkB,EAMZtC,CANY,CAZrB,CADqB,CAAzB,CAAA;IAqBA,CAAC0B,WAAD,IAAgBif,YAAY,CAAC1d,QAAD,EAAW,UAAX,EAAuBwc,MAAvB,CAA5B,CAAA;AACA,IAAA,OAAOA,MAAP,CAAA;GAhcO;AAkcXutB,EAAAA,gBAAgB,EAAhB,UACI/pC,QADJ,EAEIjD,CAFJ,EAEU;AAEN,IAAA,IAAMsB,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;AAEI,IAAA,IAAAuqC,QAAQ,GAKRvqC,KAAK,CALGuqC,QAAR;AAAA,QACAxmB,gBAAgB,GAIhB/jB,KAAK,CAJW+jB,gBADhB;AAAA,QAEAC,iBAAiB,GAGjBhkB,KAAK,CAHYgkB,iBAFjB;AAAA,QAGA9c,SAAS,GAETlH,KAAK,CAAAkH,SALL;AAAA,QAIAC,UAAU,GACVnH,KAAK,CAAAmH,UALL,CAAA;;IAOJ,IAAI,CAACojC,QAAD,IAAa5oC,QAAQ,CAAC5G,KAAT,CAAe4wC,mBAAf,KAAuC,KAAxD,EAA+D;AAC3D,MAAA,OAAA;AACH,KAAA;;AACK,IAAA,IAAA/rC,EAAA,GAGF+B,QAAQ,CAACtC,KAHP;AAAA,QACF2H,KAAK,GAAApH,EAAA,CAAAoH,KADH;AAAA,QAEFC,MAAM,GAAArH,EAAA,CAAAqH,MAFJ,CAAA;AAIN,IAAA,IAAM2kC,UAAU,GAAG5kC,KAAK,IAAI+c,gBAAgB,GAAG7c,SAAvB,CAAxB,CAAA;AACA,IAAA,IAAM2kC,WAAW,GAAG5kC,MAAM,IAAI+c,iBAAiB,GAAG7c,UAAxB,CAA1B,CAAA;IACA,IAAM2kC,YAAY,GAAGrwC,IAAI,CAACyc,GAAL,CAAS0zB,UAAT,IAAuB,CAA5C,CAAA;IACA,IAAMG,aAAa,GAAGtwC,IAAI,CAACyc,GAAL,CAAS2zB,WAAT,IAAwB,CAA9C,CAAA;;AAEA,IAAA,IAAIC,YAAJ,EAAkB;MACd9rC,KAAK,CAACqpC,UAAN,IAAoBuC,UAApB,CAAA;MACA5rC,KAAK,CAAC+jB,gBAAN,IAA0B6nB,UAA1B,CAAA;MACA5rC,KAAK,CAACkH,SAAN,IAAmB0kC,UAAnB,CAAA;AACH,KAAA;;AACD,IAAA,IAAIG,aAAJ,EAAmB;MACf/rC,KAAK,CAACspC,WAAN,IAAqBuC,WAArB,CAAA;MACA7rC,KAAK,CAACgkB,iBAAN,IAA2B6nB,WAA3B,CAAA;MACA7rC,KAAK,CAACmH,UAAN,IAAoB0kC,WAApB,CAAA;AACH,KAAA;;IACD,IAAIC,YAAY,IAAIC,aAApB,EAAmC;AAC/B,MAAA,OAAO,KAAKvG,WAAL,CAAiB7jC,QAAjB,EAA2BjD,CAA3B,CAAP,CAAA;AACH,KAAA;GAveM;AAyeX+mC,EAAAA,cAAc,EAAd,UACI9jC,QADJ,EAEIjD,CAFJ,EAEU;AAEE,IAAA,IAAAsB,KAAK,GAAkBtB,CAAC,CAAAsB,KAAxB;AAAA,QAAOI,WAAW,GAAK1B,CAAC,CAAA0B,WAAxB,CAAA;;AACR,IAAA,IAAI,CAACJ,KAAK,CAACuqC,QAAX,EAAqB;AACjB,MAAA,OAAA;AACH,KAAA;;IACDvqC,KAAK,CAACuqC,QAAN,GAAiB,KAAjB,CAAA;IAEA,IAAMpsB,MAAM,GAAGY,aAAa,CAAcpd,QAAd,EAAwBjD,CAAxB,EAA2B,EAA3B,CAA5B,CAAA;IACA,CAAC0B,WAAD,IAAgBif,YAAY,CAAC1d,QAAD,EAAW,aAAX,EAA0Bwc,MAA1B,CAA5B,CAAA;AACA,IAAA,OAAOA,MAAP,CAAA;GArfO;AAufX6tB,EAAAA,yBAAyB,EAAE5H,oBAvfhB;AAwfXyB,EAAAA,qBAAqB,EAArB,UAAsBlkC,QAAtB,EAAkEjD,CAAlE,EAAwE;AAC5D,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;AACR,IAAA,IAAMme,MAAM,GAAG,IAAKonB,CAAAA,gBAAL,CAAsB5jC,QAAtB,EAAoC9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA6D,CAAA,CAAA,EAAG;AAAAuqC,MAAAA,OAAO,EAAE,IAAA;AAAT,KAAH,CAApC,CAAf,CAAA;;IAEA,IAAI,CAAC9qB,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,IAAM8tB,cAAc,GAAG7jB,eAAe,CAACzmB,QAAD,EAAW,WAAX,EAAwBjD,CAAxB,CAAtC,CAAA;;AACA,IAAA,SAASwtC,OAAT,CAAiBjjB,KAAjB,EAAkDL,EAAlD,EAAyD;AACrD,MAAA,IAAMngB,cAAc,GAAGzI,KAAK,CAACyI,cAA7B,CAAA;AACA,MAAA,IAAMmC,aAAa,GAAG5K,KAAK,CAAC4K,aAA5B,CAAA;AAEA,MAAA,IAAMk/B,cAAc,GAAGlhB,EAAE,CAAC5oB,KAAH,CAAS8pC,cAAT,IAA2Bj+B,uBAAuB,CAACod,KAAK,CAAC5pB,KAAP,CAAzE,CAAA;AACA,MAAA,IAAMgI,GAAG,GAAGa,iBAAiB,CAAC4hC,cAAD,EAAiBrhC,cAAjB,CAA7B,CAAA;;MACM,IAAA7I,EAAA,GAAyByD,SAAS,CACpC8oC,kBAAkB,CAAC,CAACxqC,QAAQ,CAAC+X,QAAV,GAAqB,GAArB,GAA2Bje,IAAI,CAAC+nB,EAAjC,EAAqC,CAArC,CADkB,EAEpC,CAACnc,GAAG,CAAC,CAAD,CAAH,GAASuD,aAAa,CAAC,CAAD,CAAvB,EAA4BvD,GAAG,CAAC,CAAD,CAAH,GAASuD,aAAa,CAAC,CAAD,CAAlD,EAAuD,CAAvD,CAFoC,EAGpC,CAHoC,CAAlC;AAAA,UAACwhC,SAAS,GAAAxsC,EAAA,CAAA,CAAA,CAAV;AAAA,UAAYysC,SAAS,GAAAzsC,EAAA,CAAA,CAAA,CAArB,CAAA;;AAKNgpB,MAAAA,EAAE,CAAC5oB,KAAH,CAASosC,SAAT,GAAqBA,SAArB,CAAA;AACAxjB,MAAAA,EAAE,CAAC5oB,KAAH,CAASqsC,SAAT,GAAqBA,SAArB,CAAA;AAEA,MAAA,OAAOzjB,EAAP,CAAA;AACH,KAAA;;AAEG,IAAA,IAAkB0jB,sBAAsB,GAExCtsC,KAAK,CAAA+jB,gBAFL;AAAA,QACmBwoB,uBAAuB,GAC1CvsC,KAAK,CAAAgkB,iBAFL,CAAA;;AAIJ,IAAA,SAASwoB,cAAT,GAAuB;AACnB,MAAA,IAAMC,eAAe,GAAGzsC,KAAK,CAACopC,OAA9B,CAAA;AACA6C,MAAAA,cAAc,CAACn3B,OAAf,CAAuB,UAAA8T,EAAA,EAAE;AACf,QAAA,IAAAhpB,EAIF,GAAAgpB,EAAE,CAAC5oB,KAJD;AAAA,YACO0sC,YAAY,GAAA9sC,EAAA,CAAAwpC,OADnB;AAAA,YAEgBuD,qBAAqB,GAAA/sC,EAAA,CAAAmkB,gBAFrC;AAAA,YAGiB6oB,sBAAsB,uBAHvC,CAAA;AAMN,QAAA,IAAMC,cAAc,GAAGP,sBAAsB,IACtCK,qBAAqB,GAAGD,YAAY,CAAC,CAAD,CAAZ,GAAkBC,qBAArB,GAA6C,CAD5B,CAA7C,CAAA;AAEA,QAAA,IAAMG,eAAe,GAAGP,uBAAuB,IACxCK,sBAAsB,GAAGF,YAAY,CAAC,CAAD,CAAZ,GAAkBE,sBAArB,GAA8C,CAD5B,CAA/C,CAAA;AAGAH,QAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBhxC,IAAI,CAACua,GAAL,CAASy2B,eAAe,CAAC,CAAD,CAAxB,EAA6BI,cAA7B,CAArB,CAAA;AACAJ,QAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBhxC,IAAI,CAACua,GAAL,CAASy2B,eAAe,CAAC,CAAD,CAAxB,EAA6BK,eAA7B,CAArB,CAAA;OAbJ,CAAA,CAAA;AAeH,KAAA;;AAED,IAAA,SAASC,cAAT,GAAuB;AACnB,MAAA,IAAMC,eAAe,GAAGhtC,KAAK,CAACupC,OAA9B,CAAA;AACA0C,MAAAA,cAAc,CAACn3B,OAAf,CAAuB,UAAA8T,EAAA,EAAE;AACf,QAAA,IAAAhpB,EAIF,GAAAgpB,EAAE,CAAC5oB,KAJD;AAAA,YACOitC,YAAY,GAAArtC,EAAA,CAAA2pC,OADnB;AAAA,YAEgBoD,qBAAqB,GAAA/sC,EAAA,CAAAmkB,gBAFrC;AAAA,YAGiB6oB,sBAAsB,uBAHvC,CAAA;AAMN,QAAA,IAAMM,cAAc,GAAGZ,sBAAsB,IACtCK,qBAAqB,GAAGM,YAAY,CAAC,CAAD,CAAZ,GAAkBN,qBAArB,GAA6C,CAD5B,CAA7C,CAAA;AAEA,QAAA,IAAMQ,eAAe,GAAGZ,uBAAuB,IACxCK,sBAAsB,GAAGK,YAAY,CAAC,CAAD,CAAZ,GAAkBL,sBAArB,GAA8C,CAD5B,CAA/C,CAAA;AAGAI,QAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBvxC,IAAI,CAACwa,GAAL,CAAS+2B,eAAe,CAAC,CAAD,CAAxB,EAA6BE,cAA7B,CAArB,CAAA;AACAF,QAAAA,eAAe,CAAC,CAAD,CAAf,GAAqBvxC,IAAI,CAACwa,GAAL,CAAS+2B,eAAe,CAAC,CAAD,CAAxB,EAA6BG,eAA7B,CAArB,CAAA;OAbJ,CAAA,CAAA;AAeH,KAAA;;AACD,IAAA,IAAMryC,MAAM,GAAGouB,iBAAiB,CAC5BvnB,QAD4B,EAE5B,IAF4B,EAG5B,kBAH4B,EAI5BjD,CAJ4B,EAK5B,UAACuqB,KAAD,EAAQL,EAAR,EAAU;AACN,MAAA,OAAOsjB,OAAO,CAACjjB,KAAD,EAAQL,EAAR,CAAd,CAAA;AACH,KAP2B,CAAhC,CAAA;IAWA4jB,cAAc,EAAA,CAAA;IACdO,cAAc,EAAA,CAAA;;AAEd,IAAA,IAAMhD,iBAAiB,GAAG,UAACthC,cAAD,EAAyB;MAC/C0V,MAAM,CAAC4rB,iBAAP,CAAyBthC,cAAzB,CAAA,CAAA;AACA3N,MAAAA,MAAM,CAACga,OAAP,CAAe,UAAC8T,EAAD,EAAKthB,CAAL,EAAM;QACjBshB,EAAE,CAACmhB,iBAAH,CAAqBthC,cAArB,CAAA,CAAA;QACAyjC,OAAO,CAACtjB,EAAE,CAACjnB,QAAJ,EAAcsqC,cAAc,CAAC3kC,CAAD,CAA5B,CAAP,CAAA;OAFJ,CAAA,CAAA;KAFJ,CAAA;;IAQAtH,KAAK,CAAC+pC,iBAAN,GAA0BA,iBAA1B,CAAA;;IAEA,IAAM1rB,UAAU,GACTxjB,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAsjB,MAAA,CAAA;AACHiF,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB;AACxBtoB,MAAAA,MAAM,EAAEA,MAAM,CAAC0C,GAAP,CAAW,UAAAorB,EAAA,EAAE;QACjB,OAAA/tB,QAAA,CAAAA,QAAA,CAAA,EAAA,EACO+tB,EADP,CAAA,EACS;UACLqhB,MAAM,EAAE,UAACb,OAAD,EAAgC;YACpCxgB,EAAE,CAACqhB,MAAH,CAAUb,OAAV,CAAA,CAAA;YACAoD,cAAc,EAAA,CAAA;WAHb;UAKLtC,MAAM,EAAE,UAACX,OAAD,EAAgC;YACpC3gB,EAAE,CAACshB,MAAH,CAAUX,OAAV,CAAA,CAAA;YACAwD,cAAc,EAAA,CAAA;AACjB,WAAA;AARI,SADT,CAAA,CAAA;AAWH,OAZO;AAaRhD,MAAAA,iBAAiB,EAAAA;MACjBE,MAAM,EAAE,UAACb,OAAD,EAAgC;QACpCjrB,MAAM,CAAC8rB,MAAP,CAAcb,OAAd,CAAA,CAAA;QACAoD,cAAc,EAAA,CAAA;;MAElBtC,MAAM,EAAE,UAACX,OAAD,EAAgC;QACpCprB,MAAM,CAAC+rB,MAAP,CAAcX,OAAd,CAAA,CAAA;QACAwD,cAAc,EAAA,CAAA;AACjB,OAAA;KAvBE,CADP,CAAA;;IA0BA,IAAMrtC,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,oBAAX,EAAiC0c,UAAjC,CAA3B,CAAA;AAEAre,IAAAA,KAAK,CAACuqC,QAAN,GAAiB7qC,MAAM,KAAK,KAA5B,CAAA;AACA,IAAA,OAAOM,KAAK,CAACuqC,QAAN,GAAiBpsB,MAAjB,GAA0B,KAAjC,CAAA;GA/mBO;AAinBX2nB,EAAAA,gBAAgB,EAAhB,UAAiBnkC,QAAjB,EAA6DjD,CAA7D,EAAmE;AACvD,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;;AACR,IAAA,IAAI,CAACA,KAAK,CAACuqC,QAAX,EAAqB;AACjB,MAAA,OAAA;AACH,KAAA;;IACD,IAAMxvC,KAAK,GAAG8e,QAAQ,CAAClY,QAAQ,CAAC5G,KAAV,EAAiB,WAAjB,CAAtB,CAAA;AAEAkkB,IAAAA,UAAU,CAACtd,QAAD,EAAW,gBAAX,EAA6B,UAAAvB,WAAA,EAAW;AAC9Cif,MAAAA,YAAY,CAAC1d,QAAD,EAAW,qBAAX,EAAkCuc,UAAU,CAAsBvc,QAAtB,EAAgCjD,CAAhC,EAAiC7D,QAAA,CAAAA,QAAA,CAAA,EAAA,EAClFuF,WADkF,CAAA,EAErF;QAAAgjB,OAAO,EAAEroB,KAAK,CAACqoB,OAAAA;AAAf,OAFqF,CAAjC,EAGrD,IAHqD,CAA5C,CAAZ,CAAA;AAIH,KALS,CAAV,CAAA;AAQA,IAAA,IAAMjF,MAAM,GAAG,IAAKqnB,CAAAA,WAAL,CAAiB7jC,QAAjB,EAA+B9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA6D,CAAA,CAAA,EAAG;AAAAuqC,MAAAA,OAAO,EAAE,IAAA;AAAT,KAAH,CAA/B,CAAf,CAAA;;IAEA,IAAI,CAAC9qB,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;AAEG,IAAA,IAAA8sB,aAAa,GAGb9sB,MAAM,CAAA8sB,aAHN;AAAA,QACAC,cAAc,GAEd/sB,MAAM,CAAA+sB,cAHN;AAAA,QAEAjlC,IAAI,GACJkY,MAAM,KAHN,CAAA;AAKJ,IAAA,IAAM2F,SAAS,GAAG/oB,KAAK,CAAC+oB,SAAxB,CAAA;IAEA,IAAMoB,WAAW,GAAG,CAChB+lB,aAAa,IAAIA,aAAa,GAAGhlC,IAAI,CAAC,CAAD,CAAxB,CADG,EAEhBilC,cAAc,IAAIA,cAAc,GAAGjlC,IAAI,CAAC,CAAD,CAAzB,CAFE,CAApB,CAAA;AAIA,IAAA,IAAM2E,aAAa,GAAG5K,KAAK,CAAC4K,aAA5B,CAAA;AAEA,IAAA,IAAM9P,MAAM,GAAGouB,iBAAiB,CAC5BvnB,QAD4B,EAE5B,IAF4B,EAG5B,aAH4B,EAI5BjD,CAJ4B,EAK5B,UAAC8pB,CAAD,EAAII,EAAJ,EAAM;MACI,IAAAhpB,KAAqByD,SAAS,CAChC8oC,kBAAkB,CAACxqC,QAAQ,CAAC+X,QAAT,GAAoB,GAApB,GAA0Bje,IAAI,CAAC+nB,EAAhC,EAAoC,CAApC,CADc,EAEhC,CACIoF,EAAE,CAAC5oB,KAAH,CAASosC,SAAT,GAAqBlnB,WAAW,CAAC,CAAD,CADpC,EAEI0D,EAAE,CAAC5oB,KAAH,CAASqsC,SAAT,GAAqBnnB,WAAW,CAAC,CAAD,CAFpC,EAGI,CAHJ,CAFgC,EAOhC,CAPgC,CAA9B;AAAA,UAACjkB,OAAO,QAAR;AAAA,UAAUC,OAAO,QAAjB,CAAA;;MAUN,OACOrG,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA+tB,EAAA,CAAA,EACH;AAAA3D,QAAAA,UAAU,EAAE,IAAZ;AACAC,QAAAA,WAAW,EAAAA,WADX;QAEAulB,UAAU,EAAEtnC,IAAI,CAACyH,aAAD,EAAgB,CAAC3J,OAAD,EAAUC,OAAV,CAAhB,CAFhB;AAGAspC,QAAAA,eAAe,EAAE1mB,SAAAA;AAHjB,OADG,CADP,CAAA;AAOH,KAvB2B,CAAhC,CAAA;;IAyBA,IAAMzF,UAAU,GAAAxjB,QAAA,CAAA;MACZuoB,OAAO,EAAEroB,KAAK,CAACqoB,OADH;AAEZtoB,MAAAA,MAAM,EAAAA,MAAAA;KAFM,EAGTqjB,MAHS,CAAhB,CAAA;;AAMAkB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,eAAX,EAA4B0c,UAA5B,CAAZ,CAAA;AACA,IAAA,OAAOA,UAAP,CAAA;GAnrBO;AAqrBX0nB,EAAAA,mBAAmB,EAAnB,UAAoBpkC,QAApB,EAAgEjD,CAAhE,EAAsE;AAC1D,IAAA,IAAAgC,MAAM,GAAYhC,CAAC,CAAAgC,MAAnB;AAAA,QAAQV,KAAK,GAAKtB,CAAC,CAAAsB,KAAnB,CAAA;;AAER,IAAA,IAAI,CAACA,KAAK,CAACuqC,QAAX,EAAqB;AACjB,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAA,CAAK9E,cAAL,CAAoB9jC,QAApB,EAA8BjD,CAA9B,CAAA,CAAA;IACA,IAAM5D,MAAM,GAAGouB,iBAAiB,CAACvnB,QAAD,EAAW,IAAX,EAAiB,gBAAjB,EAAmCjD,CAAnC,CAAhC,CAAA;AAEA,IAAA,IAAM2f,UAAU,GAAqBU,aAAa,CAAmBpd,QAAnB,EAA6BjD,CAA7B,EAAgC;AAC9E0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OADsD;AAE9EtoB,MAAAA,MAAM,EAAAA,MAAAA;AAFwE,KAAhC,CAAlD,CAAA;AAKAukB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,kBAAX,EAA+B0c,UAA/B,CAAZ,CAAA;AACA,IAAA,OAAO3d,MAAP,CAAA;GArsBO;;AAusBX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8BAknB,OAAO,EAAP,UAAQjmB,QAAR,EAA+C;IAC3C,IAAM3B,KAAK,GAAwB,EAAnC,CAAA;IACA,IAAIikB,SAAS,GAAG,CAAhB,CAAA;IACA,IAAIC,UAAU,GAAG,CAAjB,CAAA;AACA,IAAA,IAAM/M,IAAI,GAAGxV,QAAQ,CAAC0U,OAAT,EAAb,CAAA;IAEA,OAAO;AACHyyB,MAAAA,SAAS,EAAE,IADR;MAEHC,YAAY,EAAZ,UAAarqC,CAAb,EAAqC;;;QACjC,OAAO;AAAEsB,UAAAA,KAAK,EAAAA,KAAP;UAASkd,eAAe,EAAExe,CAAC,CAACgF,SAAF,IAAe,CAAC,CAAD,EAAI,CAAJ,CAAzC;AAAiDimC,UAAAA,aAAa,EAAE,CAAA/pC,EAAA,GAAAlB,CAAC,KAAD,IAAA,IAAAA,CAAC,KAAD,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,CAAC,CAAEosB,UAAH,MAAiB,IAAjB,IAAiBlrB,EAAA,KAAA,KAAA,CAAjB,GAAiBA,EAAjB,GAAiB,IAAA;SAAxF,CAAA;OAHD;MAKHgoB,OAAO,EAAP,UAAQlpB,CAAR,EAAgC;QAC5B,IAAI,aAAA,IAAiBA,CAArB,EAAwB;AACpBulB,UAAAA,SAAS,GAAGvlB,CAAC,CAACqY,WAAF,GAAiBI,IAAI,CAACJ,WAAlC,CAAA;AACH,SAFD,MAEO,IAAI,YAAgBrY,IAAAA,CAApB,EAAuB;UAC1BulB,SAAS,IAAIvlB,CAAC,CAAC0uC,UAAf,CAAA;AACH,SAAA;;QACD,IAAI,cAAA,IAAkB1uC,CAAtB,EAAyB;AACrBwlB,UAAAA,UAAU,GAAGxlB,CAAC,CAACsY,YAAF,GAAkBG,IAAI,CAACH,YAApC,CAAA;AACH,SAFD,MAEO,IAAI,aAAiBtY,IAAAA,CAArB,EAAwB;UAC3BwlB,UAAU,IAAIxlB,CAAC,CAAC2uC,WAAhB,CAAA;AACH,SAAA;;QAGD,OAAO;AAAErtC,UAAAA,KAAK,EAAAA,KAAP;AAASilB,UAAAA,UAAU,EAAE,CAAChB,SAAD,EAAYC,UAAZ,CAArB;UAA8CsmB,eAAe,EAAE9rC,CAAC,CAAColB,SAAAA;SAAxE,CAAA;OAlBD;AAoBH7W,MAAAA,UAAU,EAAA,YAAA;QACN,OAAO;AAAEjN,UAAAA,KAAK,EAAAA,KAAP;AAASU,UAAAA,MAAM,EAAE,IAAA;SAAxB,CAAA;AACH,OAAA;KAtBL,CAAA;GA3uBO;EAowBXgd,KAAK,EAAL,UAAM/b,QAAN,EAAiD;AAC7CA,IAAAA,QAAQ,CAACtC,KAAT,CAAeQ,MAAf,CAAsBspC,SAAtB,GAAkC,IAAlC,CAAA;AACH,GAAA;AAtwBU,CAAf,CAAA;AAywBA;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;;AAaG;;AACH;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;;;AAaG;;AAEH;;;;;;;;;;;;;AAaG;;AAEH;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;;;;;;;;AAmBG;;AAEH;;;;;;;;;;;;;AAaG;;AACH;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;;;;AAeE;;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BE;;AAEF;;;;;;;;;;;;;;;AAeG;;ACr9BH;;;;AAIG;;AAEH,SAASmE,kBAAT,CACI3rC,QADJ,EAEI3B,KAFJ,EAEyBiB,OAFzB,EAE0CC,OAF1C,EAGIiW,IAHJ,EAG4B;AAExB,EAAA,IAAMtM,SAAS,GAAGlJ,QAAQ,CAAC5G,KAAT,CAAe8P,SAAjC,CAAA;AACA,EAAA,IAAMxL,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;EACA,IAAMZ,CAAC,GAAGY,KAAK,CAACyC,IAAN,GAAa,CAAb,GAAiB,CAA3B,CAAA;AACA,EAAA,IAAMW,MAAM,GAAGzC,KAAK,CAACyC,MAArB,CAAA;EACA,IAAMkJ,UAAU,GAAGJ,iBAAiB,CAChC5J,QAAQ,CAACtC,KAAT,CAAewC,UADiB;AAGhCG,EAAAA,KAAK,CAAC,CAACS,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,CAAD,EAAyBoI,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAAY,CAACxL,KAAK,CAAC1B,IAAP,EAAa0B,KAAK,CAAC3B,GAAnB,CAA9C,CAH2B,EAIhCe,CAJgC,CAApC,CAAA;AAMA,EAAA,IAAM8uC,mBAAmB,GAAGpqC,IAAI,CAAC,CAACgU,IAAI,CAACxZ,IAAN,EAAYwZ,IAAI,CAACzZ,GAAjB,CAAD,EAAwBiO,UAAxB,CAAhC,CAAA;EAEA3L,KAAK,CAACutC,mBAAN,GAA4BA,mBAA5B,CAAA;AACAvtC,EAAAA,KAAK,CAACwtC,OAAN,GAAgBh0B,MAAM,CAAC+zB,mBAAD,EAAsB,CAACtsC,OAAD,EAAUC,OAAV,CAAtB,CAAN,GAAkDzF,IAAI,CAAC+nB,EAAvD,GAA4D,GAA5E,CAAA;AACAxjB,EAAAA,KAAK,CAACytC,UAAN,GAAmBztC,KAAK,CAACwtC,OAAzB,CAAA;EACAxtC,KAAK,CAAC0tC,WAAN,GAAoB,CAApB,CAAA;EACA1tC,KAAK,CAAC2tC,IAAN,GAAa,CAAb,CAAA;AACA3tC,EAAAA,KAAK,CAAC4tC,SAAN,GAAkBrlC,SAAO,CAACglC,mBAAD,EAAsB,CAACtsC,OAAD,EAAUC,OAAV,CAAtB,CAAzB,CAAA;AACH,CAAA;;AAED,SAAS2sC,eAAT,CACIzwB,GADJ,EAEI1Z,SAFJ,EAGI1D,KAHJ,EAGuB;AAGf,EAAA,IAAAytC,UAAU,GAEVztC,KAAK,CAAAytC,UAFL;AAAA,MACAD,OAAO,GACPxtC,KAAK,CAAAwtC,OAFL,CAAA;AAKJ,EAAA,IAAIM,iBAAiB,GAAGN,OAAO,GAAG,GAAlC,CAAA;EACA,IAAIG,IAAI,GAAGlyC,IAAI,CAACqa,KAAL,CAAW03B,OAAO,GAAG,GAArB,CAAX,CAAA;;EAEA,IAAIM,iBAAiB,GAAG,CAAxB,EAA2B;AACvBA,IAAAA,iBAAiB,IAAI,GAArB,CAAA;AACH,GAAA;;EAED,IAAIA,iBAAiB,GAAG1wB,GAApB,IAA2B0wB,iBAAiB,GAAG,GAA/C,IAAsD1wB,GAAG,GAAG,EAAhE,EAAoE;AAChE;AACA,IAAA,EAAEuwB,IAAF,CAAA;AACH,GAHD,MAGO,IAAIG,iBAAiB,GAAG1wB,GAApB,IAA2B0wB,iBAAiB,GAAG,EAA/C,IAAqD1wB,GAAG,GAAG,GAA/D,EAAoE;AACvE;AACA,IAAA,EAAEuwB,IAAF,CAAA;AACH,GAAA;;EACD,IAAM1nC,IAAI,GAAGvC,SAAS,IAAIiqC,IAAI,GAAG,GAAP,GAAavwB,GAAb,GAAmBqwB,UAAvB,CAAtB,CAAA;AAEAztC,EAAAA,KAAK,CAACwtC,OAAN,GAAgBC,UAAU,GAAGxnC,IAA7B,CAAA;AAEA,EAAA,OAAOA,IAAP,CAAA;AACH,CAAA;;AACD,SAAS8nC,uBAAT,CACI9sC,OADJ,EACqBC,OADrB,EAEIwC,SAFJ,EAGI1D,KAHJ,EAGuB;EAEnB,OAAO6tC,eAAe,CAClBr0B,MAAM,CAACxZ,KAAK,CAACutC,mBAAP,EAA4B,CAACtsC,OAAD,EAAUC,OAAV,CAA5B,CAAN,GAAwDzF,IAAI,CAAC+nB,EAA7D,GAAkE,GADhD,EAElB9f,SAFkB,EAGlB1D,KAHkB,CAAtB,CAAA;AAKH,CAAA;;AACD,SAASguC,aAAT,CACIrsC,QADJ,EAEIssC,YAFJ,EAGIjuC,KAHJ,EAIIiG,IAJJ,EAKI+D,UALJ,EAMI8hB,SANJ,EAMuB;AAGf,EAAA,IAAAlsB,EAAA,GACA+B,QAAQ,CAAC5G,KAAT,CAAcmzC,cADd;MAAAA,cAAc,GAAAtuC,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EAAlB,CAAA;AAEJ,EAAA,IAAM8tC,WAAW,GAAG1tC,KAAK,CAAC0tC,WAA1B,CAAA;EACA,IAAIS,YAAY,GAAG,CAAnB,CAAA;EACA,IAAI7hB,MAAM,GAAG,KAAb,CAAA;;AAEA,EAAA,IAAIR,SAAJ,EAAe;IACX,IAAMpsB,MAAM,GAAG4jC,eAAe,CAAC3hC,QAAD,EAAWssC,YAAX,EAAyBhoC,IAAzB,CAA9B,CAAA;IAEAqmB,MAAM,GAAG5sB,MAAM,CAAC4sB,MAAhB,CAAA;AACA6hB,IAAAA,YAAY,GAAGnkC,UAAU,GAAGtK,MAAM,CAACga,QAAnC,CAAA;AACH,GAAA;;EAED,IAAI,CAAC4S,MAAL,EAAa;IACT6hB,YAAY,GAAG1iB,QAAQ,CAACzhB,UAAU,GAAG/D,IAAd,EAAoBioC,cAApB,CAAvB,CAAA;AACH,GAAA;;AACD,EAAA,IAAME,OAAO,GAAGD,YAAY,GAAGnkC,UAA/B,CAAA;EAEAhK,KAAK,CAAC0tC,WAAN,GAAoBU,OAApB,CAAA;EAEA,OAAO,CAACA,OAAO,GAAGV,WAAX,EAAwBU,OAAxB,EAAiCD,YAAjC,CAAP,CAAA;AAGH,CAAA;SAkBeE,qBACZC,kBACA1uC,IACA8D,WAAiB;MADhB3B,IAAI,GAAAnC,EAAA,CAAA,CAAA;MAAEkS,IAAI,GAAAlS,EAAA,CAAA,CAAA;MAAEoZ,IAAI,GAAApZ,EAAA,CAAA,CAAA;MAAEqZ,IAAI,GAAArZ,EAAA,CAAA,CAAA;;EAGvB,IAAI0uC,gBAAgB,KAAK,MAAzB,EAAiC;AAC7B,IAAA,OAAO,EAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAI7kC,OAAO,CAAC6kC,gBAAD,CAAX,EAA+B;AAC3B,IAAA,OAAOA,gBAAgB,CAAC9wC,GAAjB,CAAqB,UAAAyrB,KAAA,EAAS;AAAA,MAAA,OAAAolB,oBAAoB,CACrDplB,KADqD,EAErD,CAAClnB,IAAD,EAAO+P,IAAP,EAAakH,IAAb,EAAmBC,IAAnB,CAFqD,EAGrDvV,SAHqD,CAApB,CAInC,CAJmC,CAAA,CAAA;AAIjC,KAJG,CAAP,CAAA;AAKH,GAAA;;EACK,IAAA/D,KAAe,CAAC2uC,gBAAgB,IAAI,KAArB,EAA4Bp+B,KAA5B,CAAkC,GAAlC,CAAf;AAAA,MAACyiB,IAAI,QAAL;AAAA,MAAOC,IAAI,QAAX,CAAA;;AACN,EAAA,IAAI2b,QAAQ,GAAG,CAACxsC,IAAD,EAAO+P,IAAP,CAAf,CAAA;;EAEA,IAAI6gB,IAAI,KAAK,MAAb,EAAqB;AACjB4b,IAAAA,QAAQ,GAAG,CAACv1B,IAAD,EAAOjX,IAAP,CAAX,CAAA;AACH,GAFD,MAEO,IAAI4wB,IAAI,KAAK,OAAb,EAAsB;AACzB4b,IAAAA,QAAQ,GAAG,CAACz8B,IAAD,EAAOmH,IAAP,CAAX,CAAA;AACH,GAFM,MAEA,IAAI0Z,IAAI,KAAK,QAAb,EAAuB;AAC1B4b,IAAAA,QAAQ,GAAG,CAACt1B,IAAD,EAAOD,IAAP,CAAX,CAAA;AACH,GAAA;;AACD,EAAA,IAAI3R,GAAG,GAAG,CACN,CAACknC,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,IAAiBA,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAlB,IAAoC,CAD9B,EAEN,CAACA,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAA,GAAiBA,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAlB,IAAoC,CAF9B,CAAV,CAAA;AAIA,EAAA,IAAMh1B,GAAG,GAAG6C,cAAc,CAACmyB,QAAD,EAAW7qC,SAAX,CAA1B,CAAA;;AACA,EAAA,IAAIkvB,IAAJ,EAAU;IACN,IAAMlK,OAAO,GAAGkK,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,MAA3C,CAAA;IACA,IAAM4b,SAAS,GAAG7b,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,MAAhD,CAAA;AAEAtrB,IAAAA,GAAG,GAAGknC,QAAQ,CAAE7lB,OAAO,IAAI,CAAC8lB,SAAb,IAA4B,CAAC9lB,OAAD,IAAY8lB,SAAxC,GAAqD,CAArD,GAAyD,CAA1D,CAAd,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,CAAC,CAACnnC,GAAD,EAAMkS,GAAN,CAAD,CAAP,CAAA;AACH,CAAA;AAEe,SAAA8rB,oBAAA,CAAqB1jC,QAArB,EAAyEjD,CAAzE,EAA+E;EAC3F,IAAIA,CAAC,CAACmjB,SAAN,EAAiB;AACb,IAAA,OAAOnjB,CAAC,CAACojB,WAAF,KAAkB,WAAzB,CAAA;AACH,GAAA;;AACD,EAAA,IAAMrV,MAAM,GAAG/N,CAAC,CAACqB,UAAF,CAAa0M,MAA5B,CAAA;;EACA,IACIsV,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,kBAAD,CAAf,CAAR,IACIpQ,QAAQ,CAAC5G,KAAT,CAAe0zC,oBAAf,IAAuC1sB,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,gBAAD,CAAf,CADnD,IAEIgQ,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,SAAD,CAAf,CAAR,IAAuCgQ,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,WAAD,CAAf,CAHvD,EAIE;AACE,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAM28B,cAAc,GAAG/sC,QAAQ,CAAC5G,KAAT,CAAe2zC,cAAtC,CAAA;;AAEA,EAAA,IAAIA,cAAJ,EAAoB;IAChB,OAAOvrB,aAAa,CAACurB,cAAD,EAAiB,IAAjB,CAAb,CAAoC5uB,IAApC,CAAyC,UAAAvO,OAAA,EAAO;MACnD,IAAI,CAACA,OAAL,EAAc;AACV,QAAA,OAAO,KAAP,CAAA;AACH,OAAA;;MACD,OAAO9E,MAAM,KAAK8E,OAAX,IAAsB9E,MAAM,CAACkiC,QAAP,CAAgBp9B,OAAhB,CAA7B,CAAA;AACH,KALM,CAAP,CAAA;AAMH,GAAA;;AACD,EAAA,OAAO,KAAP,CAAA;AACH,CAAA;AAED,IAAM+yB,GAAG,GAAG,ojBAAZ,CAAA;AA8BA,gBAAe;AACX3pC,EAAAA,IAAI,EAAE,WADK;AAEX6sB,EAAAA,QAAQ,EAAE,IAFC;AAGXzsB,EAAAA,KAAK,EAAE,CACH,WADG,EAEH,kBAFG,EAGH,gBAHG,EAIH,kBAJG,EAKH,gBALG,EAMH,sBANG,EAOH,MAPG,EAQH,2BARG,EASH,uBATG,CAHI;AAcXD,EAAAA,MAAM,EAAE,CACJ,aADI,EAEJ,cAFI,EAGJ,QAHI,EAIJ,WAJI,EAKJ,kBALI,EAMJ,mBANI,EAOJ,aAPI,EAQJ,gBARI,CAdG;EAwBXwpC,GAAG,EAAE,CAACA,GAAD,CAxBM;EAyBX0E,aAAa,EAAb,UAAcrnC,QAAd,EAAgE;AAC5D,IAAA,IAAI,CAACA,QAAQ,CAAC+f,UAAT,CAAoB,WAApB,CAAL,EAAuC;AACnC,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;IACD,OAAO3P,MAAM,CAAC,wBAAD,CAAb,CAAA;GA7BO;AA+BXwyB,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAA2D00B,KAA3D,EAA0E;IAChE,IAAAz2B,EAAA,GAOFia,QAAQ,CAAClY,QAAQ,CAAC5G,KAAV,EAAiB,WAAjB,CAPN;AAAA,QACF6zC,SAAS,GAAAhvC,EAAA,CAAAgvC,SADP;AAAA,QAEFN,gBAAgB,GAAA1uC,EAAA,CAAA0uC,gBAFd;AAAA,QAGF9gC,IAAI,GAAA5N,EAAA,CAAA4N,IAHF;AAAA,QAIFy4B,gBAAgB,GAAArmC,EAAA,CAAAqmC,gBAJd;AAAA,QAKFwI,oBAAoB,GAAA7uC,EAAA,CAAA6uC,oBALlB;AAAA,QAMFI,yBAAyB,GAAAjvC,EAAA,CAAAivC,yBANvB,CAAA;;AAQA,IAAA,IAAAlvC,EAAA,GAGFgC,QAAQ,CAACukC,QAAT,EAHE;AAAA,QACFC,WAAW,GAAAxmC,EAAA,CAAAwmC,WADT;AAAA,QAEFziC,SAAS,GAAA/D,EAAA,CAAA+D,SAFP,CAAA;;IAIN,IAAI,CAACkrC,SAAL,EAAgB;AACZ,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;IACD,IAAME,SAAS,GAAGT,oBAAoB,CAACC,gBAAD,EAAoBnI,WAApB,EAAiCziC,SAAjC,CAAtC,CAAA;IACA,IAAMqrC,IAAI,GAAU,EAApB,CAAA;AAEAD,IAAAA,SAAS,CAACh6B,OAAV,CAAkB,UAAClV,EAAD,EAAa0H,CAAb,EAAc;UAAZD,GAAG,GAAAzH,EAAA,CAAA,CAAA;UAAE2Z,GAAG,GAAA3Z,EAAA,CAAA,CAAA;MACxBmvC,IAAI,CAAChnC,IAAL,CACIsuB,mBAAA,MAAA;AAAKC,QAAAA,GAAG,EAAE,UAAA,OAAA,CAAWhvB,CAAX;AAAgBmvB,QAAAA,SAAS,EAAE1kB,MAAM,CAAC,UAAD;AAAcJ,QAAAA,KAAK,EAAE;AAC5D;UACA5I,SAAS,EAAE,4BAAA1N,CAAAA,MAAA,CAA6BgM,GAAG,CAAC,CAAD,CAAhC,EAA0C,MAA1C,CAA0ChM,CAAAA,MAA1C,CAA0CgM,GAAG,CAAC,CAAD,CAA7C,EAAgD,aAAhD,EAAgDhM,MAAhD,CAA8Dke,GAA9D,EAAuE,MAAvE,CAAA;AAFiD,SAAA;OAAhE,EAII8c,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,QAAAA,SAAS,EAAE1kB,MAAM,CAAC,oBAAD,CAAjB;AAAyCJ,QAAAA,KAAK,EAAE;AACjD5I,UAAAA,SAAS,EAAE,SAAU1N,CAAAA,MAAV,CAAUmS,IAAV,EAAiB,GAAjB,CAAA;AADsC,SAAA;AAAhD,OAAL,CAJJ,EAOI6oB,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,QAAAA,SAAS,EAAE1kB,MAAM,CAAC,0BAAD,CAAjB;AAA+CJ,QAAAA,KAAK,EAAE;AACvD5I,UAAAA,SAAS,EAAE,yBAA0B1N,CAAAA,MAA1B,CAA0BmS,IAA1B,EAAiC,GAAjC,CAAA;AAD4C,SAAA;AAAtD,OAAL,CAPJ,CADJ,CAAA,CAAA;KADJ,CAAA,CAAA;;AAeA,IAAA,IAAIy4B,gBAAJ,EAAsB;AAClB,MAAA,IAAMxmB,KAAK,GAAG5B,OAAO,CAACgxB,yBAAyB,IAAI,EAA9B,CAArB,CAAA;MACA,IAAMG,YAAU,GAA2B,EAA3C,CAAA;AAEAvvB,MAAAA,KAAK,CAAC3K,OAAN,CAAc,UAAAna,IAAA,EAAI;QACdk0C,yBAA0B,CAACl0C,IAAD,CAA1B,CAAkCma,OAAlC,CAA0C,UAAApR,SAAA,EAAS;AAC/CsrC,UAAAA,YAAU,CAACtrC,SAAD,CAAV,GAAwB/I,IAAxB,CAAA;SADJ,CAAA,CAAA;OADJ,CAAA,CAAA;MAMA,IAAIs0C,qBAAqB,GAA2B,EAApD,CAAA;;AAEA,MAAA,IAAIxlC,OAAO,CAACw8B,gBAAD,CAAX,EAA+B;AAC3BgJ,QAAAA,qBAAqB,GAAGhJ,gBAAgB,CAACzoC,GAAjB,CAAqB,UAAAC,GAAA,EAAG;AAC5C,UAAA,IAAM7C,IAAI,GAAGo0C,YAAU,CAACvxC,GAAD,CAAvB,CAAA;UAEA,OAAO;YACHwO,IAAI,EAAErR,IAAI,GAAG;AAAEs0C,cAAAA,OAAO,EAAEt0C,IAAAA;AAAX,aAAH,GAAuB,EAD9B;AAEHoX,YAAAA,UAAU,EAAEpX,IAAI,GAAG,CAAC,MAAD,CAAH,GAAc,EAF3B;AAGH6C,YAAAA,GAAG,EAAAA,GAAAA;WAHP,CAAA;AAKH,SARuB,CAAxB,CAAA;AASH,OAAA;;AAEDsxC,MAAAA,IAAI,CAAChnC,IAAL,CAAAqK,KAAA,CAAA28B,IAAA,EAAa/I,8BAA8B,CACvCrkC,QADuC,EAEvC,WAFuC,EAGvCstC,qBAHuC,EAIvC5Y,KAJuC,CAA3C,CAAA,CAAA;AAMH,KAAA;;AACD,IAAA,IAAIoY,oBAAJ,EAA0B;AACtBM,MAAAA,IAAI,CAAChnC,IAAL,CAASqK,KAAT,CAAA28B,IAAA,EAAajI,oBAAoB,CAACnlC,QAAD,EAAW00B,KAAX,CAAjC,CAAA,CAAA;AACH,KAAA;;AAED,IAAA,OAAO0Y,IAAP,CAAA;GApGO;AAsGX1J,EAAAA,oBAAoB,EAAEA,oBAtGX;AAuGXE,EAAAA,gBAAgB,EAAhB,UACI5jC,QADJ,EAEIjD,CAFJ,EAEU;;;;;AAEF,IAAA,IAAAsB,KAAK,GAILtB,CAAC,CAAAsB,KAJD;AAAA,QACAiB,OAAO,GAGPvC,CAAC,CAAAuC,OAJD;AAAA,QACSC,OAAO,GAGhBxC,CAAC,CAAAwC,OAJD;AAAA,QAEAwmB,YAAY,GAEZhpB,CAAC,CAAAgpB,YAJD;AAAA,QAEcsB,UAAU,GAExBtqB,CAAC,WAJD;AAAA,QAE0Ba,OAAO,GAEjCb,CAAC,QAJD;AAAA,QAGAmjB,SAAS,GACTnjB,CAAC,UAJD,CAAA;AAKJ,IAAA,IAAMW,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,IAAA,IAAAoN,MAAM,GAQNpN,KAAK,CARCoN,MAAN;AAAA,QAAQ9O,IAAI,GAQZ0B,KAAK,CAAA1B,IARL;AAAA,QAAcD,GAAG,GAQjB2B,KAAK,CARY3B,GAAjB;AAAA,QACAgG,SAAS,GAOTrE,KAAK,CAAAqE,SARL;AAAA,QACWyrC,eAAe,GAO1B9vC,KAAK,CAPqB8vC,eAD1B;AAAA,QAC4BnmC,eAAe,GAO3C3J,KAAK,CAAA2J,eARL;AAAA,QAEApH,kBAAkB,GAMlBvC,KAAK,CANauC,kBAFlB;AAAA,QAGAc,YAAY,GAKZrD,KAAK,CAAAqD,YARL;AAAA,QAIAC,YAAY,GAIZtD,KAAK,CAJOsD,YAJZ;AAAA,QAKAJ,SAAS,GAGTlD,KAAK,CAAAkD,SARL;AAAA,QAMAyE,KAAK,GAEL3H,KAAK,CAFA2H,KANL;AAAA,QAOAC,MAAM,GACN5H,KAAK,CAAA4H,MARL,CAAA;;AAUJ,IAAA,IAAI,CAAC4a,SAAD,IAAc,CAACpV,MAAnB,EAA2B;AACvB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAED,IAAA,IAAM0K,IAAI,GAAGxV,QAAQ,CAAC0U,OAAT,EAAb,CAAA;IACArW,KAAK,CAACmX,IAAN,GAAaA,IAAb,CAAA;IACAnX,KAAK,CAAC+I,SAAN,GAAkBC,eAAlB,CAAA;IACAhJ,KAAK,CAACrC,IAAN,GAAaA,IAAb,CAAA;IACAqC,KAAK,CAACtC,GAAN,GAAYA,GAAZ,CAAA;;AACA,IAAA,IAAIssC,gBAAgB,GAAG,UAACp/B,aAAD,EAAwB;AACrC,MAAA,IAAAhL,KAKF+B,QAAQ,CAACtC,KALP;AAAA,UACFkD,SAAS,GAAA3C,EAAA,CAAA2C,SADP;AAAA,UAEFT,IAAI,GAAAlC,EAAA,CAAAkC,IAFF;AAAA,UAGFkF,KAAK,GAAApH,EAAA,CAAAoH,KAHH;AAAA,UAIFC,MAAM,YAJJ,CAAA;MAMN,IAAMwB,cAAc,GAAG4C,iBAAiB,CAACT,aAAD,EAAgB5D,KAAhB,EAAuBC,MAAvB,CAAxC,CAAA;MACAjH,KAAK,CAACyI,cAAN,GAAuBA,cAAvB,CAAA;AACAzI,MAAAA,KAAK,CAAC4K,aAAN,GAAsBW,iBAAiB,CAAChJ,SAAD,EAAYqI,aAAZ,EAA2B9I,IAAI,GAAG,CAAH,GAAO,CAAtC,CAAvC,CAAA;;AAEA,MAAA,IAAIstC,WAAJ,EAAiB;QACbA,WAAW,CAACpF,gBAAZ,CAA6Bp/B,aAA7B,CAAA,CAAA;AACH,OAAA;KAbL,CAAA;;AAeA,IAAA,IAAIm/B,iBAAiB,GAAuC,UAACthC,cAAD,EAAyB;MACjFzI,KAAK,CAACyI,cAAN,GAAuBA,cAAvB,CAAA;MACAzI,KAAK,CAAC4K,aAAN,GAAsBM,kBAAkB,CAACvJ,QAAD,EAAW8G,cAAX,CAAxC,CAAA;;AAEA,MAAA,IAAI2mC,WAAJ,EAAiB;QACbA,WAAW,CAACrF,iBAAZ,CAA8BthC,cAA9B,CAAA,CAAA;AACH,OAAA;KANL,CAAA;;IAQA,IAAI4mC,YAAY,GAAGpuC,OAAnB,CAAA;IACA,IAAIquC,YAAY,GAAGpuC,OAAnB,CAAA;;AAEA,IAAA,IAAI2gB,SAAS,IAAItiB,OAAb,IAAwBypB,UAA5B,EAAwC;AACpC,MAAA,IAAMumB,cAAc,GAAG7nB,YAAY,IAAI,CAAvC,CAAA;MAEA1nB,KAAK,CAACwvC,UAAN,GAAmB;QACf/sC,MAAM,EAAE0U,IAAI,CAACwwB,YADE;AAEf6F,QAAAA,OAAO,EAAE+B,cAFM;AAGf9B,QAAAA,UAAU,EAAE8B,cAHG;AAIf7B,QAAAA,WAAW,EAAE,CAJE;AAKfE,QAAAA,SAAS,EAAE,CAAA;OALf,CAAA;AAOA5tC,MAAAA,KAAK,CAACyvC,SAAN,GACO50C,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAmF,KAAK,CAACwvC,UAAN,CAAA,EACH;QAAA/sC,MAAM,EAAE0U,IAAI,CAAC1U,MAAAA;AAAb,OADG,CADP,CAAA;AAIAzC,MAAAA,KAAK,CAAC0vC,YAAN,GAAkB70C,QAAA,CAAAA,QAAA,CAAA,EAAA,EACXmF,KAAK,CAACwvC,UADK,CAAA,EAEd;QAAA/sC,MAAM,EAAE0U,IAAI,CAAC1U,MAAb;AACAuH,QAAAA,UAAU,EAAEulC,cAAAA;AADZ,OAFc,CAAlB,CAAA;AAKH,KAnBD,MAmBO;MACH,IAAMI,WAAW,GAAG,CAAAhwC,EAAA,GAAAjB,CAAC,CAACqB,UAAF,MAAY,IAAZ,IAAYJ,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAYA,EAAA,CAAE8M,MAAlC,CAAA;;AAEA,MAAA,IAAIkjC,WAAJ,EAAiB;QACb,IAAMC,eAAe,GAAGD,WAAW,CAACtyB,YAAZ,CAAyB,gBAAzB,KAA8C,EAAtE,CAAA;AACA,QAAA,IAAMwyB,gBAAgB,GAAGrxC,6BAA6B,CAACoxC,eAAD,CAAtD,CAAA;;AAEA,QAAA,IAAIC,gBAAJ,EAAsB;UAClB7vC,KAAK,CAAC8oC,SAAN,GAAkB,IAAlB,CAAA;UACA9oC,KAAK,CAAC8vC,eAAN,GAAwB/tB,QAAQ,CAAC4tB,WAAD,EAAc59B,MAAM,CAAC,gBAAD,CAApB,CAAhC,CAAA;UACA/R,KAAK,CAAC6vC,gBAAN,GAAyBA,gBAAzB,CAAA;AACA,UAAA,IAAMX,OAAO,GAAGS,WAAW,CAACtyB,YAAZ,CAAyB,cAAzB,CAAhB,CAAA;;AAEA,UAAA,IAAI6xB,OAAJ,EAAa;YACTlvC,KAAK,CAAC+vC,WAAN,GAAoBb,OAApB,CAAA;AACH,WAAA;;AAED,UAAA,IAAMc,WAAW,GAAG53B,gCAAgC,CAChD/Y,KAAK,CAACwC,UAD0C,EAEhDxC,KAAK,CAAC8mC,WAF0C,EAGhDvkC,kBAHgD,CAApD,CAAA;UAOAhC,EAAA,GAA+BsI,iBAAiB,CAAC8nC,WAAD,EAAcH,gBAAd,CAAhD,EAACR,YAAY,GAAAzvC,EAAA,CAAA,CAAA,CAAb,EAAe0vC,YAAY,GAAA1vC,EAAA,CAAA,CAAA,CAA3B,CAAA;AACH,SAAA;AACJ,OAAA;;MACDI,KAAK,CAACwvC,UAAN,GAAmB;QAAE/sC,MAAM,EAAE0U,IAAI,CAACwwB,YAAAA;OAAlC,CAAA;MACA3nC,KAAK,CAACyvC,SAAN,GAAkB;QAAEhtC,MAAM,EAAE0U,IAAI,CAAC1U,MAAAA;OAAjC,CAAA;MACAzC,KAAK,CAAC0vC,YAAN,GAAqB;QACjBjtC,MAAM,EAAE0U,IAAI,CAAC1U,MADI;QAEjBuH,UAAU,EAAEmN,IAAI,CAACuC,QAAAA;OAFrB,CAAA;MAKA,IAAMu2B,uBAAqB,GAAGjG,gBAA9B,CAAA;;MAEAA,gBAAgB,GAAG,UAACp/B,aAAD,EAAwB;QACvC,IAAMnM,CAAC,GAAGY,KAAK,CAACyC,IAAN,GAAa,CAAb,GAAiB,CAA3B,CAAA;;AACM,QAAA,IAAAlC,KAAqBuD,IAAI,CAAC+sC,SAAS,CAACvtC,YAAD,EAAelE,CAAf,CAAV,EAA6BmM,aAA7B,CAAzB;AAAA,YAAChN,OAAO,QAAR;AAAA,YAAUC,OAAO,QAAjB,CAAA;;AACN,QAAA,IAAMsyC,iBAAiB,GAAG9sC,SAAS,CAC/BX,YAD+B,EAE/BQ,qBAAqB,CAAC,CAACtF,OAAD,EAAUC,OAAV,CAAD,EAAqBY,CAArB,CAFU,CAAnC,CAAA;QAIA,IAAM2xC,gBAAgB,GAAG/sC,SAAS,CAC9Bd,SAD8B,EAE9BW,qBAAqB,CAAC,CAAC0H,aAAa,CAAC,CAAD,CAAd,EAAmBA,aAAa,CAAC,CAAD,CAAhC,CAAD,EAAuCnM,CAAvC,CAFS,CAAlC,CAAA;QAIAwxC,uBAAqB,CAACrlC,aAAD,CAArB,CAAA;AACA,QAAA,IAAMylC,QAAQ,GAAGhxC,KAAK,CAACgxC,QAAvB,CAAA;QAEArwC,KAAK,CAACwvC,UAAN,CAAiB/sC,MAAjB,GAA0BT,KAAK,CAACmuC,iBAAD,EAAoBE,QAApB,CAA/B,CAAA;QACArwC,KAAK,CAACyvC,SAAN,CAAgBhtC,MAAhB,GAAyBT,KAAK,CAACouC,gBAAD,EAAmBC,QAAnB,CAA9B,CAAA;QACArwC,KAAK,CAAC0vC,YAAN,CAAmBjtC,MAAnB,GAA4BT,KAAK,CAACouC,gBAAD,EAAmBC,QAAnB,CAAjC,CAAA;AAEA/C,QAAAA,kBAAkB,CAAC3rC,QAAD,EAAW3B,KAAK,CAACwvC,UAAjB,EAA6BH,YAA7B,EAA2CC,YAA3C,EAAyD1tC,kBAAzD,CAAlB,CAAA;AACA0rC,QAAAA,kBAAkB,CAAC3rC,QAAD,EAAW3B,KAAK,CAACyvC,SAAjB,EAA4BJ,YAA5B,EAA0CC,YAA1C,EAAwD1tC,kBAAxD,CAAlB,CAAA;AACA0rC,QAAAA,kBAAkB,CAAC3rC,QAAD,EAAW3B,KAAK,CAAC0vC,YAAjB,EAA+BL,YAA/B,EAA6CC,YAA7C,EAA2D1tC,kBAA3D,CAAlB,CAAA;OApBJ,CAAA;;MAsBAmoC,iBAAiB,GAAG,UAACthC,cAAD,EAAyB;AACzC,QAAA,IAAMmC,aAAa,GAAG1C,iBAAiB,CAAC,CACpC,CAAC,CAAD,EAAI,CAAJ,CADoC,EAEpC,CAAClB,KAAD,EAAQ,CAAR,CAFoC,EAGpC,CAAC,CAAD,EAAIC,MAAJ,CAHoC,EAIpC,CAACD,KAAD,EAAQC,MAAR,CAJoC,CAAD,EAKpCwB,cALoC,CAAvC,CAAA;QAOAuhC,gBAAgB,CAACp/B,aAAD,CAAhB,CAAA;OARJ,CAAA;AAUH,KAAA;;IAED5K,KAAK,CAACqvC,YAAN,GAAqBA,YAArB,CAAA;IACArvC,KAAK,CAACsvC,YAAN,GAAqBA,YAArB,CAAA;IACAtvC,KAAK,CAAC0D,SAAN,GAAkBA,SAAlB,CAAA;IACA1D,KAAK,CAACmvC,eAAN,GAAwBA,eAAxB,CAAA;IACAnvC,KAAK,CAACgK,UAAN,GAAmB,CAAnB,CAAA;IACAhK,KAAK,CAACA,KAAN,GAAc,EAAd,CAAA;AAEA4J,IAAAA,wBAAwB,CAAClL,CAAD,EAAI,QAAJ,CAAxB,CAAA;IAEA,IAAImC,SAAS,GAAwB,KAArC,CAAA;IACA,IAAIuuC,WAAW,GAA0B,KAAzC,CAAA;;AAEA,IAAA,IAAIpvC,KAAK,CAAC8oC,SAAN,IAAmB9oC,KAAK,CAAC+vC,WAA7B,EAA0C;AACtC,MAAA,IAAMA,WAAW,GAAG/vC,KAAK,CAAC+vC,WAA1B,CAAA;;MAEA,IAAIA,WAAW,KAAK,WAApB,EAAiC;AAC7BX,QAAAA,WAAW,GAAGkB,SAAS,CAAC/K,gBAAV,CAA2B5jC,QAA3B,EACP9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAC,IAAIwF,WAAJ,CAAgB,WAAhB,CAAA,CAA6BQ,SAA7B,CAAuC,CAAC,CAAD,EAAI,CAAJ,CAAvC,EAA+CnC,CAA/C,CAAD,CAAA,EAAmD;UACtD6xC,cAAc,EAAEvwC,KAAK,CAACwwC,eADgC;UAEtDC,mBAAmB,EAAEzwC,KAAK,CAAC4K,aAAAA;AAF2B,SAAnD,CADO,CAAd,CAAA;AAKH,OAAA;AACJ,KAAA;;IAED,IAAI,CAACwkC,WAAL,EAAkB;MACdvuC,SAAS,GAAG4J,SAAS,CAAC5J,SAAV,CACRc,QADQ,EAER,IAAItB,WAAJ,EAAA,CAAkBQ,SAAlB,CAA4B,CAAC,CAAD,EAAI,CAAJ,CAA5B,EAAoCnC,CAApC,CAFQ,CAAZ,CAAA;AAIH,KAAA;;AAEDsrC,IAAAA,gBAAgB,CAAC3qC,KAAK,CAACuD,eAAP,CAAhB,CAAA;IACA,IAAMub,MAAM,GAAGD,UAAU,CAAgBvc,QAAhB,EAA0BjD,CAA1B,EACrB7D,QAAA,CAAAA,QAAA,CAAA;MAAAuW,GAAG,EAAE,UAACs/B,UAAD,EAAmB;QACpB1wC,KAAK,CAACgK,UAAN,GAAmB0mC,UAAU,GAAGj1C,IAAI,CAAC+nB,EAAlB,GAAuB,GAA1C,CAAA;OADJ;AAGAumB,MAAAA,iBAAiB,EAAAA,iBAHjB;AAIAC,MAAAA,gBAAgB,EAAAA,gBAAAA;AAJhB,KAAA,EAKG3gC,uBAAuB,CAAC3K,CAAD,CAL1B,CAAA;AAMAmC,MAAAA,SAAS,EAAAA;AACTuuC,MAAAA,WAAW,EAAAA,WAAAA;KAPX,CADqB,CAAzB,CAAA;IAUA,IAAM1vC,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,eAAX,EAA4Bwc,MAA5B,CAA3B,CAAA;AACAne,IAAAA,KAAK,CAAC2wC,QAAN,GAAiBjxC,MAAM,KAAK,KAA5B,CAAA;IACAL,KAAK,CAACsoB,cAAN,GAAuB;MACnBC,OAAO,EAAElpB,CAAC,CAACmjB,SAAAA;KADf,CAAA;AAIA,IAAA,OAAO7hB,KAAK,CAAC2wC,QAAN,GAAiBxyB,MAAjB,GAA0B,KAAjC,CAAA;GAxSO;AA0SXqnB,EAAAA,WAAW,EAAX,UACI7jC,QADJ,EAEIjD,CAFJ,EAEU;;;AAEE,IAAA,IAAAsB,KAAK,GAA8EtB,CAAC,CAAAsB,KAApF;AAAA,QAAO4wC,WAAW,GAAiElyC,CAAC,CAAAkyC,WAApF;AAAA,QAAoBC,WAAW,GAAoDnyC,CAAC,CAAAmyC,WAApF;AAAA,QAAiCnpB,YAAY,GAAsChpB,CAAC,CAAAgpB,YAApF;AAAA,QAA+CsB,UAAU,GAA0BtqB,CAAC,WAApF;AAAA,QAA2Da,OAAO,GAAiBb,CAAC,QAApF;AAAA,QAAoEoyC,UAAU,GAAKpyC,CAAC,WAApF,CAAA;AAEJ,IAAA,IAAAywC,eAAe,GASfnvC,KAAK,CAAAmvC,eATL;AAAA,QACAK,UAAU,GAQVxvC,KAAK,CARKwvC,UADV;AAAA,QAEAC,SAAS,GAOTzvC,KAAK,UATL;AAAA,QAGA0vC,YAAY,GAMZ1vC,KAAK,CAAA0vC,YATL;AAAA,QAIAiB,QAAQ,GAKR3wC,KAAK,CALG2wC,QAJR;AAAA,QAKA3mC,UAAU,GAIVhK,KAAK,WATL;AAAA,QAMAmX,IAAI,GAGJnX,KAAK,CAAAmX,IATL;AAAA,QAOAk4B,YAAY,GAEZrvC,KAAK,CAFOqvC,YAPZ;AAAA,QAQAC,YAAY,GACZtvC,KAAK,aATL,CAAA;;IAWJ,IAAI,CAAC2wC,QAAL,EAAe;AACX,MAAA,OAAA;AACH,KAAA;;AAEDhtC,IAAAA,qBAAqB,CAACjF,CAAD,EAAI,QAAJ,CAArB,CAAA;AAEA,IAAA,IAAMqyC,eAAe,GAAGxtC,qBAAqB,CAAC7E,CAAD,CAA7C,CAAA;AACA,IAAA,IAAMgF,SAAS,GAAGyrC,eAAe,GAAG4B,eAApC,CAAA;AAEI,IAAA,IAAA/I,cAAc,GACdrmC,QAAQ,CAAC5G,KAAT,eADA,CAAA;IAIJ,IAAI0tC,WAAW,GAAG,CAAlB,CAAA;AACA,IAAA,IAAID,UAAJ,CAAA;AACA,IAAA,IAAIwI,cAAJ,CAAA;IAEA,IAAI1xC,KAAK,GAAG,CAAZ,CAAA;AACA,IAAA,IAAI2G,IAAJ,CAAA;AACA,IAAA,IAAIyT,QAAJ,CAAA;IAEA,IAAIu3B,aAAa,GAAG,CAApB,CAAA;AACA,IAAA,IAAIC,YAAJ,CAAA;AACA,IAAA,IAAIC,gBAAJ,CAAA;AAEA,IAAA,IAAMC,aAAa,GAAG,GAAA,GAAM31C,IAAI,CAAC+nB,EAAX,GAAgBxZ,UAAtC,CAAA;AACA,IAAA,IAAMqnC,qBAAqB,GAAG3B,YAAY,CAAC1lC,UAA3C,CAAA;IACA,IAAIsiB,MAAM,GAAG,KAAb,CAAA;AACA,IAAA,IAAMglB,WAAW,GAAGjC,YAAY,GAAGuB,WAAnC,CAAA;AACA,IAAA,IAAMW,WAAW,GAAGjC,YAAY,GAAGuB,WAAnC,CAAA;;AAEA,IAAA,IAAI,CAAC7nB,UAAD,IAAe,YAAA,IAAgBtqB,CAAnC,EAAsC;AAClC,MAAA,IAAMumB,UAAU,GAAGvmB,CAAC,CAACumB,UAArB,CAAA;AAEAujB,MAAAA,UAAU,GAAGvjB,UAAb,CAAA;AACAhf,MAAAA,IAAI,GAAGgf,UAAP,CAAA;AACAisB,MAAAA,YAAY,GAAGjsB,UAAf,CAAA;AACH,KAND,MAMO,IAAI1lB,OAAO,IAAIypB,UAAf,EAA2B;MAC9Bwf,UAAU,GAAGqF,eAAe,CAACnmB,YAAD,EAAeynB,eAAf,EAAgCK,UAAhC,CAA5B,CAAA;MACAvpC,IAAI,GAAG4nC,eAAe,CAACnmB,YAAD,EAAehkB,SAAf,EAA0B+rC,SAA1B,CAAtB,CAAA;MACAyB,YAAY,GAAGrD,eAAe,CAACnmB,YAAD,EAAehkB,SAAf,EAA0BgsC,YAA1B,CAA9B,CAAA;AACH,KAJM,MAIA;MACHlH,UAAU,GAAGuF,uBAAuB,CAACuD,WAAD,EAAcC,WAAd,EAA2BpC,eAA3B,EAA4CK,UAA5C,CAApC,CAAA;MACAvpC,IAAI,GAAG8nC,uBAAuB,CAACuD,WAAD,EAAcC,WAAd,EAA2B7tC,SAA3B,EAAsC+rC,SAAtC,CAA9B,CAAA;MACAyB,YAAY,GAAGnD,uBAAuB,CAACuD,WAAD,EAAcC,WAAd,EAA2B7tC,SAA3B,EAAsCgsC,YAAtC,CAAtC,CAAA;AACApjB,MAAAA,MAAM,GAAG,IAAT,CAAA;AACH,KAAA;;IACD0kB,cAAc,GAAGI,aAAa,GAAG5I,UAAjC,CAAA;IACA9uB,QAAQ,GAAG03B,aAAa,GAAGnrC,IAA3B,CAAA;IACAkrC,gBAAgB,GAAGE,qBAAqB,GAAGH,YAA3C,CAAA;IAGA7xB,YAAY,CAAC1d,QAAD,EAAW,gBAAX,EAA6Buc,UAAU,CAAiBvc,QAAjB,EAA2BjD,CAA3B,EAA8B;AAC7EsyC,MAAAA,cAAc,EAAAA,cAD+D;AAE7Et3B,MAAAA,QAAQ,EAAAA,QAFqE;AAG7Ey3B,MAAAA,gBAAgB,EAAAA,gBAH6D;MAI7EK,WAAW,EAAX,UAAYC,YAAZ,EAAgC;QAC5BxrC,IAAI,GAAGwrC,YAAY,GAAGL,aAAtB,CAAA;AACA5I,QAAAA,UAAU,GAAGviC,IAAb,CAAA;AACAirC,QAAAA,YAAY,GAAGjrC,IAAf,CAAA;AACH,OAAA;KAR8C,EAShD,IATgD,CAAvC,CAAZ,CAAA;AAWArG,IAAAA,EAII,GAAAouC,aAAa,CAACrsC,QAAD,EAAWwV,IAAX,EAAiBq4B,UAAjB,EAA6BhH,UAA7B,EAAyC4I,aAAzC,EAAwD9kB,MAAxD,CAJjB,EACImc,WAAW,GAAA7oC,EAAA,CAAA,CAAA,CADf,EAEI4oC,UAAU,GAAA5oC,EAAA,CAAA,CAAA,CAFd,EAGIoxC,cAAc,GAAApxC,EAAA,CAAA,CAAA,CAHlB,CAAA;AAMAD,IAAAA,EAII,GAAAquC,aAAa,CAACrsC,QAAD,EAAWwV,IAAX,EAAiBs4B,SAAjB,EAA4BxpC,IAA5B,EAAkCmrC,aAAlC,EAAiD9kB,MAAjD,CAJjB,EACIhtB,KAAK,GAAAK,EAAA,CAAA,CAAA,CADT,EAEIsG,IAAI,GAAAtG,EAAA,CAAA,CAAA,CAFR,EAGI+Z,QAAQ,GAAA/Z,EAAA,CAAA,CAAA,CAHZ,CAAA;AAMAyC,IAAAA,EAII,GAAA4rC,aAAa,CAACrsC,QAAD,EAAWwV,IAAX,EAAiBu4B,YAAjB,EAA+BwB,YAA/B,EAA6CG,qBAA7C,EAAoE/kB,MAApE,CAJjB,EACI2kB,aAAa,GAAA7uC,EAAA,CAAA,CAAA,CADjB,EAEI8uC,YAAY,GAAA9uC,EAAA,CAAA,CAAA,CAFhB,EAGI+uC,gBAAgB,GAAA/uC,EAAA,CAAA,CAAA,CAHpB,CAAA;;IAMA,IAAI,CAAC6uC,aAAD,IAAkB,CAAC3xC,KAAnB,IAA4B,CAACmpC,WAA7B,IAA4C,CAACT,cAAjD,EAAiE;AAC7D,MAAA,OAAA;AACH,KAAA;;IAED,IAAMx9B,aAAa,GAAGzE,sBAAsB,CACxC/F,KADwC,EACjC,SAAA,CAAA3E,MAAA,CAAUqe,QAAV,EAAkB,MAAlB,CADiC,EACP,SAAAre,CAAAA,MAAA,CAAU4K,IAAV,EAAc,MAAd,CADO,CAA5C,CAAA;IAIA,IAAMyrC,WAAW,GAAGlmC,aAAa,CAAC7J,QAAD,EAAWsE,IAAX,EAAiBjG,KAAjB,CAAjC,CAAA;IACA,IAAMyrC,YAAY,GAAGzpC,KAAK,CACtBmB,IAAI,CAAC2tC,UAAU,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAf,EAAuBY,WAAvB,CADkB,EAEtB1xC,KAAK,CAAC2xC,eAAN,IAAyB,CAAC,CAAD,EAAI,CAAJ,CAFH,CAA1B,CAAA;IAIA3xC,KAAK,CAAC2xC,eAAN,GAAwBD,WAAxB,CAAA;IAEA1xC,KAAK,CAAC4xC,YAAN,GAAqB,IAArB,CAAA;AAEA,IAAA,IAAMC,SAAS,GAAGtnC,kBAAkB,CAChC5I,QADgC,EAEhC6I,aAFgC,EAGhCihC,YAHgC,EAIhClsC,OAJgC,EAKhCb,CALgC,CAApC,CAAA;IAQA,IAAIozC,cAAc,GAAoBD,SAAtC,CAAA;AACA,IAAA,IAAM7sB,cAAc,GAAGzc,SAAO,CAC1B,CAAC+oC,WAAD,EAAcC,WAAd,CAD0B,EAE1B7B,YAAY,CAACnC,mBAFa,CAAP,GAGnBmC,YAAY,CAAC9B,SAHjB,CAAA;IAKA,IAAImE,MAAM,GAAyB9vB,SAAnC,CAAA;;AAEA,IAAA,IAAIjiB,KAAK,CAAC+vC,WAAN,KAAsB,WAA1B,EAAuC;AACnC,MAAA,IAAMiC,WAAW,GAAG1B,SAAS,CAAC9K,WAAV,CAChB7jC,QADgB,EAGT9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAuE,aAAa,CAACV,CAAD,EAAIiD,QAAQ,CAACtC,KAAb,EAAoB,CAACX,CAAC,CAAC6C,MAAH,EAAW7C,CAAC,CAAC8C,MAAb,CAApB,EAA0C,CAAC,CAACjC,OAA5C,EAAqD,KAArD,EAA4D,WAA5D,CAAb,CAAA,EAAqF;AACxFmrC,QAAAA,aAAa,EAAE,IADyE;AAExF1lB,QAAAA,cAAc,EAAAA,cAAAA;AAF0E,OAArF,CAHS,CAApB,CAAA;;AASA,MAAA,IAAIgtB,WAAJ,EAAiB;AACbD,QAAAA,MAAM,GAAGC,WAAT,CAAA;QACAF,cAAc,GAAG/zB,kBAAkB,CAAC+zB,cAAD,EAAiBE,WAAjB,EAA8BtzC,CAA9B,CAAnC,CAAA;AACH,OAAA;AACJ,KAAA;;IAED,IAAMyf,MAAM,GAAGD,UAAU,CAAWvc,QAAX,EAAqBjD,CAArB,EAAsB7D,QAAA,CAAAA,QAAA,CAAA;AAC3CyE,MAAAA,KAAK,EAAAA,KADsC;AAE3C2G,MAAAA,IAAI,EAAAA,IAFuC;AAG3CigB,MAAAA,MAAM,EAAExM,QAHmC;AAI3CA,MAAAA,QAAQ,EAAAA,QAJmC;AAM3C8uB,MAAAA,UAAU,EAAAA,UANiC;AAO3CC,MAAAA,WAAW,EAAAA,WAPgC;AAQ3CwJ,MAAAA,YAAY,EAAEjB,cAR6B;AAS3CA,MAAAA,cAAc,EAAAA,cAT6B;AAW3CE,MAAAA,YAAY,EAAAA,YAX+B;AAY3CD,MAAAA,aAAa,EAAAA,aAZ8B;AAa3CiB,MAAAA,cAAc,EAAEf,gBAb2B;AAc3CA,MAAAA,gBAAgB,EAAAA,gBAd2B;MAgB3C5xC,OAAO,EAAE,CAAC,CAACA,OAhBgC;AAiB3CwyC,MAAAA,MAAM,EAAAA,MAAAA;AAjBqC,KAAA,EAkBxCF,SAlBwC,CAAA,EAmBxCC,cAnBwC,CAAtB,CAAzB,CAAA;AAqBAzyB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,UAAX,EAAuBwc,MAAvB,CAAZ,CAAA;AAEA,IAAA,OAAOA,MAAP,CAAA;GApdO;AAsdXsnB,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAAmEjD,CAAnE,EAAyE;AAC7D,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;;AAER,IAAA,IAAI,CAACA,KAAK,CAAC2wC,QAAX,EAAqB;AACjB,MAAA,OAAA;AACH,KAAA;;IACD3wC,KAAK,CAAC2wC,QAAN,GAAiB,KAAjB,CAAA;IAEA,IAAMxyB,MAAM,GAAGY,aAAa,CAAcpd,QAAd,EAAwBjD,CAAxB,EAA2B,EAA3B,CAA5B,CAAA;AAEA2gB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,aAAX,EAA0Bwc,MAA1B,CAAZ,CAAA;AACA,IAAA,OAAOA,MAAP,CAAA;GAjeO;AAmeX6tB,EAAAA,yBAAyB,EAAE3G,oBAnehB;AAoeXQ,EAAAA,qBAAqB,EAArB,UAAsBlkC,QAAtB,EAAkEjD,CAAlE,EAAwE;AAC5D,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;AACF,IAAA,IAAAJ,EAIF,GAAA+B,QAAQ,CAACtC,KAJP;AAAA,QACI8yC,UAAU,GAAAvyC,EAAA,CAAAjC,IADd;AAAA,QAEGy0C,SAAS,GAAAxyC,EAAA,CAAAlC,GAFZ;AAAA,QAGY20C,kBAAkB,kBAH9B,CAAA;IAMN,IAAMl0B,MAAM,GAAG,IAAKonB,CAAAA,gBAAL,CAAsB5jC,QAAtB,EAAgCjD,CAAhC,CAAf,CAAA;;IAEA,IAAI,CAACyf,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IAEDA,MAAM,CAAC/M,GAAP,CAAWpR,KAAK,CAACmvC,eAAN,GAAwBxtC,QAAQ,CAAC+X,QAA5C,CAAA,CAAA;AAEA,IAAA,IAAM5e,MAAM,GAAGouB,iBAAiB,CAC5BvnB,QAD4B,EAE5B,IAF4B,EAG5B,kBAH4B,EAI5BjD,CAJ4B,EAK5B,UAACuqB,KAAD,EAAQL,EAAR,EAAU;AACA,MAAA,IAAAhpB,EAA8B,GAAAqpB,KAAK,CAAC5pB,KAApC;AAAA,UAAE1B,IAAI,GAAAiC,EAAA,CAAAjC,IAAN;AAAA,UAAQD,GAAG,GAAAkC,EAAA,CAAAlC,GAAX;AAAA,UAAaiqC,YAAY,kBAAzB,CAAA;MACN,IAAM2K,WAAW,GAAGnvC,IAAI,CACpBnB,KAAK,CAAC,CAACrE,IAAD,EAAOD,GAAP,CAAD,EAAc,CAACy0C,UAAD,EAAaC,SAAb,CAAd,CADe,EAEpBpwC,KAAK,CAAC2lC,YAAD,EAAe0K,kBAAf,CAFe,CAAxB,CAAA;AAKAzpB,MAAAA,EAAE,CAAC5oB,KAAH,CAASuyC,gBAAT,GAA4BD,WAA5B,CAAA;AACA1pB,MAAAA,EAAE,CAAC5oB,KAAH,CAASwyC,WAAT,GAAuBF,WAAvB,CAAA;MACA,OAAAz3C,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAY+tB,EAAZ,CAAA,EAAc;AAAElB,QAAAA,YAAY,EAAE,CAAA;AAAhB,OAAd,CAAA,CAAA;AACH,KAf2B,CAAhC,CAAA;;IAkBA,IAAMrJ,UAAU,GAAAxjB,QAAA,CAAAA,QAAA,CAAA,EAAA,EACTsjB,MADS,CAAA,EACH;AACTiF,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OADf;AAETtoB,MAAAA,MAAM,EAAAA,MAAAA;AAFG,KADG,CAAhB,CAAA;;IAKA,IAAM4E,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,oBAAX,EAAiC0c,UAAjC,CAA3B,CAAA;AAEAre,IAAAA,KAAK,CAAC2wC,QAAN,GAAiBjxC,MAAM,KAAK,KAA5B,CAAA;AAEA,IAAA,OAAOM,KAAK,CAAC2wC,QAAN,GAAiBxyB,MAAjB,GAA0B,KAAjC,CAAA;GA/gBO;AAihBX2nB,EAAAA,gBAAgB,EAAhB,UAAiBnkC,QAAjB,EAA6DjD,CAA7D,EAAmE;AACvD,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;;AAER,IAAA,IAAI,CAACA,KAAK,CAAC2wC,QAAX,EAAqB;AACjB,MAAA,OAAA;AACH,KAAA;;AAED1xB,IAAAA,UAAU,CAACtd,QAAD,EAAW,gBAAX,EAA6B,UAAAvB,WAAA,EAAW;AAC9Cif,MAAAA,YAAY,CAAC1d,QAAD,EAAW,qBAAX,EAAkCuc,UAAU,CAAsBvc,QAAtB,EAAgCjD,CAAhC,EACjD7D,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAuF,WAAA,CAAA;AACHgjB,QAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;OADrB,CADiD,EAGrD,IAHqD,CAA5C,CAAZ,CAAA;AAIH,KALS,CAAV,CAAA;IAMA,IAAMjF,MAAM,GAAG,IAAKqnB,CAAAA,WAAL,CAAiB7jC,QAAjB,EAA2BjD,CAA3B,CAAf,CAAA;;IAEA,IAAI,CAACyf,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAMza,SAAS,GAAG1D,KAAK,CAACmvC,eAAxB,CAAA;AACA,IAAA,IAAMznB,YAAY,GAAGvJ,MAAM,CAACqqB,UAA5B,CAAA;IACA,IAAMjvB,GAAG,GAAGmO,YAAY,GAAG,GAAf,GAAqBjsB,IAAI,CAAC+nB,EAAtC,CAAA;AACA,IAAA,IAAM1oB,MAAM,GAAGouB,iBAAiB,CAC5BvnB,QAD4B,EAE5B,IAF4B,EAG5B,aAH4B,EAI5BjD,CAJ4B,EAK5B,UAAC8pB,CAAD,EAAII,EAAJ,EAAM;AACF,MAAA,IAAM2pB,gBAAgB,GAAG3pB,EAAE,CAAC5oB,KAAH,CAASuyC,gBAAlC,CAAA;AACM,MAAA,IAAA3yC,EAA6B,GAAAgpB,EAAE,CAAC5oB,KAAH,CAASwyC,WAAtC;AAAA,UAACC,WAAW,GAAA7yC,EAAA,CAAA,CAAA,CAAZ;AAAA,UAAc8yC,WAAW,GAAA9yC,EAAA,CAAA,CAAA,CAAzB,CAAA;;MACA,IAAAD,EAAqB,GAAAgzC,MAAY,CAACJ,gBAAD,EAAmBh5B,GAAG,GAAG7V,SAAzB,CAAjC;AAAA,UAACzC,OAAO,GAAAtB,EAAA,CAAA,CAAA,CAAR;AAAA,UAAUuB,OAAO,QAAjB,CAAA;;MACN,IAAM5B,KAAK,GAAG,CAAC2B,OAAO,GAAGwxC,WAAX,EAAwBvxC,OAAO,GAAGwxC,WAAlC,CAAd,CAAA;MAEA9pB,EAAE,CAAC5oB,KAAH,CAASwyC,WAAT,GAAuB,CAACvxC,OAAD,EAAUC,OAAV,CAAvB,CAAA;MACA,OAAYrG,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA+tB,EAAA,CAAA;AAAIlB,QAAAA,YAAY,EAAAA;AAAEopB,QAAAA,UAAU,EAAExxC,KAAAA;OAA9B,CAAZ,CAAA;AACH,KAb2B,CAAhC,CAAA;AAeAqC,IAAAA,QAAQ,CAAC+X,QAAT,GAAoBhW,SAAS,GAAGya,MAAM,CAAC6yB,cAAvC,CAAA;;IAEA,IAAM3yB,UAAU,GACZxjB,QAAA,CAAA;AAAAuoB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAxB;AACAtoB,MAAAA,MAAM,EAAAA,MADN;MAEAsW,GAAG,EAAH,UAAIsI,QAAJ,EAAoB;QAChB/X,QAAQ,CAAC+X,QAAT,GAAoBA,QAApB,CAAA;OAHJ;MAKAk5B,gBAAgB,EAAhB,UAAiBl5B,QAAjB,EAAiC;QAC7B/X,QAAQ,CAAC+X,QAAT,GAAoBA,QAApB,CAAA;AACH,OAAA;KAPD,EAQGyE,MARH,CADJ,CAAA;;AAYAkB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,eAAX,EAA4B0c,UAA5B,CAAZ,CAAA;AACA,IAAA,OAAOA,UAAP,CAAA;GApkBO;AAskBX0nB,EAAAA,mBAAmB,EAAnB,UAAoBpkC,QAApB,EAAgEjD,CAAhE,EAAsE;AAC1D,IAAA,IAAAgC,MAAM,GAAYhC,CAAC,CAAAgC,MAAnB;AAAA,QAAQV,KAAK,GAAKtB,CAAC,CAAAsB,KAAnB,CAAA;;AAER,IAAA,IAAI,CAACA,KAAK,CAAC2wC,QAAX,EAAqB;AACjB,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAA,CAAKlL,cAAL,CAAoB9jC,QAApB,EAA8BjD,CAA9B,CAAA,CAAA;IACA,IAAM5D,MAAM,GAAGouB,iBAAiB,CAACvnB,QAAD,EAAW,IAAX,EAAiB,gBAAjB,EAAmCjD,CAAnC,CAAhC,CAAA;AAEA,IAAA,IAAM2f,UAAU,GAAGU,aAAa,CAAmBpd,QAAnB,EAA6BjD,CAA7B,EAAgC;AAC5D0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OADoC;AAE5DtoB,MAAAA,MAAM,EAAAA,MAAAA;AAFsD,KAAhC,CAAhC,CAAA;AAKAukB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,kBAAX,EAA+B0c,UAA/B,CAAZ,CAAA;AACA,IAAA,OAAO3d,MAAP,CAAA;GAtlBO;;AAwlBX;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4BAknB,OAAO,EAAP,UAAQjmB,QAAR,EAA0D;IACtD,IAAM3B,KAAK,GAAG,EAAd,CAAA;IACA,IAAI6yC,UAAU,GAAG,CAAjB,CAAA;AAEA,IAAA,IAAMzB,aAAa,GAAGzvC,QAAQ,CAACmxC,WAAT,EAAtB,CAAA;IACA,OAAO;AACHhK,MAAAA,SAAS,EAAE,IADR;AAEHC,MAAAA,YAAY,EAAA,YAAA;QACR,OAAO;AAAE/oC,UAAAA,KAAK,EAAAA,KAAAA;SAAd,CAAA;OAHD;MAKH4nB,OAAO,EAAP,UAAQlpB,CAAR,EAAuB;QACnB,IAAI,aAAA,IAAiBA,CAArB,EAAwB;UACpBm0C,UAAU,IAAIn0C,CAAC,CAACq0C,WAAhB,CAAA;AACH,SAFD,MAEO,IAAI,QAAYr0C,IAAAA,CAAhB,EAAmB;AACtBm0C,UAAAA,UAAU,GAAGn0C,CAAC,CAACwnB,MAAF,GAAWkrB,aAAxB,CAAA;AACH,SAAA;;QAED,OAAO;AAAEpxC,UAAAA,KAAK,EAAAA,KAAP;AAASilB,UAAAA,UAAU,EAAE4tB,UAAAA;SAA5B,CAAA;OAZD;AAcH5lC,MAAAA,UAAU,EAAA,YAAA;QACN,OAAO;AAAEjN,UAAAA,KAAK,EAAAA,KAAP;AAASU,UAAAA,MAAM,EAAE,IAAA;SAAxB,CAAA;AACH,OAAA;KAhBL,CAAA;AAkBH,GAAA;AA3oBU,CAAf,CAAA;AA6oBA;;;;;;;;;AASG;;AACH;;;;;;;;;;;AAWG;;AAEH;;;;;;;;;AASG;;AAEH;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;AAYE;;AACF;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;;;;AAeG;;AAEH;;;;;;;;;;;;;;;;;;;;;;AAsBE;;AAEF;;;;;;;;;;;;;;;AAeG;;ACh/BH,IAAM0jC,kBAAkB,GAAGziB,qBAAqB,CAAC,UAAD,CAAhD,CAAA;AAEA;;;;AAIG;;AACH,eAAe;AACXhnB,EAAAA,IAAI,EAAE,UADK;AAEXqlB,EAAAA,SAAS,EAAE,MAFA;AAGXwH,EAAAA,QAAQ,EAAE,IAHC;AAIXzsB,EAAAA,KAAK,EAAE,CACH,UADG,EAEH,eAFG,EAGH,kBAHG,EAIH,WAJG,EAKH,MALG,EAMH,uBANG,CAJI;AAYXD,EAAAA,MAAM,EAAE,CACJ,YADI,EAEJ,aAFI,EAGJ,OAHI,EAIJ,UAJI,EAKJ,iBALI,EAMJ,kBANI,EAOJ,YAPI,EAQJ,eARI,CAZG;AAsBXypC,EAAAA,MAAM,EAAE8C,mBAAmB,CAAC,UAAD,CAtBhB;AAuBXhC,EAAAA,oBAAoB,EAAEjB,kBAvBX;AAwBX4E,EAAAA,aAAa,EAAEvnB,yBAAyB,CAAC,UAAD,CAxB7B;AAyBX8jB,EAAAA,gBAAgB,EAAhB,UACI5jC,QADJ,EAEIjD,CAFJ,EAEU;AACE,IAAA,IAAAsB,KAAK,GAA2CtB,CAAC,MAAjD;AAAA,QAAOa,OAAO,GAAkCb,CAAC,CAAAa,OAAjD;AAAA,QAAgBQ,UAAU,GAAsBrB,CAAC,CAAvBqB,UAA1B;AAAA,QAA4Bmd,eAAe,GAAKxe,CAAC,gBAAjD,CAAA;IAER,IAAMgF,SAAS,GAAGuZ,iBAAiB,CAC/BC,eAD+B,EAE/B3d,OAF+B,EAG/BQ,UAH+B,EAI/BC,KAJ+B,CAAnC,CAAA;AAMM,IAAA,IAAAJ,EAAA,GAQF+B,QAAQ,CAACtC,KARP;AAAA,QACF2H,KAAK,GAAApH,EAAA,CAAAoH,KADH;AAAA,QAEFC,MAAM,GAAArH,EAAA,CAAAqH,MAFJ;AAAA,QAGF+B,eAAe,qBAHb;AAAA,QAIFyD,MAAM,GAAA7M,EAAA,CAAA6M,MAJJ;AAAA,QAKF1K,IAAI,GAAAnC,EAAA,CAAAmC,IALF;AAAA,QAMF+P,IAAI,GAAAlS,EAAA,CAAAkS,IANF;AAAA,QAOFmH,IAAI,GAAArZ,EAAA,CAAAqZ,IAPF,CAAA;;AAUN,IAAA,IAAI,CAACvV,SAAD,IAAc,CAAC+I,MAAnB,EAA2B;AACvB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,IAAI,CAAClN,OAAL,EAAc;AACV+C,MAAAA,YAAY,CAACX,QAAD,EAAWjD,CAAX,CAAZ,CAAA;AACH,KAAA;;IACDsB,KAAK,CAACA,KAAN,GAAc,EAAd,CAAA;IACAA,KAAK,CAAC+I,SAAN,GAAkBC,eAAlB,CAAA;AACAhJ,IAAAA,KAAK,CAAC4nC,QAAN,GAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAA;IACA5nC,KAAK,CAAC0D,SAAN,GAAkBA,SAAlB,CAAA;IACA1D,KAAK,CAAC+jB,gBAAN,GAAyB/c,KAAzB,CAAA;IACAhH,KAAK,CAACgkB,iBAAN,GAA0B/c,MAA1B,CAAA;AACAjH,IAAAA,KAAK,CAACgK,UAAN,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAA;AAEA,IAAA,IAAMgpC,UAAU,GAAGzqC,SAAO,CAACxG,IAAD,EAAO+P,IAAP,CAA1B,CAAA;AACA,IAAA,IAAMmhC,WAAW,GAAG1qC,SAAO,CAACuJ,IAAD,EAAOmH,IAAP,CAA3B,CAAA;IACA,IAAMywB,OAAO,GAAI,CAAChmC,SAAS,CAAC,CAAD,CAAV,IAAiB,CAACA,SAAS,CAAC,CAAD,CAA5B,IAAoCA,SAAS,CAAC,CAAD,CAA7C,IAAoD,CAACA,SAAS,CAAC,CAAD,CAA9E,CAAA;IAGA1D,KAAK,CAACgzC,UAAN,GAAmBA,UAAnB,CAAA;IACAhzC,KAAK,CAACizC,WAAN,GAAoBA,WAApB,CAAA;AACAjzC,IAAAA,KAAK,CAACkzC,WAAN,GAAoBF,UAAU,GAAGhsC,KAAjC,CAAA;AACAhH,IAAAA,KAAK,CAACmzC,WAAN,GAAoBF,WAAW,GAAGhsC,MAAlC,CAAA;AAEA2C,IAAAA,wBAAwB,CAAClL,CAAD,EAAI,OAAJ,CAAxB,CAAA;IAIAsB,KAAK,CAAC0pC,OAAN,GAAgBA,OAAhB,CAAA;;IAGA,SAASE,QAAT,CAAkB/lB,KAAlB,EAA+B;AAC3B7jB,MAAAA,KAAK,CAAC6jB,KAAN,GAAcA,KAAK,IAAIgmB,QAAQ,CAAChmB,KAAD,CAAjB,GAA2BA,KAA3B,GAAmC,CAAjD,CAAA;AACH,KAAA;;IAED7jB,KAAK,CAAC8pC,cAAN,GAAuBj+B,uBAAuB,CAAClK,QAAQ,CAACtC,KAAV,CAA9C,CAAA;;IACA,SAAS0qC,iBAAT,CAA2BthC,cAA3B,EAAmD;MAC/CzI,KAAK,CAACyI,cAAN,GAAuBA,cAAvB,CAAA;MACAzI,KAAK,CAAC4K,aAAN,GAAsB1C,iBAAiB,CAAClI,KAAK,CAAC8pC,cAAP,EAAuBrhC,cAAvB,CAAvC,CAAA;AACH,KAAA;;IAGDzI,KAAK,CAAC+pC,iBAAN,GAA0BA,iBAA1B,CAAA;AACAH,IAAAA,QAAQ,CAACrhC,SAAO,CAACxG,IAAD,EAAO+P,IAAP,CAAP,GAAsBvJ,SAAO,CAACuJ,IAAD,EAAOmH,IAAP,CAA9B,CAAR,CAAA;AACA8wB,IAAAA,iBAAiB,CAAC,CAAC,CAACrmC,SAAS,CAAC,CAAD,CAAX,EAAgB,CAACA,SAAS,CAAC,CAAD,CAA1B,CAAD,CAAjB,CAAA;IAEA,IAAMya,MAAM,GAAGD,UAAU,CAAevc,QAAf,EAAyBjD,CAAzB,EACrB7D,QAAA,CAAAA,QAAA,CAAA;AAAA6I,MAAAA,SAAS,EAAAA,SAAT;MACA0N,GAAG,EAAE,UAACjW,KAAD,EAAgB;QACjB6E,KAAK,CAACgK,UAAN,GAAmB7O,KAAnB,CAAA;OAFJ;AAIAyuC,MAAAA,QAAQ,EAAAA,QAJR;AAKAG,MAAAA,iBAAiB;AALjB,KAAA,EAMG1gC,uBAAuB,CAAC3K,CAAD,CAN1B,CAAA,EAOA;AAAAmC,MAAAA,SAAS,EAAE4J,SAAS,CAAC5J,SAAV,CACPc,QADO,EAEP,IAAItB,WAAJ,GAAkBQ,SAAlB,CAA4B,CAAC,CAAD,EAAI,CAAJ,CAA5B,EAAoCnC,CAApC,CAFO,CAAA;AAAX,KAPA,CADqB,CAAzB,CAAA;IAaA,IAAMgB,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,cAAX,EAA2Bwc,MAA3B,CAA3B,CAAA;AAEAne,IAAAA,KAAK,CAACmlB,mBAAN,GAA4BnlB,KAAK,CAACyI,cAAlC,CAAA;;IAEA,IAAI/I,MAAM,KAAK,KAAf,EAAsB;MAClBM,KAAK,CAACozC,OAAN,GAAgB,IAAhB,CAAA;AACAzxC,MAAAA,QAAQ,CAACtC,KAAT,CAAesoB,cAAf,GAAgC;QAC5BC,OAAO,EAAElpB,CAAC,CAACmjB,SADiB;AAE5Bne,QAAAA,SAAS,EAAAA,SAAAA;OAFb,CAAA;AAKH,KAAA;;AACD,IAAA,OAAO1D,KAAK,CAACozC,OAAN,GAAgBj1B,MAAhB,GAAyB,KAAhC,CAAA;GArHO;AAuHXqnB,EAAAA,WAAW,EAAX,UACI7jC,QADJ,EAEIjD,CAFJ,EAEU;AACNiF,IAAAA,qBAAqB,CAACjF,CAAD,EAAI,OAAJ,CAArB,CAAA;AAEI,IAAA,IAAAsB,KAAK,GAKLtB,CAAC,CAAAsB,KALD;AAAA,QACAwqC,eAAe,GAIf9rC,CAAC,CAJc8rC,eADf;AAAA,QAEAxhB,UAAU,GAGVtqB,CAAC,CAAAsqB,UALD;AAAA,QAEYzpB,OAAO,GAGnBb,CAAC,CAHkBa,OAFnB;AAAA,QAGAkrC,UAAU,GAEV/rC,CAAC,CAAA+rC,UALD;AAAA,QAIA5oB,SAAS,GACTnjB,CAAC,UALD,CAAA;AAOA,IAAA,IAAAkpC,QAAQ,GAQR5nC,KAAK,CARG4nC,QAAR;AAAA,QACAlkC,SAAS,GAOT1D,KAAK,CAPI0D,SADT;AAAA,QAEAqgB,gBAAgB,GAMhB/jB,KAAK,iBARL;AAAA,QAGAgkB,iBAAiB,GAKjBhkB,KAAK,CAAAgkB,iBARL;AAAA,QAIAovB,OAAO,GAIPpzC,KAAK,CAAAozC,OARL;AAAA,QAKAppC,UAAU,GAGVhK,KAAK,CAHKgK,UALV;AAAA,QAMA0/B,OAAO,GAEP1pC,KAAK,CAFE0pC,OANP;AAAA,QAOA7lB,KAAK,GACL7jB,KAAK,MARL,CAAA;;IAUJ,IAAI,CAACozC,OAAL,EAAc;AACV,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAED,IAAA,IAAMr4C,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;AAEI,IAAA,IAAAs4C,aAAa,GAEbt4C,KAAK,CAAAs4C,aAFL;AAAA,QACArL,cAAc,GACdjtC,KAAK,CAAAitC,cAFL,CAAA;IAGJ,IAAIjjB,aAAa,GAAGrhB,SAApB,CAAA;;IAEA,IAAI,CAACA,SAAS,CAAC,CAAD,CAAV,IAAiB,CAACA,SAAS,CAAC,CAAD,CAA/B,EAAoC;AAChCqhB,MAAAA,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAhB,CAAA;AACH,KAAA;;AACD,IAAA,IAAMjB,SAAS,GAAID,KAAK,KAAK2mB,eAAe,IAAI,IAAnB,GAA0BA,eAA1B,GAA4CzvC,KAAK,CAAC+oB,SAAvD,CAAN,IAA4E,KAA9F,CAAA;AACA,IAAA,IAAMzkB,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;;AAEA,IAAA,SAASi0C,YAAT,GAAqB;MACX,IAAA1zC,KAGFklB,iBAAiB,CAACC,aAAD,EAAgBjB,SAAhB,EAA2B9jB,KAA3B,EAAkCtB,CAAlC,CAHf;AAAA,UACFulB,SAAS,eADP;AAAA,UAEFC,UAAU,gBAFR,CAAA;;MAMN,IAAI/T,MAAM,GAAG4T,gBAAgB,GAAG,CAACA,gBAAgB,GAAGE,SAApB,IAAiCF,gBAApC,GAAuD,CAApF,CAAA;MACA,IAAI3T,MAAM,GAAG4T,iBAAiB,GAAG,CAACA,iBAAiB,GAAGE,UAArB,IAAmCF,iBAAtC,GAA0D,CAAxF,CAAA;AAEA7T,MAAAA,MAAM,GAAG4U,aAAa,CAAC,CAAD,CAAb,IAAoBjB,SAApB,GAAgC3T,MAAM,GAAGnG,UAAU,CAAC,CAAD,CAAnD,GAAyDA,UAAU,CAAC,CAAD,CAA5E,CAAA;AACAoG,MAAAA,MAAM,GAAG2U,aAAa,CAAC,CAAD,CAAb,IAAoBjB,SAApB,GAAgC1T,MAAM,GAAGpG,UAAU,CAAC,CAAD,CAAnD,GAAyDA,UAAU,CAAC,CAAD,CAA5E,CAAA;;MAEA,IAAImG,MAAM,KAAK,CAAf,EAAkB;AACdA,QAAAA,MAAM,GAAG,CAACy3B,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6BxpC,SAAtC,CAAA;AACH,OAAA;;MACD,IAAIgS,MAAM,KAAK,CAAf,EAAkB;AACdA,QAAAA,MAAM,GAAG,CAACw3B,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6BxpC,SAAtC,CAAA;AACH,OAAA;;AACD,MAAA,OAAO,CAAC+R,MAAD,EAASC,MAAT,CAAP,CAAA;AACH,KAAA;;IAGD,IAAIjV,KAAK,GAAGm4C,YAAY,EAAxB,CAAA;;IAEA,IAAI,CAAC/zC,OAAD,IAAYoC,QAAQ,CAAC5G,KAAT,CAAe8P,SAA/B,EAA0C;AACtC,MAAA,IAAM8c,cAAc,GAAGtoB,KAAK,CAACsoB,cAAN,IAAwB,EAA/C,CAAA;AACA,MAAA,IAAM4rB,cAAc,GAAG5rB,cAAc,CAACjkB,SAAtC,CAAA;;AAEA,MAAA,IAAI+F,OAAO,CAAC8pC,cAAD,CAAP,KAA4BA,cAAc,CAAC,CAAD,CAAd,IAAqBA,cAAc,CAAC,CAAD,CAA/D,CAAJ,EAAyE;QACrEl0C,KAAK,CAACsoB,cAAN,GAAuB;AAAEjkB,UAAAA,SAAS,EAAAA,SAAX;UAAakkB,OAAO,EAAElpB,CAAC,CAACmjB,SAAAA;SAA/C,CAAA;AACH,OAAA;AACJ,KAAA;;IAEDxC,YAAY,CAAC1d,QAAD,EAAW,eAAX,EAA4Buc,UAAU,CAAgBvc,QAAhB,EAA0BjD,CAA1B,EAA6B;AAC3EvD,MAAAA,KAAK,EAAAA,KADsE;MAE3E4uC,iBAAiB,EAAjB,UAAkBoB,kBAAlB,EAA8C;QAC1CnrC,KAAK,CAAC+pC,iBAAN,CAAwBoB,kBAAxB,CAAA,CAAA;QAEAhwC,KAAK,GAAGm4C,YAAY,EAApB,CAAA;AAEA,QAAA,OAAOn4C,KAAP,CAAA;OAPuE;MAS3EgqB,mBAAmB,EAAEnlB,KAAK,CAACmlB,mBATgD;MAU3EquB,QAAQ,EAAR,UAASC,SAAT,EAA4B;AACxBt4C,QAAAA,KAAK,GAAGs4C,SAAR,CAAA;AACH,OAAA;KAZ6C,EAa/C,IAb+C,CAAtC,CAAZ,CAAA;IAeA,IAAMxtC,IAAI,GAAG,CAAC9K,KAAK,CAAC,CAAD,CAAL,GAAW6O,UAAU,CAAC,CAAD,CAAtB,EAA2B7O,KAAK,CAAC,CAAD,CAAL,GAAW6O,UAAU,CAAC,CAAD,CAAhD,CAAb,CAAA;IACA,IAAIY,aAAa,GAAG6/B,UAApB,CAAA;AACA,IAAA,IAAIY,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf,CAAA;;IAGA,IAAI,CAACZ,UAAL,EAAiB;AACb,MAAA,IAAI,CAACzhB,UAAD,IAAezpB,OAAnB,EAA4B;QACxBqL,aAAa,GAAGgB,mBAAmB,CAACjK,QAAD,EAAW,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAnC,CAAA;AACH,OAFD,MAEO;QACHiJ,aAAa,GAAG5K,KAAK,CAAC4K,aAAtB,CAAA;AACH,OAAA;AACJ,KAAA;;IACD,IAAI,CAACrL,OAAL,EAAc;AACV8rC,MAAAA,QAAQ,GAAG3H,cAAc,CACrB/hC,QADqB,EAErBsE,IAFqB,EAGrBvC,SAHqB,EAIrBme,SAJqB,EAKrB7hB,KALqB,CAAzB,CAAA;AAOH,KAAA;;AAED,IAAA,IAAI8jB,SAAJ,EAAe;AACX,MAAA,IAAIiB,aAAa,CAAC,CAAD,CAAb,IAAoBA,aAAa,CAAC,CAAD,CAAjC,IAAwCsmB,QAAQ,CAAC,CAAD,CAAhD,IAAuDA,QAAQ,CAAC,CAAD,CAAnE,EAAwE;QACpE,IAAI5vC,IAAI,CAACyc,GAAL,CAASmzB,QAAQ,CAAC,CAAD,CAAR,GAActnB,gBAAvB,CAAA,GAA2CtoB,IAAI,CAACyc,GAAL,CAASmzB,QAAQ,CAAC,CAAD,CAAR,GAAcrnB,iBAAvB,CAA/C,EAA0F;AACtFqnB,UAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,CAAA;AACH,SAFD,MAEO;AACHA,UAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,CAAA;AACH,SAAA;AACJ,OAAA;;AAED,MAAA,IAAME,QAAQ,GAAG,CAACF,QAAQ,CAAC,CAAD,CAAT,IAAgB,CAACA,QAAQ,CAAC,CAAD,CAA1C,CAAA;;AAEA,MAAA,IAAIE,QAAJ,EAAc;AACV,QAAA,IAAI7B,OAAJ,EAAa;UACTzjC,IAAI,CAAC,CAAD,CAAJ,GAAUwlB,QAAQ,CAACxlB,IAAI,CAAC,CAAD,CAAJ,GAAU+D,UAAU,CAAC,CAAD,CAArB,EAA0BqpC,aAA1B,CAAR,GAAoDrpC,UAAU,CAAC,CAAD,CAAxE,CAAA;AACH,SAFD,MAEO;UACH/D,IAAI,CAAC,CAAD,CAAJ,GAAUwlB,QAAQ,CAACxlB,IAAI,CAAC,CAAD,CAAJ,GAAU+D,UAAU,CAAC,CAAD,CAArB,EAA0BqpC,aAA1B,CAAR,GAAoDrpC,UAAU,CAAC,CAAD,CAAxE,CAAA;AACH,SAAA;AACJ,OAAA;;MACD,IACK+a,aAAa,CAAC,CAAD,CAAb,IAAoB,CAACA,aAAa,CAAC,CAAD,CAAnC,IACIsmB,QAAQ,CAAC,CAAD,CAAR,IAAe,CAACA,QAAQ,CAAC,CAAD,CAD5B,IAEIE,QAAQ,IAAI7B,OAHpB,EAIE;AACEzjC,QAAAA,IAAI,CAAC,CAAD,CAAJ,IAAWolC,QAAQ,CAAC,CAAD,CAAnB,CAAA;AACA,QAAA,IAAMpK,UAAU,GAAGld,gBAAgB,GAAG9d,IAAI,CAAC,CAAD,CAAvB,GAA6B+D,UAAU,CAAC,CAAD,CAAvC,GAA6C6Z,KAAhE,CAAA;QAEA5d,IAAI,CAAC,CAAD,CAAJ,GAAUg7B,UAAU,GAAGjd,iBAAb,GAAiCha,UAAU,CAAC,CAAD,CAArD,CAAA;AACH,OATD,MASO,IACF,CAAC+a,aAAa,CAAC,CAAD,CAAd,IAAqBA,aAAa,CAAC,CAAD,CAAnC,IACI,CAACsmB,QAAQ,CAAC,CAAD,CAAT,IAAgBA,QAAQ,CAAC,CAAD,CAD5B,IAEIE,QAAQ,IAAI,CAAC7B,OAHd,EAIL;AACEzjC,QAAAA,IAAI,CAAC,CAAD,CAAJ,IAAWolC,QAAQ,CAAC,CAAD,CAAnB,CAAA;AACA,QAAA,IAAMrK,SAAS,GAAGhd,iBAAiB,GAAG/d,IAAI,CAAC,CAAD,CAAxB,GAA8B+D,UAAU,CAAC,CAAD,CAAxC,GAA8C6Z,KAAhE,CAAA;QAEA5d,IAAI,CAAC,CAAD,CAAJ,GAAU+6B,SAAS,GAAGjd,gBAAZ,GAA+B/Z,UAAU,CAAC,CAAD,CAAnD,CAAA;AACH,OAAA;AACJ,KArCD,MAqCO;AACH/D,MAAAA,IAAI,CAAC,CAAD,CAAJ,IAAWolC,QAAQ,CAAC,CAAD,CAAnB,CAAA;AACAplC,MAAAA,IAAI,CAAC,CAAD,CAAJ,IAAWolC,QAAQ,CAAC,CAAD,CAAnB,CAAA;;AACA,MAAA,IAAI,CAACA,QAAQ,CAAC,CAAD,CAAb,EAAkB;QACdplC,IAAI,CAAC,CAAD,CAAJ,GAAUwlB,QAAQ,CAACxlB,IAAI,CAAC,CAAD,CAAJ,GAAU+D,UAAU,CAAC,CAAD,CAArB,EAA0BqpC,aAA1B,CAAR,GAAoDrpC,UAAU,CAAC,CAAD,CAAxE,CAAA;AACH,OAAA;;AACD,MAAA,IAAI,CAACqhC,QAAQ,CAAC,CAAD,CAAb,EAAkB;QACdplC,IAAI,CAAC,CAAD,CAAJ,GAAUwlB,QAAQ,CAACxlB,IAAI,CAAC,CAAD,CAAJ,GAAU+D,UAAU,CAAC,CAAD,CAArB,EAA0BqpC,aAA1B,CAAR,GAAoDrpC,UAAU,CAAC,CAAD,CAAxE,CAAA;AACH,OAAA;AACJ,KAAA;;AAED,IAAA,IAAI/D,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAhB,EAAmB;AACfA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAC2hC,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6BxpC,SAAvC,CAAA;AACH,KAAA;;AACD,IAAA,IAAI6H,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAhB,EAAmB;AACfA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAC2hC,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAAxB,IAA6BxpC,SAAvC,CAAA;AACH,KAAA;;IACD,IAAMkB,KAAK,GAAG,CAAC2G,IAAI,CAAC,CAAD,CAAJ,GAAU2hC,QAAQ,CAAC,CAAD,CAAnB,EAAwB3hC,IAAI,CAAC,CAAD,CAAJ,GAAU2hC,QAAQ,CAAC,CAAD,CAA1C,CAAd,CAAA;AACAzsC,IAAAA,KAAK,GAAG0W,SAAS,CAAC5L,IAAD,EAAO+D,UAAP,CAAjB,CAAA;AAEA,IAAA,IAAM0nC,WAAW,GAAGvmC,YAAY,CAACxJ,QAAD,EAAWsE,IAAX,EAAiBjG,KAAK,CAACyI,cAAvB,EAAuCmC,aAAvC,EAAsD5K,KAAtD,CAAhC,CAAA;AACA,IAAA,IAAMyrC,YAAY,GAAGzpC,KAAK,CAAC0vC,WAAD,EAAc1xC,KAAK,CAAC2xC,eAAN,IAAyB,CAAC,CAAD,EAAI,CAAJ,CAAvC,CAA1B,CAAA;IAEA3xC,KAAK,CAAC4nC,QAAN,GAAiB3hC,IAAjB,CAAA;IACAjG,KAAK,CAAC2xC,eAAN,GAAwBD,WAAxB,CAAA;;IACA,IACIv2C,KAAK,CAAC,CAAD,CAAL,KAAaysC,QAAQ,CAAC,CAAD,CAArB,IAA4BzsC,KAAK,CAAC,CAAD,CAAL,KAAaysC,QAAQ,CAAC,CAAD,CAAjD,IACG6D,YAAY,CAACllB,KAAb,CAAmB,UAAA9I,GAAA,EAAO;AAAA,MAAA,OAAA,CAACA,GAAD,CAAA;AAAI,KAA9B,CADH,IAEG,CAACuqB,cAHR,EAIE;AACE,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAGD,IAAA,IAAMx9B,aAAa,GAAGzE,sBAAsB,CACxC/F,KADwC,EACjC,QAAS3E,CAAAA,MAAT,CAASF,KAAK,CAAC4C,IAAN,CAAW,IAAX,CAAT,EAA4B,GAA5B,CADiC,EACH,QAAS1C,CAAAA,MAAT,CAAS4K,IAAI,CAAClI,IAAL,CAAU,IAAV,CAAT,EAA2B,GAA3B,CADG,CAA5C,CAAA;IAEA,IAAMogB,MAAM,GAAGD,UAAU,CAAUvc,QAAV,EAAoBjD,CAApB;AACrBqY,MAAAA,WAAW,EAAEgN;AACb/M,MAAAA,YAAY,EAAEgN;AACdtgB,MAAAA,SAAS,EAAAA;AAETvI,MAAAA,KAAK,EAAAA;AACL8K,MAAAA,IAAI;AACJ3G,MAAAA,KAAK;MAELC,OAAO,EAAE,CAAC,CAACA,OAAAA;OACRgL,kBAAkB,CACjB5I,QADiB,EAEjB6I,aAFiB,EAGjBihC,YAHiB,EAIjBlsC,OAJiB,EAKjBb,CALiB,EAVA,CAAzB,CAAA;AAkBA2gB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,SAAX,EAAsBwc,MAAtB,CAAZ,CAAA;AAEA,IAAA,OAAOA,MAAP,CAAA;GAlUO;AAoUXsnB,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAAkEjD,CAAlE,EAAwE;AAC5D,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;;AACR,IAAA,IAAI,CAACA,KAAK,CAACozC,OAAX,EAAoB;AAChB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IAEDpzC,KAAK,CAACozC,OAAN,GAAgB,KAAhB,CAAA;IAEA,IAAMM,aAAa,GAAG30B,aAAa,CAAapd,QAAb,EAAuBjD,CAAvB,EAA0B,EAA1B,CAAnC,CAAA;AACA2gB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,YAAX,EAAyB+xC,aAAzB,CAAZ,CAAA;AACA,IAAA,OAAOA,aAAP,CAAA;GA9UO;AAgVX1H,EAAAA,yBAAyB,EAAE5H,kBAhVhB;AAiVXyB,EAAAA,qBAAqB,EAArB,UAAsBlkC,QAAtB,EAAkEjD,CAAlE,EAAwE;AAC5D,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;IAER,IAAMme,MAAM,GAAG,IAAKonB,CAAAA,gBAAL,CAAsB5jC,QAAtB,EAAgCjD,CAAhC,CAAf,CAAA;;IAEA,IAAI,CAACyf,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,IAAM8tB,cAAc,GAAG7jB,eAAe,CAACzmB,QAAD,EAAW,WAAX,EAAwBjD,CAAxB,CAAtC,CAAA;;AAEA,IAAA,SAASwtC,OAAT,CAAiBjjB,KAAjB,EAAkDL,EAAlD,EAAyD;AACrD,MAAA,IAAMngB,cAAc,GAAGzI,KAAK,CAACyI,cAA7B,CAAA;AACA,MAAA,IAAMmC,aAAa,GAAG5K,KAAK,CAAC4K,aAA5B,CAAA;AACA,MAAA,IAAMk/B,cAAc,GAAGlhB,EAAE,CAAC5oB,KAAH,CAAS8pC,cAAT,IAA2Bj+B,uBAAuB,CAACod,KAAK,CAAC5pB,KAAP,CAAzE,CAAA;AACA,MAAA,IAAMgI,GAAG,GAAGa,iBAAiB,CAAC4hC,cAAD,EAAiBrhC,cAAjB,CAA7B,CAAA;;MACM,IAAA7I,EAAA,GAAyByD,SAAS,CACpC8oC,kBAAkB,CAAC,CAACxqC,QAAQ,CAAC+X,QAAV,GAAqB,GAArB,GAA2Bje,IAAI,CAAC+nB,EAAjC,EAAqC,CAArC,CADkB,EAEpC,CAACnc,GAAG,CAAC,CAAD,CAAH,GAASuD,aAAa,CAAC,CAAD,CAAvB,EAA4BvD,GAAG,CAAC,CAAD,CAAH,GAASuD,aAAa,CAAC,CAAD,CAAlD,EAAuD,CAAvD,CAFoC,EAGpC,CAHoC,CAAlC;AAAA,UAACwhC,SAAS,GAAAxsC,EAAA,CAAA,CAAA,CAAV;AAAA,UAAYysC,SAAS,GAAAzsC,EAAA,CAAA,CAAA,CAArB,CAAA;;AAKNgpB,MAAAA,EAAE,CAAC5oB,KAAH,CAASosC,SAAT,GAAqBA,SAArB,CAAA;AACAxjB,MAAAA,EAAE,CAAC5oB,KAAH,CAASqsC,SAAT,GAAqBA,SAArB,CAAA;AAEA,MAAA,OAAOzjB,EAAP,CAAA;AACH,KAAA;;AAED5oB,IAAAA,KAAK,CAAC2zC,aAAN,GAAsBhyC,QAAQ,CAACxG,KAA/B,CAAA;AAEA,IAAA,IAAML,MAAM,GAAGouB,iBAAiB,CAC5BvnB,QAD4B,EAE5B,IAF4B,EAG5B,kBAH4B,EAI5BjD,CAJ4B,EAK5B,UAACuqB,KAAD,EAAQL,EAAR,EAAU;AACN,MAAA,OAAOsjB,OAAO,CAACjjB,KAAD,EAAQL,EAAR,CAAd,CAAA;AACH,KAP2B,CAAhC,CAAA;;AAUA,IAAA,IAAMmhB,iBAAiB,GAAG,UAACthC,cAAD,EAAyB;MAC/C0V,MAAM,CAAC4rB,iBAAP,CAAyBthC,cAAzB,CAAA,CAAA;AACA3N,MAAAA,MAAM,CAACga,OAAP,CAAe,UAAC8T,EAAD,EAAKthB,CAAL,EAAM;QACjBshB,EAAE,CAACmhB,iBAAH,CAAqBthC,cAArB,CAAA,CAAA;QACAyjC,OAAO,CAACtjB,EAAE,CAACjnB,QAAJ,EAAcsqC,cAAc,CAAC3kC,CAAD,CAA5B,CAAP,CAAA;OAFJ,CAAA,CAAA;KAFJ,CAAA;;IAQAtH,KAAK,CAAC+pC,iBAAN,GAA0BA,iBAA1B,CAAA;;IACA,IAAM1rB,UAAU,GACTxjB,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAsjB,MAAA,CAAA;AACHiF,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB;AACxBtoB,MAAAA,MAAM,EAAAA;AACNivC,MAAAA,iBAAiB,EAAAA,iBAAAA;KAHd,CADP,CAAA;;IAMA,IAAMrqC,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,mBAAX,EAAgC0c,UAAhC,CAA3B,CAAA;AAEAre,IAAAA,KAAK,CAACozC,OAAN,GAAgB1zC,MAAM,KAAK,KAA3B,CAAA;AACA,IAAA,OAAOM,KAAK,CAACozC,OAAN,GAAgB/0B,UAAhB,GAA6B,KAApC,CAAA;GAzYO;AA2YXynB,EAAAA,gBAAgB,EAAhB,UAAiBnkC,QAAjB,EAA6DjD,CAA7D,EAAmE;AACvD,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;;AACR,IAAA,IAAI,CAACA,KAAK,CAACozC,OAAX,EAAoB;AAChB,MAAA,OAAA;AACH,KAAA;;AAEDn0B,IAAAA,UAAU,CAACtd,QAAD,EAAW,eAAX,EAA4B,UAAAvB,WAAA,EAAW;AAC7Cif,MAAAA,YAAY,CAAC1d,QAAD,EAAW,oBAAX,EAAiCuc,UAAU,CAAqBvc,QAArB,EAA+BjD,CAA/B,EAChD7D,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAuF,WAAA,CAAA;AACHgjB,QAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;OADrB,CADgD,EAGpD,IAHoD,CAA3C,CAAZ,CAAA;AAIH,KALS,CAAV,CAAA;IAOA,IAAMjF,MAAM,GAAG,IAAKqnB,CAAAA,WAAL,CAAiB7jC,QAAjB,EAA2BjD,CAA3B,CAAf,CAAA;;IACA,IAAI,CAACyf,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAMw1B,aAAa,GAAG3zC,KAAK,CAAC2zC,aAA5B,CAAA;IACAhyC,QAAQ,CAACxG,KAAT,GAAiB,CACbgjB,MAAM,CAAChjB,KAAP,CAAa,CAAb,CAAA,GAAkBw4C,aAAa,CAAC,CAAD,CADlB,EAEbx1B,MAAM,CAAChjB,KAAP,CAAa,CAAb,CAAA,GAAkBw4C,aAAa,CAAC,CAAD,CAFlB,CAAjB,CAAA;AAIA,IAAA,IAAM7vB,SAAS,GAAGniB,QAAQ,CAAC5G,KAAT,CAAe+oB,SAAjC,CAAA;AACQ,IAAA,IAAA7d,IAAI,GAAYkY,MAAM,CAAAlY,IAAtB;AAAA,QAAM9K,KAAK,GAAKgjB,MAAM,CAAAhjB,KAAtB,CAAA;AAER,IAAA,IAAMyP,aAAa,GAAG5K,KAAK,CAAC4K,aAA5B,CAAA;AAEA,IAAA,IAAM9P,MAAM,GAAGouB,iBAAiB,CAC5BvnB,QAD4B,EAE5B,IAF4B,EAG5B,aAH4B,EAI5BjD,CAJ4B,EAK5B,UAAC8pB,CAAD,EAAII,EAAJ,EAAM;MACI,IAAAhpB,KAAqByD,SAAS,CAChC8oC,kBAAkB,CAACxqC,QAAQ,CAAC+X,QAAT,GAAoB,GAApB,GAA0Bje,IAAI,CAAC+nB,EAAhC,EAAoC,CAApC,CADc,EAEhC,CACIoF,EAAE,CAAC5oB,KAAH,CAASosC,SAAT,GAAqBnmC,IAAI,CAAC,CAAD,CAD7B,EAEI2iB,EAAE,CAAC5oB,KAAH,CAASqsC,SAAT,GAAqBpmC,IAAI,CAAC,CAAD,CAF7B,EAGI,CAHJ,CAFgC,EAOhC,CAPgC,CAA9B;AAAA,UAAChF,OAAO,QAAR;AAAA,UAAUC,OAAO,QAAjB,CAAA;;MAUN,OACOrG,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA+tB,EAAA,CAAA,EACH;AAAA3D,QAAAA,UAAU,EAAE,IAAZ;AACAC,QAAAA,WAAW,EAAE/pB,KADb;AAEAqvC,QAAAA,eAAe,EAAE1mB,SAFjB;QAGA2mB,UAAU,EAAEtnC,IAAI,CAACyH,aAAD,EAAgB,CAAC3J,OAAD,EAAUC,OAAV,CAAhB,CAAA;AAHhB,OADG,CADP,CAAA;AAOH,KAvB2B,CAAhC,CAAA;;IAyBA,IAAMmd,UAAU,GAAAxjB,QAAA,CAAA;AACZuoB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OADZ;AAEZtoB,MAAAA,MAAM,EAAAA,MAAAA;KAFM,EAGTqjB,MAHS,CAAhB,CAAA;;AAMAkB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,cAAX,EAA2B0c,UAA3B,CAAZ,CAAA;AACA,IAAA,OAAOA,UAAP,CAAA;GAvcO;AAycX0nB,EAAAA,mBAAmB,EAAnB,UAAoBpkC,QAApB,EAAgEjD,CAAhE,EAAsE;AAC1D,IAAA,IAAAgC,MAAM,GAAYhC,CAAC,CAAAgC,MAAnB;AAAA,QAAQV,KAAK,GAAKtB,CAAC,CAAAsB,KAAnB,CAAA;;AAER,IAAA,IAAI,CAACA,KAAK,CAACozC,OAAX,EAAoB;AAChB,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAA,CAAK3N,cAAL,CAAoB9jC,QAApB,EAA8BjD,CAA9B,CAAA,CAAA;IACA,IAAM5D,MAAM,GAAGouB,iBAAiB,CAACvnB,QAAD,EAAW,IAAX,EAAiB,gBAAjB,EAAmCjD,CAAnC,CAAhC,CAAA;AAEA,IAAA,IAAM2f,UAAU,GAAGU,aAAa,CAAkBpd,QAAlB,EAA4BjD,CAA5B,EAA+B;AAC3D0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OADmC;AAE3DtoB,MAAAA,MAAM,EAAAA,MAAAA;AAFqD,KAA/B,CAAhC,CAAA;AAKAukB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,iBAAX,EAA8B0c,UAA9B,CAAZ,CAAA;AACA,IAAA,OAAO3d,MAAP,CAAA;GAxdO;;AA0dX;;;;;;;;;;;;;;;;;;;AAoBAknB,EAAAA,OAAO,EAAP,YAAA;IACI,IAAM5nB,KAAK,GAAG,EAAd,CAAA;IACA,IAAIikB,SAAS,GAAG,CAAhB,CAAA;IACA,IAAIC,UAAU,GAAG,CAAjB,CAAA;IAEA,OAAO;AACH4kB,MAAAA,SAAS,EAAE,IADR;MAEHC,YAAY,EAAZ,UAAarqC,CAAb,EAA4B;QACxB,OAAO;AAAEsB,UAAAA,KAAK,EAAAA,KAAP;UAASkd,eAAe,EAAExe,CAAC,CAACgF,SAAF,IAAe,CAAC,CAAD,EAAI,CAAJ,CAAA;SAAhD,CAAA;OAHD;MAKHkkB,OAAO,EAAP,UAAQlpB,CAAR,EAAuB;QACnBulB,SAAS,IAAIvlB,CAAC,CAAC0uC,UAAf,CAAA;QACAlpB,UAAU,IAAIxlB,CAAC,CAAC2uC,WAAhB,CAAA;QAEA,OAAO;AAAErtC,UAAAA,KAAK,EAAAA,KAAP;AAASilB,UAAAA,UAAU,EAAE,CAAChB,SAAD,EAAYC,UAAZ,CAArB;UAA8CsmB,eAAe,EAAE9rC,CAAC,CAAColB,SAAAA;SAAxE,CAAA;OATD;AAWH7W,MAAAA,UAAU,EAAA,YAAA;QACN,OAAO;AAAEjN,UAAAA,KAAK,EAAAA,KAAP;AAASU,UAAAA,MAAM,EAAE,IAAA;SAAxB,CAAA;AACH,OAAA;KAbL,CAAA;AAeH,GAAA;AAlgBU,CAAf,CAAA;AAqgBA;;;;;;;;;;;AAWG;;AAEH;;;;;;;;;AASG;;AACH;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;AAWG;;AACH;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;;;;;;;AAiBG;;AAEH;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;;;;AAeE;;AAEF;;;;;;;;;;;;;;;;;;;;;;;AAuBE;;AAEF;;;;;;;;;;;;;;;AAeG;;ACzrBH,SAASkzC,gBAAT,CAA0B7xC,IAA1B,EAA0C+P,IAA1C,EAAwD;EACpD,OAAO/P,IAAI,CAACvE,GAAL,CAAS,UAAC6J,GAAD,EAAMC,CAAN,EAAO;AAAK,IAAA,OAAAe,GAAG,CAAChB,GAAD,EAAMyK,IAAI,CAACxK,CAAD,CAAV,EAAe,CAAf,EAAkB,CAAlB,CAAH,CAAA;AAAuB,GAA5C,CAAP,CAAA;AACH,CAAA;;AAED,SAASusC,cAAT,CAAwB9xC,IAAxB,EAAwC+P,IAAxC,EAAwDkH,IAAxD,EAAsE;AAClE;AACA,EAAA,IAAM86B,IAAI,GAAGt6B,MAAM,CAACzX,IAAD,EAAO+P,IAAP,CAAnB,CAAA;AACA,EAAA,IAAMiiC,IAAI,GAAGv6B,MAAM,CAACzX,IAAD,EAAOiX,IAAP,CAAnB,CAAA;AAEA,EAAA,IAAMO,GAAG,GAAGw6B,IAAI,GAAGD,IAAnB,CAAA;EAEA,OAAOv6B,GAAG,IAAI,CAAP,GAAWA,GAAX,GAAiBA,GAAG,GAAG,CAAA,GAAI9d,IAAI,CAAC+nB,EAAvC,CAAA;AACH,CAAA;;AAED,SAASwwB,UAAT,CAAoBC,MAApB,EAAwCC,MAAxC,EAA0D;AACtD,EAAA,IAAMJ,IAAI,GAAGD,cAAc,CAACI,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,CAA3B,CAAA;AACA,EAAA,IAAMF,IAAI,GAAGF,cAAc,CAACK,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,CAA3B,CAAA;AACA,EAAA,IAAMC,EAAE,GAAG14C,IAAI,CAAC+nB,EAAhB,CAAA;;AAEA,EAAA,IAAKswB,IAAI,IAAIK,EAAR,IAAcJ,IAAI,IAAII,EAAvB,IAA+BL,IAAI,IAAIK,EAAR,IAAcJ,IAAI,IAAII,EAAzD,EAA8D;AAC1D,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,IAAP,CAAA;AACH,CAAA;AAED;;;AAGG;;;AACH,eAAe;AACXx5C,EAAAA,IAAI,EAAE,UADK;AAEXqlB,EAAAA,SAAS,EAAE,MAFA;EAGXjlB,KAAK,EAAE,CACH,UADG,EAEH,kBAFG,EAGH,MAHG,EAIH,uBAJG,CAHI;AASXD,EAAAA,MAAM,EAAE,CACJ,WADI,EAEJ,MAFI,EAGJ,SAHI,CATG;AAcXkuC,EAAAA,aAAa,EAAEvnB,yBAAyB,CAAC,UAAD,CAd7B;AAeX8iB,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAA2F00B,KAA3F,EAA0G;AAChG,IAAA,IAAAz2B,KAA0C+B,QAAQ,CAAC5G,KAAnD;AAAA,QAAEouC,SAAS,GAAAvpC,EAAA,CAAAupC,SAAX;AAAA,QAAaiL,QAAQ,GAAAx0C,EAAA,CAAAw0C,QAArB;AAAA,QAAuBC,QAAQ,GAAAz0C,EAAA,CAAAy0C,QAA/B;AAAA,QAAiC7mC,IAAI,UAArC,CAAA;;AAEN,IAAA,IAAI27B,SAAS,IAAIiL,QAAb,IAAyB,CAACC,QAA9B,EAAwC;AACpC,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACK,IAAA,IAAA10C,KAA6BgC,QAAQ,CAACtC,KAAtC;AAAA,QAAE0C,IAAI,GAAApC,EAAA,CAAAoC,IAAN;AAAA,QAAQ+P,IAAI,GAAAnS,EAAA,CAAAmS,IAAZ;AAAA,QAAckH,IAAI,GAAArZ,EAAA,CAAAqZ,IAAlB;AAAA,QAAoBC,IAAI,UAAxB,CAAA;AAEN,IAAA,IAAMq7B,YAAY,GAAGV,gBAAgB,CAAC7xC,IAAD,EAAO+P,IAAP,CAArC,CAAA;AACA,IAAA,IAAMyiC,YAAY,GAAGX,gBAAgB,CAAC9hC,IAAD,EAAO/P,IAAP,CAArC,CAAA;AACA,IAAA,IAAMyyC,YAAY,GAAGZ,gBAAgB,CAAC7xC,IAAD,EAAOiX,IAAP,CAArC,CAAA;AACA,IAAA,IAAMy7B,YAAY,GAAGb,gBAAgB,CAAC56B,IAAD,EAAOjX,IAAP,CAArC,CAAA;AACA,IAAA,IAAM2yC,UAAU,GAAGd,gBAAgB,CAAC56B,IAAD,EAAOC,IAAP,CAAnC,CAAA;AACA,IAAA,IAAM07B,UAAU,GAAGf,gBAAgB,CAAC36B,IAAD,EAAOD,IAAP,CAAnC,CAAA;AACA,IAAA,IAAM47B,UAAU,GAAGhB,gBAAgB,CAAC9hC,IAAD,EAAOmH,IAAP,CAAnC,CAAA;AACA,IAAA,IAAM47B,UAAU,GAAGjB,gBAAgB,CAAC36B,IAAD,EAAOnH,IAAP,CAAnC,CAAA;IAEA,OAAAjM,aAAA,CAAA,CACIwwB,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,MAAAA,SAAS,EAAE1kB,MAAM,CAAC,MAAD,CAAjB;AACDukB,MAAAA,GAAG,EAAC,YADH;AACgB3kB,MAAAA,KAAK,EAAE2H,YAAY,CAACg7B,YAAD,EAAeI,UAAf,EAA2BlnC,IAA3B,CAAA;AADnC,KAAL,CADJ,EAGI6oB,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,MAAAA,SAAS,EAAE1kB,MAAM,CAAC,MAAD,CAAjB;AACDukB,MAAAA,GAAG,EAAC,YADH;AACgB3kB,MAAAA,KAAK,EAAE2H,YAAY,CAACi7B,YAAD,EAAeI,UAAf,EAA2BnnC,IAA3B,CAAA;AADnC,KAAL,CAHJ,EAKI6oB,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,MAAAA,SAAS,EAAE1kB,MAAM,CAAC,MAAD,CAAjB;AACDukB,MAAAA,GAAG,EAAC,YADH;AACgB3kB,MAAAA,KAAK,EAAE2H,YAAY,CAACk7B,YAAD,EAAeI,UAAf,EAA2BpnC,IAA3B,CAAA;AADnC,KAAL,CALJ,EAOI6oB,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,MAAAA,SAAS,EAAE1kB,MAAM,CAAC,MAAD,CAAjB;AACDukB,MAAAA,GAAG,EAAC,YADH;AACgB3kB,MAAAA,KAAK,EAAE2H,YAAY,CAACm7B,YAAD,EAAeI,UAAf,EAA2BrnC,IAA3B,CAAA;AADnC,KAAL,CAPJ,CAAA,EASO+5B,mBAAmB,CAAC5lC,QAAD,EAAW,UAAX,EAAuB00B,KAAvB,CAT1B,EAUE,IAVF,CAAA,CAAA;GAhCO;AA4CXgP,EAAAA,oBAAoB,EAApB,UAAqB1jC,QAArB,EAAoCjD,CAApC,EAA0C;IACtC,IAAIA,CAAC,CAACmjB,SAAN,EAAiB;AACb,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMpV,MAAM,GAAG/N,CAAC,CAACqB,UAAF,CAAa0M,MAA5B,CAAA;AAEA,IAAA,OAAOsV,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,WAAD,CAAf,CAAR,IAAyCgQ,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,UAAD,CAAf,CAAxD,CAAA;GAlDO;AAoDXwzB,EAAAA,gBAAgB,EAAhB,UACI5jC,QADJ,EAEIjD,CAFJ,EAEU;AAEE,IAAA,IAAAsB,KAAK,GAAiBtB,CAAC,CAAAsB,KAAvB;AAAA,QAAOD,UAAU,GAAKrB,CAAC,CAAAqB,UAAvB,CAAA;AACA,IAAA,IAAA0M,MAAM,GAAK9K,QAAQ,CAAC5G,KAAT,OAAX,CAAA;AACA,IAAA,IAAQ40C,WAAW,GAAK5vC,UAAU,CAAA0M,MAAlC,CAAA;AACR,IAAA,IAAM/I,SAAS,GAAGyZ,YAAY,CAACwyB,WAAD,EAAc3vC,KAAd,CAA9B,CAAA;;AAEA,IAAA,IAAI,CAAC0D,SAAD,IAAc,CAAC+I,MAAnB,EAA2B;AACvB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMpN,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,IAAA,IAAAuD,eAAe,GAIfvD,KAAK,CAJUuD,eAAf;AAAA,QAAiBd,IAAI,GAIrBzC,KAAK,CAJgByC,IAArB;AAAA,QACAkH,eAAe,GAGf3J,KAAK,gBAJL;AAAA,QACiBsD,YAAY,GAG7BtD,KAAK,CAAAsD,YAJL;AAAA,QAEAqE,KAAK,GAEL3H,KAAK,CAAA2H,KAJL;AAAA,QAEOC,MAAM,GAEb5H,KAAK,CAFQ4H,MAFb;AAAA,QAGAtJ,IAAI,GACJ0B,KAAK,CADD1B,IAHJ;AAAA,QAGMD,GAAG,GACT2B,KAAK,IAJL,CAAA;IAMJW,KAAK,CAACA,KAAN,GAAc,EAAd,CAAA;IACAA,KAAK,CAACgJ,eAAN,GAAwBA,eAAxB,CAAA;AACAhJ,IAAAA,KAAK,CAAC80C,gBAAN,GAAyBhzC,IAAI,GAAGa,YAAH,GAAkBuG,gBAAgB,CAACvG,YAAD,EAAe,CAAf,EAAkB,CAAlB,CAA/D,CAAA;AACA3C,IAAAA,KAAK,CAAC+0C,mBAAN,GAA4BC,eAAe,CAACjyC,MAAM,CAAC/C,KAAK,CAAC80C,gBAAP,EAAyB,CAAzB,CAAP,EAAoC,CAApC,EAAuC,CAAvC,CAA3C,CAAA;IACA90C,KAAK,CAAC0D,SAAN,GAAkBA,SAAlB,CAAA;IACA1D,KAAK,CAACrC,IAAN,GAAaA,IAAb,CAAA;IACAqC,KAAK,CAACtC,GAAN,GAAYA,GAAZ,CAAA;AACAsC,IAAAA,KAAK,CAACiI,KAAN,GAAc,CACV,CAAC,CAAD,EAAI,CAAJ,CADU,EAEV,CAACjB,KAAD,EAAQ,CAAR,CAFU,EAGV,CAAC,CAAD,EAAIC,MAAJ,CAHU,EAIV,CAACD,KAAD,EAAQC,MAAR,CAJU,CAKZzJ,CAAAA,GALY,CAKR,UAAA2a,CAAA;AAAK,MAAA,OAAAnW,KAAK,CAACmW,CAAD,EAAIvV,eAAJ,CAAL,CAAA;AAAyB,KALtB,CAAd,CAAA;IAOA5C,KAAK,CAACimB,SAAN,GAAkBjmB,KAAK,CAACiI,KAAN,CAAYzK,GAAZ,CAAgB,UAACoC,EAAD,EAAiB;UAAfuV,CAAC,GAAAvV,EAAA,CAAA,CAAA;UAAEwV,CAAC,GAAAxV,EAAA,CAAA,CAAA;AAAgB,MAAA,OAAAyD,SAAS,CAACrD,KAAK,CAAC80C,gBAAP,EAAyB,CAAC3/B,CAAD,EAAIC,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAzB,EAAuC,CAAvC,CAAT,CAAA;AAAkD,KAAxF,CAAlB,CAAA;AACApV,IAAAA,KAAK,CAACgK,UAAN,GAAmBqF,oBAAoB,CAAC,CAAD,CAAvC,CAAA;AACArP,IAAAA,KAAK,CAACi1C,UAAN,GAAmB5lC,oBAAoB,CAAC,CAAD,CAAvC,CAAA;AACArP,IAAAA,KAAK,CAAC66B,aAAN,GAAsBhvB,uBAAuB,CAACxM,KAAD,CAA7C,CAAA;AACAW,IAAAA,KAAK,CAACk1C,UAAN,GAAmBrtC,wBAAwB,CAACnE,SAAD,CAA3C,CAAA;AAEApB,IAAAA,YAAY,CAACX,QAAD,EAAWjD,CAAX,CAAZ,CAAA;AACAkL,IAAAA,wBAAwB,CAAClL,CAAD,EAAI,UAAJ,CAAxB,CAAA;IAEAW,KAAK,CAACsoB,cAAN,GAAuB;MACnBC,OAAO,EAAElpB,CAAC,CAACmjB,SADQ;AAEnBne,MAAAA,SAAS,EAAAA,SAAAA;KAFb,CAAA;IAKA,IAAMya,MAAM,GAAGD,UAAU,CAAcvc,QAAd,EAAwBjD,CAAxB,EACrB7D,QAAA,CAAA;MAAAuW,GAAG,EAAE,UAACvO,MAAD,EAAiB;QAClB7C,KAAK,CAACgK,UAAN,GAAmBnH,MAAnB,CAAA;AACH,OAAA;AAFD,KAAA,EAGGwG,uBAAuB,CAAC3K,CAAD,CAH1B,CADqB,CAAzB,CAAA;IAMA,IAAMgB,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,aAAX,EAA0Bwc,MAA1B,CAA3B,CAAA;;IACA,IAAIze,MAAM,KAAK,KAAf,EAAsB;MAClBM,KAAK,CAACm1C,MAAN,GAAe,IAAf,CAAA;AACH,KAAA;;IACD,OAAOn1C,KAAK,CAACm1C,MAAb,CAAA;GA9GO;AAgHX3P,EAAAA,WAAW,EAAX,UACI7jC,QADJ,EAEIjD,CAFJ,EAEU;AAEE,IAAA,IAAAsB,KAAK,GAAgBtB,CAAC,CAAAsB,KAAtB;AAAA,QAAO6hB,SAAS,GAAKnjB,CAAC,CAAAmjB,SAAtB,CAAA;AACF,IAAA,IAAAxgB,KAAK,GAAY3C,CAAC,CAAA2C,KAAlB;AAAA,QAAOC,KAAK,GAAK5C,CAAC,CAAA4C,KAAlB,CAAA;AAEF,IAAA,IAAAyzC,mBAAmB,GAInB/0C,KAAK,CAAA+0C,mBAJL;AAAA,QAAqBE,UAAU,GAI/Bj1C,KAAK,CAAAi1C,UAJL;AAAA,QAAiCE,MAAM,GAIvCn1C,KAAK,CAAAm1C,MAJL;AAAA,QAAyCnrC,UAAU,GAInDhK,KAAK,CAAAgK,UAJL;AAAA,QACA/B,KAAK,GAGLjI,KAAK,MAJL;AAAA,QAEAk1C,UAAU,GAEVl1C,KAAK,WAJL;AAAA,QAGA66B,aAAa,GACb76B,KAAK,cAJL,CAAA;;IAMJ,IAAI,CAACm1C,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACDxxC,IAAAA,qBAAqB,CAACjF,CAAD,EAAI,UAAJ,CAArB,CAAA;;AACA,IAAA,IAAIirB,aAAa,CAAChoB,QAAD,EAAW,UAAX,CAAjB,EAAyC;MACrC,IAAMyzC,aAAa,GAAeF,UAAU,CAAC13C,GAAX,CAAe,UAACuG,KAAD,EAAmB;QAAA,OAAA82B,aAAa,CAAC92B,KAAD,CAAb,CAAA;AAAoB,OAAtD,CAAlC,CAAA;;AAEA,MAAA,IAAIqxC,aAAa,CAAClxC,MAAd,GAAuB,CAA3B,EAA8B;AAC1BkxC,QAAAA,aAAa,CAACrtC,IAAd,CAAmB,CACf,CAACqtC,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAsBA,GAAAA,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAvB,IAA8C,CAD/B,EAEf,CAACA,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAA,GAAsBA,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,CAAvB,IAA8C,CAF/B,CAAnB,CAAA,CAAA;AAIH,OAAA;;AAEK,MAAA,IAAAx1C,KAGFo7B,uBAAuB,CACvBr5B,QADuB,EAEvBkgB,SAFuB,EAGvB;AACIiJ,QAAAA,UAAU,EAAEsqB,aAAa,CAAC53C,GAAd,CAAkB,UAAA6J,GAAA,EAAG;AAAI,UAAA,OAAAA,GAAG,CAAC,CAAD,CAAH,GAAS/F,KAAT,CAAA;AAAc,SAAvC,CADhB;AAEIypB,QAAAA,QAAQ,EAAEqqB,aAAa,CAAC53C,GAAd,CAAkB,UAAA6J,GAAA,EAAG;AAAI,UAAA,OAAAA,GAAG,CAAC,CAAD,CAAH,GAAShG,KAAT,CAAA;SAAzB,CAAA;AAFd,OAHuB,CAHrB;AAAA,UACUorB,kBAAkB,GAAA7sB,EAAA,CAAAkrB,UAD5B;AAAA,UAEQ0B,gBAAgB,cAFxB,CAAA;;MAYNlrB,KAAK,IAAImrB,kBAAkB,CAACxd,MAA5B,CAAA;MACA5N,KAAK,IAAImrB,gBAAgB,CAACvd,MAA1B,CAAA;AACH,KAAA;;IAED,IAAMhJ,IAAI,GAAG5D,WAAW,CAAC;AAAErC,MAAAA,KAAK,EAAAA,KAAP;AAASqB,MAAAA,KAAK,EAAAA,KAAd;AAAgBC,MAAAA,KAAK,EAAAA,KAAAA;KAAtB,EAA0B,IAA1B,CAAxB,CAAA;AACA,IAAA,IAAM2kB,SAAS,GAAGjmB,KAAK,CAACimB,SAAN,CAAgBzR,KAAhB,EAAlB,CAAA;AAEA0gC,IAAAA,UAAU,CAACpgC,OAAX,CAAmB,UAAC/Q,KAAD,EAAc;AAC7BkiB,MAAAA,SAAS,CAACliB,KAAD,CAAT,GAAmBZ,IAAI,CAAC8iB,SAAS,CAACliB,KAAD,CAAV,EAAmBkC,IAAnB,CAAvB,CAAA;KADJ,CAAA,CAAA;;AAIA,IAAA,IAAI,CAAChI,UAAU,CAACsoB,KAAX,CACD,UAAA8uB,WAAA;MAAe,OAAArB,UAAU,CAACqB,WAAW,CAAC73C,GAAZ,CAAgB,UAAA8J,CAAA,EAAK;QAAA,OAAAW,KAAK,CAACX,CAAD,CAAL,CAAA;OAArB,CAAD,EAAiC+tC,WAAW,CAAC73C,GAAZ,CAAgB,UAAA8J,CAAA,EAAK;QAAA,OAAA2e,SAAS,CAAC3e,CAAD,CAAT,CAAA;AAAY,OAAjC,CAAjC,CAAV,CAAA;AAA8E,KAD5F,CAAL,EAEG;AACC,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMguC,CAAC,GAAGC,gBAAgB,CACtBttC,KAAK,CAAC,CAAD,CADiB,EAEtBA,KAAK,CAAC,CAAD,CAFiB,EAGtBA,KAAK,CAAC,CAAD,CAHiB,EAItBA,KAAK,CAAC,CAAD,CAJiB,EAKtBge,SAAS,CAAC,CAAD,CALa,EAMtBA,SAAS,CAAC,CAAD,CANa,EAOtBA,SAAS,CAAC,CAAD,CAPa,EAQtBA,SAAS,CAAC,CAAD,CARa,CAA1B,CAAA;;AAWA,IAAA,IAAI,CAACqvB,CAAC,CAACpxC,MAAP,EAAe;AACX,MAAA,OAAO,KAAP,CAAA;AACH,KAlEK;;;IAoEN,IAAMsxC,WAAW,GAAG9uC,QAAQ,CAACquC,mBAAD,EAAsBO,CAAtB,EAAyB,CAAzB,CAA5B,CApEM;;IAuEN,IAAMzyC,MAAM,GAAGyD,kBAAkB,CAACtG,KAAD,EAAQw1C,WAAR,EAAqB,IAArB,CAAjC,CAAA;AAEA,IAAA,IAAMl2C,KAAK,GAAGoH,QAAQ,CAAC3D,MAAM,CAACkyC,UAAD,EAAa,CAAb,CAAP,EAAwBpyC,MAAxB,EAAgC,CAAhC,CAAtB,CAAA;IAEA7C,KAAK,CAACi1C,UAAN,GAAmBpyC,MAAnB,CAAA;IACA,IAAM4yC,WAAW,GAAG/uC,QAAQ,CAACsD,UAAD,EAAanH,MAAb,EAAqB,CAArB,CAA5B,CAAA;AACA,IAAA,IAAM2H,aAAa,GAAGzE,sBAAsB,CACxC/F,KADwC,EACjC,WAAY3E,CAAAA,MAAZ,CAAYo6C,WAAW,CAAC13C,IAAZ,CAAiB,IAAjB,CAAZ,EAAqC,GAArC,CADiC,EACM,WAAY1C,CAAAA,MAAZ,CAAYwH,MAAM,CAAC9E,IAAP,CAAY,IAAZ,CAAZ,EAAgC,GAAhC,CADN,CAA5C,CAAA;AAGAmM,IAAAA,qBAAqB,CAACxL,CAAD,EAAI8L,aAAJ,CAArB,CAAA;AACA6U,IAAAA,YAAY,CAAC1d,QAAD,EAAW,QAAX,EAAqBuc,UAAU,CAASvc,QAAT,EAAmBjD,CAAnB,EACvC7D,QAAA,CAAA;AAAAyE,MAAAA,KAAK,OAAL;AACAuD,MAAAA,MAAM,EAAE4yC,WADR;AAEAxvC,MAAAA,IAAI,EAAEpD,MAFN;AAGA6D,MAAAA,QAAQ,EAAAA,QAHR;AAIAqC,MAAAA,SAAS,EAAEyB,aAAAA;KAJX,EAKGE,aAAa,CAAC;AACb3B,MAAAA,SAAS,EAAEyB,aAAAA;AADE,KAAD,EAEb9L,CAFa,CALhB,CADuC,CAA/B,CAAZ,CAAA;AAUA,IAAA,OAAO,IAAP,CAAA;GA7MO;AA+MX+mC,EAAAA,cAAc,EAAd,UACI9jC,QADJ,EAEIjD,CAFJ,EAEU;AAEE,IAAA,IAAAsB,KAAK,GAAatB,CAAC,CAAAsB,KAAnB;AAAA,QAAOU,MAAM,GAAKhC,CAAC,CAAAgC,MAAnB,CAAA;;AACR,IAAA,IAAI,CAACV,KAAK,CAACm1C,MAAX,EAAmB;AACf,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACDn1C,KAAK,CAACm1C,MAAN,GAAe,KAAf,CAAA;AAEA91B,IAAAA,YAAY,CAAC1d,QAAD,EAAW,WAAX,EAAwBod,aAAa,CAAYpd,QAAZ,EAAsBjD,CAAtB,EAAyB,EAAzB,CAArC,CAAZ,CAAA;AACA,IAAA,OAAOgC,MAAP,CAAA;AACH,GAAA;AA3NU,CAAf,CAAA;AA8NA;;;;;;;;;AASG;;AAEH;;;;;;;;;;;;AAYE;;AACF;;;;;;;;;;;;AAYE;;AACF;;;;;;;;;;;;;;;;;;;AAmBG;;AACH;;;;;;;;;;;;AAYG;;AC3VI,IAAMg1C,WAAW,gBAAgB3jC,MAAM,CAAC,aAAD,CAAvC,CAAA;AACA,IAAM4jC,UAAU,gBAAgB5jC,MAAM,CAAC,YAAD,CAAtC,CAAA;AACA,IAAM6jC,KAAK,gBAAgB7jC,MAAM,CAAC,OAAD,CAAjC,CAAA;AACA,IAAM8jC,aAAa,GAAG9jC,MAAM,CAAC,eAAD,CAA5B;;ACMP,SAAS+jC,YAAT,CAAsBn0C,QAAtB,EAAwD;AACpD,EAAA,IAAMiL,EAAE,GAAGjL,QAAQ,CAACo0C,WAApB,CAAA;;EAEA,IAAI,CAACnpC,EAAL,EAAS;AACL,IAAA,OAAA;AACH,GAAA;;AACK,EAAA,IAAAhN,EAAA,GAAoB+B,QAAQ,CAACtC,KAA7B;AAAA,MAAE2H,KAAK,GAAApH,EAAA,CAAAoH,KAAP;AAAA,MAASC,MAAM,GAAArH,EAAA,CAAAqH,MAAf,CAAA;AAEN+uC,EAAAA,WAAW,CAACppC,EAAD,EAAKgpC,KAAL,CAAX,CAAA;AAEAhpC,EAAAA,EAAE,CAAC+E,KAAH,CAASiM,OAAT,IAAoB,qCAAA,CAA+B5W,KAA/B,EAAoC,cAApC,CAAoC3L,CAAAA,MAApC,CAAmD4L,MAAnD,EAAyD,IAAzD,CAApB,CAAA;AACH,CAAA;;AAED,SAASgvC,YAAT,CAAsB5f,KAAtB,EAAqC;AACjC,EAAA,OAAQA,mBAAA,MAAA;AAAKC,IAAAA,GAAG,EAAC;AAAcG,IAAAA,SAAS,EAAEif,WAAAA;GAAlC,EACJrf,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,IAAAA,SAAS,EAAEkf,UAAAA;AAAX,GAAL,CADI,EAEJtf,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,IAAAA,SAAS,EAAEkf,UAAAA;AAAX,GAAL,CAFI,EAGJtf,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,IAAAA,SAAS,EAAEkf,UAAAA;AAAX,GAAL,CAHI,EAIJtf,KAAA,CAAAG,aAAA,CAAA,KAAA,EAAA;AAAKC,IAAAA,SAAS,EAAEkf,UAAAA;AAAhB,GAAA,CAJI,CAAR,CAAA;AAMH,CAAA;;AACD,eAAe;AACXh7C,EAAAA,IAAI,EAAE,UADK;AAEXI,EAAAA,KAAK,EAAE,CACH,UADG,EAEH,cAFG,CAFI;AAMXD,EAAAA,MAAM,EAAE,CACJ,OADI,EAEJ,YAFI,CANG;AAUXypC,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAA2D00B,KAA3D,EAA0E;AAChE,IAAA,IAAAz2B,KAAgD+B,QAAQ,CAAC5G,KAAzD;AAAA,QAAE0R,MAAM,GAAA7M,EAAA,CAAA6M,MAAR;AAAA,QAAUypC,QAAQ,GAAAt2C,EAAA,CAAAs2C,QAAlB;AAAA,QAAoBrrC,SAAS,GAAAjL,EAAA,CAAAiL,SAA7B;AAAA,QAA+BsrC,YAAY,kBAA3C,CAAA;;AACA,IAAA,IAAAx2C,EAAiC,GAAAgC,QAAQ,CAACukC,QAAT,EAAjC;AAAA,QAAEl/B,KAAK,GAAArH,EAAA,CAAAqH,KAAP;AAAA,QAASC,MAAM,GAAAtH,EAAA,CAAAsH,MAAf;AAAA,QAAiBk/B,WAAW,iBAA5B,CAAA;;AAEN,IAAA,IAAM1P,SAAS,GAAG0f,YAAY,GAAGpkC,MAAM,CAAC,MAAD,EAAS,MAAT,CAAT,GAA4BA,MAAM,CAAC,MAAD,CAAhE,CAAA;;AACA,IAAA,IAAIlH,SAAJ,EAAe;AACX,MAAA,OAAO,CACHwrB,KAAA,CAAAG,aAAA,CAAA,KAAA,EAAA;AAAKF,QAAAA,GAAG,EAAC,MAAT;AAAgB8f,QAAAA,GAAG,EAAEA,GAAG,CAACz0C,QAAD,EAAW,aAAX,CAAxB;AAAmD80B,QAAAA,SAAS,EAAEA,SAAAA;AAA9D,OAAA,CADG,EAEHwf,YAAY,CAAC5f,KAAD,CAFT,CAAP,CAAA;AAIH,KAAA;;AACD,IAAA,IAAI,CAAC5pB,MAAD,IAAW,CAACypC,QAAhB,EAA0B;AACtB,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;IACD,IAAMZ,CAAC,GAAGC,gBAAgB,CACtB,CAAC,CAAD,EAAI,CAAJ,CADsB,EAEtB,CAACvuC,KAAD,EAAQ,CAAR,CAFsB,EAGtB,CAAC,CAAD,EAAIC,MAAJ,CAHsB,EAItB,CAACD,KAAD,EAAQC,MAAR,CAJsB,EAKtBk/B,WAAW,CAAC,CAAD,CALW,EAMtBA,WAAW,CAAC,CAAD,CANW,EAOtBA,WAAW,CAAC,CAAD,CAPW,EAQtBA,WAAW,CAAC,CAAD,CARW,CAA1B,CAAA;AAUA,IAAA,IAAMp9B,SAAS,GAAGusC,CAAC,CAACpxC,MAAF,GAAW6Q,aAAa,CAACugC,CAAD,EAAI,IAAJ,CAAxB,GAAoC,MAAtD,CAAA;AAEA,IAAA,OAAO,CACHjf,KAAA,CAAAG,aAAA,CAAA,KAAA,EAAA;AAAKF,MAAAA,GAAG,EAAC,MAAT;AAAgB8f,MAAAA,GAAG,EAAEA,GAAG,CAACz0C,QAAD,EAAW,aAAX,CAAxB;AAAmD80B,MAAAA,SAAS,EAAEA,SAA9D;AAAyE9kB,MAAAA,KAAK,EAAE;AAC5EjU,QAAAA,GAAG,EAAE,KADuE;AAE5EC,QAAAA,IAAI,EAAE,KAFsE;AAG5EqJ,QAAAA,KAAK,EAAE,EAAG3L,CAAAA,MAAH,CAAG2L,KAAH,EAAY,IAAZ,CAHqE;AAI5EC,QAAAA,MAAM,EAAE,EAAG5L,CAAAA,MAAH,CAAG4L,MAAH,EAAa,IAAb,CAJoE;AAK5ErE,QAAAA,eAAe,EAAE,KAL2D;AAM5EmG,QAAAA,SAAS,EAAAA,SAAAA;AANmE,OAAA;AAAhF,KAAA,CADG,EASHktC,YAAY,CAAC5f,KAAD,CATT,CAAP,CAAA;GApCO;AAgDXx1B,EAAAA,SAAS,EAAT,UAAUc,QAAV,EAA8C/B,EAA9C,EAA0F;QAA1CI,KAAK,GAAAJ,EAAA,CAAAI;QAAEiB,OAAO,GAAArB,EAAA,CAAAqB;QAAEC,OAAO,GAAAtB,EAAA,CAAAsB;QAAEnB,UAAU,GAAAH,EAAA,CAAAG;;IAC/E,IAAI,CAACA,UAAL,EAAiB;AACb,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACDC,KAAK,CAACq2C,UAAN,GAAmB,KAAnB,CAAA;AACA,IAAA,IAAMN,WAAW,GAAGp0C,QAAQ,CAACo0C,WAA7B,CAAA;AACA,IAAA,IAAM12C,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,IAAA,IAAAuC,kBAAkB,GAIlBvC,KAAK,mBAJL;AAAA,QACA8mC,WAAW,GAGX9mC,KAAK,CAAA8mC,WAJL;AAAA,QAEAtkC,UAAU,GAEVxC,KAAK,CAFKwC,UAFV;AAAA,QAGAC,IAAI,GACJzC,KAAK,KAJL,CAAA;AAKI,IAAA,IAAA1B,IAAI,GAAUiE,kBAAkB,CAAAjE,IAAhC;AAAA,QAAMD,GAAG,GAAKkE,kBAAkB,CAAAlE,GAAhC,CAAA;;AACF,IAAA,IAAAiC,KAKF0W,OAAO,CAAC8vB,WAAD,CALL;AAAA,QACI/S,YAAY,GAAAzzB,EAAA,CAAAhC,IADhB;AAAA,QAEG21B,WAAW,SAFd;AAAA,QAGFtsB,KAAK,WAHH;AAAA,QAIFC,MAAM,YAJJ,CAAA;;AAMN,IAAA,IAAMxI,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;;AACI,IAAA,IAAAM,EAAA,GAAeH,wBAAwB,CAACJ,UAAD,EAAa,CAACZ,OAAO,GAAGtD,IAAX,EAAiBuD,OAAO,GAAGxD,GAA3B,CAAb,EAA8Ce,CAA9C,CAAvC;AAAA,QAACyD,IAAI,GAAAE,EAAA,CAAA,CAAA,CAAL;AAAA,QAAOD,IAAI,GAAAC,EAAA,CAAA,CAAA,CAAX,CAAA;;AAEJF,IAAAA,IAAI,IAAIkxB,YAAR,CAAA;AACAjxB,IAAAA,IAAI,IAAImxB,WAAR,CAAA;IACA,IAAMgjB,KAAK,GAAG,CACV;AAAE34C,MAAAA,IAAI,EAAEy1B,YAAR;AAAsB11B,MAAAA,GAAG,EAAE41B,WAA3B;AAAwCtsB,MAAAA,KAAK,EAAAA,KAA7C;MAA+CC,MAAM,EAAE9E,IAAI,GAAG,EAAA;AAA9D,KADU,EAEV;AAAExE,MAAAA,IAAI,EAAEy1B,YAAR;AAAsB11B,MAAAA,GAAG,EAAE41B,WAA3B;MAAwCtsB,KAAK,EAAE9E,IAAI,GAAG,EAAtD;AAA0D+E,MAAAA,MAAM;AAAhE,KAFU,EAGV;AAAEtJ,MAAAA,IAAI,EAAEy1B,YAAR;AAAsB11B,MAAAA,GAAG,EAAE41B,WAAW,GAAGnxB,IAAd,GAAqB,EAAhD;AAAoD6E,MAAAA,KAAK,EAAAA,KAAzD;AAA2DC,MAAAA,MAAM,EAAEA,MAAM,GAAG9E,IAAT,GAAgB,EAAA;AAAnF,KAHU,EAIV;AAAExE,MAAAA,IAAI,EAAEy1B,YAAY,GAAGlxB,IAAf,GAAsB,EAA9B;AAAkCxE,MAAAA,GAAG,EAAE41B,WAAvC;AAAoDtsB,MAAAA,KAAK,EAAEA,KAAK,GAAG9E,IAAR,GAAe,EAA1E;AAA8E+E,MAAAA,MAAM,EAAAA,MAAAA;AAApF,KAJU,CAAd,CAAA;AAOA,IAAA,IAAMsvC,QAAQ,GAAG,EAAG/hC,CAAAA,KAAH,CAASoK,IAAT,CAAcm3B,WAAW,CAACS,kBAAZ,CAAgCD,QAA9C,CAAjB,CAAA;AACAD,IAAAA,KAAK,CAACxhC,OAAN,CAAc,UAACqC,IAAD,EAAO7P,CAAP,EAAQ;AAClBivC,MAAAA,QAAQ,CAACjvC,CAAD,CAAR,CAAYqK,KAAZ,CAAkBiM,OAAlB,GACM,QAAA,CAAAviB,MAAA,CAAS8b,IAAI,CAACxZ,IAAd,EAA6B,UAA7B,CAAA,CAA6BtC,MAA7B,CAA6B8b,IAAI,CAACzZ,GAAlC,EAAqC,aAArC,CAAA,CAAqCrC,MAArC,CAAmD8b,IAAI,CAACnQ,KAAxD,EAA4E,cAA5E,CAAA,CAA4E3L,MAA5E,CAA4E8b,IAAI,CAAClQ,MAAjF,OAAA,CADN,CAAA;KADJ,CAAA,CAAA;AAIAwvC,IAAAA,QAAQ,CAACV,WAAD,EAAcH,KAAd,CAAR,CAAA;IACAv2C,KAAK,CAACq3C,kBAAN,GAA2B,IAA3B,CAAA;AACA,IAAA,OAAA;GAvFO;AAyFX11C,EAAAA,IAAI,EAAJ,UAAKW,QAAL,EAAyC/B,EAAzC,EAAmE;QAAxBI,KAAK,GAAAJ,EAAA,CAAAI;QAAED,UAAU,GAAAH,EAAA,CAAAG;IACxD,IAAK42C,CAAAA,iBAAL,CAAuBh1C,QAAvB,CAAA,CAAA;;IACA,IAAI,CAAC5B,UAAL,EAAiB;AACb,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAI,CAACC,KAAK,CAACq2C,UAAX,EAAuB;MACnBr2C,KAAK,CAACq2C,UAAN,GAAmB,IAAnB,CAAA;MACAP,YAAY,CAACn0C,QAAD,CAAZ,CAAA;AACH,KAAA;GAjGM;AAmGXyjC,EAAAA,OAAO,EAAP,UAAQzjC,QAAR,EAA2DjD,CAA3D,EAAiE;IAC7D,IAAKi4C,CAAAA,iBAAL,CAAuBh1C,QAAvB,CAAA,CAAA;AACQ,IAAA,IAAA5B,UAAU,GAAYrB,CAAC,CAAAqB,UAAvB;AAAA,QAAYC,KAAK,GAAKtB,CAAC,CAAAsB,KAAvB,CAAA;;IACR,IAAI,CAACD,UAAL,EAAiB;AACb,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAI,CAACC,KAAK,CAACq2C,UAAX,EAAuB;MACnBP,YAAY,CAACn0C,QAAD,CAAZ,CAAA;AACH,KAAA;GA3GM;AA6GX+jC,EAAAA,cAAc,EAAd,UAAe/jC,QAAf,EAAiDjD,CAAjD,EAAuD;AACnD,IAAA,OAAO,KAAKmC,SAAL,CAAec,QAAf,EAAyBjD,CAAzB,CAAP,CAAA;GA9GO;AAgHXinC,EAAAA,SAAS,EAAT,UAAUhkC,QAAV,EAA4CjD,CAA5C,EAAkD;AAC9C,IAAA,OAAO,KAAKsC,IAAL,CAAUW,QAAV,EAAoBjD,CAApB,CAAP,CAAA;GAjHO;AAmHXknC,EAAAA,YAAY,EAAZ,UACIjkC,QADJ,EAEIjD,CAFJ,EAEU;AAEN,IAAA,OAAO,KAAK0mC,OAAL,CAAazjC,QAAb,EAAuBjD,CAAvB,CAAP,CAAA;GAvHO;EAyHXgf,KAAK,EAAL,UAAM/b,QAAN,EAAuD;IACnDm0C,YAAY,CAACn0C,QAAD,CAAZ,CAAA;AACAA,IAAAA,QAAQ,CAACtC,KAAT,CAAeq3C,kBAAf,GAAoC,KAApC,CAAA;GA3HO;EA6HXC,iBAAiB,EAAjB,UAAkBh1C,QAAlB,EAAmE;AAC/D,IAAA,IAAMtC,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;;IACA,IAAIA,KAAK,CAACq3C,kBAAV,EAA8B;AAC1BE,MAAAA,qBAAqB,CAAC,YAAA;QAClBv3C,KAAK,CAACq3C,kBAAN,GAA2B,KAA3B,CAAA;AACH,OAFoB,CAArB,CAAA;AAGH,KAAA;AACJ,GAAA;AApIU,CAAf,CAAA;AAuIA;;;;;;;;;AASG;;AACH;;;;;;;;;AASG;;ACtLH,aAAeh8C,QAAQ,CAAC,QAAD,EAAW;AAC9B6pC,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAA0D00B,KAA1D,EAAyE;AAC7D,IAAA,IAAA7oB,IAAI,GAAK7L,QAAQ,CAAC5G,KAAT,KAAT,CAAA;;AACF,IAAA,IAAA6E,EAAA,GAA6B+B,QAAQ,CAACukC,QAAT,EAA7B;AAAA,QAAEyB,YAAY,GAAA/nC,EAAA,CAAA+nC,YAAd;AAAA,QAAgBjuB,QAAQ,GAAA9Z,EAAA,CAAA8Z,QAAxB,CAAA;;AAEN,IAAA,OAAO,CACH2c,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAC,MAAAA,SAAS,EAAE1kB,MAAM,CAAC,SAAD,EAAY,QAAZ,CAAjB;MACDJ,KAAK,EAAE8H,mBAAmB,CAACC,QAAD,EAAWlM,IAAX,EAAkBm6B,YAAlB,CADzB;AAC0DrR,MAAAA,GAAG,EAAC,cAAA;AAD9D,KAAL,CADG,CAAP,CAAA;AAIH,GAAA;AAT6B,CAAX,CAAvB,CAAA;AAYA;;;;;;;;;AASG;;ACjBH,SAASugB,wBAAT,CAAkCn4C,CAAlC,EAA0F;AACtF,EAAA,IAAMo4C,eAAe,GAAGp4C,CAAC,CAACo4C,eAA1B,CAAA;EAEA,OAAO,CACHA,eAAe,CAACxmC,UADb,EAEHwmC,eAAe,CAACvmC,SAFb,CAAP,CAAA;AAIH,CAAA;AACD;;;AAGG;;;AACH,iBAAe;AACX5V,EAAAA,IAAI,EAAE,YADK;AAEX6sB,EAAAA,QAAQ,EAAE,IAFC;AAGXzsB,EAAAA,KAAK,EAAE,CACH,YADG,EAEH,iBAFG,EAGH,iBAHG,EAIH,oBAJG,EAKH,mBALG,EAMH,eANG,CAHI;AAWXD,EAAAA,MAAM,EAAE,CACJ,QADI,EAEJ,aAFI,CAXG;AAeXupC,EAAAA,YAAY,EAAE,QAfH;AAgBXxjC,EAAAA,SAAS,EAAT,UAAUc,QAAV,EAAoFjD,CAApF,EAA0F;AACtF,IAAA,IAAM3D,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;AAEI,IAAA,IAAA6E,KAEA7E,KAAK,CAAA+7C,eAFL;AAAA,QAAAA,eAAe,mBAAGn1C,QAAQ,CAACo1C,YAAT,OAAlB;AAAA,QACAC,aAAa,GACbj8C,KAAK,cAFL,CAAA;AAIJ,IAAA,IAAMk8C,UAAU,GAAG,IAAIC,UAAJ,EAAnB,CAAA;AACA,IAAA,IAAMC,sBAAsB,GAAGt0B,YAAY,CAAci0B,eAAd,EAA+B,IAA/B,CAA3C,CAAA;AAEAp4C,IAAAA,CAAC,CAACsB,KAAF,CAAQi3C,UAAR,GAAqBA,UAArB,CAAA;AACAt1C,IAAAA,QAAQ,CAACtC,KAAT,CAAe43C,UAAf,GAA4BA,UAA5B,CAAA;IAEA,IAAMG,SAAS,GAAG14C,CAAC,CAACoqC,SAAF,GAAc,cAAd,GAA+B,aAAjD,CAAA;AACA,IAAA,IAAM1lB,OAAO,GAAG1kB,CAAC,CAAC0kB,OAAlB,CAAA;AAEA6zB,IAAAA,UAAU,CAAC73B,EAAX,CAAc,QAAd,EAAwB,UAACxf,EAAD,EAAyB;UAAtB8M,SAAS,GAAA9M,EAAA,CAAA8M;UAAEhJ,SAAS,GAAA9D,EAAA,CAAA8D;AAC3C,MAAA,IAAMya,MAAM,GAAGD,UAAU,CAAWvc,QAAX,EAAqBjD,CAArB,EAAwB;AAC7Co4C,QAAAA,eAAe,EAAEpqC,SAD4B;AAE7ChJ,QAAAA,SAAS,EAAAA,SAAAA;AAFoC,OAAxB,CAAzB,CAAA;AAKA,MAAA,IAAM0jB,SAAS,GAAGhE,OAAO,GAAG,eAAH,GAAqB,UAA9C,CAAA;;AACA,MAAA,IAAIA,OAAJ,EAAa;QACTjF,MAAM,CAACiF,OAAP,GAAiBA,OAAjB,CAAA;AACH,OAAA;;AACD/D,MAAAA,YAAY,CAAC1d,QAAD,EAAWylB,SAAX,EAAsBjJ,MAAtB,CAAZ,CAAA;AACH,KAXD,EAWGiB,EAXH,CAWM,MAXN,EAWc,UAACxf,EAAD,EAAiC;AAA9B,MAAA,IAAA26B,OAAO,aAAP;AAAA,UAASC,OAAO,GAAA56B,EAAA,CAAA46B,OAAhB;AAAA,UAAkBz6B,UAAU,GAAAH,EAAA,CAAAG,UAA5B,CAAA;AACb4B,MAAAA,QAAQ,CAACy1C,SAAD,CAAR,CAAoBC,QAApB,CAA6B9c,OAA7B,EAAsCC,OAAtC,EAA+Cz6B,UAAU,CAACA,UAA1D,EAAsE,IAAtE,CAAA,CAAA;AACH,KAbD,EAaGqf,EAbH,CAaM,YAbN,EAaoB,UAACxf,EAAD,EAAS;AAAN,MAAA,IAAAumB,IAAI,GAAAvmB,EAAA,CAAAumB,IAAJ,CAAA;MACnBA,IAAI,CAACxkB,QAAQ,CAACy1C,SAAD,CAAR,CAAoBE,eAApB,EAAD,CAAJ,CAAA;KAdJ,CAAA,CAAA;AAgBAL,IAAAA,UAAU,CAACp2C,SAAX,CAAqBnC,CAArB,EAAsB7D,QAAA,CAAA;AAClB6R,MAAAA,SAAS,EAAEyqC,sBAAAA;KADO,EAEfH,aAFe,CAAtB,CAAA,CAAA;GAhDO;AAqDXO,EAAAA,WAAW,EAAX,UAAY51C,QAAZ,EAAiEjD,CAAjE,EAAuE;AACnE,IAAA,IAAMu4C,UAAU,GAAGv4C,CAAC,CAACsB,KAAF,CAAQi3C,UAA3B,CAAA;;IAEA,IAAI,CAACA,UAAL,EAAiB;AACb,MAAA,OAAA;AACH,KAAA;;AACK,IAAA,IAAAr3C,KAMF+B,QAAQ,CAAC5G,KANP;AAAA,QACF4E,uBADE;AAAA,QACFm3C,eAAe,GAAGn3C,EAAA,KAAA,KAAA,CAAA,GAAAgC,QAAQ,CAACo1C,YAAT,EAAA,KADhB;AAAA,QAEF30C,EAAA,GAAAxC,EAAA,CAAA43C,eAFE;QAEFA,eAAe,GAAAp1C,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EAFjB;AAAA,QAGFyV,EAAsB,GAAAjY,EAAA,CAAA63C,kBAHpB;QAGFA,kBAAkB,GAAA5/B,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EAHpB;AAAA,QAIFiB,EAA4C,GAAAlZ,EAAA,CAAA83C,iBAJ1C;QAIFA,iBAAiB,GAAG5+B,EAAA,KAAA,KAAA,CAAA,GAAA+9B,wBAAA,KAJlB;AAAA,QAKFG,aAAa,mBALX,CAAA;AAQNC,IAAAA,UAAU,CAACj2C,IAAX,CAAgBtC,CAAhB;AACIgO,MAAAA,SAAS,EAAEoqC;AACX7mB,MAAAA,SAAS,EAAEunB;AACXG,MAAAA,YAAY,EAAEF;MACdC,iBAAiB,EAAE,UAAC9uB,EAAD,EAAQ;AACvB,QAAA,OAAO8uB,iBAAiB,CAAC;UAAEZ,eAAe,EAAEluB,EAAE,CAAClc,SAAtB;UAAiChJ,SAAS,EAAEklB,EAAE,CAACllB,SAAAA;AAA/C,SAAD,CAAxB,CAAA;AACH,OAAA;OACEszC,cAPP,CAAA,CAAA;AAUA,IAAA,OAAO,IAAP,CAAA;GA7EO;AA+EXh2C,EAAAA,IAAI,EAAJ,UAAKW,QAAL,EAA0DjD,CAA1D,EAAgE;AAC5D,IAAA,OAAO,KAAK64C,WAAL,CAAiB51C,QAAjB,EAA2BjD,CAA3B,CAAP,CAAA;GAhFO;AAkFX0mC,EAAAA,OAAO,EAAP,UAAQzjC,QAAR,EAA6DjD,CAA7D,EAAmE;AAC/DA,IAAAA,CAAC,CAACsB,KAAF,CAAQi3C,UAAR,CAAmB7R,OAAnB,EAAA,CAAA;AACA1mC,IAAAA,CAAC,CAACsB,KAAF,CAAQi3C,UAAR,GAAqB,IAArB,CAAA;GApFO;AAsFX1R,EAAAA,gBAAgB,EAAhB,UAAiB5jC,QAAjB,EAAsEjD,CAAtE,EAA4E;AACxE,IAAA,OAAO,IAAKmC,CAAAA,SAAL,CAAec,QAAf,EAAuB9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAO6D,CAAP,CAAA,EAAQ;AAAEoqC,MAAAA,SAAS,EAAE,IAAA;AAAb,KAAR,CAAvB,CAAP,CAAA;GAvFO;AAyFXtD,EAAAA,WAAW,EAAX,UAAY7jC,QAAZ,EAAiEjD,CAAjE,EAAuE;AACnE,IAAA,OAAO,KAAKsC,IAAL,CAAUW,QAAV,EAAoBjD,CAApB,CAAP,CAAA;GA1FO;AA4FX+mC,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAAoEjD,CAApE,EAA0E;AACtE,IAAA,OAAO,KAAK0mC,OAAL,CAAazjC,QAAb,EAAuBjD,CAAvB,CAAP,CAAA;GA7FO;AA+FXgnC,EAAAA,cAAc,EAAd,UAAe/jC,QAAf,EAAiDjD,CAAjD,EAAuD;AACnD,IAAA,OAAO,IAAKmC,CAAAA,SAAL,CAAec,QAAf,wBAA8BjD,IAAC;AAAE0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAA1B,MAA/B,CAAP,CAAA;GAhGO;AAkGXuiB,EAAAA,SAAS,EAAT,UAAUhkC,QAAV,EAA4CjD,CAA5C,EAAkD;AAC9C,IAAA,OAAO,IAAKsC,CAAAA,IAAL,CAAUW,QAAV,wBAAyBjD,IAAC;AAAE0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAA1B,MAA1B,CAAP,CAAA;GAnGO;AAqGXwiB,EAAAA,YAAY,EAAZ,UAAajkC,QAAb,EAA+CjD,CAA/C,EAAqD;AACjD,IAAA,OAAO,IAAK0mC,CAAAA,OAAL,CAAazjC,QAAb,wBAA4BjD,IAAC;AAAE0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAA1B,MAA7B,CAAP,CAAA;GAtGO;AAwGXyiB,EAAAA,qBAAqB,EAArB,UAAsBlkC,QAAtB,EAAwDjD,CAAxD,EAA8D;AAC1D,IAAA,OAAO,IAAKmC,CAAAA,SAAL,CAAec,QAAf,EAA8B9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA6D,CAAA,CAAA;AAAG0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB;AAAS0lB,MAAAA,SAAS,EAAE,IAAA;KAA/C,CAA9B,CAAP,CAAA;GAzGO;AA2GXhD,EAAAA,gBAAgB,EAAhB,UAAiBnkC,QAAjB,EAAmDjD,CAAnD,EAAyD;AACrD,IAAA,OAAO,IAAKsC,CAAAA,IAAL,CAAUW,QAAV,wBAAyBjD,IAAC;AAAE0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAA1B,MAA1B,CAAP,CAAA;GA5GO;AA8GXw0B,EAAAA,kBAAkB,EAAlB,UAAmBj2C,QAAnB,EAAqDjD,CAArD,EAA2D;AACvD,IAAA,OAAO,IAAK0mC,CAAAA,OAAL,CAAazjC,QAAb,wBAA4BjD,IAAC;AAAE0kB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAA1B,MAA7B,CAAP,CAAA;GA/GO;EAiHX1F,KAAK,EAAL,UAAM/b,QAAN,EAA8E;;;AAC1E,IAAA,IAAMtC,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEA,IAAA,CAAAO,EAAA,GAAAP,KAAK,CAAC43C,UAAN,MAAkB,IAAlB,IAAkBr3C,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkBA,EAAA,CAAAwlC,OAAA,EAAlB,CAAA;IACA/lC,KAAK,CAAC43C,UAAN,GAAmB,IAAnB,CAAA;AACH,GAAA;AAtHU,CAAf,CAAA;AAyHA;;;;;;;;;;;;;;;AAeG;;AAEH;;;;;;;;;;;;;;;AAeG;;AC7KH,cAAe;AACXt8C,EAAAA,IAAI,EAAE,EADK;AAEXI,EAAAA,KAAK,EAAE,CACH,QADG,EAEH,YAFG,EAGH,WAHG,EAIH,UAJG,EAKH,eALG,EAMH,mBANG,EAOH,qBAPG,EAQH,MARG,EASH,iBATG,EAUH,MAVG,EAWH,OAXG,EAYH,WAZG,EAaH,gBAbG,EAcH,cAdG,EAeH,4BAfG,EAgBH,YAhBG,EAiBH,UAjBG,EAkBH,YAlBG,EAmBH,kBAnBG,EAoBH,OApBG,EAqBH,WArBG,EAsBH,iBAtBG,EAuBH,yBAvBG,EAwBH,qBAxBG,EAyBH,eAzBG,EA0BH,aA1BG,EA2BH,qBA3BG,EA4BH,kBA5BG,EA6BH,aA7BG,EA8BH,uBA9BG,EA+BH,gBA/BG,EAgCH,gBAhCG,EAiCH,eAjCG,CAFI;EAqCXD,MAAM,EAAE,CACJ,eADI,CAAA;AArCG,CAAf;;ACKA,cAAeJ,QAAQ,CAAC,SAAD,EAAY;AAC/B6pC,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAA2C00B,KAA3C,EAA0D;AACtD,IAAA,IAAMt7B,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;;IACA,IAAIA,KAAK,CAACm7C,QAAV,EAAoB;AAChB,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAM2B,OAAO,GAAG98C,KAAK,CAAC88C,OAAN,IAAiB,EAAjC,CAAA;AAEI,IAAA,IAAAj4C,EAIA,GAAAi4C,OAAO,CAJCl6C,IAAR;QAAAA,IAAI,GAAGiC,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAACA,EAAR;AAAA,QACAD,KAGAk4C,OAAO,CAAAn6C,GAJP;QACAA,GAAG,mBAAG,IAACiC,EADP;AAAA,QAEAyC,EAAA,GAEAy1C,OAAO,CAFErhC,KAFT;QAEAA,KAAK,GAAApU,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EAFT;AAAA,QAGAyV,EACA,GAAAggC,OAAO,OAJP;QAGAvvC,MAAM,GAAGuP,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,KAHT,CAAA;;AAKE,IAAA,IAAAiB,EAAA,GAMFnX,QAAQ,CAACukC,QAAT,EANE;AAAA,QACFC,WAAW,iBADT;AAAA,QAEFpkC,IAAI,UAFF;AAAA,QAGF+P,IAAI,UAHF;AAAA,QAIFkH,IAAI,UAJF;AAAA,QAKFC,IAAI,UALF,CAAA;;IAQN,IAAMhR,KAAK,GAAG,CAAClG,IAAD,EAAO+P,IAAP,EAAakH,IAAb,EAAmBC,IAAnB,CAAd,CAAA;IACA,IAAM6+B,iBAAiB,GAAe,EAAtC,CAAA;;IAEA,IAAIn6C,IAAI,GAAG,CAAX,EAAc;AACVm6C,MAAAA,iBAAiB,CAAC/vC,IAAlB,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAA,CAAA;AACH,KAAA;;IACD,IAAIrK,GAAG,GAAG,CAAV,EAAa;AACTo6C,MAAAA,iBAAiB,CAAC/vC,IAAlB,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAA,CAAA;AACH,KAAA;;IACD,IAAIyO,KAAK,GAAG,CAAZ,EAAe;AACXshC,MAAAA,iBAAiB,CAAC/vC,IAAlB,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAA,CAAA;AACH,KAAA;;IACD,IAAIO,MAAM,GAAG,CAAb,EAAgB;AACZwvC,MAAAA,iBAAiB,CAAC/vC,IAAlB,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAA,CAAA;AACH,KAAA;;IACD,OAAO+vC,iBAAiB,CAACt6C,GAAlB,CAAsB,UAACoC,EAAD,EAAe0H,CAAf,EAAgB;UAAdqrB,IAAI,GAAA/yB,EAAA,CAAA,CAAA;UAAEgzB,IAAI,GAAAhzB,EAAA,CAAA,CAAA;AACrC,MAAA,IAAMm4C,WAAW,GAAG9vC,KAAK,CAAC0qB,IAAD,CAAzB,CAAA;AACA,MAAA,IAAMqlB,WAAW,GAAG/vC,KAAK,CAAC2qB,IAAD,CAAzB,CAAA;AACA,MAAA,IAAMqlB,WAAW,GAAG9R,WAAW,CAACxT,IAAD,CAA/B,CAAA;AACA,MAAA,IAAMulB,WAAW,GAAG/R,WAAW,CAACvT,IAAD,CAA/B,CAAA;AAEA,MAAA,IAAM0iB,CAAC,GAAGC,gBAAgB,CACtB,CAAC,CAAD,EAAI,CAAJ,CADsB,EAEtB,CAAC,GAAD,EAAM,CAAN,CAFsB,EAGtB,CAAC,CAAD,EAAI,GAAJ,CAHsB,EAItB,CAAC,GAAD,EAAM,GAAN,CAJsB,EAKtBwC,WALsB,EAMtBC,WANsB,EAOtBC,WAPsB,EAQtBC,WARsB,CAA1B,CAAA;;AAUA,MAAA,IAAI,CAAC5C,CAAC,CAACpxC,MAAP,EAAe;AACX,QAAA,OAAO+d,SAAP,CAAA;AACH,OAAA;;AACD,MAAA,OAAQoU,KAAK,CAAAG,aAAL,CAAK,KAAL,EAAK;AAAAF,QAAAA,GAAG,EAAE,SAAA,CAAAj7B,MAAA,CAAUiM,CAAV,CAAL;AAAoBmvB,QAAAA,SAAS,EAAE1kB,MAAM,CAAC,SAAD,CAArC;AAAkDJ,QAAAA,KAAK,EAAE;AAClE5I,UAAAA,SAAS,EAAEgM,aAAa,CAACugC,CAAD,EAAI,IAAJ,CAAA;AAD0C,SAAA;AAAzD,OAAL,CAAR,CAAA;AAGH,KAtBM,CAAP,CAAA;AAuBH,GAAA;AA3D8B,CAAZ,CAAvB,CAAA;AA8DA;;;;;;;;;;;;;AAaG;;AC5EH,IAAM6C,iBAAiB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAA1B,CAAA;;AAEA,SAASC,cAAT,CAAwB/3B,MAAxB,EAA0C3Y,IAA1C,EAAsD;EAClD,IAAM2wC,OAAO,GAAGh4B,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAlC,CAAA;EACA,IAAMi4B,QAAQ,GAAGD,OAAO,GAAG3wC,IAAV,GAAiBA,IAAI,GAAG2wC,OAAxB,GAAkC,CAAnD,CAAA;AAEAh4B,EAAAA,MAAM,CAAC,CAAD,CAAN,IAAai4B,QAAb,CAAA;EACAj4B,MAAM,CAAC,CAAD,CAAN,GAAY3Y,IAAI,GAAG2Y,MAAM,CAAC,CAAD,CAAN,GAAYi4B,QAA/B,CAAA;AAEA,EAAA,OAAOj4B,MAAP,CAAA;AACH,CAAA;;AACM,IAAMk4B,uBAAuB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAhC,CAAA;AACA,IAAMC,qBAAqB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA9B,CAAA;AACA,IAAMC,4BAA4B,GAAG,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAArC,CAAA;AACA,IAAMC,0BAA0B,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAC,CAAZ,CAAnC,CAAA;SAESC,gBACZ1yB,WACA3E,YACAta,OACAC,QACAtJ,MACAD,KACA8Y,OACAlO,QAAuB;AAHvB,EAAA,IAAA3K,IAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,IAAQ,GAAA,CAAR,CAAA;AAAQ,GAAA;;AACR,EAAA,IAAAD,GAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,GAAO,GAAA,CAAP,CAAA;AAAO,GAAA;;AACP,EAAA,IAAA8Y,KAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,KAAqB,GAAAxP,KAArB,CAAA;AAAqB,GAAA;;AACrB,EAAA,IAAAsB,MAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,MAAuB,GAAArB,MAAvB,CAAA;AAAuB,GAAA;;EAEvB,IAAM2xC,UAAU,GAAa,EAA7B,CAAA;EACA,IAAIlrB,UAAU,GAAG,KAAjB,CAAA;EAEA,IAAMmrB,WAAW,GAAG5yB,SAAS,CAACvhB,MAAV,CAAiB,UAAA2C,GAAA,EAAO;IAAA,OAAA,CAACA,GAAG,CAACyxC,OAAL,CAAA;AAAY,GAApC,CAApB,CAAA;EACA,IAAMC,IAAI,GAAGF,WAAW,CAACr7C,GAAZ,CAAgB,UAAA6vB,OAAA,EAAO;AACxB,IAAA,IAAAvC,UAAU,GAAoBuC,OAAO,CAAAvC,UAArC;AAAA,QAAYC,QAAQ,GAAUsC,OAAO,CAAAtC,QAArC;AAAA,QAAsB1jB,GAAG,GAAKgmB,OAAO,IAArC,CAAA;;AAER,IAAA,IAAItC,QAAQ,IAAI,CAAC2C,UAAjB,EAA6B;AACzBA,MAAAA,UAAU,GAAG,IAAb,CAAA;MACAkrB,UAAU,CAAC7wC,IAAX,CAAgB,GAAhB,CAAA,CAAA;AACH,KAAA;;AAED,IAAA,IAAI2lB,UAAJ,EAAgB;MACZ,IAAMsrB,MAAM,GAAGv9C,IAAI,CAACua,GAAL,CAAS,CAAT,EAAY+U,QAAQ,KAAK,CAAb,GAAiB1jB,GAAG,CAAC,CAAD,CAAH,GAAS3J,GAA1B,GAAgC4K,MAAM,GAAGjB,GAAG,CAAC,CAAD,CAAxD,CAAf,CAAA;MACAuxC,UAAU,CAAC7wC,IAAX,CAAgBsZ,cAAc,CAAC23B,MAAD,EAAS/xC,MAAT,EAAiBqa,UAAjB,CAA9B,CAAA,CAAA;AAEA,MAAA,OAAO03B,MAAP,CAAA;AACH,KALD,MAKO;MACH,IAAMA,MAAM,GAAGv9C,IAAI,CAACua,GAAL,CAAS,CAAT,EAAY8U,UAAU,KAAK,CAAf,GAAmBzjB,GAAG,CAAC,CAAD,CAAH,GAAS1J,IAA5B,GAAmC6Y,KAAK,GAAGnP,GAAG,CAAC,CAAD,CAA1D,CAAf,CAAA;MACAuxC,UAAU,CAAC7wC,IAAX,CAAgBsZ,cAAc,CAAC23B,MAAD,EAAShyC,KAAT,EAAgBsa,UAAhB,CAA9B,CAAA,CAAA;AAEA,MAAA,OAAO03B,MAAP,CAAA;AACH,KAAA;AACJ,GAnBY,CAAb,CAAA;EAqBA,OAAO;AACHH,IAAAA,WAAW,EAAAA,WADR;AAEHI,IAAAA,MAAM,EAAEL,UAFL;AAGHG,IAAAA,IAAI,EAAAA,IAAAA;GAHR,CAAA;AAKH,CAAA;AACK,SAAUG,cAAV,CAAyBC,YAAzB,EAAoD;AACtD;AACA,EAAA,IAAMC,eAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAxB,CAAA;AACA,EAAA,IAAMC,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAtB,CAAA;AACA,EAAA,IAAMn1C,MAAM,GAAGi1C,YAAY,CAACj1C,MAA5B,CAAA;;EAEA,KAAK,IAAIoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpD,MAApB,EAA4B,EAAEoD,CAA9B,EAAiC;AAC7B,IAAA,IAAMgyC,QAAQ,GAAGH,YAAY,CAAC7xC,CAAD,CAA7B,CAAA;;AAEA,IAAA,IAAI,CAACgyC,QAAQ,CAACC,GAAd,EAAmB;AACf,MAAA,SAAA;AACH,KAAA;;IACD,IAAID,QAAQ,CAACxuB,UAAb,EAAyB;AACrB,MAAA,IAAIsuB,eAAe,CAAC,CAAD,CAAf,KAAuB,CAA3B,EAA8B;AAC1BA,QAAAA,eAAe,CAAC,CAAD,CAAf,GAAqB9xC,CAArB,CAAA;AACH,OAAA;;MACD8xC,eAAe,CAAC,CAAD,CAAf,GAAqB9xC,CAAC,GAAG8xC,eAAe,CAAC,CAAD,CAAnB,GAAyB,CAA9C,CAAA;AACAC,MAAAA,aAAa,CAAC,CAAD,CAAb,GAAmB/xC,CAAC,GAAG,CAAvB,CAAA;AACH,KAAA;;IACD,IAAIgyC,QAAQ,CAACvuB,QAAb,EAAuB;AACnB,MAAA,IAAIsuB,aAAa,CAAC,CAAD,CAAb,KAAqB,CAAzB,EAA4B;AACxBA,QAAAA,aAAa,CAAC,CAAD,CAAb,GAAmB/xC,CAAnB,CAAA;AACH,OAAA;;MACD+xC,aAAa,CAAC,CAAD,CAAb,GAAmB/xC,CAAC,GAAG+xC,aAAa,CAAC,CAAD,CAAjB,GAAuB,CAA1C,CAAA;AACH,KAAA;AACJ,GAAA;;EAED,OAAO;AACHD,IAAAA,eAAe,EAAAA,eADZ;AAEHC,IAAAA,aAAa,EAAAA,aAAAA;GAFjB,CAAA;AAIH,CAAA;AACe,SAAAG,eAAA,CACZn5B,MADY,EAEZrZ,KAFY,EAGZC,MAHY,EAIZtJ,IAJY,EAKZD,GALY,EAMZ+7C,SANY,EAOZC,IAPY,EAOA;;;AADZ,EAAA,IAAAD,SAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,SAAA,GAAA,CAAuB,CAAvB,EAA0B,CAA1B,CAAA,CAAA;AAA4B,GAAA;;AAC5B,EAAA,IAAAC,IAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,IAAY,GAAA,KAAZ,CAAA;AAAY,GAAA;;AAEZ,EAAA,IAAMC,UAAU,GAAGt5B,MAAM,CAACviB,OAAP,CAAe,GAAf,CAAnB,CAAA;AACA,EAAA,IAAM87C,WAAW,GAAG,CAACD,UAAU,GAAG,CAAC,CAAd,GAAkBt5B,MAAM,CAAC7L,KAAP,CAAa,CAAb,EAAgBmlC,UAAhB,CAAlB,GAAgDt5B,MAAjD,EAAyDnc,MAA7E,CAAA;EACA,IAAM21C,gBAAgB,GAAGx5B,MAAM,CAAC7L,KAAP,CAAa,CAAb,EAAgBolC,WAAhB,CAAzB,CAAA;EACA,IAAME,cAAc,GAAGz5B,MAAM,CAAC7L,KAAP,CAAaolC,WAAW,GAAG,CAA3B,CAAvB,CAAA;AACA,EAAA,IAAMG,sBAAsB,GAAGF,gBAAgB,CAAC31C,MAAhD,CAAA;AACA,EAAA,IAAM81C,oBAAoB,GAAGF,cAAc,CAAC51C,MAA5C,CAAA;AACA,EAAA,IAAM+1C,iBAAiB,GAAGD,oBAAoB,GAAG,CAAjD,CAAA;AAEI,EAAA,IAAAlhC,EAIA,GAAA+gC,gBAAgB,CAJD,CAIC,CAJhB;MAAAK,OAAO,GAAGphC,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAKA,EAAf;AAAA,MACA4b,KAGAmlB,gBAAgB,CAAA,CAAA,CAJhB;MACAM,OAAO,mBAAGD,UAAOxlB,EADjB;AAAA,MAEAW,EAAA,GAEAwkB,gBAAgB,CAFC,CAED,CAJhB;MAEAO,OAAO,GAAA/kB,EAAA,KAAA,KAAA,CAAA,GAAG6kB,OAAH,GAAU7kB,EAFjB;AAAA,MAGAglB,EACA,GAAAR,gBAAgB,EAAA,CAJhB;MAGAS,OAAO,GAAGD,EAAA,KAAA,KAAA,CAAA,GAAAF,OAAA,KAHV,CAAA;AAMA,EAAA,IAAAI,EAAA,GAIAT,cAAc,CAAA,CAAA,CAJd;MAAAU,OAAO,GAAGD,EAAA,KAAA,KAAA,CAAA,GAAAL,OAAA,GAAOK,EAAjB;AAAA,MACAE,EAGA,GAAAX,cAAc,CAHiC,CAGjC,CAJd;AAAA,MACAY,OAAO,GAAAD,EAAA,KAAA,KAAA,CAAA,GAAGR,iBAAiB,GAAGO,OAAH,GAAaL,OAAjC,GAAwCM,EAD/C;AAAA,MAEAE,EAAA,GAEAb,cAAc,CAAA,CAAA,CAJd;AAAA,MAEAc,OAAO,GAAGD,EAAA,KAAA,KAAA,CAAA,GAAAV,iBAAiB,GAAGO,OAAH,GAAaJ,OAA9B,GAAqCO,EAF/C;AAAA,MAGAE,EACA,GAAAf,cAAc,CADiC,CACjC,CAJd;AAAA,MAGAgB,OAAO,GAAAD,EAAA,KAAA,KAAA,CAAA,GAAGZ,iBAAiB,GAAGS,OAAH,GAAaJ,OAAjC,GAAwCO,EAH/C,CAAA;AAMJ,EAAA,IAAME,kBAAkB,GAAG,CAACb,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,EAA4BE,OAA5B,CAAqC98C,CAAAA,GAArC,CAAyC,UAAA6J,GAAA,EAAG;AAAI,IAAA,OAAA6U,eAAe,CAAC7U,GAAD,EAAML,KAAN,CAAf,CAAA;AAA2B,GAA3E,CAA3B,CAAA;AACA,EAAA,IAAMg0C,gBAAgB,GAAG,CAACR,OAAD,EAAUE,OAAV,EAAmBE,OAAnB,EAA4BE,OAA5B,CAAqCt9C,CAAAA,GAArC,CAAyC,UAAA6J,GAAA,EAAG;AAAI,IAAA,OAAA6U,eAAe,CAAC7U,GAAD,EAAMJ,MAAN,CAAf,CAAA;AAA4B,GAA5E,CAAzB,CAAA;AACA,EAAA,IAAMktB,eAAe,GAAG4mB,kBAAkB,CAACvmC,KAAnB,EAAxB,CAAA;AACA,EAAA,IAAM4f,aAAa,GAAG4mB,gBAAgB,CAACxmC,KAAjB,EAAtB,CAAA;AAEA5U,EAAAA,EAAA,GAA2Cw4C,cAAc,CACrD,CAACjkB,eAAe,CAAC,CAAD,CAAhB,EAAqBA,eAAe,CAAC,CAAD,CAApC,CADqD,EAErDntB,KAFqD,CAAzD,EAACmtB,eAAe,CAAC,CAAD,CAAf,GAAkBv0B,EAAA,CAAA,CAAA,CAAnB,EAAqBu0B,eAAe,CAAC,CAAD,CAAf,GAAkBv0B,EAAA,CAAA,CAAA,CAAvC,CAAA;AAIAD,EAAAA,EAAA,GAA2Cy4C,cAAc,CACrD,CAACjkB,eAAe,CAAC,CAAD,CAAhB,EAAqBA,eAAe,CAAC,CAAD,CAApC,CADqD,EAErDntB,KAFqD,CAAzD,EAACmtB,eAAe,CAAC,CAAD,CAAf,GAAkBx0B,EAAA,CAAA,CAAA,CAAnB,EAAqBw0B,eAAe,CAAC,CAAD,CAAf,GAAkBx0B,EAAA,CAAA,CAAA,CAAvC,CAAA;AAIAyC,EAAAA,EAAA,GAAuCg2C,cAAc,CACjD,CAAChkB,aAAa,CAAC,CAAD,CAAd,EAAmBA,aAAa,CAAC,CAAD,CAAhC,CADiD,EACXntB,MADW,CAArD,EAACmtB,aAAa,CAAC,CAAD,CAAb,GAAgBhyB,EAAA,CAAA,CAAA,CAAjB,EAAmBgyB,aAAa,CAAC,CAAD,CAAb,GAAgBhyB,EAAA,CAAA,CAAA,CAAnC,CAAA;AAGAyV,EAAAA,EAAA,GAAuCugC,cAAc,CACjD,CAAChkB,aAAa,CAAC,CAAD,CAAd,EAAmBA,aAAa,CAAC,CAAD,CAAhC,CADiD,EACXntB,MADW,CAArD,EAACmtB,aAAa,CAAC,CAAD,CAAb,GAAgBvc,EAAA,CAAA,CAAA,CAAjB,EAAmBuc,aAAa,CAAC,CAAD,CAAb,GAAgBvc,EAAA,CAAA,CAAA,CAAnC,CAAA;EAIA,IAAMojC,mBAAmB,GAAGvB,IAAI,GAC1BvlB,eAD0B,GAE1BA,eAAe,CAAC3f,KAAhB,CAAsB,CAAtB,EAAyB/Y,IAAI,CAACua,GAAL,CAASyjC,SAAS,CAAC,CAAD,CAAlB,EAAuBM,sBAAvB,CAAzB,CAFN,CAAA;EAGA,IAAMmB,iBAAiB,GAAGxB,IAAI,GACxBtlB,aADwB,GAExBA,aAAa,CAAC5f,KAAd,CAAoB,CAApB,EAAuB/Y,IAAI,CAACua,GAAL,CAASyjC,SAAS,CAAC,CAAD,CAAlB,EAAuBO,oBAAvB,CAAvB,CAFN,CAAA;AAIA,EAAA,OAAAn0C,aAAA,CAAAA,aAAA,CAAA,EAAA,EACOo1C,mBAAmB,CAACz9C,GAApB,CAAwB,UAAC6J,GAAD,EAAMC,CAAN,EAAO;AAC9B,IAAA,IAAM5D,SAAS,GAAGy0C,iBAAiB,CAAC7wC,CAAD,CAAnC,CAAA;IAEA,OAAO;MACHwxC,OAAO,EAAExxC,CAAC,IAAIyyC,sBADX;AAEHjvB,MAAAA,UAAU,EAAE2tB,4BAA4B,CAACnxC,CAAD,CAFrC;AAGHyjB,MAAAA,QAAQ,EAAE,CAHP;MAIH1jB,GAAG,EAAE,CAAC1J,IAAI,GAAG0J,GAAR,EAAa3J,GAAG,IAAIg7C,0BAA0B,CAACpxC,CAAD,CAA1B,KAAkC,CAAC,CAAnC,GAAuCL,MAAvC,GAAgD,CAApD,CAAhB,CAJF;AAKHsyC,MAAAA,GAAG,EAAE,IALF;AAMH4B,MAAAA,GAAG,EAAEJ,kBAAkB,CAACzzC,CAAD,CANpB;AAOH5D,MAAAA,SAAS,EAAAA,SAAAA;KAPb,CAAA;AASH,GAZE,CADP,MAAA,CAAA,EAcOw3C,iBAAiB,CAAC19C,GAAlB,CAAsB,UAAC6J,GAAD,EAAMC,CAAN,EAAO;AAC5B,IAAA,IAAM5D,SAAS,GAAGy0C,iBAAiB,CAAC7wC,CAAD,CAAnC,CAAA;IAEA,OAAO;MACHwxC,OAAO,EAAExxC,CAAC,IAAI0yC,oBADX;AAEHlvB,MAAAA,UAAU,EAAE,CAFT;AAGHC,MAAAA,QAAQ,EAAE2tB,0BAA0B,CAACpxC,CAAD,CAHjC;MAIHD,GAAG,EAAE,CAAC1J,IAAI,IAAI86C,4BAA4B,CAACnxC,CAAD,CAA5B,KAAoC,CAAC,CAArC,GAAyCN,KAAzC,GAAiD,CAArD,CAAL,EAA8DtJ,GAAG,GAAG2J,GAApE,CAJF;AAKHkyC,MAAAA,GAAG,EAAE,IALF;AAMH4B,MAAAA,GAAG,EAAEH,gBAAgB,CAAC1zC,CAAD,CANlB;AAOH5D,MAAAA,SAAS,EAAAA,SAAAA;KAPb,CAAA;GAHD,CAdP,EA2BE,IA3BF,CAAA,CAAA;AA4BH,CAAA;AACK,SAAU03C,eAAV,CACFjC,YADE,EAEFlxC,KAFE,EAGFlE,KAHE,EAIFs3C,UAJE,EAKFn3C,MALE,EAK2B;AAA7B,EAAA,IAAAA,MAAA,KAAA,KAAA,CAAA,EAAA;IAAAA,MAAA,GAAiB+D,KAAK,CAAC/D,MAAvB,CAAA;AAA6B,GAAA;;EAEvB,IAAAtE,KAGFs5C,cAAc,CAACC,YAAY,CAAC3kC,KAAb,CAAmB6mC,UAAnB,CAAD,CAHZ;AAAA,MACFjC,eAAe,GAAAx5C,EAAA,CAAAw5C,eADb;AAAA,MAEFC,aAAa,mBAFX,CAAA;;AAIN,EAAA,IAAMiC,YAAY,GAAGv3C,KAAK,GAAGs3C,UAA7B,CAAA;EACA,IAAIE,WAAW,GAAG,CAAlB,CAAA;;EAEA,IAAID,YAAY,KAAK,CAArB,EAAwB;AACpBC,IAAAA,WAAW,GAAGr3C,MAAd,CAAA;AACH,GAFD,MAEO,IAAIo3C,YAAY,GAAG,CAAf,IAAoBA,YAAY,GAAGlC,eAAe,CAAC,CAAD,CAAtD,EAA2D;AAC9DmC,IAAAA,WAAW,GAAGnC,eAAe,CAAC,CAAD,CAAf,GAAqBkC,YAAnC,CAAA;GADG,MAEA,IAAIA,YAAY,IAAIjC,aAAa,CAAC,CAAD,CAAjC,EAAsC;IACzCkC,WAAW,GAAGlC,aAAa,CAAC,CAAD,CAAb,GAAmBA,aAAa,CAAC,CAAD,CAAhC,GAAsCiC,YAApD,CAAA;AACH,GAFM,MAEA;AACH,IAAA,OAAA;AACH,GAAA;;AACDnC,EAAAA,YAAY,CAACxzC,MAAb,CAAoB5B,KAApB,EAA2Bw3C,WAA3B,CAAA,CAAA;AACAtzC,EAAAA,KAAK,CAACtC,MAAN,CAAa5B,KAAb,EAAoBw3C,WAApB,CAAA,CAAA;AACH,CAAA;AACK,SAAUC,YAAV,CACFrC,YADE,EAEFlxC,KAFE,EAGFozC,UAHE,EAIFI,eAJE,EAKFC,aALE,EAMFr6C,KANE,EAOFC,KAPE,EAQFkV,KARE,EASFlO,MATE,EAUF3K,IAVE,EAWFD,GAXE,EAWK;AADP,EAAA,IAAAC,IAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,IAAQ,GAAA,CAAR,CAAA;AAAQ,GAAA;;AACR,EAAA,IAAAD,GAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,GAAO,GAAA,CAAP,CAAA;AAAO,GAAA;;EAED,IAAAkC,KAGFs5C,cAAc,CAACC,YAAY,CAAC3kC,KAAb,CAAmB6mC,UAAnB,CAAD,CAHZ;AAAA,MACFjC,eAAe,GAAAx5C,EAAA,CAAAw5C,eADb;AAAA,MAEFC,aAAa,mBAFX,CAAA;;AAIN,EAAA,IAAIoC,eAAe,GAAG,CAAC,CAAvB,EAA0B;AACtB,IAAA,IAAME,OAAO,GAAGlD,4BAA4B,CAACgD,eAAD,CAA5B,KAAkD,CAAlD,GACVp6C,KAAK,GAAG1D,IADE,GAEV6Y,KAAK,GAAGnV,KAFd,CAAA;;AAGA,IAAA,KAAK,IAAIiG,CAAC,GAAG8xC,eAAe,CAAC,CAAD,CAA5B,EAAiC9xC,CAAC,IAAIm0C,eAAtC,EAAuD,EAAEn0C,CAAzD,EAA4D;MACxD,IAAM8N,CAAC,GAAGsjC,0BAA0B,CAACpxC,CAAD,CAA1B,KAAkC,CAAlC,GAAsC5J,GAAtC,GAA4C4K,MAAtD,CAAA;MACA,IAAI6M,CAAC,GAAG,CAAR,CAAA;;MACA,IAAIsmC,eAAe,KAAKn0C,CAAxB,EAA2B;AACvB6N,QAAAA,CAAC,GAAG9T,KAAJ,CAAA;AACH,OAFD,MAEO,IAAIiG,CAAC,KAAK,CAAV,EAAa;QAChB6N,CAAC,GAAGxX,IAAI,GAAGg+C,OAAX,CAAA;OADG,MAEA,IAAIlD,4BAA4B,CAACnxC,CAAD,CAA5B,KAAoC,CAAC,CAAzC,EAA4C;QAC/C6N,CAAC,GAAGqB,KAAK,IAAIvO,KAAK,CAACozC,UAAD,CAAL,CAAkB,CAAlB,CAAuB19C,GAAAA,IAA3B,CAAT,CAAA;AACH,OAAA;;MACDw7C,YAAY,CAACxzC,MAAb,CAAoB01C,UAAU,GAAG/zC,CAAjC,EAAoC,CAApC,EAAuC;AACnCwjB,QAAAA,UAAU,EAAE2tB,4BAA4B,CAACnxC,CAAD,CADL;AAEnCyjB,QAAAA,QAAQ,EAAE,CAFyB;AAGnC1jB,QAAAA,GAAG,EAAE,CAAC8N,CAAD,EAAIC,CAAJ,CAAA;OAHT,CAAA,CAAA;AAKAnN,MAAAA,KAAK,CAACtC,MAAN,CAAa01C,UAAU,GAAG/zC,CAA1B,EAA6B,CAA7B,EAAgC,CAAC6N,CAAD,EAAIC,CAAJ,CAAhC,CAAA,CAAA;;MAEA,IAAI9N,CAAC,KAAK,CAAV,EAAa;AACT,QAAA,MAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAzBD,MAyBO,IAAIo0C,aAAa,GAAG,CAAE,CAAtB,EAAyB;AAC5B,IAAA,IAAME,OAAO,GAAGlD,0BAA0B,CAACgD,aAAD,CAA1B,KAA8C,CAA9C,GACVp6C,KAAK,GAAG5D,GADE,GAEV4K,MAAM,GAAGhH,KAFf,CAAA;;AAGA,IAAA,IAAI83C,eAAe,CAAC,CAAD,CAAf,KAAuB,CAAvB,IAA4BC,aAAa,CAAC,CAAD,CAAb,KAAqB,CAArD,EAAwD;MACpD,IAAMhyC,GAAG,GAAG,CACR1J,IAAI,GAAGi+C,OADC,EAERl+C,GAFQ,CAAZ,CAAA;MAIAy7C,YAAY,CAACpxC,IAAb,CAAkB;AACd+iB,QAAAA,UAAU,EAAE2tB,4BAA4B,CAAC,CAAD,CAD1B;AAEd1tB,QAAAA,QAAQ,EAAE,CAFI;AAGd1jB,QAAAA,GAAG,EAAAA,GAAAA;OAHP,CAAA,CAAA;MAKAY,KAAK,CAACF,IAAN,CAAWV,GAAX,CAAA,CAAA;AACH,KAAA;;AAED,IAAA,IAAMw0C,kBAAkB,GAAGxC,aAAa,CAAC,CAAD,CAAxC,CAAA;;AACA,IAAA,KAAK,IAAI/xC,CAAC,GAAG+xC,aAAa,CAAC,CAAD,CAA1B,EAA+B/xC,CAAC,IAAIo0C,aAApC,EAAmD,EAAEp0C,CAArD,EAAwD;MACpD,IAAM6N,CAAC,GAAGsjC,4BAA4B,CAACnxC,CAAD,CAA5B,KAAoC,CAApC,GAAwC3J,IAAxC,GAA+C6Y,KAAzD,CAAA;MACA,IAAIpB,CAAC,GAAG,CAAR,CAAA;;MACA,IAAIsmC,aAAa,KAAKp0C,CAAtB,EAAyB;AACrB8N,QAAAA,CAAC,GAAG9T,KAAJ,CAAA;AACH,OAFD,MAEO,IAAIgG,CAAC,KAAK,CAAV,EAAa;QAChB8N,CAAC,GAAG1X,GAAG,GAAGk+C,OAAV,CAAA;OADG,MAEA,IAAIlD,0BAA0B,CAACpxC,CAAD,CAA1B,KAAkC,CAAtC,EAAyC;QAC5C8N,CAAC,GAAGnN,KAAK,CAACozC,UAAU,GAAGQ,kBAAd,CAAL,CAAuC,CAAvC,CAAJ,CAAA;OADG,MAEA,IAAInD,0BAA0B,CAACpxC,CAAD,CAA1B,KAAkC,CAAC,CAAvC,EAA0C;AAC7C8N,QAAAA,CAAC,GAAG9M,MAAM,IAAIL,KAAK,CAACozC,UAAU,GAAGQ,kBAAd,CAAL,CAAuC,CAAvC,CAAA,GAA4Cn+C,GAAhD,CAAV,CAAA;AACH,OAAA;;MACDy7C,YAAY,CAACpxC,IAAb,CAAkB;AACd+iB,QAAAA,UAAU,EAAE,CADE;AAEdC,QAAAA,QAAQ,EAAE2tB,0BAA0B,CAACpxC,CAAD,CAFtB;AAGdD,QAAAA,GAAG,EAAE,CAAC8N,CAAD,EAAIC,CAAJ,CAAA;OAHT,CAAA,CAAA;AAKAnN,MAAAA,KAAK,CAACF,IAAN,CAAW,CAACoN,CAAD,EAAIC,CAAJ,CAAX,CAAA,CAAA;;MACA,IAAI9N,CAAC,KAAK,CAAV,EAAa;AACT,QAAA,MAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAAA;AACJ,CAAA;AACe,SAAAw0C,gBAAA,CACZ3C,YADY,EAEZJ,IAFY,EAEsC;AAAlD,EAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,IAAA,GAAiBI,YAAY,CAAC37C,GAAb,CAAiB,UAAA6J,GAAA,EAAG;MAAI,OAAAA,GAAG,CAAC8zC,GAAJ,CAAA;AAAQ,KAAhC,CAAjB,CAAA;AAAkD,GAAA;;EAElD,IAAMY,WAAW,GAAG5C,YAAY,CAC3B37C,GADe,CACX,UAAC6J,GAAD,EAAMC,CAAN;IAAY,OAAAD,GAAG,CAACyjB,UAAJ,GAAiBiuB,IAAI,CAACzxC,CAAD,CAArB,GAA2B,IAA3B,CAAA;AAA+B,GADhC,CACkC5C,CAAAA,MADlC,CACyC,UAAA2C,GAAA,EAAG;IAAI,OAAAA,GAAG,IAAI,IAAP,CAAA;AAAW,GAD3D,CAApB,CAAA;EAEA,IAAM20C,SAAS,GAAG7C,YAAY,CACzB37C,GADa,CACT,UAAC6J,GAAD,EAAMC,CAAN;IAAY,OAAAD,GAAG,CAAC0jB,QAAJ,GAAeguB,IAAI,CAACzxC,CAAD,CAAnB,GAAyB,IAAzB,CAAA;AAA6B,GADhC,CACkC5C,CAAAA,MADlC,CACyC,UAAA2C,GAAA,EAAG;IAAI,OAAAA,GAAG,IAAI,IAAP,CAAA;AAAW,GAD3D,CAAlB,CAAA;EAGA,OAAO;AACH00C,IAAAA,WAAW,EAAAA,WADR;AAEHC,IAAAA,SAAS,EAAAA,SAAAA;GAFb,CAAA;AAIH;;ACpSM,IAAMC,eAAe,GAAG,CAC3B,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,GAAR,CAD2B,EAE3B,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAF2B,CAAxB,CAAA;AAKA,IAAMC,oBAAoB,GAAG,CAChC,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,IAAT,CADgC,EAEhC,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,GAAR,CAFgC,EAGhC,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,IAAR,CAHgC,EAIhC,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAJgC,EAKhC,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CALgC,EAMhC,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CANgC,EAOhC,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,IAAR,CAPgC,EAQhC,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,GAAR,CARgC,CAA7B;AAYP;;SAEgBC,cACZx6C,UACAy6C,UACAn0C,OAAiB;AAGb,EAAA,IAAAo0C,YAAY,GACZ16C,QAAQ,CAAC5G,KAAT,aADA,CAAA;AAEE,EAAA,IAAA6E,EAAA,GAGF+B,QAAQ,CAACtC,KAHP;AAAA,MACF2H,KAAK,GAAApH,EAAA,CAAAoH,KADH;AAAA,MAEFC,MAAM,GAAArH,EAAA,CAAAqH,MAFJ,CAAA;EAIA,IAAAtH,EAAA,GAGFy8C,QAHE;AAAA,MACIE,QAAQ,UADZ;AAAA,MAEKC,SAAS,WAFd,CAAA;AAKN,EAAA,IAAMC,MAAM,GAAGF,QAAQ,KAAK,MAA5B,CAAA;AACA,EAAA,IAAMG,QAAQ,GAAGH,QAAQ,KAAK,QAA9B,CAAA;;EACA,IAAIA,QAAQ,KAAK,SAAjB,EAA4B;AACxB,IAAA,OAAOr0C,KAAK,CAACzK,GAAN,CAAU,UAAA6J,GAAA,EAAO;AAAA,MAAA,OAAA,EAAGhM,CAAAA,MAAH,CAAGgmB,cAAc,CAACha,GAAG,CAAC,CAAD,CAAJ,EAASL,KAAT,EAAgBq1C,YAAhB,CAAjB,KAAA,CAAA,OAAA,CAAkDh7B,cAAc,CAACha,GAAG,CAAC,CAAD,CAAJ,EAASJ,MAAT,EAAiBo1C,YAAjB,CAAhE,CAAA,CAAA;AAAgG,KAAjH,CAAP,CAAA;AACH,GAFD,MAEO,IAAIG,MAAM,IAAIF,QAAQ,KAAK,OAA3B,EAAoC;IACvC,IAAM5+C,GAAG,GAAGuK,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAZ,CAAA;IACA,IAAMuO,KAAK,GAAGvO,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAd,CAAA;IACA,IAAMtK,IAAI,GAAGsK,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAb,CAAA;IACA,IAAMK,MAAM,GAAGL,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAf,CAAA;;AAEA,IAAA,IAAIu0C,MAAJ,EAAY;AACR,MAAA,OAAO,CACH9+C,GADG,EAEH8Y,KAFG,EAGHlO,MAHG,EAIH3K,IAJG,CAKLH,CAAAA,GALK,CAKD,UAAA6J,GAAA,EAAO;AAAA,QAAA,OAAA,GAAGhM,MAAH,CAAGgM,GAAH,EAAU,IAAV,CAAA,CAAA;AAAU,OALhB,CAAP,CAAA;AAMH,KAAA;;IACD,IAAMuxC,UAAU,GACV,CAACl7C,GAAD,EAAMsJ,KAAK,GAAGwP,KAAd,EAAqBvP,MAAM,GAAGqB,MAA9B,EAAsC3K,IAAtC,CACGH,CAAAA,GADH,CACO,UAAC6J,GAAD,EAAMC,CAAN,EAAO;AAAK,MAAA,OAAA+Z,cAAc,CAACha,GAAD,EAAMC,CAAC,GAAG,CAAJ,GAAQN,KAAR,GAAgBC,MAAtB,EAA8Bo1C,YAA9B,CAAd,CAAA;AAAyD,KAD5E,CADN,CAAA;;AAIA,IAAA,IAAIp0C,KAAK,CAAC/D,MAAN,GAAe,CAAnB,EAAsB;AACZ,MAAA,IAAA9B,KAAwBJ,KAAK,CAACiG,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAA7B;AAAA,UAACy0C,QAAQ,QAAT;AAAA,UAAWC,SAAS,QAApB,CAAA;;MAEN/D,UAAU,CAAC7wC,IAAX,CAAAqK,KAAA,CAAAwmC,UAAA,iBAAgB,UAAYD,eAAe,CACvC4D,SAAS,CAAC/nC,KAAV,CAAgB,CAAhB,CAAA,CAAmBhX,GAAnB,CAAuB,UAACiH,IAAD,EAAO6C,CAAP,EAAQ;QAC3B,OACOzM,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA4J,IAAA,CAAA;UACH4C,GAAG,EAAEY,KAAK,CAACX,CAAD,CAAA;SADP,CADP,CAAA;OADJ,CADuC,EAOvC+0C,YAPuC,EAQvCK,QARuC,EASvCC,SATuC,EAUvCh/C,IAVuC,EAUjCD,GAViC,EAU5B8Y,KAV4B,EAUrBlO,MAVqB,CAAf,CAW1B2wC,QAAQ,MAXV,CAAA,CAAA;AAYH,KAAA;;AACD,IAAA,OAAOL,UAAP,CAAA;AACH,GAnCM,MAmCA,IAAI6D,QAAQ,IAAIH,QAAQ,KAAK,SAA7B,EAAwC;AAC3C,IAAA,IAAM7yB,MAAM,GAAGxhB,KAAK,CAAC,CAAD,CAApB,CAAA;AACA,IAAA,IAAMmgC,EAAE,GAAG/mB,cAAc,CACrB5lB,IAAI,CAACyc,GAAL,CAASjQ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAA,GAAcwhB,MAAM,CAAC,CAAD,CAA7B,CADqB,EAErBgzB,QAAQ,GAAGhhD,IAAI,CAAC2d,IAAL,CAAU,CAACpS,KAAK,GAAGA,KAAR,GAAgBC,MAAM,GAAGA,MAA1B,IAAoC,CAA9C,CAAH,GAAsDA,MAFzC,EAGrBo1C,YAHqB,CAAzB,CAAA;AAMA,IAAA,IAAMzD,UAAU,GAAG6D,QAAQ,GAAG,CAACrU,EAAD,CAAH,GACrB,CAAC/mB,cAAc,CAAC5lB,IAAI,CAACyc,GAAL,CAASjQ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAcwhB,GAAAA,MAAM,CAAC,CAAD,CAA7B,CAAD,EAAoCziB,KAApC,EAA2Cq1C,YAA3C,CAAf,EAAyEjU,EAAzE,CADN,CAAA;IAGAwQ,UAAU,CAAC7wC,IAAX,CACI,IADJ,EACUsZ,cAAc,CAACoI,MAAM,CAAC,CAAD,CAAP,EAAYziB,KAAZ,EAAmBq1C,YAAnB,CADxB,EAEIh7B,cAAc,CAACoI,MAAM,CAAC,CAAD,CAAP,EAAYxiB,MAAZ,EAAoBo1C,YAApB,CAFlB,CAAA,CAAA;AAIA,IAAA,OAAOzD,UAAP,CAAA;AACH,GAAA;AACJ,CAAA;AAEK,SAAUgE,YAAV,CAAuBl/C,GAAvB,EAAoC8Y,KAApC,EAAmDlO,MAAnD,EAAmE3K,IAAnE,EAA+E;AACjF,EAAA,IAAMk/C,EAAE,GAAG,CAACl/C,IAAD,EAAO,CAACA,IAAI,GAAG6Y,KAAR,IAAiB,CAAxB,EAA2BA,KAA3B,CAAX,CAAA;AACA,EAAA,IAAMsmC,EAAE,GAAG,CAACp/C,GAAD,EAAM,CAACA,GAAG,GAAG4K,MAAP,IAAiB,CAAvB,EAA0BA,MAA1B,CAAX,CAAA;AAEA,EAAA,OAAO4zC,oBAAoB,CAAC1+C,GAArB,CAAyB,UAACoC,EAAD,EAAkB;AAAhB,IAAA,IAAAm9C,IAAI,QAAJ;AAAA,QAAMC,IAAI,GAAAp9C,EAAA,CAAA,CAAA,CAAV;AAAA,QAAYnC,GAAG,GAAAmC,EAAA,CAAA,CAAA,CAAf,CAAA;AAC9B,IAAA,IAAMuV,CAAC,GAAG0nC,EAAE,CAACE,IAAI,GAAG,CAAR,CAAZ,CAAA;AACA,IAAA,IAAM3nC,CAAC,GAAG0nC,EAAE,CAACE,IAAI,GAAG,CAAR,CAAZ,CAAA;IACA,OAAO;AACHjyB,MAAAA,QAAQ,EAAEtvB,IAAI,CAACyc,GAAL,CAAS8kC,IAAT,CADP;AAEHlyB,MAAAA,UAAU,EAAErvB,IAAI,CAACyc,GAAL,CAAS6kC,IAAT,CAFT;AAGHr5C,MAAAA,SAAS,EAAEjG,GAHR;AAIH4J,MAAAA,GAAG,EAAE,CAAC8N,CAAD,EAAIC,CAAJ,CAAA;KAJT,CAAA;AAMH,GATM,CAAP,CAAA;AAUH,CAAA;AAEK,SAAU6nC,cAAV,CACF9D,YADE,EACyB;AAE3B,EAAA,IAAM+D,MAAM,GAAG,CAAC1iC,QAAD,EAAW,CAACA,QAAZ,CAAf,CAAA;AACA,EAAA,IAAM2iC,MAAM,GAAG,CAAC3iC,QAAD,EAAW,CAACA,QAAZ,CAAf,CAAA;AAEA2+B,EAAAA,YAAY,CAACrkC,OAAb,CAAqB,UAAClV,EAAD,EAAQ;AAAL,IAAA,IAAAyH,GAAG,GAAAzH,EAAA,CAAAyH,GAAH,CAAA;AACpB61C,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYzhD,IAAI,CAACwa,GAAL,CAASinC,MAAM,CAAC,CAAD,CAAf,EAAoB71C,GAAG,CAAC,CAAD,CAAvB,CAAZ,CAAA;AACA61C,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYzhD,IAAI,CAACua,GAAL,CAASknC,MAAM,CAAC,CAAD,CAAf,EAAoB71C,GAAG,CAAC,CAAD,CAAvB,CAAZ,CAAA;AACA81C,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAY1hD,IAAI,CAACwa,GAAL,CAASknC,MAAM,CAAC,CAAD,CAAf,EAAoB91C,GAAG,CAAC,CAAD,CAAvB,CAAZ,CAAA;AACA81C,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAY1hD,IAAI,CAACua,GAAL,CAASmnC,MAAM,CAAC,CAAD,CAAf,EAAoB91C,GAAG,CAAC,CAAD,CAAvB,CAAZ,CAAA;GAJJ,CAAA,CAAA;AAOA,EAAA,OAAO,CACH5L,IAAI,CAACyc,GAAL,CAASglC,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAA3B,CADG,EAEHzhD,IAAI,CAACyc,GAAL,CAASilC,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAA3B,CAFG,CAAP,CAAA;AAIH,CAAA;AAGK,SAAUC,WAAV,CACF3wC,MADE,EAEFzF,KAFE,EAGFC,MAHE,EAIFo2C,WAJE,EAKFC,UALE,EAKiB;;;EAEnB,IAAI,CAAC7wC,MAAL,EAAa;AACT,IAAA,OAAA;AACH,GAAA;;EACD,IAAI8wC,QAAQ,GAAuBD,UAAnC,CAAA;;EAEA,IAAI,CAACC,QAAL,EAAe;AACX,IAAA,IAAM9vC,QAAQ,GAAGC,cAAc,CAACjB,MAAD,CAA/B,CAAA;AACA,IAAA,IAAM2vC,QAAQ,GAAG3uC,QAAQ,CAAC,UAAD,CAAzB,CAAA;IAEA8vC,QAAQ,GAAGnB,QAAQ,KAAK,MAAb,GAAsBA,QAAtB,GAAiC3uC,QAAQ,CAAC,MAAD,CAApD,CAAA;AACH,GAAA;;EACD,IAAI,CAAC8vC,QAAD,IAAaA,QAAQ,KAAK,MAA1B,IAAoCA,QAAQ,KAAK,MAArD,EAA6D;AACzDA,IAAAA,QAAQ,GAAGF,WAAX,CAAA;;IAEA,IAAI,CAACE,QAAL,EAAe;AACX,MAAA,OAAA;AACH,KAAA;AACJ,GAAA;;AACK,EAAA,IAAAlD,KAGFmD,YAAY,CAACD,QAAD,CAHV;AAAA,MACFhD,cADE;MACMkD,UAAU,mBAAGF,WAAQhD,EAD3B;AAAA,MAEFE,EAAU,GAAAJ,EAAA,CAAAr0C,KAFR;MAEFA,KAAK,GAAGy0C,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,KAFN,CAAA;;AAIN,EAAA,IAAMgC,QAAQ,GAAGgB,UAAU,KAAK,QAAhC,CAAA;EACA,IAAIC,QAAQ,GAAG,GAAf,CAAA;;EAEA,IAAID,UAAU,KAAK,SAAnB,EAA8B;AAC1B,IAAA,IAAMp9B,MAAM,GAAGs9B,UAAU,CAAC33C,KAAM,IAAI,oCAAX,CAAzB,CAAA;AACA03C,IAAAA,QAAQ,GAAG,GAAX,CAAA;IAEA,IAAMz1C,KAAK,GAAkBoY,MAAM,CAAC7iB,GAAP,CAAW,UAAA6J,GAAA,EAAG;AACjC,MAAA,IAAAzH,EAAe,GAAAyH,GAAG,CAAC6I,KAAJ,CAAU,GAAV,CAAf;AAAA,UAAC0tC,IAAI,GAAAh+C,EAAA,CAAA,CAAA,CAAL;AAAA,UAAOi+C,IAAI,QAAX,CAAA;;MAEN,OAAO;AACH9yB,QAAAA,QAAQ,EAAE,CADP;AAEHD,QAAAA,UAAU,EAAE,CAFT;AAGHzjB,QAAAA,GAAG,EAAE,CACD6U,eAAe,CAAC0hC,IAAD,EAAO52C,KAAP,CADd,EAEDkV,eAAe,CAAC2hC,IAAD,EAAO52C,MAAP,CAFd,CAAA;OAHT,CAAA;AAQH,KAX4B,CAA7B,CAAA;IAYA,IAAM62C,OAAO,GAAGxc,UAAU,CAACr5B,KAAK,CAACzK,GAAN,CAAU,UAAA6J,GAAA,EAAO;MAAA,OAAAA,GAAG,CAACA,GAAJ,CAAA;AAAO,KAAxB,CAAD,CAA1B,CAAA;IAEA,OAAO;AACHtG,MAAAA,IAAI,EAAE08C,UADH;AAEHF,MAAAA,QAAQ,EAAAA,QAFL;AAGHt1C,MAAAA,KAAK,EAAAA,KAHF;AAIHy1C,MAAAA,QAAQ,EAAAA,QAJL;MAKH//C,IAAI,EAAEmgD,OAAO,CAACtc,IALX;MAMHhrB,KAAK,EAAEsnC,OAAO,CAACC,IANZ;MAOHrgD,GAAG,EAAEogD,OAAO,CAACpc,IAPV;MAQHp5B,MAAM,EAAEw1C,OAAO,CAACE,IAAAA;KARpB,CAAA;AAUH,GA5BD,MA4BO,IAAIvB,QAAQ,IAAIgB,UAAU,KAAK,SAA/B,EAA0C;IAC7C,IAAIG,IAAI,GAAG,EAAX,CAAA;IACA,IAAIC,IAAI,GAAG,EAAX,CAAA;IACA,IAAII,SAAO,GAAG,CAAd,CAAA;IACA,IAAIC,SAAO,GAAG,CAAd,CAAA;AACA,IAAA,IAAM79B,MAAM,GAAG3W,UAAU,CAAC1D,KAAD,CAAzB,CAAA;;AAEA,IAAA,IAAIy2C,QAAJ,EAAc;MACV,IAAI0B,MAAM,GAAG,EAAb,CAAA;MACCv+C,EAAgD,GAAAygB,MAAM,CAAxC,CAAwC,CAAtD,EAAA89B,MAAM,GAAAv+C,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQA,EAAd,EAAkBD,EAA8B,GAAA0gB,MAAM,CAAxB,CAAwB,CAAtD,EAAkBu9B,IAAI,GAAGj+C,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAKA,EAA9B,EAAgCyC,EAAgB,GAAAie,MAAM,CAAV,CAAU,CAAtD,EAAgCw9B,IAAI,GAAAz7C,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQA,EAA5C,CAAA;MAED67C,SAAO,GAAG/hC,eAAe,CAACiiC,MAAD,EAAS1iD,IAAI,CAAC2d,IAAL,CAAU,CAACpS,KAAK,GAAGA,KAAR,GAAgBC,MAAM,GAAGA,MAA1B,IAAoC,CAA9C,CAAT,CAAzB,CAAA;AACAi3C,MAAAA,SAAO,GAAGD,SAAV,CAAA;AACH,KAND,MAMO;MACH,IAAIG,OAAO,GAAG,EAAd,CAAA;MACA,IAAIC,OAAO,GAAG,EAAd,CAAA;AACCxmC,MAAAA,EAAA,GAAkEwI,MAAM,CAAA,CAAA,CAAxE,EAAA+9B,OAAO,mBAAG,QAAKvmC,EAAf,EAAiBiB,EAAA,GAAiDuH,MAAM,CAAxC,CAAwC,CAAxE,EAAiBg+B,OAAO,GAAAvlC,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQA,EAAhC,EAAoC4b,EAA8B,GAAArU,MAAM,CAAxB,CAAwB,CAAxE,EAAoCu9B,IAAI,GAAAlpB,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQA,EAAhD,EAAkDW,EAAgB,GAAAhV,MAAM,EAAA,CAAxE,EAAkDw9B,IAAI,GAAGxoB,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,KAAzD,CAAA;AAED4oB,MAAAA,SAAO,GAAG/hC,eAAe,CAACkiC,OAAD,EAAUp3C,KAAV,CAAzB,CAAA;AACAk3C,MAAAA,SAAO,GAAGhiC,eAAe,CAACmiC,OAAD,EAAUp3C,MAAV,CAAzB,CAAA;AACH,KAAA;;AACD,IAAA,IAAMq3C,WAAS,GAAG,CACdpiC,eAAe,CAAC0hC,IAAD,EAAO52C,KAAP,CADD,EAEdkV,eAAe,CAAC2hC,IAAD,EAAO52C,MAAP,CAFD,CAAlB,CAAA;;AAIA,IAAA,IAAMgB,KAAK,GAAApC,aAAA,CAAA,CACP;AACIklB,MAAAA,QAAQ,EAAE,CADd;AAEID,MAAAA,UAAU,EAAE,CAFhB;AAGIzjB,MAAAA,GAAG,EAAEi3C,WAHT;AAII56C,MAAAA,SAAS,EAAE,MAAA;AAJf,KADO,CAAA,EAOJu4C,eAAe,CAACznC,KAAhB,CAAsB,CAAtB,EAAyBioC,QAAQ,GAAG,CAAH,GAAO,CAAxC,CAAA,CAA2Cj/C,GAA3C,CAA+C,UAAAC,GAAA,EAAO;MAAA,OAAC;QACtDstB,QAAQ,EAAEtvB,IAAI,CAACyc,GAAL,CAASza,GAAG,CAAC,CAAD,CAAZ,CAD4C;AAEtDqtB,QAAAA,UAAU,EAAErtB,GAAG,CAAC,CAAD,CAFuC;AAGtDiG,QAAAA,SAAS,EAAEjG,GAAG,CAAC,CAAD,CAHwC;AAItD87C,QAAAA,GAAG,EAAE,IAJiD;QAKtDlyC,GAAG,EAAE,CACDi3C,WAAS,CAAC,CAAD,CAAT,GAAe7gD,GAAG,CAAC,CAAD,CAAH,GAASwgD,SADvB,EAEDK,WAAS,CAAC,CAAD,CAAT,GAAe7gD,GAAG,CAAC,CAAD,CAAH,GAASygD,SAFvB,CAAA;OALgD,CAAA;KAAtD,CAPI,EAgBJ,IAhBI,CAAX,CAAA;;IAkBA,OAAO;AACHn9C,MAAAA,IAAI,EAAE08C,UADH;AAEHF,MAAAA,QAAQ,EAAAA,QAFL;AAGH5B,MAAAA,OAAO,EAAAsC,SAHJ;AAIHrC,MAAAA,OAAO,EAAAsC,SAJJ;AAKHvgD,MAAAA,IAAI,EAAE2gD,WAAS,CAAC,CAAD,CAAT,GAAeL,SALlB;AAMHvgD,MAAAA,GAAG,EAAE4gD,WAAS,CAAC,CAAD,CAAT,GAAeJ,SANjB;AAOH1nC,MAAAA,KAAK,EAAE8nC,WAAS,CAAC,CAAD,CAAT,GAAeL,SAPnB;AAQH31C,MAAAA,MAAM,EAAEg2C,WAAS,CAAC,CAAD,CAAT,GAAeJ,SARpB;AASHj2C,MAAAA,KAAK,EAAAA,KATF;AAUHy1C,MAAAA,QAAQ,EAAAA,QAAAA;KAVZ,CAAA;AAYH,GAvDM,MAuDA,IAAID,UAAU,KAAK,OAAnB,EAA4B;AAC/B,IAAA,IAAMp9B,MAAM,GAAG3W,UAAU,CAAC1D,KAAM,IAAI,SAAX,CAAzB,CAAA;AACA,IAAA,IAAMu4C,UAAU,GAAGl+B,MAAM,CAACviB,OAAP,CAAe,OAAf,CAAnB,CAAA;AAEA,IAAA,IAAM0gD,UAAU,GAAG,CAACD,UAAU,GAAG,CAAC,CAAd,GAAkBl+B,MAAM,CAAC7L,KAAP,CAAa,CAAb,EAAgB+pC,UAAhB,CAAlB,GAAgDl+B,MAAjD,EAAyDnc,MAA5E,CAAA;IACA,IAAMu6C,YAAY,GAAGp+B,MAAM,CAAC7L,KAAP,CAAagqC,UAAU,GAAG,CAA1B,CAArB,CAAA;;IACM,IAAA7D,EAKF,GAAAt6B,MAAM,CAAC7L,KAAP,CAAa,CAAb,EAAgBgqC,UAAhB,CALE;AAAA,QACFne,QAAQ,GAAAsa,EAAA,CAAA,CAAA,CADN;AAAA,QAEFE,UAFE;QAEFta,UAAU,GAAGsa,EAAA,KAAA,KAAA,CAAA,GAAAxa,QAAA,GAAQwa,EAFnB;AAAA,QAGF6D,EAAsB,GAAA/D,EAAA,CAAA,CAAA,CAHpB;QAGFna,WAAW,GAAGke,EAAA,KAAA,KAAA,CAAA,GAAAre,QAAA,GAAQqe,EAHpB;AAAA,QAIFC,UAJE;QAIFre,SAAS,GAAGqe,EAAA,KAAA,KAAA,CAAA,GAAApe,UAAA,KAJV,CAAA;;IAMA,IAAAqe,EAAgB,GAAA,CAACve,QAAD,EAAWG,WAAX,CAAA,CAAwBhjC,GAAxB,CAA4B,UAAA6J,GAAA,EAAG;AAAI,MAAA,OAAA6U,eAAe,CAAC7U,GAAD,EAAMJ,MAAN,CAAf,CAAA;AAA4B,KAA/D,CAAhB;AAAA,QAACvJ,GAAG,GAAAkhD,EAAA,CAAA,CAAA,CAAJ;AAAA,QAAMt2C,MAAM,GAAAs2C,EAAA,CAAA,CAAA,CAAZ,CAAA;;IACA,IAAAC,EAAgB,GAAA,CAACve,SAAD,EAAYC,UAAZ,CAAA,CAAwB/iC,GAAxB,CAA4B,UAAA6J,GAAA,EAAG;AAAI,MAAA,OAAA6U,eAAe,CAAC7U,GAAD,EAAML,KAAN,CAAf,CAAA;AAA2B,KAA9D,CAAhB;AAAA,QAACrJ,IAAI,GAAAkhD,EAAA,CAAA,CAAA,CAAL;AAAA,QAAOroC,KAAK,GAAAqoC,EAAA,CAAA,CAAA,CAAZ,CAAA;;AACN,IAAA,IAAMC,SAAS,GAAG93C,KAAK,GAAGwP,KAA1B,CAAA;AACA,IAAA,IAAMuoC,UAAU,GAAG93C,MAAM,GAAGqB,MAA5B,CAAA;AACA,IAAA,IAAMuwC,WAAW,GAAGW,eAAe,CAC/BiF,YAD+B,EAE/BK,SAAS,GAAGnhD,IAFmB,EAG/BohD,UAAU,GAAGrhD,GAHkB,EAI/BC,IAJ+B,EAK/BD,GAL+B,CAAnC,CAAA;;IAOA,IAAMuK,KAAK,GAAApC,aAAA,CAAAA,aAAA,CAAA,EAAA,EACJ+2C,YAAY,CAACl/C,GAAD,EAAMohD,SAAN,EAAiBC,UAAjB,EAA6BphD,IAA7B,CADR,EAEJ,IAFI,CAAA,EAEJk7C,WAFI,MAAA,CAAX,CAAA;;IAKA,OAAO;AACH93C,MAAAA,IAAI,EAAE,OADH;AAEHw8C,MAAAA,QAAQ,EAAAA,QAFL;AAGHt1C,MAAAA,KAAK,EAAAA,KAHF;AAIHvK,MAAAA,GAAG,EAAAA,GAJA;AAKHC,MAAAA,IAAI,EAAAA,IALD;AAMH6Y,MAAAA,KAAK,EAAEsoC,SANJ;AAOHx2C,MAAAA,MAAM,EAAEy2C,UAPL;AAQHZ,MAAAA,MAAM,EAAEM,YARL;AASHf,MAAAA,QAAQ,EAAAA,QAAAA;KATZ,CAAA;AAWH,GAvCM,MAuCA,IAAID,UAAU,KAAK,MAAnB,EAA2B;AAC9B;AACA,IAAA,IAAMp9B,MAAM,GAAGs9B,UAAU,CAAC33C,KAAM,IAAI,QAAQ3K,MAAR,CAAQ2L,KAAR,EAAoB,MAApB,EAAoB3L,MAApB,CAAoB4L,MAApB,EAAmC,SAAnC,CAAX,CAAzB,CAAA;AAEAy2C,IAAAA,QAAQ,GAAG,GAAX,CAAA;;IACM,IAAAsB,KAA6B3+B,MAAM,CAAC7iB,GAAP,CAAW,UAAA6J,GAAA,EAAG;AACrC,MAAA,IAAOuvB,QAAQ,GAAKrvB,SAAS,CAACF,GAAD,CAAT,MAApB,CAAA;AAER,MAAA,OAAOuvB,QAAP,CAAA;AACH,KAJkC,CAA7B;AAAA,QAACl5B,GAAG,GAAAshD,EAAA,CAAA,CAAA,CAAJ;AAAA,QAAMxoC,KAAK,GAAAwoC,EAAA,CAAA,CAAA,CAAX;AAAA,QAAa12C,MAAM,GAAA02C,EAAA,CAAA,CAAA,CAAnB;AAAA,QAAqBrhD,IAAI,QAAzB,CAAA;;IAKN,IAAMsK,KAAK,GAAG20C,YAAY,CAACl/C,GAAD,EAAM8Y,KAAN,EAAalO,MAAb,EAAqB3K,IAArB,CAA1B,CAAA;IAEA,OAAO;AACHoD,MAAAA,IAAI,EAAE,MADH;AAEHw8C,MAAAA,QAAQ,EAAAA,QAFL;AAGHt1C,MAAAA,KAAK,EAAAA,KAHF;AAIHvK,MAAAA,GAAG,EAAAA,GAJA;AAKH8Y,MAAAA,KAAK,EAAAA,KALF;AAMHlO,MAAAA,MAAM,EAAAA,MANH;AAOH3K,MAAAA,IAAI,EAAAA,IAPD;AAQH0iB,MAAAA,MAAM,EAAAA,MARH;AASHq9B,MAAAA,QAAQ,EAAAA,QAAAA;KATZ,CAAA;AAWH,GAAA;;AACD,EAAA,OAAA;AACH;;AClSK,SAAUuB,cAAV,CACF9F,YADE,EAEFp1C,KAFE,EAGFkC,IAHE,EAIFu2C,MAJE,EAKF14B,SALE,EAKiB;AAEb,EAAA,IAAAlkB,EAAA,GAAqBu5C,YAAY,CAACp1C,KAAD,CAAjC;AAAA,MAAEL,SAAS,GAAA9D,EAAA,CAAA8D,SAAX;AAAA,MAAa61C,GAAG,GAAA35C,EAAA,CAAA25C,GAAhB,CAAA;AACN,EAAA,IAAM2F,KAAK,GAAG/F,YAAY,CAAC37C,GAAb,CAAiB,YAAM;AAAA,IAAA,OAAA,CAAC,CAAD,EAAI,CAAJ,CAAA,CAAA;AAAM,GAA7B,CAAd,CAAA;EACA,IAAMsxB,UAAU,GAAGprB,SAAS,GAAGA,SAAS,CAACwM,KAAV,CAAgB,EAAhB,CAAH,GAAyB,EAArD,CAAA;;AAEA,EAAA,IAAIssC,MAAM,IAAIz4C,KAAK,GAAG,CAAtB,EAAyB;IACrB,IAAMo7C,kBAAkB,GAAGrwB,UAAU,CAACpqB,MAAX,CAAkB,UAAAjH,GAAA,EAAO;AAAA,MAAA,OAAAA,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,GAAvB,CAAA;AAA0B,KAAnD,CAA3B,CAAA;IACA,IAAM2hD,oBAAoB,GAAGtwB,UAAU,CAACpqB,MAAX,CAAkB,UAAAjH,GAAA,EAAO;AAAA,MAAA,OAAAA,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,GAAvB,CAAA;AAA0B,KAAnD,CAA7B,CAAA;AAEA,IAAA,IAAM4hD,mBAAiB,GAAGF,kBAAkB,CAAC,CAAD,CAA5C,CAAA;AACA,IAAA,IAAMG,qBAAmB,GAAGF,oBAAoB,CAAC,CAAD,CAAhD,CAAA;AAEAF,IAAAA,KAAK,CAACn7C,KAAD,CAAL,GAAekC,IAAf,CAAA;;AACM,IAAA,IAAAtG,EAAA,GAAkBs9C,cAAc,CAAC9D,YAAD,CAAhC;AAAA,QAACnyC,KAAK,GAAArH,EAAA,CAAA,CAAA,CAAN;AAAA,QAAQsH,MAAM,GAAAtH,EAAA,CAAA,CAAA,CAAd,CAAA;;IACN,IAAMkkB,KAAK,GAAG7c,KAAK,IAAIC,MAAT,GAAkBD,KAAK,GAAGC,MAA1B,GAAmC,CAAjD,CAAA;;IAEA,IAAI4c,KAAK,IAAIC,SAAb,EAAwB;AACpB;AACA;AACA;AAEA,MAAA,IAAMy7B,UAAU,GAAG,CAACx7C,KAAK,GAAG,CAAT,IAAc,CAAjC,CAAA;AACA,MAAA,IAAM6G,aAAa,GAAGuuC,YAAY,CAACoG,UAAD,CAAZ,CAAyBl4C,GAA/C,CAAA;AACA,MAAA,IAAM0d,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAtB,CAAA;;MAEA,IAAIrhB,SAAU,CAAC5F,OAAX,CAAmB,GAAnB,CAA0B,GAAA,CAAC,CAA/B,EAAkC;AAC9BinB,QAAAA,aAAa,CAAC,CAAD,CAAb,GAAmB,CAAC,CAApB,CAAA;OADJ,MAEO,IAAIrhB,SAAU,CAAC5F,OAAX,CAAmB,GAAnB,CAAA,GAA0B,CAAC,CAA/B,EAAkC;AACrCinB,QAAAA,aAAa,CAAC,CAAD,CAAb,GAAmB,CAAnB,CAAA;AACH,OAAA;;MACD,IAAIrhB,SAAU,CAAC5F,OAAX,CAAmB,GAAnB,CAA0B,GAAA,CAAC,CAA/B,EAAkC;AAC9BinB,QAAAA,aAAa,CAAC,CAAD,CAAb,GAAmB,CAAC,CAApB,CAAA;OADJ,MAEO,IAAIrhB,SAAU,CAAC5F,OAAX,CAAmB,GAAnB,CAAA,GAA0B,CAAC,CAA/B,EAAkC;AACrCinB,QAAAA,aAAa,CAAC,CAAD,CAAb,GAAmB,CAAnB,CAAA;AACH,OAAA;;AAGD,MAAA,IAAMy6B,QAAQ,GAAG77B,iBAAiB,CAC9B,CAAC3c,KAAD,EAAQC,MAAR,CAD8B,EAE9BhB,IAF8B,EAG9B4d,KAH8B,EAI9BkB,aAJ8B,EAK9B,IAL8B,CAAlC,CAAA;AAOA,MAAA,IAAM8d,SAAS,GAAG77B,KAAK,GAAGw4C,QAAQ,CAAC,CAAD,CAAlC,CAAA;AACA,MAAA,IAAM1c,UAAU,GAAG77B,MAAM,GAAGu4C,QAAQ,CAAC,CAAD,CAApC,CAAA;AACA,MAAA,IAAI9hD,GAAG,GAAGkN,aAAa,CAAC,CAAD,CAAvB,CAAA;AACA,MAAA,IAAItC,MAAM,GAAGsC,aAAa,CAAC,CAAD,CAA1B,CAAA;AACA,MAAA,IAAIjN,IAAI,GAAGiN,aAAa,CAAC,CAAD,CAAxB,CAAA;AACA,MAAA,IAAI4L,KAAK,GAAG5L,aAAa,CAAC,CAAD,CAAzB,CAAA;;AAEA,MAAA,IAAIma,aAAa,CAAC,CAAD,CAAb,KAAqB,CAAC,CAA1B,EAA6B;QACzBpnB,IAAI,GAAG6Y,KAAK,GAAGqsB,SAAf,CAAA;OADJ,MAEO,IAAI9d,aAAa,CAAC,CAAD,CAAb,KAAqB,CAAzB,EAA4B;QAC/BvO,KAAK,GAAG7Y,IAAI,GAAGklC,SAAf,CAAA;AACH,OAFM,MAEA;AACHllC,QAAAA,IAAI,GAAGA,IAAI,GAAGklC,SAAS,GAAG,CAA1B,CAAA;AACArsB,QAAAA,KAAK,GAAGA,KAAK,GAAGqsB,SAAS,GAAG,CAA5B,CAAA;AACH,OAAA;;AACD,MAAA,IAAI9d,aAAa,CAAC,CAAD,CAAb,KAAqB,CAAC,CAA1B,EAA6B;QACzBrnB,GAAG,GAAG4K,MAAM,GAAGw6B,UAAf,CAAA;OADJ,MAEO,IAAI/d,aAAa,CAAC,CAAD,CAAb,KAAqB,CAAzB,EAA4B;QAC/Bzc,MAAM,GAAG5K,GAAG,GAAGolC,UAAf,CAAA;AACH,OAFM,MAEA;AACHplC,QAAAA,GAAG,GAAG4K,MAAM,GAAGw6B,UAAU,GAAG,CAA5B,CAAA;QACAx6B,MAAM,GAAG5K,GAAG,GAAGolC,UAAf,CAAA;AACH,OAAA;;MAED,IAAM2c,kBAAgB,GAAG7C,YAAY,CAACl/C,GAAD,EAAM8Y,KAAN,EAAalO,MAAb,EAAqB3K,IAArB,CAArC,CAAA;AAEAw7C,MAAAA,YAAY,CAACrkC,OAAb,CAAqB,UAAC4qC,WAAD,EAAcp4C,CAAd,EAAe;QAChC43C,KAAK,CAAC53C,CAAD,CAAL,CAAS,CAAT,CAAcm4C,GAAAA,kBAAgB,CAACn4C,CAAD,CAAhB,CAAoBD,GAApB,CAAwB,CAAxB,CAA6Bq4C,GAAAA,WAAW,CAACr4C,GAAZ,CAAgB,CAAhB,CAA3C,CAAA;QACA63C,KAAK,CAAC53C,CAAD,CAAL,CAAS,CAAT,CAAcm4C,GAAAA,kBAAgB,CAACn4C,CAAD,CAAhB,CAAoBD,GAApB,CAAwB,CAAxB,CAA6Bq4C,GAAAA,WAAW,CAACr4C,GAAZ,CAAgB,CAAhB,CAA3C,CAAA;OAFJ,CAAA,CAAA;AAIH,KA1DD,MA0DO;AACH8xC,MAAAA,YAAY,CAACrkC,OAAb,CAAqB,UAAC4qC,WAAD,EAAcp4C,CAAd,EAAe;AAE5B,QAAA,IAAWq4C,UAAU,GACrBD,WAAW,CAAAh8C,SADX,CAAA;;QAGJ,IAAI,CAACi8C,UAAL,EAAiB;AACb,UAAA,OAAA;AACH,SAAA;;QACD,IAAIA,UAAU,CAAC7hD,OAAX,CAAmBuhD,mBAAnB,CAAwC,GAAA,CAAC,CAA7C,EAAgD;UAC5CH,KAAK,CAAC53C,CAAD,CAAL,CAAS,CAAT,CAAcrB,GAAAA,IAAI,CAAC,CAAD,CAAlB,CAAA;AACH,SAAA;;QACD,IAAI05C,UAAU,CAAC7hD,OAAX,CAAmBwhD,qBAAnB,CAA0C,GAAA,CAAC,CAA/C,EAAkD;UAC9CJ,KAAK,CAAC53C,CAAD,CAAL,CAAS,CAAT,CAAcrB,GAAAA,IAAI,CAAC,CAAD,CAAlB,CAAA;AACH,SAAA;OAbL,CAAA,CAAA;;AAeA,MAAA,IAAIo5C,mBAAJ,EAAuB;QACnBH,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAcj5C,GAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAxB,CAAA;QACAi5C,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAcj5C,GAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAxB,CAAA;AACH,OAAA;;AACD,MAAA,IAAIq5C,qBAAJ,EAAyB;QACrBJ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAcj5C,GAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAxB,CAAA;QACAi5C,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAcj5C,GAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAxB,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GA9FD,MA8FO,IAAIvC,SAAS,IAAI,CAAC61C,GAAlB,EAAuB;AAC1BzqB,IAAAA,UAAU,CAACha,OAAX,CAAmB,UAAArX,GAAA,EAAG;MAClB,IAAMiwB,UAAU,GAAGjwB,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,GAA1C,CAAA;AAEA07C,MAAAA,YAAY,CAACrkC,OAAb,CAAqB,UAAC4qC,WAAD,EAAcp4C,CAAd,EAAe;AAE5B,QAAA,IAAWs4C,MAAM,GAGjBF,WAAW,CAAAh8C,SAHX;AAAA,YACYm8C,aAAa,GAEzBH,WAAW,CAAA50B,UAHX;AAAA,YAEUg1B,WAAW,GACrBJ,WAAW,SAHX,CAAA;;QAKJ,IAAI,CAACE,MAAD,IAAWA,MAAM,CAAC9hD,OAAP,CAAeL,GAAf,CAAA,KAAwB,CAAC,CAAxC,EAA2C;AACvC,UAAA,OAAA;AACH,SAAA;;AACDyhD,QAAAA,KAAK,CAAC53C,CAAD,CAAL,GAAW,CACPomB,UAAU,IAAI,CAACmyB,aAAf,GAA+B,CAA/B,GAAmC55C,IAAI,CAAC,CAAD,CADhC,EAEP,CAACynB,UAAD,IAAe,CAACoyB,WAAhB,GAA8B,CAA9B,GAAkC75C,IAAI,CAAC,CAAD,CAF/B,CAAX,CAAA;OAVJ,CAAA,CAAA;KAHJ,CAAA,CAAA;AAmBH,GApBM,MAoBA;AACHi5C,IAAAA,KAAK,CAACn7C,KAAD,CAAL,GAAekC,IAAf,CAAA;AACH,GAAA;;AAED,EAAA,OAAOi5C,KAAP,CAAA;AACH,CAAA;;AAGD,SAASa,WAAT,CAAqBp+C,QAArB,EAAyEjD,CAAzE,EAA+E;AACrE,EAAA,IAAAkB,EAAiB,GAAA8B,oBAAoB,CAACC,QAAD,EAAWjD,CAAX,CAArC;AAAA,MAAC2C,KAAK,GAAAzB,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ0B,KAAK,QAAb,CAAA;;AACA,EAAA,IAAA3B,EAAA,GAA0BjB,CAAC,CAACsB,KAA5B;AAAA,MAAEo8C,QAAQ,GAAAz8C,EAAA,CAAAy8C,QAAV;AAAA,MAAY4D,SAAS,GAAArgD,EAAA,CAAAqgD,SAArB,CAAA;EACA,IAAA59C,EAAA,GAIDg6C,QAJC;AAAA,MACIE,QAAQ,GAAAl6C,EAAA,CAAArB,IADZ;AAAA,MAEKw7C,SAAS,GAAAn6C,EAAA,CAAA6F,KAFd;AAAA,MAGFy1C,QAAQ,GAAAt7C,EAAA,CAAAs7C,QAHN,CAAA;EAKN,IAAMz1C,KAAK,GAAGs0C,SAAS,CAAC/+C,GAAV,CAAc,UAAA6J,GAAA,EAAO;IAAA,OAAAA,GAAG,CAACA,GAAJ,CAAA;AAAO,GAA5B,CAAd,CAAA;;EACA,IAAIi1C,QAAQ,KAAK,SAAjB,EAA4B;IACxBr0C,KAAK,CAACtC,MAAN,CAAaq6C,SAAb,EAAwB,CAAxB,EAA2B,CAAC3+C,KAAD,EAAQC,KAAR,CAA3B,CAAA,CAAA;AACH,GAFD,MAEO,IAAIg7C,QAAQ,KAAK,OAAjB,EAA0B;AAC7B,IAAA,IAAMb,eAAe,GAAGlD,uBAAuB,CAACz6C,OAAxB,CAAgCkiD,SAAhC,CAAxB,CAAA;AACA,IAAA,IAAMtE,aAAa,GAAGlD,qBAAqB,CAAC16C,OAAtB,CAA8BkiD,SAA9B,CAAtB,CAAA;AACA,IAAA,IAAM97C,MAAM,GAAGq4C,SAAS,CAACr4C,MAAzB,CAAA;IAEAs3C,YAAY,CACRe,SADQ,EAERt0C,KAFQ,EAGR,CAHQ,EAIRwzC,eAJQ,EAKRC,aALQ,EAMRr6C,KANQ,EAORC,KAPQ,EAQR2G,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CARQ,EASRA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CATQ,EAURA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAVQ,EAWRA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAXQ,CAAZ,CAAA;;AAcA,IAAA,IAAI/D,MAAM,KAAKq4C,SAAS,CAACr4C,MAAzB,EAAiC;AAC7B,MAAA,OAAA;AACH,KAAA;AACJ,GAtBM,MAsBA;AACH,IAAA,OAAA;AACH,GAAA;;EACD,IAAM00C,UAAU,GAAGuD,aAAa,CAACx6C,QAAD,EAAWy6C,QAAX,EAAqBn0C,KAArB,CAAhC,CAAA;AACA,EAAA,IAAMg4C,SAAS,GAAG,EAAA,CAAG5kD,MAAH,CAAGihD,QAAH,EAAe,GAAf,CAAA,CAAejhD,MAAf,CAAeu9C,UAAU,CAAC76C,IAAX,CAAgB2/C,QAAhB,CAAf,EAAwC,GAAxC,CAAlB,CAAA;AAEAr+B,EAAAA,YAAY,CAAC1d,QAAD,EAAW,QAAX,EAAqBuc,UAAU,CAASvc,QAAT,EAAmBjD,CAAnB;AACvCwhD,IAAAA,aAAa,EAAE;AACf5D,IAAAA,QAAQ,EAAAA;AACRr0C,IAAAA,KAAK,EAAAA;AACL2wC,IAAAA,UAAU,EAAAA;AACVqH,IAAAA,SAAS;AACT5+C,IAAAA,KAAK,EAAE;AACPC,IAAAA,KAAK,EAAE,CAAA;KACJoJ,aAAa,CAAC;AACb0xC,IAAAA,QAAQ,EAAE6D,SAAAA;AADG,GAAD,EAEbvhD,CAFa,EARuB,CAA/B,CAAZ,CAAA;AAYH,CAAA;;AACD,SAASyhD,cAAT,CAAwBx+C,QAAxB,EAA4EjD,CAA5E,EAAkF;AACxE,EAAA,IAAAkB,EAAA,GAA0BlB,CAAC,CAACsB,KAA5B;AAAA,MAAEo8C,QAAQ,GAAAx8C,EAAA,CAAAw8C,QAAV;AAAA,MAAY4D,SAAS,GAAApgD,EAAA,CAAAogD,SAArB,CAAA;EACA,IAAArgD,EAAA,GAIDy8C,QAJC;AAAA,MACIE,QAAQ,GAAA38C,EAAA,CAAAoB,IADZ;AAAA,MAEKw7C,SAAS,GAAA58C,EAAA,CAAAsI,KAFd;AAAA,MAGFy1C,QAAQ,GAAA/9C,EAAA,CAAA+9C,QAHN,CAAA;EAKN,IAAMz1C,KAAK,GAAGs0C,SAAS,CAAC/+C,GAAV,CAAc,UAAA6J,GAAA,EAAO;IAAA,OAAAA,GAAG,CAACA,GAAJ,CAAA;AAAO,GAA5B,CAAd,CAAA;AACA,EAAA,IAAMnD,MAAM,GAAG+D,KAAK,CAAC/D,MAArB,CAAA;;EACA,IAAIo4C,QAAQ,KAAK,SAAjB,EAA4B;AACxBC,IAAAA,SAAS,CAAC52C,MAAV,CAAiBq6C,SAAjB,EAA4B,CAA5B,CAAA,CAAA;AACA/3C,IAAAA,KAAK,CAACtC,MAAN,CAAaq6C,SAAb,EAAwB,CAAxB,CAAA,CAAA;AACH,GAHD,MAGO,IAAI1D,QAAQ,KAAK,OAAjB,EAA0B;IAC7B,IAAI0D,SAAS,GAAG,CAAhB,EAAmB;AACf,MAAA,OAAA;AACH,KAAA;;IACD5E,eAAe,CAACmB,SAAD,EAAYt0C,KAAZ,EAAmB+3C,SAAnB,EAA8B,CAA9B,EAAiC97C,MAAjC,CAAf,CAAA;;AAEA,IAAA,IAAIA,MAAM,KAAKq4C,SAAS,CAACr4C,MAAzB,EAAiC;AAC7B,MAAA,OAAA;AACH,KAAA;AACJ,GATM,MASA;AACH,IAAA,OAAA;AACH,GAAA;;EACD,IAAM00C,UAAU,GAAGuD,aAAa,CAACx6C,QAAD,EAAWy6C,QAAX,EAAqBn0C,KAArB,CAAhC,CAAA;AACA,EAAA,IAAMg4C,SAAS,GAAG,EAAA,CAAG5kD,MAAH,CAAGihD,QAAH,EAAe,GAAf,CAAA,CAAejhD,MAAf,CAAeu9C,UAAU,CAAC76C,IAAX,CAAgB2/C,QAAhB,CAAf,EAAwC,GAAxC,CAAlB,CAAA;AAEAr+B,EAAAA,YAAY,CAAC1d,QAAD,EAAW,QAAX,EAAqBuc,UAAU,CAASvc,QAAT,EAAmBjD,CAAnB;AACvCwhD,IAAAA,aAAa,EAAE;AACf5D,IAAAA,QAAQ,EAAAA;AACRr0C,IAAAA,KAAK,EAAAA;AACL2wC,IAAAA,UAAU,EAAAA;AACVqH,IAAAA,SAAS;AACT5+C,IAAAA,KAAK,EAAE;AACPC,IAAAA,KAAK,EAAE,CAAA;KACJoJ,aAAa,CAAC;AACb0xC,IAAAA,QAAQ,EAAE6D,SAAAA;AADG,GAAD,EAEbvhD,CAFa,EARuB,CAA/B,CAAZ,CAAA;AAYH,CAAA;AACD;;;AAGG;;;AAEH,gBAAe;AACX/D,EAAAA,IAAI,EAAE,WADK;EAEXI,KAAK,EAAE,CACH,WADG,EAEH,iBAFG,EAGH,gBAHG,EAIH,WAJG,EAKH,cALG,EAMH,UANG,EAOH,cAPG,EAQH,kBARG,EASH,wBATG,EAUH,0BAVG,EAWH,mBAXG,CAFI;AAeXD,EAAAA,MAAM,EAAE,CACJ,WADI,EAEJ,MAFI,EAGJ,SAHI,CAfG;EAoBXwpC,GAAG,EAAE,CACD,+ZADC,EA0BD,mCA1BC,EA6BD,qDA7BC,EAiCD,kFAjCC,CApBM;AA0DXC,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAA2E00B,KAA3E,EAA0F;AAChF,IAAA,IAAAz2B,KAKF+B,QAAQ,CAAC5G,KALP;AAAA,QACFqlD,cAAc,oBADZ;AAAA,QAEFC,eAAe,qBAFb;AAAA,QAGFC,QAAQ,cAHN;AAAA,QAGQ9yC,IAAI,UAHZ;AAAA,QAIF3C,SAAS,eAJP,CAAA;;AAMA,IAAA,IAAAlL,EAAA,GAMFgC,QAAQ,CAACukC,QAAT,EANE;AAAA,QACFz5B,MAAM,YADJ;AAAA,QACMzF,KAAK,WADX;AAAA,QACaC,MAAM,YADnB;AAAA,QACqB1E,SAAS,eAD9B;AAAA,QACgCT,IAAI,GAAAnC,EAAA,CAAAmC,IADpC;AAAA,QACsCnE,IAAI,GAAAgC,EAAA,CAAAhC,IAD1C;AAAA,QAC4CD,GAAG,GAAAiC,EAAA,CAAAjC,GAD/C;AAAA,QAEFqE,IAAI,GAAApC,EAAA,CAAAoC,IAFF;AAAA,QAEI+P,IAAI,GAAAnS,EAAA,CAAAmS,IAFR;AAAA,QAEUkH,IAAI,GAAArZ,EAAA,CAAAqZ,IAFd;AAAA,QAEgBC,IAAI,GAAAtZ,EAAA,CAAAsZ,IAFpB;AAAA,QAGFsnC,aAAa,GAAA5gD,EAAA,CAAA4gD,aAHX;AAAA,QAIFC,cAAc,GAAA7gD,EAAA,CAAA6gD,cAJZ;AAAA,QAKQpa,WAAW,GAAAzmC,EAAA,CAAA+Z,QALnB,CAAA;;AAQN,IAAA,IAAI,CAACjN,MAAD,IAAW5B,SAAf,EAA0B;AACtB,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AAED,IAAA,IAAMuxC,QAAQ,GAAGgB,WAAW,CACxB3wC,MADwB,EAChBzF,KADgB,EACTC,MADS,EACDo5C,eAAe,IAAI,OADlB,EAC2BE,aAAa,IAAIH,cAD5C,CAA5B,CAAA;;IAGA,IAAI,CAAChE,QAAL,EAAe;AACX,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAM39C,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AACA,IAAA,IAAMf,IAAI,GAAGq7C,QAAQ,CAACr7C,IAAtB,CAAA;AACA,IAAA,IAAMw7C,SAAS,GAAGH,QAAQ,CAACn0C,KAA3B,CAAA;IACA,IAAMA,KAAK,GAAGs0C,SAAS,CAAC/+C,GAAV,CAAc,UAAA6J,GAAA,EAAG;AAC3B;MACA,IAAMo5C,aAAa,GAAGl1C,iBAAiB,CAAChJ,SAAD,EAAY8E,GAAG,CAACA,GAAhB,EAAqB5I,CAArB,CAAvC,CAAA;AAEA,MAAA,OAAO,CACHgiD,aAAa,CAAC,CAAD,CAAb,GAAmB9iD,IADhB,EAEH8iD,aAAa,CAAC,CAAD,CAAb,GAAmB/iD,GAFhB,CAAP,CAAA;AAIH,KARa,CAAd,CAAA;IAUA,IAAIgjD,QAAQ,GAAU,EAAtB,CAAA;IACA,IAAIvuB,KAAK,GAAU,EAAnB,CAAA;AAEA,IAAA,IAAMqqB,MAAM,GAAGz7C,IAAI,KAAK,MAAxB,CAAA;AACA,IAAA,IAAM4/C,OAAO,GAAG5/C,IAAI,KAAK,OAAzB,CAAA;AACA,IAAA,IAAM6/C,SAAS,GAAG7/C,IAAI,KAAK,SAA3B,CAAA;;AAEA,IAAA,IAAIy7C,MAAM,IAAImE,OAAV,IAAqBC,SAAzB,EAAoC;AAChC,MAAA,IAAMC,WAAS,GAAGF,OAAO,GAAG14C,KAAK,CAACuM,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAH,GAAuBvM,KAAhD,CAAA;MAEAkqB,KAAK,GAAG0uB,WAAS,CAACrjD,GAAV,CAAc,UAACsjD,EAAD,EAAKx5C,CAAL,EAAM;QACxB,IAAMy5C,IAAI,GAAGz5C,CAAC,KAAK,CAAN,GAAUu5C,WAAS,CAACA,WAAS,CAAC38C,MAAV,GAAmB,CAApB,CAAnB,GAA4C28C,WAAS,CAACv5C,CAAC,GAAG,CAAL,CAAlE,CAAA;AAEA,QAAA,IAAMiS,GAAG,GAAGC,MAAM,CAACunC,IAAD,EAAOD,EAAP,CAAlB,CAAA;AACA,QAAA,IAAM76C,IAAI,GAAGoT,eAAe,CAAC0nC,IAAD,EAAOD,EAAP,CAA5B,CAAA;AACA,QAAA,OAAOzqB,KAAA,CAAAG,aAAA,CAAA,KAAA,EAAA;AAAKF,UAAAA,GAAG,EAAE,UAAA,CAAAj7B,MAAA,CAAWiM,CAAX,CAAV;UAA0BmvB,SAAS,EAAE1kB,MAAM,CAAC,MAAD,EAAS,WAAT,EAAsB,cAAtB,CAA3C;AACc,UAAA,iBAAA,EAAAzK,CADd;AAEHqK,UAAAA,KAAK,EAAE;AACH3K,YAAAA,KAAK,EAAE,EAAG3L,CAAAA,MAAH,CAAG4K,IAAH,EAAW,IAAX,CADJ;AAEH8C,YAAAA,SAAS,EAAE,YAAA,CAAA1N,MAAA,CAAa0lD,IAAI,CAAC,CAAD,CAAjB,EAAoB,MAApB,CAAoB1lD,CAAAA,MAApB,CAA2B0lD,IAAI,CAAC,CAAD,CAA/B,EAAkC,aAAlC,CAAkC1lD,CAAAA,MAAlC,CAAgDke,GAAhD,EAAmD,cAAnD,CAAmDle,CAAAA,MAAnD,CAAkEmS,IAAlE,EAAyE,GAAzE,CAAA;AAFR,WAAA;AAFJ,SAAA,CAAP,CAAA;AAMH,OAXO,CAAR,CAAA;AAYH,KAAA;;IACDkzC,QAAQ,GAAGz4C,KAAK,CAACzK,GAAN,CAAU,UAAC6J,GAAD,EAAMC,CAAN,EAAO;AACxB,MAAA,OAAO+uB,KAAA,CAAAG,aAAA,CAAA,KAAA,EAAA;AAAKF,QAAAA,GAAG,EAAE,aAAA,CAAAj7B,MAAA,CAAciM,CAAd,CAAV;QACHmvB,SAAS,EAAE1kB,MAAM,CAAC,SAAD,EAAY,cAAZ,EAA4B,cAA5B,CADd;AAEc,QAAA,iBAAA,EAAAzK,CAFd;AAGHqK,QAAAA,KAAK,EAAE;AACH5I,UAAAA,SAAS,EAAE,YAAA,CAAA1N,MAAA,CAAagM,GAAG,CAAC,CAAD,CAAhB,EAAmB,MAAnB,CAAmBhM,CAAAA,MAAnB,CAA0BgM,GAAG,CAAC,CAAD,CAA7B,EAAgC,aAAhC,CAAgChM,CAAAA,MAAhC,CAA8C+qC,WAA9C,EAAyD,aAAzD,CAAyD/qC,CAAAA,MAAzD,CAAuEmS,IAAvE,EAA8E,GAA9E,CAAA;AADR,SAAA;AAHJ,OAAA,CAAP,CAAA;AAMH,KAPU,CAAX,CAAA;;AASA,IAAA,IAAImzC,OAAJ,EAAa;AACTD,MAAAA,QAAQ,CAAC34C,IAAT,CAAaqK,KAAb,CAAAsuC,QAAA,EAAiBz4C,KAAK,CAACuM,KAAN,CAAY,CAAZ,EAAehX,GAAf,CAAmB,UAAC6J,GAAD,EAAMC,CAAN,EAAO;AACvC,QAAA,OAAO+uB,KAAA,CAAAG,aAAA,CAAA,KAAA,EAAA;AAAKF,UAAAA,GAAG,EAAE,mBAAA,CAAoBj7B,MAApB,CAAoBiM,CAApB,CAAV;UACHmvB,SAAS,EAAE1kB,MAAM,CAAC,SAAD,EAAY,cAAZ,EAA4B,aAA5B,EAA2C,cAA3C,CADd;AAEc,UAAA,iBAAA,EAAA,IAAIzK,CAFlB;AAGHqK,UAAAA,KAAK,EAAE;AACH5I,YAAAA,SAAS,EAAE,YAAA,CAAA1N,MAAA,CAAagM,GAAG,CAAC,CAAD,CAAhB,EAAmB,MAAnB,CAAmBhM,CAAAA,MAAnB,CAA0BgM,GAAG,CAAC,CAAD,CAA7B,EAAgC,aAAhC,CAAgChM,CAAAA,MAAhC,CAA8C+qC,WAA9C,EAAyD,aAAzD,CAAyD/qC,CAAAA,MAAzD,CAAuEmS,IAAvE,EAA8E,GAA9E,CAAA;AADR,WAAA;AAHJ,SAAA,CAAP,CAAA;AAMH,OAPgB,CAAjB,CAAA,CAAA;AAQH,KAAA;;AACD,IAAA,IAAIzM,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,SAAlC,EAA6C;AAErC,MAAA,IAAMigD,QAAQ,GAId5E,QAAQ,KAJR;AAAA,UACK6E,OAAO,GAGZ7E,QAAQ,CAAA1+C,GAJR;AAAA,UAEAi+C,OAAO,GAEPS,QAAQ,CAFDT,OAFP;AAAA,UAGAC,OAAO,GACPQ,QAAQ,QAJR,CAAA;;AAME,MAAA,IAAAh6C,EAAsB,GAAAJ,KAAK,CAC7BuJ,iBAAiB,CAAChJ,SAAD,EAAY,CAACy+C,QAAD,EAAYC,OAAZ,CAAZ,EAAmCxiD,CAAnC,CADY,EAE7B8M,iBAAiB,CAAChJ,SAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,EAAoB9D,CAApB,CAFY,CAA3B;AAAA,UAACuZ,QAAQ,GAAA5V,EAAA,CAAA,CAAA,CAAT;AAAA,UAAW6V,OAAO,QAAlB,CAAA;;MAIN,IAAIipC,eAAe,GAAG,MAAtB,CAAA;;MAEA,IAAI,CAACZ,QAAL,EAAe;AACX,QAAA,IAAMa,KAAK,GAAG1lD,IAAI,CAACua,GAAL,CAAS,EAAT,EAAa2lC,OAAQ,GAAG,CAAxB,EAA2BC,OAAQ,GAAG,CAAtC,CAAd,CAAA;QACA,IAAMwF,SAAS,GAAe,EAA9B,CAAA;;QAEA,KAAK,IAAI95C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI65C,KAArB,EAA4B,EAAE75C,CAA9B,EAAiC;UAC7B,IAAMiS,GAAG,GAAG9d,IAAI,CAAC+nB,EAAL,GAAU,CAAV,GAAc29B,KAAd,GAAsB75C,CAAlC,CAAA;AACA85C,UAAAA,SAAS,CAACr5C,IAAV,CAAe,CACX4zC,OAAQ,GAAG,CAACA,OAAQ,GAAGnuC,IAAZ,IAAqB/R,IAAI,CAAC4oB,GAAL,CAAS9K,GAAT,CADrB,EAEXqiC,OAAQ,GAAG,CAACA,OAAQ,GAAGpuC,IAAZ,IAAqB/R,IAAI,CAACopB,GAAL,CAAStL,GAAT,CAFrB,CAAf,CAAA,CAAA;AAIH,SAAA;;QACD6nC,SAAS,CAACr5C,IAAV,CAAe,CAAC4zC,OAAD,EAAW,CAAC,CAAZ,CAAf,CAAA,CAAA;QACAyF,SAAS,CAACr5C,IAAV,CAAe,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAf,CAAA,CAAA;AACAq5C,QAAAA,SAAS,CAACr5C,IAAV,CAAe,CAAC,CAAC,CAAF,EAAK6zC,OAAQ,GAAG,CAAX,GAAe,CAApB,CAAf,CAAA,CAAA;AACAwF,QAAAA,SAAS,CAACr5C,IAAV,CAAe,CAAC4zC,OAAQ,GAAG,CAAX,GAAe,CAAhB,EAAmBC,OAAQ,GAAG,CAAX,GAAe,CAAlC,CAAf,CAAA,CAAA;AACAwF,QAAAA,SAAS,CAACr5C,IAAV,CAAe,CAAC4zC,OAAQ,GAAG,CAAX,GAAe,CAAhB,EAAmB,CAAC,CAApB,CAAf,CAAA,CAAA;QACAyF,SAAS,CAACr5C,IAAV,CAAe,CAAC4zC,OAAD,EAAW,CAAC,CAAZ,CAAf,CAAA,CAAA;QAEAuF,eAAe,GAAG,UAAA7lD,CAAAA,MAAA,CAAW+lD,SAAS,CAAC5jD,GAAV,CAAc,UAAA6J,GAAA,EAAO;AAAA,UAAA,OAAA,GAAGhM,MAAH,CAAGgM,GAAG,CAAC,CAAD,CAAN,EAAe,KAAf,CAAehM,CAAAA,MAAf,CAAegM,GAAG,CAAC,CAAD,CAAlB,EAAqB,IAArB,CAAA,CAAA;AAAyB,SAA9C,EAAgDtJ,IAAhD,CAAqD,IAArD,CAAX,KAAA,CAAlB,CAAA;AACH,OAAA;;MACD2iD,QAAQ,CAAC34C,IAAT,CAAcsuB,mBAAA,MAAA;AAAKC,QAAAA,GAAG,EAAC;AAAcG,QAAAA,SAAS,EAAE1kB,MAAM,CAAC,cAAD,EAAiB,cAAjB;AAAkCJ,QAAAA,KAAK,EAAE;UAC3F3K,KAAK,EAAE,GAAA3L,MAAA,CAAGsgD,OAAQ,GAAG,CAAd,EAAmB,IAAnB,CADoF;UAE3F10C,MAAM,EAAE,GAAA5L,MAAA,CAAGugD,OAAQ,GAAG,CAAd,EAAmB,IAAnB,CAFmF;AAG3FQ,UAAAA,QAAQ,EAAE8E,eAHiF;UAI3Fn4C,SAAS,EAAE,YAAa1N,CAAAA,MAAb,CAAa,CAACsC,IAAD,GAAQqa,QAArB,EAAoC,MAApC,CAAoC3c,CAAAA,MAApC,CAAoC,CAACqC,GAAD,GAAOua,OAA3C,EAAyD,MAAzD,CAAyD5c,CAAAA,MAAzD,CAAyD0Z,aAAa,CAACxS,SAAD,CAAtE,CAAA;AAJgF,SAAA;OAAjF,CAAd,CAAA,CAAA;AAMH,KAAA;;AACD,IAAA,IAAI+9C,QAAJ,EAAc;MACJ,IAAAzoC,EAAA,GAKFxB,OAAO,CAAAxQ,aAAA,CAAA,CAAE9D,IAAF,EAAQ+P,IAAR,EAAckH,IAAd,EAAoBC,IAApB,CAAA,EAA6BhR,KAA7B,MAAA,CAAA,CALL;AAAA,UACKo5C,QAAQ,GAAAxpC,EAAA,CAAA7Q,KADb;AAAA,UAEMs6C,SAAS,GAAAzpC,EAAA,CAAA5Q,MAFf;AAAA,UAGIs6C,SAAO,GAAA1pC,EAAA,CAAAla,IAHX;AAAA,UAIG6jD,QAAM,GAAA3pC,EAAA,CAAAna,GAJT,CAAA;;AAMN,MAAA,IAAIkjD,SAAS,IAAIpE,MAAb,IAAuBmE,OAA3B,EAAoC;AAChC,QAAA,IAAMS,SAAS,GAAGT,OAAO,GAAG14C,KAAK,CAACuM,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAH,GAAuBvM,KAAhD,CAAA;QACAy4C,QAAQ,CAAC34C,IAAT,CAAcsuB,mBAAA,MAAA;AAAKC,UAAAA,GAAG,EAAC;AAAWG,UAAAA,SAAS,EAAE1kB,MAAM,CAAC,WAAD,EAAc,cAAd;AAA+BJ,UAAAA,KAAK,EAAE;AACrF3K,YAAAA,KAAK,EAAE,EAAG3L,CAAAA,MAAH,CAAGgmD,QAAH,EAAe,IAAf,CAD8E;AAErFp6C,YAAAA,MAAM,EAAE,EAAG5L,CAAAA,MAAH,CAAGimD,SAAH,EAAgB,IAAhB,CAF6E;AAGrFv4C,YAAAA,SAAS,EAAE,YAAA,CAAA1N,MAAA,CAAakmD,SAAb,EAAoB,MAApB,CAAA,CAAoBlmD,MAApB,CAA2BmmD,QAA3B,EAAsC,KAAtC,CAH0E;YAIrFpF,QAAQ,EAAE,UAAA/gD,CAAAA,MAAA,CAAW+lD,SAAS,CAAC5jD,GAAV,CAAc,UAAA6J,GAAA,EAAG;cAAI,OAAA,EAAA,CAAAhM,MAAA,CAAGgM,GAAG,CAAC,CAAD,CAAH,GAASk6C,SAAZ,EAAmB,KAAnB,EAAmBlmD,MAAnB,CAAyBgM,GAAG,CAAC,CAAD,CAAH,GAASm6C,QAAlC,EAAwC,IAAxC,CAAA,CAAA;AAA4C,aAAjE,EAAmEzjD,IAAnE,CAAwE,IAAxE,CAAX,EAA2F,GAA3F,CAAA;AAJ2E,WAAA;SAA3E,CAAd,CAAA,CAAA;AAMH,OAAA;AACJ,KAAA;;AACD,IAAA,IAAIyiD,cAAJ,EAAoB;MACf,CAAC,UAAD,EAAa,YAAb,CAAA,CAAqC1rC,OAArC,CAA6C,UAAA2sC,aAAA,EAAa;AACvD,QAAA,IAAMh9C,IAAI,GAAG+7C,cAAc,CAACiB,aAAD,CAA3B,CAAA;AACA,QAAA,IAAM9uC,YAAY,GAAG8uC,aAAa,KAAK,YAAvC,CAAA;;QAEA,IAAIh9C,IAAI,CAAC6nB,MAAT,EAAiB;AACb6F,UAAAA,KAAK,CAACpqB,IAAN,CAAUqK,KAAV,CAAA+f,KAAA,EAAc1tB,IAAI,CAACi3B,IAAL,CAAUhP,QAAV,CAAmBlvB,GAAnB,CAAuB,UAACoC,EAAD,EAAU0H,CAAV,EAAW;AAAR,YAAA,IAAAD,GAAG,GAAAzH,EAAA,CAAAyH,GAAH,CAAA;AACpC,YAAA,IAAMq6C,QAAQ,GAAG1/C,KAAK,CAACuJ,iBAAiB,CACpChJ,SADoC,EACzBoQ,YAAY,GAAG,CAAC,CAAD,EAAItL,GAAJ,CAAH,GAAc,CAACA,GAAD,EAAM,CAAN,CADD,EACW5I,CADX,CAAlB,EACiC,CAACd,IAAD,EAAOD,GAAP,CADjC,CAAtB,CAAA;AAEA,YAAA,IAAMikD,QAAQ,GAAG3/C,KAAK,CAACuJ,iBAAiB,CACpChJ,SADoC,EACzBoQ,YAAY,GAAG,CAAC3L,KAAD,EAAQK,GAAR,CAAH,GAAkB,CAACA,GAAD,EAAMJ,MAAN,CADL,EACoBxI,CADpB,CAAlB,EAC0C,CAACd,IAAD,EAAOD,GAAP,CAD1C,CAAtB,CAAA;YAGA,OAAOqpC,UAAU,CACb1Q,KADa,EACN,EADM,EACFqrB,QADE,EACQC,QADR,EACkBn0C,IADlB,EAEb,OAAAnS,MAAA,CAAOomD,aAAP,EAA2B,MAA3B,CAAA,CAA2BpmD,MAA3B,CAA2BiM,CAA3B,CAFa,EAEmB,WAFnB,CAAjB,CAAA;AAGH,WATa,CAAd,CAAA,CAAA;AAUH,SAAA;;QACD,IAAI7C,IAAI,CAAC4pB,OAAT,EAAkB;AACd8D,UAAAA,KAAK,CAACpqB,IAAN,CAAAqK,KAAA,CAAA+f,KAAA,EAAc1tB,IAAI,CAAColB,MAAL,CAAYrsB,GAAZ,CAAgB,UAACoC,EAAD,EAAU0H,CAAV,EAAW;AAAR,YAAA,IAAAD,GAAG,GAAAzH,EAAA,CAAAyH,GAAH,CAAA;AAC7B,YAAA,IAAMq6C,QAAQ,GAAG1/C,KAAK,CAACuJ,iBAAiB,CACpChJ,SADoC,EACzBoQ,YAAY,GAAG,CAAC,CAAD,EAAItL,GAAJ,CAAH,GAAc,CAACA,GAAD,EAAM,CAAN,CADD,EACW5I,CADX,CAAlB,EACiC,CAACd,IAAD,EAAOD,GAAP,CADjC,CAAtB,CAAA;AAEA,YAAA,IAAMikD,QAAQ,GAAG3/C,KAAK,CAACuJ,iBAAiB,CACpChJ,SADoC,EACzBoQ,YAAY,GAAG,CAAC3L,KAAD,EAAQK,GAAR,CAAH,GAAkB,CAACA,GAAD,EAAMJ,MAAN,CADL,EACoBxI,CADpB,CAAlB,EAC0C,CAACd,IAAD,EAAOD,GAAP,CAD1C,CAAtB,CAAA;AAGA,YAAA,OAAOqpC,UAAU,CACb1Q,KADa,EACN,EADM,EACFqrB,QADE,EACQC,QADR,EACkBn0C,IADlB,EAEb,aAAA,CAAOi0C,aAAP,EAAoB,QAApB,CAAoBpmD,CAAAA,MAApB,CAA6BiM,CAA7B,CAFa,EAEqB,WAFrB,EAEkC,QAFlC,EAE4C,MAF5C,CAAjB,CAAA;AAGH,WATa,CAAd,CAAA,CAAA;AAUH,SAAA;OA3BJ,CAAA,CAAA;AA6BJ,KAAA;;AACD,IAAA,OACOzB,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAA66C,QAAA,EACA,IADA,CAAA,EACAvuB,KADA,EAEL,IAFK,CADP,CAAA;GAnOO;AAwOXkT,EAAAA,oBAAoB,EAApB,UAAqB1jC,QAArB,EAAoCjD,CAApC,EAA0C;IACtC,OAAOA,CAAC,CAACqB,UAAF,IAAgB,CAACrB,CAAC,CAACqB,UAAF,CAAa0M,MAAb,CAAoB4Q,YAApB,CAAiC,OAAjC,KAA6C,EAA9C,EAAkDvf,OAAlD,CAA0D,MAA1D,CAAoE,GAAA,CAAC,CAA5F,CAAA;GAzOO;AA2OX+C,EAAAA,SAAS,EAAT,UAAUc,QAAV,EAA8EjD,CAA9E,EAAoF;AAChF,IAAA,IAAM3D,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;AAEI,IAAA,IAAA6E,EAAA,GACA7E,KAAK,CADc6mD,YAAnB;QAAAA,YAAY,GAAGhiD,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,KAAf,CAAA;;AAGJ,IAAA,IAAIgiD,YAAJ,EAAkB;AACd,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAED,IAAA,OAAO,KAAKrc,gBAAL,CAAsB5jC,QAAtB,EAAgCjD,CAAhC,CAAP,CAAA;GArPO;AAuPXsC,EAAAA,IAAI,EAAJ,UAAKW,QAAL,EAAyEjD,CAAzE,EAA+E;AAC3E,IAAA,OAAO,IAAK8mC,CAAAA,WAAL,CAAiB7jC,QAAjB,EAAyB9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAO6D,CAAP,CAAA,EAAQ;AAAEmjD,MAAAA,YAAY,EAAE,IAAA;AAAhB,KAAR,CAAzB,CAAP,CAAA;GAxPO;AA0PXzc,EAAAA,OAAO,EAAP,UAAQzjC,QAAR,EAA4EjD,CAA5E,EAAkF;AAC9E,IAAA,OAAO,KAAK+mC,cAAL,CAAoB9jC,QAApB,EAA8BjD,CAA9B,CAAP,CAAA;GA3PO;AA6PX6mC,EAAAA,gBAAgB,EAAhB,UAAiB5jC,QAAjB,EAAqFjD,CAArF,EAA2F;AACvF,IAAA,IAAMW,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AACM,IAAA,IAAAO,EAAA,GAAsC+B,QAAQ,CAAC5G,KAA/C;AAAA,QAAEslD,eAAe,GAAAzgD,EAAA,CAAAygD,eAAjB;AAAA,QAAmBD,cAAc,GAAAxgD,EAAA,CAAAwgD,cAAjC,CAAA;AACE,IAAA,IAAA3zC,MAAM,GAAoBpN,KAAK,CAAAoN,MAA/B;AAAA,QAAQzF,KAAK,GAAa3H,KAAK,CAAA2H,KAA/B;AAAA,QAAeC,MAAM,GAAK5H,KAAK,OAA/B,CAAA;AACR,IAAA,IAAMswC,WAAW,GAAGjxC,CAAC,CAACqB,UAAF,GAAerB,CAAC,CAACqB,UAAF,CAAa0M,MAA5B,GAAqC,IAAzD,CAAA;IACA,IAAMgqB,SAAS,GAAIkZ,WAAW,IAAIA,WAAW,CAACtyB,YAAZ,CAAyB,OAAzB,CAAhB,IAAsD,EAAxE,CAAA;AACA,IAAA,IAAMrd,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;AACA,IAAA,IAAMo8C,QAAQ,GAAGgB,WAAW,CAAC3wC,MAAD,EAAUzF,KAAV,EAAiBC,MAAjB,EAAyBo5C,eAAe,IAAI,OAA5C,EAAqDD,cAArD,CAA5B,CAAA;;IAEA,IAAI,CAAChE,QAAL,EAAe;AACX,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACO,IAAA,IAAAmB,QAAQ,GAAkBnB,QAAQ,CAAAmB,QAAlC;AAAA,QAAUx8C,IAAI,GAAYq7C,QAAQ,CAAAr7C,IAAlC;AAAA,QAAgBkH,KAAK,GAAKm0C,QAAQ,MAAlC,CAAA;AACR,IAAA,IAAM18C,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,aAAX,EAA0Buc,UAAU,CAAcvc,QAAd,EAAwBjD,CAAxB,EAA2B;AACtF49C,MAAAA,QAAQ,EAAEv7C,IAD4E;AAEtFk/C,MAAAA,SAAS,EAAE1C,QAF2E;AAGtFt1C,MAAAA,KAAK,EAAEA,KAAK,CAACzK,GAAN,CAAU,UAAA6J,GAAA,EAAO;QAAA,OAAAA,GAAG,CAACA,GAAJ,CAAA;OAAjB,CAAA;AAH+E,KAA3B,CAApC,CAA3B,CAAA;;IAMA,IAAI3H,MAAM,KAAK,KAAf,EAAsB;MAClBM,KAAK,CAAC8hD,WAAN,GAAoB,KAApB,CAAA;AACA,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD9hD,IAAAA,KAAK,CAAC8oC,SAAN,GAAkBrS,SAAS,IAAIA,SAAS,CAAC34B,OAAV,CAAkB,cAAlB,CAAoC,GAAA,CAAC,CAApE,CAAA;IACAkC,KAAK,CAAC+hD,MAAN,GAAetrB,SAAS,CAAC34B,OAAV,CAAkB,WAAlB,CAAiC,GAAA,CAAC,CAAjD,CAAA;AACAkC,IAAAA,KAAK,CAACgiD,MAAN,GAAevrB,SAAS,CAAC34B,OAAV,CAAkB,WAAlB,CAAA,GAAiC,CAAC,CAAlC,IAAuC24B,SAAS,CAAC34B,OAAV,CAAkB,cAAlB,CAAA,GAAoC,CAAC,CAA3F,CAAA;AACAkC,IAAAA,KAAK,CAACggD,SAAN,GAAkBrQ,WAAW,GAAG/yC,QAAQ,CAAC+yC,WAAW,CAACtyB,YAAZ,CAAyB,iBAAzB,CAAD,EAA8C,EAA9C,CAAX,GAA+D,CAAC,CAA7F,CAAA;IACArd,KAAK,CAACo8C,QAAN,GAAiBA,QAAjB,CAAA;IACAp8C,KAAK,CAAC8hD,WAAN,GAAoB,IAApB,CAAA;IACAziD,KAAK,CAACkhD,aAAN,GAAsBhD,QAAtB,CAAA;AACAj7C,IAAAA,YAAY,CAACX,QAAD,EAAWjD,CAAX,CAAZ,CAAA;AAEA,IAAA,OAAO,IAAP,CAAA;GA7RO;AA+RX8mC,EAAAA,WAAW,EAAX,UAAY7jC,QAAZ,EAAiGjD,CAAjG,EAAuG;;;AAC3F,IAAA,IAAAsB,KAAK,GAAkCtB,CAAC,CAAAsB,KAAxC;AAAA,QAAOC,aAAa,GAAmBvB,CAAC,CAAAuB,aAAxC;AAAA,QAAsB4hD,YAAY,GAAKnjD,CAAC,aAAxC,CAAA;;AAER,IAAA,IAAI,CAACsB,KAAK,CAAC8hD,WAAX,EAAwB;AACpB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACK,IAAA1/C,KAAqDpC,KAArD;AAAA,QAAE8oC,SAAS,GAAA1mC,EAAA,CAAA0mC,SAAX;AAAA,QAAaiZ,MAAM,GAAA3/C,EAAA,CAAA2/C,MAAnB;AAAA,QAAqBC,MAAM,YAA3B;AAAA,QAA6BhC,SAAS,eAAtC;AAAA,QAAwC5D,QAAQ,cAAhD,CAAA;;IAIN,IAAI,CAACA,QAAL,EAAe;AACX,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,IAAMrhD,KAAK,GAAG8e,QAAQ,CAAClY,QAAQ,CAAC5G,KAAV,EAAiB,WAAjB,CAAtB,CAAA;AAEQ,IAAA,IAAA+oB,SAAS,GAAK/oB,KAAK,CAAA+oB,SAAnB,CAAA;IACR,IAAIziB,KAAK,GAAG,CAAZ,CAAA;IACA,IAAIC,KAAK,GAAG,CAAZ,CAAA;AAEA,IAAA,IAAM2gD,iBAAiB,GAAGhiD,aAAa,CAACW,SAAxC,CAAA;AACA,IAAA,IAAMshD,YAAY,GAAG7/C,WAAW,CAAC3D,CAAD,CAAhC,CAAA;;IAEA,IAAImjD,YAAY,IAAII,iBAApB,EAAuC;AACnCriD,MAAAA,EAAiB,GAAAqiD,iBAAiB,CAACpa,cAAnC,EAACxmC,KAAK,GAAAzB,EAAA,CAAA,CAAA,CAAN,EAAQ0B,KAAK,GAAA1B,EAAA,CAAA,CAAA,CAAb,CAAA;AACH,KAFD,MAEO;MACFyB,KAAK,GAAW6gD,YAAY,CAAvB,CAAuB,CAA5B,EAAO5gD,KAAK,GAAI4gD,YAAY,EAAA,CAA5B,CAAA;AACJ,KAAA;;AAED,IAAA,IAAMC,SAAS,GAAG,CAAC9gD,KAAD,EAAQC,KAAR,CAAlB,CAAA;AAEA,IAAA,IAAMjC,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AACQ,IAAA,IAAA2H,KAAK,GAAa3H,KAAK,CAAA2H,KAAvB;AAAA,QAAOC,MAAM,GAAK5H,KAAK,CAAA4H,MAAvB,CAAA;IACR,IAAMm7C,gBAAgB,GAAG,CAACJ,MAAD,IAAW,CAAClZ,SAAZ,IAAyB,CAACiZ,MAAnD,CAAA;AAEI,IAAA,IAAMzF,QAAQ,GAGdF,QAAQ,CAAAr7C,IAHR;AAAA,QACOw7C,SAAS,GAEhBH,QAAQ,CAAAn0C,KAHR;AAAA,QAEAy1C,QAAQ,GACRtB,QAAQ,SAHR,CAAA;IAIJ,IAAMn0C,KAAK,GAAGs0C,SAAS,CAAC/+C,GAAV,CAAc,UAAA6J,GAAA,EAAO;MAAA,OAAAA,GAAG,CAACA,GAAJ,CAAA;AAAO,KAA5B,CAAd,CAAA;;AAEA,IAAA,IAAI+6C,gBAAJ,EAAsB;MAClB/gD,KAAK,GAAG,CAACA,KAAT,CAAA;MACAC,KAAK,GAAG,CAACA,KAAT,CAAA;AACH,KAAA;;AACD,IAAA,IAAM+gD,KAAK,GAAG,CAACvZ,SAAD,IAAcyT,SAAS,CAACyD,SAAD,CAAT,CAAqBt8C,SAArB,KAAmC,MAA/D,CAAA;IACA,IAAM84C,MAAM,GAAGF,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,KAAK,MAApD,CAAA;AACA,IAAA,IAAI4C,KAAK,GAAG3C,SAAS,CAAC/+C,GAAV,CAAc,YAAM;AAAA,MAAA,OAAA,CAAC,CAAD,EAAI,CAAJ,CAAA,CAAA;AAAM,KAA1B,CAAZ,CAAA;;AAEA,IAAA,IAAIsrC,SAAS,IAAI,CAACuZ,KAAlB,EAAyB;AACf,MAAA,IAAAxqC,EAAA,GAA2B0kC,SAAS,CAACyD,SAAD,CAApC;AAAA,UAAEl1B,UAAU,GAAAjT,EAAA,CAAAiT,UAAZ;AAAA,UAAcC,QAAQ,GAAAlT,EAAA,CAAAkT,QAAtB,CAAA;MACN,IAAM9kB,IAAI,GAAG,CACT5E,KAAK,GAAG5F,IAAI,CAACyc,GAAL,CAAS4S,UAAT,CADC,EAETxpB,KAAK,GAAG7F,IAAI,CAACyc,GAAL,CAAS6S,QAAT,CAFC,CAAb,CAAA;AAIAm0B,MAAAA,KAAK,GAAGD,cAAc,CAAC1C,SAAD,EAAYyD,SAAZ,EAAuB/5C,IAAvB,EAA6Bu2C,MAA7B,EAAqC14B,SAArC,CAAtB,CAAA;KANJ,MAOO,IAAIu+B,KAAJ,EAAW;AACdnD,MAAAA,KAAK,GAAGj3C,KAAK,CAACzK,GAAN,CAAU,YAAM;AAAA,QAAA,OAAA,CAAC6D,KAAD,EAAQC,KAAR,CAAA,CAAA;AAAc,OAA9B,CAAR,CAAA;AACH,KAAA;;IACD,IAAM2kB,SAAS,GAAehe,KAAK,CAACzK,GAAN,CAAU,UAAC6J,GAAD,EAAMC,CAAN,EAAY;MAAA,OAAAnE,IAAI,CAACkE,GAAD,EAAM63C,KAAK,CAAC53C,CAAD,CAAX,CAAJ,CAAA;AAAmB,KAAzC,CAA9B,CAAA;;IACA,IAAMg7C,UAAU,GAAAz8C,aAAA,CAAA,EAAA,EAAOogB,SAAP,EAAgB,IAAhB,CAAhB,CAAA;;IAEA5mB,KAAK,CAACmhD,cAAN,GAAuB,IAAvB,CAAA;AACA,IAAA,IAAM/D,QAAQ,GAAGL,QAAQ,CAACr7C,IAAT,KAAkB,QAAnC,CAAA;AACA,IAAA,IAAMwhD,SAAS,GAAGnG,QAAQ,CAACr7C,IAAT,KAAkB,SAApC,CAAA;;IAEA,IAAI07C,QAAQ,IAAI8F,SAAhB,EAA2B;AACvB,MAAA,IAAMC,SAAS,GAAGnsC,OAAO,CAAC4P,SAAD,CAAzB,CAAA;AACA,MAAA,IAAMmiB,EAAE,GAAG3sC,IAAI,CAACyc,GAAL,CAASsqC,SAAS,CAACl6C,MAAV,GAAmBk6C,SAAS,CAAC9kD,GAAtC,CAAX,CAAA;AACA,MAAA,IAAM2qC,EAAE,GAAG5sC,IAAI,CAACyc,GAAL,CAASqqC,SAAS,GAAGC,SAAS,CAAChsC,KAAV,GAAkBgsC,SAAS,CAAC7kD,IAA/B,GAAsCyqC,EAAxD,CAAX,CAAA;MACA,IAAM9/B,MAAM,GAAG2d,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAA,GAAkBmiB,EAAjC,CAAA;MACA,IAAMzqC,IAAI,GAAGsoB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAA,GAAkBoiB,EAA/B,CAAA;MACA,IAAM7xB,KAAK,GAAGyP,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAA,GAAkBoiB,EAAhC,CANuB;;AASvB,MAAA,IAAIoU,QAAJ,EAAc;QACV6F,UAAU,CAACv6C,IAAX,CAAgB,CAACyO,KAAD,EAAQgsC,SAAS,CAACl6C,MAAlB,CAAhB,CAAA,CAAA;AACA42C,QAAAA,KAAK,CAACn3C,IAAN,CAAW,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAA,CAAA;AACH,OAZsB;;;MAcvBu6C,UAAU,CAACv6C,IAAX,CAAgB,CAACy6C,SAAS,CAAC7kD,IAAX,EAAiB2K,MAAjB,CAAhB,CAAA,CAAA;MACA42C,KAAK,CAACn3C,IAAN,CAAW,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAA,CAfuB;;MAiBvBu6C,UAAU,CAACv6C,IAAX,CAAgB,CAACpK,IAAD,EAAO6kD,SAAS,CAACl6C,MAAjB,CAAhB,CAAA,CAAA;AACA42C,MAAAA,KAAK,CAACn3C,IAAN,CAAW,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAA,CAAA;AACH,KAAA;;AAED,IAAA,IAAMoiB,UAAU,GAAGqU,oBAAoB,CACnC,CAACzjC,KAAK,CAAC0nD,wBAAN,IAAkC,EAAnC,EAAuCjlD,GAAvC,CAA2C,UAAAgkB,CAAA,EAAK;MAAA,OAAAtF,eAAe,CAAC,EAAG7gB,CAAAA,MAAH,CAAGmmB,CAAH,CAAD,EAASva,MAAT,CAAf,CAAA;AAA+B,KAA/E,CADmC,EAEnC,CAAClM,KAAK,CAAC2nD,sBAAN,IAAgC,EAAjC,EAAqCllD,GAArC,CAAyC,UAAAgkB,CAAA,EAAK;MAAA,OAAAtF,eAAe,CAAC,EAAG7gB,CAAAA,MAAH,CAAGmmB,CAAH,CAAD,EAASxa,KAAT,CAAf,CAAA;AAA8B,KAA5E,CAFmC,EAGnCA,KAHmC,EAG3BC,MAH2B,CAAvC,CAAA;IAKA,IAAI07C,WAAW,GAAa,EAA5B,CAAA;IACA,IAAIC,WAAW,GAAa,EAA5B,CAAA;;IAEA,IAAInG,QAAQ,IAAI8F,SAAhB,EAA2B;AACvBI,MAAAA,WAAW,GAAG,CAACL,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAD,EAAmBA,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAnB,CAAd,CAAA;AACAM,MAAAA,WAAW,GAAG,CAACN,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAD,EAAmBA,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAnB,CAAd,CAAA;KAFJ,MAGO,IAAI9F,MAAJ,EAAY;MACf,IAAMqG,SAAS,GAAG,CAACP,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAA1B,EAA+BA,UAAU,CAAC,CAAD,CAAzC,EAA8CA,UAAU,CAAC,CAAD,CAAxD,CAAlB,CAAA;MACA,IAAMQ,WAAS,GAAG,CAAC5D,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBA,KAAK,CAAC,CAAD,CAA1B,EAA+BA,KAAK,CAAC,CAAD,CAApC,CAAlB,CAAA;MAEAyD,WAAW,GAAGE,SAAS,CAACn+C,MAAV,CAAiB,UAAC8jB,CAAD,EAAIlhB,CAAJ;AAAU,QAAA,OAAAw7C,WAAS,CAACx7C,CAAD,CAAT,CAAa,CAAb,CAAA,CAAA;AAAe,OAA1C,CAA4C9J,CAAAA,GAA5C,CAAgD,UAAA6J,GAAA,EAAG;QAAI,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,OAA7D,CAAd,CAAA;MACAu7C,WAAW,GAAGC,SAAS,CAACn+C,MAAV,CAAiB,UAAC8jB,CAAD,EAAIlhB,CAAJ;AAAU,QAAA,OAAAw7C,WAAS,CAACx7C,CAAD,CAAT,CAAa,CAAb,CAAA,CAAA;AAAe,OAA1C,CAA4C9J,CAAAA,GAA5C,CAAgD,UAAA6J,GAAA,EAAG;QAAI,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,OAA7D,CAAd,CAAA;AACH,KANM,MAMA;MACHs7C,WAAW,GAAGL,UAAU,CAAC59C,MAAX,CAAkB,UAAC8jB,CAAD,EAAIlhB,CAAJ;AAAU,QAAA,OAAA43C,KAAK,CAAC53C,CAAD,CAAL,CAAS,CAAT,CAAA,CAAA;AAAW,OAAvC,CAAyC9J,CAAAA,GAAzC,CAA6C,UAAA6J,GAAA,EAAG;QAAI,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,OAA1D,CAAd,CAAA;MACAu7C,WAAW,GAAGN,UAAU,CAAC59C,MAAX,CAAkB,UAAC8jB,CAAD,EAAIlhB,CAAJ;AAAU,QAAA,OAAA43C,KAAK,CAAC53C,CAAD,CAAL,CAAS,CAAT,CAAA,CAAA;AAAW,OAAvC,CAAyC9J,CAAAA,GAAzC,CAA6C,UAAA6J,GAAA,EAAG;QAAI,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,OAA1D,CAAd,CAAA;AACH,KAAA;;AACD,IAAA,IAAM07C,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAA;;IACM,IAAAjqC,KAGF6iB,eAAe,CACfxR,UADe,EAEfpvB,KAAK,CAACioD,gBAAN,IAA0B;AAAErlD,MAAAA,IAAI,EAAE,CAAR;AAAWD,MAAAA,GAAG,EAAE,CAAhB;AAAmB8Y,MAAAA,KAAK,EAAExP,KAA1B;AAAiCsB,MAAAA,MAAM,EAAErB,MAAAA;AAAzC,KAFX,EAGf07C,WAHe,EAIfC,WAJe,EAKf,CALe,CAHb;AAAA,QACUn2B,kBAAkB,gBAD5B;AAAA,QAEQD,gBAAgB,cAFxB,CAAA;;AAUN,IAAA,IAAIy2B,WAAW,GAAGx2B,kBAAkB,CAACxd,MAArC,CAAA;AACA,IAAA,IAAIi0C,WAAW,GAAG12B,gBAAgB,CAACvd,MAAnC,CAAA;;IAEA,IAAIwd,kBAAkB,CAAC4B,OAAvB,EAAgC;AAC5B00B,MAAAA,UAAU,CAAC,CAAD,CAAV,IAAiBE,WAAjB,CAAA;AACH,KAAA;;IACD,IAAIz2B,gBAAgB,CAAC6B,OAArB,EAA8B;AAC1B00B,MAAAA,UAAU,CAAC,CAAD,CAAV,IAAiBG,WAAjB,CAAA;AACH,KAAA;;IACD,IAAI,CAACX,SAAS,IAAI9F,QAAd,KAA2ByC,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,MAAgB,CAA3C,IAAgDA,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAgB,KAAA,CAApE,EAAuE;AACnE,MAAA,IAAMsD,SAAS,GAAGnsC,OAAO,CAAC4P,SAAD,CAAzB,CAAA;MACA,IAAIuJ,EAAE,GAAGgzB,SAAS,CAACl6C,MAAV,GAAmBk6C,SAAS,CAAC9kD,GAAtC,CAAA;AACA,MAAA,IAAI4xB,EAAE,GAAGizB,SAAS,GAAGC,SAAS,CAAChsC,KAAV,GAAkBgsC,SAAS,CAAC7kD,IAA/B,GAAsC6xB,EAAxD,CAAA;MAGA,IAAM2zB,SAAS,GAAG32B,gBAAgB,CAAC6B,OAAjB,GACZ5yB,IAAI,CAACyc,GAAL,CAASgrC,WAAT,CADY,GAEX12B,gBAAgB,CAACiP,SAAjB,KAA+B,CAA/B,GAAmC,CAACynB,WAApC,GAAkDA,WAFzD,CAAA;MAGA,IAAME,SAAS,GAAG32B,kBAAkB,CAAC4B,OAAnB,GACZ5yB,IAAI,CAACyc,GAAL,CAAS+qC,WAAT,CADY,GAEXx2B,kBAAkB,CAACgP,SAAnB,KAAiC,CAAjC,GAAqC,CAACwnB,WAAtC,GAAoDA,WAF3D,CAAA;AAGA3zB,MAAAA,EAAE,IAAI6zB,SAAN,CAAA;AACA3zB,MAAAA,EAAE,IAAI4zB,SAAN,CAAA;;AAEA,MAAA,IAAI3G,QAAJ,EAAc;AACVjtB,QAAAA,EAAE,GAAGtB,sBAAsB,CAAC1B,gBAAD,EAAmBC,kBAAnB,CAAtB,GAA+D,CAA/D,GAAmE+C,EAAnE,GAAwEF,EAA7E,CAAA;AACAA,QAAAA,EAAE,GAAGE,EAAL,CAAA;AACH,OAAA;;AACD,MAAA,IAAM/F,MAAM,GAAG64B,UAAU,CAAC,CAAD,CAAzB,CAAA;MAEAA,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAmB74B,GAAAA,MAAM,CAAC,CAAD,CAAN,GAAY+F,EAA/B,CAAA;MACA8yB,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAmB74B,GAAAA,MAAM,CAAC,CAAD,CAAN,GAAY6F,EAA/B,CAAA;MACAgzB,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAmB74B,GAAAA,MAAM,CAAC,CAAD,CAAN,GAAY+F,EAA/B,CAAA;MACA8yB,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAmB74B,GAAAA,MAAM,CAAC,CAAD,CAAN,GAAY6F,EAA/B,CAAA;AACH,KAzBD,MAyBO,IAAIktB,MAAM,IAAI14B,SAAV,IAAuBglB,SAA3B,EAAsC;AACnC,MAAA,IAAApU,EAAA,GAAkBuoB,cAAc,CAACV,SAAD,CAAhC;AAAA,UAAC8G,OAAK,GAAA3uB,EAAA,CAAA,CAAA,CAAN;AAAA,UAAQ4uB,QAAM,GAAA5uB,EAAA,CAAA,CAAA,CAAd,CAAA;;MACN,IAAM7Q,KAAK,GAAGw/B,OAAK,IAAIC,QAAT,GAAkBD,OAAK,GAAGC,QAA1B,GAAmC,CAAjD,CAAA;AACA,MAAA,IAAMhK,QAAQ,GAAGiD,SAAS,CAACyD,SAAD,CAA1B,CAAA;AACA,MAAA,IAAMt8C,SAAS,GAAG41C,QAAQ,CAAC51C,SAAT,IAAuB,EAAzC,CAAA;MACA,IAAIhG,GAAG,GAAG4kD,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAV,CAAA;MACA,IAAIh6C,MAAM,GAAGg6C,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAb,CAAA;MACA,IAAI3kD,IAAI,GAAG2kD,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAX,CAAA;MACA,IAAI9rC,KAAK,GAAG8rC,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAZ,CAAA;;MAGA,IAAIW,WAAW,IAAIC,WAAnB,EAAgC;QAC5BD,WAAW,GAAGC,WAAW,GAAGr/B,KAA5B,CAAA;AACH,OAFD,MAEO;QACHq/B,WAAW,GAAGD,WAAW,GAAGp/B,KAA5B,CAAA;AACH,OAAA;;MACD,IAAIngB,SAAU,CAAC5F,OAAX,CAAmB,GAAnB,CAA0B,GAAA,CAAC,CAA/B,EAAkC;AAC9BH,QAAAA,IAAI,IAAIulD,WAAR,CAAA;OADJ,MAEO,IAAIx/C,SAAU,CAAC5F,OAAX,CAAmB,GAAnB,CAAA,GAA0B,CAAC,CAA/B,EAAkC;AACrC0Y,QAAAA,KAAK,IAAI0sC,WAAT,CAAA;AACH,OAFM,MAEA;QACHvlD,IAAI,IAAIulD,WAAW,GAAG,CAAtB,CAAA;QACA1sC,KAAK,IAAI0sC,WAAW,GAAG,CAAvB,CAAA;AACH,OAAA;;MACD,IAAIx/C,SAAU,CAAC5F,OAAX,CAAmB,GAAnB,CAA0B,GAAA,CAAC,CAA/B,EAAkC;AAC9BJ,QAAAA,GAAG,IAAIulD,WAAP,CAAA;OADJ,MAEO,IAAIv/C,SAAU,CAAC5F,OAAX,CAAmB,GAAnB,CAAA,GAA0B,CAAC,CAA/B,EAAkC;AACrCwK,QAAAA,MAAM,IAAI26C,WAAV,CAAA;AACH,OAFM,MAEA;QACHvlD,GAAG,IAAIulD,WAAW,GAAG,CAArB,CAAA;QACA36C,MAAM,IAAI26C,WAAW,GAAG,CAAxB,CAAA;AACH,OAAA;;MAED,IAAMM,kBAAgB,GAAG3G,YAAY,CAACl/C,GAAD,EAAM8Y,KAAN,EAAalO,MAAb,EAAqB3K,IAArB,CAArC,CAAA;AAEA2kD,MAAAA,UAAU,CAACxtC,OAAX,CAAmB,UAACzN,GAAD,EAAMC,CAAN,EAAO;;;QACtB1H,EAAA,GAAmB2jD,kBAAgB,CAACj8C,CAAD,CAAhB,CAAoBD,GAAvC,EAACA,GAAG,CAAC,CAAD,CAAH,QAAD,EAASA,GAAG,CAAC,CAAD,CAAH,QAAT,CAAA;OADJ,CAAA,CAAA;AAGH,KAtCM,MAsCA;AACHi7C,MAAAA,UAAU,CAACxtC,OAAX,CAAmB,UAACzN,GAAD,EAAMm8C,CAAN,EAAO;AACtB,QAAA,IAAMv9C,IAAI,GAAGi5C,KAAK,CAACsE,CAAD,CAAlB,CAAA;;AAEA,QAAA,IAAIv9C,IAAI,CAAC,CAAD,CAAR,EAAa;AACToB,UAAAA,GAAG,CAAC,CAAD,CAAH,IAAU67C,WAAV,CAAA;AACH,SAAA;;AACD,QAAA,IAAIj9C,IAAI,CAAC,CAAD,CAAR,EAAa;AACToB,UAAAA,GAAG,CAAC,CAAD,CAAH,IAAU47C,WAAV,CAAA;AACH,SAAA;OARL,CAAA,CAAA;AAUH,KAAA;;IACD,IAAMQ,cAAc,GAAGtH,aAAa,CAACx6C,QAAD,EAAWy6C,QAAX,EAAqBn2B,SAArB,CAApC,CAAA;AACA,IAAA,IAAMg6B,SAAS,GAAG,EAAA,CAAG5kD,MAAH,CAAGihD,QAAH,EAAe,GAAf,CAAA,CAAejhD,MAAf,CAAeooD,cAAc,CAAC1lD,IAAf,CAAoB2/C,QAApB,CAAf,EAA4C,GAA5C,CAAlB,CAAA;IAEAr+C,KAAK,CAACkhD,aAAN,GAAsBN,SAAtB,CAAA;;IAEA,IAAIxD,QAAQ,IAAI8F,SAAhB,EAA2B;AACvBI,MAAAA,WAAW,GAAG,CAACL,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAD,EAAmBA,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAnB,CAAd,CAAA;AACAM,MAAAA,WAAW,GAAG,CAACN,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAD,EAAmBA,UAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAnB,CAAd,CAAA;KAFJ,MAGO,IAAI9F,MAAJ,EAAY;MACf,IAAMqG,SAAS,GAAG,CAACP,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAA1B,EAA+BA,UAAU,CAAC,CAAD,CAAzC,EAA8CA,UAAU,CAAC,CAAD,CAAxD,CAAlB,CAAA;AAEAK,MAAAA,WAAW,GAAGE,SAAS,CAACrlD,GAAV,CAAc,UAAA6J,GAAA,EAAG;QAAI,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,OAA3B,CAAd,CAAA;AACAu7C,MAAAA,WAAW,GAAGC,SAAS,CAACrlD,GAAV,CAAc,UAAA6J,GAAA,EAAG;QAAI,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,OAA3B,CAAd,CAAA;AACH,KALM,MAKA;AACHs7C,MAAAA,WAAW,GAAGL,UAAU,CAAC9kD,GAAX,CAAe,UAAA6J,GAAA,EAAG;QAAI,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,OAA5B,CAAd,CAAA;AACAu7C,MAAAA,WAAW,GAAGN,UAAU,CAAC9kD,GAAX,CAAe,UAAA6J,GAAA,EAAG;QAAI,OAAAA,GAAG,CAAC,CAAD,CAAH,CAAA;AAAM,OAA5B,CAAd,CAAA;AACH,KAAA;;IACDhI,KAAK,CAACmhD,cAAN,GAAuB7kB,eAAe,CAClCxR,UADkC,EAElCpvB,KAAK,CAACioD,gBAAN,IAA0B;AAAErlD,MAAAA,IAAI,EAAE,CAAR;AAAWD,MAAAA,GAAG,EAAE,CAAhB;AAAmB8Y,MAAAA,KAAK,EAAExP,KAA1B;AAAiCsB,MAAAA,MAAM,EAAErB,MAAAA;AAAzC,KAFQ,EAGlC07C,WAHkC,EAIlCC,WAJkC,EAKlC,CALkC,CAAtC,CAAA;;AAQA,IAAA,IAAIX,iBAAJ,EAAuB;AAEf,MAAA,IAAAngD,IAAI,GAEJzC,KAAK,CAAAyC,IAFL;AAAA,UACAS,SAAS,GACTlD,KAAK,CAAAkD,SAFL,CAAA;AAGJ,MAAA,IAAM9D,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;MAEA,IAAI4hD,QAAQ,GAAGX,UAAf,CAAA;;AAEA,MAAA,IAAIlB,YAAJ,EAAkB;AACd6B,QAAAA,QAAQ,GAAG,CACPvB,SAAS,CAAC,CAAD,CAAT,GAAeY,UAAU,CAAC,CAAD,CAAzB,GAA+Bb,YAAY,CAAC,CAAD,CADpC,EAEPC,SAAS,CAAC,CAAD,CAAT,GAAeY,UAAU,CAAC,CAAD,CAAzB,GAA+Bb,YAAY,CAAC,CAAD,CAFpC,CAAX,CAAA;AAIH,OAAA;;MACDD,iBAAiB,CAACna,WAAlB,GAAgCphC,QAAQ,CAACnE,SAAD,EAAY,CAACmhD,QAAQ,CAAC,CAAD,CAAT,EAAcA,QAAQ,CAAC,CAAD,CAAtB,EAA2B,CAA3B,EAA8B,CAA9B,CAAZ,EAA8CjlD,CAA9C,CAAxC,CAAA;AACH,KAAA;;AACD4gB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,QAAX,EAAqBuc,UAAU,CAASvc,QAAT,EAAmBjD,CAAnB,EACvC7D,QAAA,CAAA;AAAAqlD,MAAAA,aAAa,EAAE,SAAf;AACA5D,MAAAA,QAAQ,EAAAA,QADR;AAEAr0C,MAAAA,KAAK,EAAEge,SAFP;AAGAg6B,MAAAA,SAAS,EAAAA,SAHT;AAIArH,MAAAA,UAAU,EAAE6K,cAJZ;AAKApiD,MAAAA,KAAK,EAAAA,KALL;AAMAC,MAAAA,KAAK,EAAAA,KAAAA;KANL,EAOGoJ,aAAa,EAAA/K,EAAA,GAAA,EAAA,EACZA,EAAA,CAAC28C,QAAQ,KAAK,MAAb,GAAsB,MAAtB,GAA+B,UAAhC,CAAA,GAA6C2D,SADjC,IAAA,GAEbvhD,CAFa,CAPhB,CADuC,CAA/B,CAAZ,CAAA;AAaA,IAAA,OAAO,IAAP,CAAA;GAhiBO;AAkiBX+mC,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAAmFjD,CAAnF,EAAyF;IACrF,IAAKgf,CAAAA,KAAL,CAAW/b,QAAX,CAAA,CAAA;AACQ,IAAA,IAAAjB,MAAM,GAAsBhC,CAAC,CAAAgC,MAA7B;AAAA,QAAQV,KAAK,GAAetB,CAAC,CAAAsB,KAA7B;AAAA,QAAegf,QAAQ,GAAKtgB,CAAC,SAA7B,CAAA;AACA,IAAA,IAAAqjD,MAAM,GAA6B/hD,KAAK,CAAA+hD,MAAxC;AAAA,QAAQD,WAAW,GAAgB9hD,KAAK,CAAA8hD,WAAxC;AAAA,QAAqBhZ,SAAS,GAAK9oC,KAAK,UAAxC,CAAA;;IAER,IAAI,CAAC8hD,WAAL,EAAkB;AACd,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACDziC,IAAAA,YAAY,CAAC1d,QAAD,EAAW,WAAX,EAAwBod,aAAa,CAAYpd,QAAZ,EAAsBjD,CAAtB,EAAyB,EAAzB,CAArC,CAAZ,CAAA;;AACA,IAAA,IAAIsgB,QAAJ,EAAc;AACV,MAAA,IAAI8pB,SAAJ,EAAe;AACXqX,QAAAA,cAAc,CAACx+C,QAAD,EAAWjD,CAAX,CAAd,CAAA;OADJ,MAEO,IAAIqjD,MAAJ,EAAY;AACf;AACAhC,QAAAA,WAAW,CAACp+C,QAAD,EAAWjD,CAAX,CAAX,CAAA;AACH,OAAA;AACJ,KAAA;;IACD,OAAOsgB,QAAQ,IAAIte,MAAnB,CAAA;GAnjBO;EAqjBXgd,KAAK,EAAL,UAAM/b,QAAN,EAAwE;AACpEA,IAAAA,QAAQ,CAACtC,KAAT,CAAekhD,aAAf,GAA+B,EAA/B,CAAA;AACA5+C,IAAAA,QAAQ,CAACtC,KAAT,CAAemhD,cAAf,GAAgC,IAAhC,CAAA;AACH,GAAA;AAxjBU,CAAf,CAAA;AA2jBA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;;AACH;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BG;;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BE;;AAEF;;;;;;;;;;;;;;;;;;AAkBE;;AAEF;;;;;;;;;;;;;;;;;;AAkBE;;AACF;;;;;;;;;;;;;;;;;;AAkBE;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;;AC3nCH;;;;AAIG;;AACH,sBAAe;AACX7lD,EAAAA,IAAI,EAAE,iBADK;AAEXI,EAAAA,KAAK,EAAE,CACH,iBADG,EAEH,gBAFG,CAFI;AAMXD,EAAAA,MAAM,EAAE,CACJ,iBADI,EAEJ,YAFI,EAGJ,eAHI,CANG;EAWXwpC,GAAG,EAAE,CACD,8EADC,CAXM;AAgBXe,EAAAA,oBAAoB,EAApB,UAAqB7c,CAArB,EAA6B9pB,CAA7B,EAAmC;IAC/B,IAAIA,CAAC,CAACmjB,SAAN,EAAiB;AACb,MAAA,OAAOnjB,CAAC,CAACojB,WAAF,KAAkB,iBAAzB,CAAA;AACH,KAAA;;AACD,IAAA,OAAOC,QAAQ,CAACrjB,CAAC,CAACqB,UAAF,CAAa0M,MAAd,EAAsBsF,MAAM,CAAC,QAAD,CAA5B,CAAf,CAAA;GApBO;AAsBXwzB,EAAAA,gBAAgB,EAAhB,UAAiB5jC,QAAjB,EAA4FjD,CAA5F,EAAkG;AACtF,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;AAERsC,IAAAA,YAAY,CAACX,QAAD,EAAWjD,CAAX,CAAZ,CAAA;AAEA,IAAA,IAAMyf,MAAM,GAAGD,UAAU,CAAoBvc,QAApB,EAA8BjD,CAA9B,EAAiC;AACtDmC,MAAAA,SAAS,EAAE4J,SAAS,CAAC5J,SAAV,CACPc,QADO,EAEP,IAAItB,WAAJ,GAAkBQ,SAAlB,CAA4B,CAAC,CAAD,EAAI,CAAJ,CAA5B,EAAoCnC,CAApC,CAFO,CAAA;AAD2C,KAAjC,CAAzB,CAAA;IAMA,IAAMgB,MAAM,GAAG2f,YAAY,CAAC1d,QAAD,EAAW,mBAAX,EAAgCwc,MAAhC,CAA3B,CAAA;AAEAne,IAAAA,KAAK,CAAC2jD,WAAN,GAAoBhiD,QAAQ,CAACtC,KAAT,CAAeuD,eAAnC,CAAA;AACA5C,IAAAA,KAAK,CAAC4jD,iBAAN,GAA0BjiD,QAAQ,CAACtC,KAAT,CAAe0P,YAAzC,CAAA;AACA/O,IAAAA,KAAK,CAACoH,UAAN,GAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAA;IACApH,KAAK,CAAC6jD,YAAN,GAAqB,IAArB,CAAA;;IAEA,IAAInkD,MAAM,KAAK,KAAf,EAAsB;MAClBM,KAAK,CAAC6jD,YAAN,GAAqB,KAArB,CAAA;AACA,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAED,IAAA,OAAO1lC,MAAP,CAAA;GA7CO;AA+CXqnB,EAAAA,WAAW,EAAX,UAAY7jC,QAAZ,EAAuFjD,CAAvF,EAA6F;AACjF,IAAA,IAAAsB,KAAK,GAAyBtB,CAAC,CAAAsB,KAA/B;AAAA,QAAOT,OAAO,GAAgBb,CAAC,CAAAa,OAA/B;AAAA,QAAgBsiB,SAAS,GAAKnjB,CAAC,UAA/B,CAAA;;AAER,IAAA,IAAI,CAACsB,KAAK,CAAC6jD,YAAX,EAAyB;AACrB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACK,IAAA,IAAAjkD,EAAA,GAAiByC,WAAW,CAAC3D,CAAD,CAA5B;AAAA,QAAC2C,KAAK,GAAAzB,EAAA,CAAA,CAAA,CAAN;AAAA,QAAQ0B,KAAK,GAAA1B,EAAA,CAAA,CAAA,CAAb,CAAA;;AACN,IAAA,IAAMP,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,IAAA,IAAA2H,KAAK,GAKL3H,KAAK,CALA2H,KAAL;AAAA,QACAC,MAAM,GAIN5H,KAAK,CAJC4H,MADN;AAAA,QAEAvE,YAAY,GAGZrD,KAAK,CAHOqD,YAFZ;AAAA,QAGAC,YAAY,GAEZtD,KAAK,CAAAsD,YALL;AAAA,QAIAb,IAAI,GACJzC,KAAK,CAAAyC,IALL,CAAA;AAOA,IAAA,IAAAnC,EAAA,GACAgC,QAAQ,CAAC5G,KAAT,CAAc+oD,cADd;QAAAA,cAAc,GAAAnkD,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAOA,EAArB,CAAA;AAEJ,IAAA,IAAMlB,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AACA,IAAA,IAAImE,IAAI,GAAG,CAAC5E,KAAD,EAAQC,KAAR,CAAX,CAAA;;AAEA,IAAA,IAAIugB,SAAJ,EAAe;AACX,MAAA,IAAMkiC,UAAU,GAAGrlD,CAAC,CAACqlD,UAArB,CAAA;;MACA,IAAIA,UAAU,CAAC,CAAD,CAAV,IAAiBA,UAAU,CAAC,CAAD,CAA/B,EAAoC;AAChC99C,QAAAA,IAAI,GAAG89C,UAAP,CAAA;AACH,OAAA;AACJ,KAAA;;IACD,IAAMthD,MAAM,GAAGU,IAAI,CAACnD,KAAK,CAAC2jD,WAAP,EAAoB19C,IAApB,CAAnB,CAAA;IACA,IAAM8I,YAAY,GAAG5L,IAAI,CAACnD,KAAK,CAAC4jD,iBAAP,EAA0B39C,IAA1B,CAAzB,CAAA;IACA,IAAM3G,KAAK,GAAG0C,KAAK,CAACiE,IAAD,EAAOjG,KAAK,CAACoH,UAAb,CAAnB,CAAA;IAEA,IAAM0D,UAAU,GAAGlC,aAAa,CAC5BlG,YAD4B,EAE5BC,YAF4B,EAG5BF,MAH4B,EAI5BhE,CAJ4B,CAAhC,CAAA;AAOA,IAAA,IAAM0Y,IAAI,GAAGxV,QAAQ,CAAC0U,OAAT,EAAb,CAAA;AACA,IAAA,IAAM2iB,QAAQ,GAAG3iB,OAAO,CAAC3N,cAAc,CAACoC,UAAD,EAAa9D,KAAb,EAAoBC,MAApB,EAA4BxI,CAA5B,CAAf,CAAxB,CAAA;AAEA,IAAA,IAAMulD,SAAS,GAAG,CACd7sC,IAAI,CAACxZ,IAAL,GAAYq7B,QAAQ,CAACr7B,IADP,EAEdwZ,IAAI,CAACzZ,GAAL,GAAWs7B,QAAQ,CAACt7B,GAFN,CAAlB,CAAA;IAKAsC,KAAK,CAACoH,UAAN,GAAmBnB,IAAnB,CAAA;AACA,IAAA,IAAMrD,eAAe,GAAG,CACpBye,cAAc,CAACtS,YAAY,CAAC,CAAD,CAAb,EAAkB/H,KAAlB,EAAyB88C,cAAzB,CADM,EAEpBziC,cAAc,CAACtS,YAAY,CAAC,CAAD,CAAb,EAAkB9H,MAAlB,EAA0B68C,cAA1B,CAFM,CAAA,CAGtB/lD,IAHsB,CAGjB,GAHiB,CAAxB,CAAA;IAIA,IAAM2B,MAAM,GAAG+K,SAAS,CAACzJ,IAAV,CACXW,QADW,EAEXvC,aAAa,CAACV,CAAD,EAAIiD,QAAQ,CAACtC,KAAb,EAAoB2kD,SAApB,EAA+B,CAAC,CAACzkD,OAAjC,EAA0C,KAA1C,CAFF,CAAf,CAAA;IAIA,IAAM4e,MAAM,GAAGD,UAAU,CAAevc,QAAf,EAAyBjD,CAAzB,EAA0B7D,QAAA,CAAAA,QAAA,CAAA;AAC/CmM,MAAAA,KAAK,EAAAA,KAD0C;AAE/CC,MAAAA,MAAM,QAFyC;AAG/CxE,MAAAA,MAAM,EAAAA,MAHyC;AAI/CwD,MAAAA,IAAI,EAAAA,IAJ2C;AAK/C3G,MAAAA,KAAK,OAL0C;AAM/CsD,MAAAA,eAAe,EAAAA,eANgC;AAO/C5B,MAAAA,IAAI,EAAEtB,MAAAA;KAPyC,EAQ5CgL,aAAa,CAAC;AACb9H,MAAAA,eAAe,EAAAA,eADF;MAEbmG,SAAS,EAAErJ,MAAM,CAACqJ,SAAAA;AAFL,KAAD,EAGbrK,CAHa,CAR+B,CAAA,EAY/C;MAAA2G,cAAc,EAAE3F,MAAM,CAACqJ,SAAAA;AAAvB,KAZ+C,CAA1B,CAAzB,CAAA;AAcAsW,IAAAA,YAAY,CAAC1d,QAAD,EAAW,cAAX,EAA2Bwc,MAA3B,CAAZ,CAAA;AACA,IAAA,OAAOA,MAAP,CAAA;GArHO;AAuHXsnB,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAAyEjD,CAAzE,EAA+E;AACnE,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;;AAER,IAAA,IAAI,CAACA,KAAK,CAAC6jD,YAAX,EAAyB;AACrB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACDxkC,IAAAA,YAAY,CAAC1d,QAAD,EAAW,iBAAX,EACRod,aAAa,CAAkBpd,QAAlB,EAA4BjD,CAA5B,EAA+B,EAA/B,CADL,CAAZ,CAAA;AAEA,IAAA,OAAO,IAAP,CAAA;GA/HO;AAiIXstC,EAAAA,yBAAyB,EAAzB,UAA0BrqC,QAA1B,EAAyCjD,CAAzC,EAA+C;AAC3C,IAAA,OAAO,KAAK2mC,oBAAL,CAA0B1jC,QAA1B,EAAoCjD,CAApC,CAAP,CAAA;GAlIO;AAoIXmnC,EAAAA,qBAAqB,EAArB,UAAsBlkC,QAAtB,EAA8EjD,CAA9E,EAAoF;IAChF,IAAMyf,MAAM,GAAG,IAAKonB,CAAAA,gBAAL,CAAsB5jC,QAAtB,EAAgCjD,CAAhC,CAAf,CAAA;;IAEA,IAAI,CAACyf,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAED,IAAA,OAAO,IAAP,CAAA;GA3IO;AA6IX2nB,EAAAA,gBAAgB,EAAhB,UAAiBnkC,QAAjB,EAAyEjD,CAAzE,EAA+E;IAC3E,IAAMyf,MAAM,GAAG,IAAKqnB,CAAAA,WAAL,CAAiB7jC,QAAjB,EAA2BjD,CAA3B,CAAf,CAAA;;IAEA,IAAI,CAACyf,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACDxc,IAAAA,QAAQ,CAACiB,eAAT,GAA2Bub,MAAM,CAACvb,eAAlC,CAAA;AAEA,IAAA,OAAO,IAAP,CAAA;GArJO;;AAuJX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqCAglB,OAAO,EAAP,UAAQjmB,QAAR,EAAoD;IAChD,IAAM3B,KAAK,GAAG,EAAd,CAAA;AACA,IAAA,IAAMmX,IAAI,GAAGxV,QAAQ,CAAC0U,OAAT,EAAb,CAAA;IACA,IAAIhV,KAAK,GAAG,CAAZ,CAAA;IACA,IAAIC,KAAK,GAAG,CAAZ,CAAA;AAEA,IAAA,IAAMsB,eAAe,GAAGuU,IAAI,CAACvU,eAA7B,CAAA;AACA,IAAA,IAAMmhD,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAA;IAEA,OAAO;AACHjb,MAAAA,SAAS,EAAE,IADR;AAEHC,MAAAA,YAAY,EAAA,YAAA;QACR,OAAO;AAAE/oC,UAAAA,KAAK,EAAAA,KAAAA;SAAd,CAAA;OAHD;MAKH4nB,OAAO,EAAP,UAAQlpB,CAAR,EAAuB;QACnB,IAAI,aAAA,IAAiBA,CAArB,EAAwB;UACpBqlD,UAAU,CAAC,CAAD,CAAV,IAAiBrlD,CAAC,CAACulD,WAAF,CAAc,CAAd,CAAjB,CAAA;UACAF,UAAU,CAAC,CAAD,CAAV,IAAiBrlD,CAAC,CAACulD,WAAF,CAAc,CAAd,CAAjB,CAAA;AACH,SAHD,MAGO,IAAI,QAAYvlD,IAAAA,CAAhB,EAAmB;AACtBqlD,UAAAA,UAAU,CAAC,CAAD,CAAV,GAAgBrlD,CAAC,CAAC+D,MAAF,CAAS,CAAT,CAAA,GAAcG,eAAe,CAAC,CAAD,CAA7C,CAAA;AACAmhD,UAAAA,UAAU,CAAC,CAAD,CAAV,GAAgBrlD,CAAC,CAAC+D,MAAF,CAAS,CAAT,CAAA,GAAcG,eAAe,CAAC,CAAD,CAA7C,CAAA;AACH,SAHM,MAGA;UACH,IAAI,GAAA,IAAOlE,CAAX,EAAc;AACV2C,YAAAA,KAAK,GAAG3C,CAAC,CAACyW,CAAF,GAAMgC,IAAI,CAACxZ,IAAnB,CAAA;AACH,WAFD,MAEO,IAAI,QAAYe,IAAAA,CAAhB,EAAmB;YACtB2C,KAAK,IAAI3C,CAAC,CAAC6C,MAAX,CAAA;AACH,WAAA;;UACD,IAAI,GAAA,IAAO7C,CAAX,EAAc;AACV4C,YAAAA,KAAK,GAAG5C,CAAC,CAAC0W,CAAF,GAAM+B,IAAI,CAACzZ,GAAnB,CAAA;AACH,WAFD,MAEO,IAAI,QAAYgB,IAAAA,CAAhB,EAAmB;YACtB4C,KAAK,IAAI5C,CAAC,CAAC8C,MAAX,CAAA;AACH,WAAA;AACJ,SAAA;;QAED,OAAO;AAAExB,UAAAA,KAAK,EAAAA,KAAP;AAASqB,UAAAA,KAAK,EAAAA,KAAd;AAAgBC,UAAAA,KAAK,EAAAA,KAArB;AAAuByiD,UAAAA,UAAU,EAAAA,UAAAA;SAAxC,CAAA;OAzBD;AA2BH92C,MAAAA,UAAU,EAAA,YAAA;QACN,OAAO;AAAEjN,UAAAA,KAAK,EAAAA,KAAP;AAASU,UAAAA,MAAM,EAAE,IAAA;SAAxB,CAAA;AACH,OAAA;KA7BL,CAAA;AA+BH,GAAA;AApOU,CAAf,CAAA;AAsOA;;;;;;;;;;;;;;;;;;;;AAoBG;;AAEH;;;;;;;;;;;AAWG;;AAEH;;;;;;;;;;;;;;;;;;;;;;AAsBE;;AAEF;;;;;;;;;;;;;;;;;;;;;;AAsBE;;AAEF;;;;;;;;;;;;;;;;;;;;;;AAsBE;;ACvUF,SAASwjD,qBAAT,CACI/K,YADJ,EAEIgL,SAFJ,EAGI9iD,KAHJ,EAIIC,KAJJ,EAIiB;AAEb;AACA;AACA;AACA;AACA;EAEA,IAAM8iD,iBAAiB,GAAGjL,YAAY,CAACz0C,MAAb,CAAoB,UAAC9E,EAAD,EAAwB;QAArBk5C,OAAO,GAAAl5C,EAAA,CAAAk5C;QAAEhuB,UAAU,GAAAlrB,EAAA,CAAAkrB;IAAO,OAAAA,UAAU,IAAI,CAACguB,OAAf,CAAA;AAAsB,GAAvE,EAAyE50C,MAAnG,CAAA;EACA,IAAMmgD,eAAe,GAAGlL,YAAY,CAACz0C,MAAb,CAAoB,UAAC9E,EAAD,EAAsB;QAAnBk5C,OAAO,GAAAl5C,EAAA,CAAAk5C;QAAE/tB,QAAQ,GAAAnrB,EAAA,CAAAmrB;IAAO,OAAAA,QAAQ,IAAI,CAAC+tB,OAAb,CAAA;AAAoB,GAAnE,EAAqE50C,MAA7F,CAAA;AACA,EAAA,IAAIogD,YAAY,GAAG,CAAC,CAApB,CAVa;;EAab,IAAIH,SAAS,KAAK,CAAlB,EAAqB;IACjB,IAAIC,iBAAiB,KAAK,CAA1B,EAA6B;AACzBE,MAAAA,YAAY,GAAG,CAAf,CAAA;AACH,KAFD,MAEO,IAAIF,iBAAiB,KAAK,CAA1B,EAA6B;AAChCE,MAAAA,YAAY,GAAG,CAAf,CAAA;AACH,KAAA;AACJ,GAnBY;;;EAqBb,IAAIH,SAAS,KAAK,CAAlB,EAAqB;IACjB,IAAIC,iBAAiB,IAAI,CAAzB,EAA4B;AACxBE,MAAAA,YAAY,GAAG,CAAf,CAAA;AACH,KAFD,MAEO,IAAIF,iBAAiB,IAAI,CAAzB,EAA4B;AAC/BE,MAAAA,YAAY,GAAG,CAAf,CAAA;AACH,KAAA;AACJ,GA3BY;;;EA6Bb,IAAIH,SAAS,KAAK,CAAlB,EAAqB;IACjB,IAAIE,eAAe,KAAK,CAAxB,EAA2B;AACvBC,MAAAA,YAAY,GAAG,CAAf,CAAA;AACH,KAFD,MAEO,IAAID,eAAe,GAAG,CAAtB,EAAyB;AAC5BC,MAAAA,YAAY,GAAG,CAAf,CAAA;AACH,KAAA;AACJ,GAnCY;;;EAsCb,IAAIH,SAAS,KAAK,CAAlB,EAAqB;IACjB,IAAIE,eAAe,IAAI,CAAvB,EAA0B;AACtBC,MAAAA,YAAY,GAAG,CAAf,CAAA;AACH,KAFD,MAEO,IAAID,eAAe,IAAI,CAAvB,EAA0B;AAC7BC,MAAAA,YAAY,GAAG,CAAf,CAAA;AACH,KAAA;AACJ,GAAA;;AACD,EAAA,IAAIA,YAAY,KAAK,CAAC,CAAlB,IAAuB,CAACnL,YAAY,CAACmL,YAAD,CAAZ,CAA2BxL,OAAvD,EAAgE;AAC5D,IAAA,OAAA;AACH,GAAA;;AACD,EAAA,IAAMyL,eAAe,GAAGpL,YAAY,CAACmL,YAAD,CAApC,CAAA;AAEAE,EAAAA,eAAe,CAACrL,YAAD,EAAemL,YAAf,CAAf,CAAA;;EAEA,IAAIA,YAAY,GAAG,CAAnB,EAAsB;AAClBC,IAAAA,eAAe,CAACl9C,GAAhB,CAAoB,CAApB,IAAyBhG,KAAzB,CAAA;AACH,GAFD,MAEO;AACHkjD,IAAAA,eAAe,CAACl9C,GAAhB,CAAoB,CAApB,IAAyB/F,KAAzB,CAAA;AACH,GAAA;AACJ,CAAA;;AACD,SAASkjD,eAAT,CACIrL,YADJ,EAEIp1C,KAFJ,EAEiB;EAEb,IAAIA,KAAK,GAAG,CAAZ,EAAe;AACXo1C,IAAAA,YAAY,CAAC3kC,KAAb,CAAmB,CAAnB,EAAsBzQ,KAAK,GAAG,CAA9B,CAAiC+Q,CAAAA,OAAjC,CAAyC,UAAArQ,IAAA,EAAI;MACzCA,IAAI,CAACq0C,OAAL,GAAe,KAAf,CAAA;KADJ,CAAA,CAAA;AAGH,GAJD,MAIO;AACH,IAAA,IAAIK,YAAY,CAAC,CAAD,CAAZ,CAAgBL,OAApB,EAA6B;AACzBK,MAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBL,OAAhB,GAA0B,KAA1B,CAAA;AACH,KAAA;;AACDK,IAAAA,YAAY,CAAC3kC,KAAb,CAAmB,CAAnB,EAAsBzQ,KAAK,GAAG,CAA9B,CAAiC+Q,CAAAA,OAAjC,CAAyC,UAAArQ,IAAA,EAAI;MACzCA,IAAI,CAACq0C,OAAL,GAAe,KAAf,CAAA;KADJ,CAAA,CAAA;AAGH,GAAA;AACJ,CAAA;;AACD,SAAS2L,kBAAT,CACItL,YADJ,EAEIp1C,KAFJ,EAEiB;EAEb,IAAIA,KAAK,GAAG,CAAZ,EAAe;IACXo1C,YAAY,CAAC3kC,KAAb,CAAmBzQ,KAAnB,EAA0B,CAA1B,CAAA,CAA6B+Q,OAA7B,CAAqC,UAAArQ,IAAA,EAAI;MACrCA,IAAI,CAACq0C,OAAL,GAAe,IAAf,CAAA;KADJ,CAAA,CAAA;AAGH,GAJD,MAIO;IACHK,YAAY,CAAC3kC,KAAb,CAAmBzQ,KAAnB,EAA0B+Q,OAA1B,CAAkC,UAAArQ,IAAA,EAAI;MAClCA,IAAI,CAACq0C,OAAL,GAAe,IAAf,CAAA;KADJ,CAAA,CAAA;AAGH,GAAA;AACJ,CAAA;;AACD,SAAS4L,eAAT,CACIC,YADJ,EAEI39C,KAFJ,EAGIC,MAHJ,EAIIwyC,SAJJ,EAKIC,IALJ,EAKkB;AADd,EAAA,IAAAD,SAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,SAAA,GAAA,CAAuB,CAAvB,EAA0B,CAA1B,CAAA,CAAA;AAA4B,GAAA;;EAG5B,IAAIp5B,MAAM,GAAa,EAAvB,CAAA;;AAEA,EAAA,IAAI,CAACskC,YAAD,IAAiBA,YAAY,KAAK,KAAtC,EAA6C;AACzCtkC,IAAAA,MAAM,GAAG,EAAT,CAAA;AACH,GAFD,MAEO;AACHA,IAAAA,MAAM,GAAG3W,UAAU,CAACi7C,YAAD,CAAnB,CAAA;AACH,GAAA;;AAED,EAAA,OAAOnL,eAAe,CAACn5B,MAAD,EAASrZ,KAAT,EAAgBC,MAAhB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BwyC,SAA9B,EAAyCC,IAAzC,CAAtB,CAAA;AACH,CAAA;;AAED,SAASkL,iBAAT,CACIjjD,QADJ,EAEIjD,CAFJ,EAGIuH,IAHJ,EAII3G,KAJJ,EAKI2mB,SALJ,EAK4B;AAExB,EAAA,IAAM5mB,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,EAAA,IAAA2H,KAAK,GAEL3H,KAAK,CAAA2H,KAFL;AAAA,MACAC,MAAM,GACN5H,KAAK,CAAA4H,MAFL,CAAA;;AAGE,EAAA,IAAArH,EAAA,GAIF+4C,eAAe,CACf1yB,SADe,EAEftkB,QAAQ,CAAC5G,KAAT,CAAe8pD,aAFA,EAGf79C,KAHe,EAIfC,MAJe,CAJb;AAAA,MACF8xC,IAAI,GAAAn5C,EAAA,CAAAm5C,IADF;AAAA,MAEFE,MAAM,GAAAr5C,EAAA,CAAAq5C,MAFJ;AAAA,MAGFJ,WAAW,GAAAj5C,EAAA,CAAAi5C,WAHT,CAAA;;AAUA,EAAA,IAAAl5C,EAGF,GAAAm8C,gBAAgB,CAACjD,WAAD,EAAcE,IAAd,CAHd;AAAA,MACFgD,WAAW,GAAAp8C,EAAA,CAAAo8C,WADT;AAAA,MAEFC,SAAS,eAFP,CAAA;;AAIN,EAAA,IAAM2I,YAAY,GAAG1L,MAAM,CAACl7C,IAAP,CAAY,GAAZ,CAArB,CAAA;EAEAsB,KAAK,CAACylD,iBAAN,GAA0BH,YAA1B,CAAA;EACA,IAAMxmC,MAAM,GAAGD,UAAU,CAAUvc,QAAV,EAAoBjD,CAApB,EAAqB7D,QAAA,CAAA;AAC1CkhD,IAAAA,WAAW,EAAAA,WAD+B;AAE1CC,IAAAA,SAAS,WAFiC;AAG1C2I,IAAAA,YAAY,EAAAA,YAH8B;AAI1C39C,IAAAA,KAAK,EAAAA,KAJqC;AAK1CC,IAAAA,MAAM,EAAAA,MALoC;AAM1C3H,IAAAA,KAAK,EAAAA,KANqC;AAO1C2G,IAAAA,IAAI,EAAAA,IAAAA;GAPsC,EAQvCyE,aAAa,CAAC;AACbi6C,IAAAA,YAAY,EAAAA,YAAAA;AADC,GAAD,EAEbjmD,CAFa,CAR0B,CAArB,CAAzB,CAAA;AAYA2gB,EAAAA,YAAY,CAAC1d,QAAD,EAAW,SAAX,EAAsBwc,MAAtB,CAAZ,CAAA;AAEA,EAAA,OAAOA,MAAP,CAAA;AACH,CAAA;;AAGD,SAAS4mC,oBAAT,CAA8BpjD,QAA9B,EAAgG;;;AAExF,EAAA,IAAAgQ,KAAK,GACLhQ,QAAQ,CAACukC,QAAT,QADA,CAAA;AAEJ,EAAA,IAAIye,YAAY,GAAGhzC,KAAK,CAACgzC,YAAN,IAAsB,EAAzC,CAAA;;EAEA,IAAI,CAACA,YAAD,IAAiBhjD,QAAQ,CAAC5G,KAAT,CAAe8P,SAApC,EAA+C;AAC3C,IAAA,IAAMm6C,aAAa,GAAGrjD,QAAQ,CAAC4mB,SAAT,CAAoB,CAApB,CAAtB,CAAA;AACA,IAAA,IAAM08B,WAAW,GAAGtjD,QAAQ,CAACujD,UAAT,EAAA,CAAsB,CAAtB,CAApB,CAAA;;AAGA,IAAA,IAAID,WAAJ,EAAiB;MACb,IAAI,CAAAD,aAAa,KAAb,IAAA,IAAAA,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,aAAa,CAAEjqD,KAAf,CAAqB0R,MAArB,MAAgCw4C,WAApC,EAAiD;AAC7CN,QAAAA,YAAY,GAAG,CAAAhlD,EAAA,GAAA,CAAAC,EAAA,GAAA+B,QAAQ,CAAC4mB,SAAT,CAAoB,CAApB,CAAA,MAAsB,IAAtB,IAAsB3oB,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsBA,EAAA,CAAEP,KAAF,CAAQsS,KAAR,CAAcgzC,YAApC,MAAgD,IAAhD,IAAgDhlD,EAAA,KAAA,KAAA,CAAhD,GAAgDA,EAAhD,GAAoD,EAAnE,CAAA;QACAgS,KAAK,CAACgzC,YAAN,GAAqBA,YAArB,CAAA;AACH,OAHD,MAGO;AACHA,QAAAA,YAAY,GAAGjzC,gBAAgB,CAACuzC,WAAD,CAAhB,CAA8BN,YAA7C,CAAA;QACAhzC,KAAK,CAACgzC,YAAN,GAAqBA,YAArB,CAAA;AACH,OAAA;AACJ,KAAA;AAEJ,GAAA;;AACD,EAAA,OAAOA,YAAP,CAAA;AACH,CAAA;AAED;;;AAGG;;;AAEH,gBAAe;AACXhqD,EAAAA,IAAI,EAAE,WADK;AAEXI,EAAAA,KAAK,EAAE,CACH,WADG,EAEH,eAFG,EAGH,kBAHG,EAIH,kBAJG,EAKH,gBALG,EAMH,cANG,EAOH,8BAPG,CAFI;AAWXD,EAAAA,MAAM,EAAE,CACJ,YADI,EAEJ,OAFI,EAGJ,UAHI,EAIJ,iBAJI,EAKJ,YALI,EAMJ,eANI,CAXG;EAmBXwpC,GAAG,EAAE,CACD,+EADC,EAMD,sEANC,EAUD,iEAVC,EAcD,mEAdC,CAnBM;EAqCX7N,SAAS,EAAT,UAAU90B,QAAV,EAA4E;AACxE,IAAA,IAAMwjD,cAAc,GAAGxjD,QAAQ,CAAC5G,KAAT,CAAeoqD,cAAtC,CAAA;AAEA,IAAA,OAAOA,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,MAA9C,GAAuDpzC,MAAM,CAAC,sBAAD,CAA7D,GAAwF,EAA/F,CAAA;GAxCO;AA0CXy1B,EAAAA,YAAY,EAAZ,YAAA;IACI,OAAO,CAAC,cAAD,CAAP,CAAA;GA3CO;AA6CXC,EAAAA,iBAAiB,EAAjB,YAAA;IACI,OAAO,CAAC,cAAD,CAAP,CAAA;GA9CO;AAgDXlD,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAA2E00B,KAA3E,EAA0F;AAChF,IAAA,IAAAz2B,EASF,GAAA+B,QAAQ,CAACukC,QAAT,EATE;AAAA,QACFz5B,MAAM,GAAA7M,EAAA,CAAA6M,MADJ;AAAA,QAEFzF,KAAK,GAAApH,EAAA,CAAAoH,KAFH;AAAA,QAGFC,MAAM,GAAArH,EAAA,CAAAqH,MAHJ;AAAA,QAIF1E,SAAS,GAAA3C,EAAA,CAAA2C,SAJP;AAAA,QAKFT,IAAI,GAAAlC,EAAA,CAAAkC,IALF;AAAA,QAMFnE,IAAI,GAAAiC,EAAA,CAAAjC,IANF;AAAA,QAOFD,GAAG,GAAAkC,EAAA,CAAAlC,GAPD;AAAA,QAQFonD,iBAAiB,uBARf,CAAA;;AAWA,IAAA,IAAAnlD,KAOFgC,QAAQ,CAAC5G,KAPP;AAAA,QACFqH,EAAA,GAAAzC,EAAA,CAAAylD,gBADE;AAAA,QACFA,gBAAgB,GAAAhjD,EAAA,KAAA,KAAA,CAAA,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAASA,EADvB;AAAA,QAEFyV,EAAyB,GAAAlY,EAAA,CAAA0lD,gBAFvB;AAAA,QAEFA,gBAAgB,GAAGxtC,EAAA,KAAA,KAAA,CAAA,GAAA,CAAC,CAAD,EAAI,CAAJ,CAAA,GAAMA,EAFvB;AAAA,QAGFrK,IAAI,GAAA7N,EAAA,CAAA6N,IAHF;AAAA,QAIFsL,EAAgB,GAAAnZ,EAAA,CAAA2lD,YAJd;QAIFA,YAAY,GAAGxsC,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,KAJb;AAAA,QAKFysC,4BAA4B,kCAL1B;AAAA,QAMF16C,SAAS,eANP,CAAA;;IASN,IAAI,CAAC4B,MAAL,EAAa;AACT,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;AAED,IAAA,IAAMk4C,YAAY,GAAGG,iBAAiB,IAAIC,oBAAoB,CAACpjD,QAAD,CAA9D,CAAA;AACA,IAAA,IAAMlD,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AACA,IAAA,IAAM28C,YAAY,GAAGiG,eAAe,CAChCC,YADgC,EAEhC39C,KAFgC,EAEzBC,MAFyB,EAGhCm+C,gBAHgC,EAIhC,IAJgC,CAApC,CAAA;;IAOA,IAAI,CAAC3G,YAAL,EAAmB;AACf,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;IACD,IAAI+G,aAAa,GAAG,CAApB,CAAA;IACA,IAAIC,eAAe,GAAG,CAAtB,CAAA;AACA,IAAA,IAAMC,OAAO,GAAG76C,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAH,GAAY,CAAClN,IAAD,EAAOD,GAAP,CAArC,CAAA;IAEA,OAAO+gD,YAAY,CAACjhD,GAAb,CAAiB,UAACgkB,CAAD,EAAIla,CAAJ,EAAK;AACzB,MAAA,IAAMwjB,UAAU,GAAGtJ,CAAC,CAACsJ,UAArB,CAAA;AACA,MAAA,IAAMC,QAAQ,GAAGvJ,CAAC,CAACuJ,QAAnB,CAAA;AACA,MAAA,IAAMrnB,SAAS,GAAG8d,CAAC,CAAC9d,SAAF,IAAe,EAAjC,CAAA;;MACA,IAAMiiD,WAAW,GAAO9/C,aAAA,CAAA,EAAA,EAAA2b,CAAC,CAACna,GAAF,MAAA,CAAxB,CAAA;;AAEAo+C,MAAAA,eAAe,IAAIhqD,IAAI,CAACyc,GAAL,CAAS4S,UAAT,CAAnB,CAAA;AACA06B,MAAAA,aAAa,IAAI/pD,IAAI,CAACyc,GAAL,CAAS6S,QAAT,CAAjB,CAAA;;MAGA,IAAID,UAAU,IAAIpnB,SAAS,CAAC5F,OAAV,CAAkB,GAAlB,CAAA,GAAyB,CAAC,CAA5C,EAA+C;AAC3C6nD,QAAAA,WAAW,CAAC,CAAD,CAAX,IAAkBL,YAAlB,CAAA;AACH,OAAA;;MACD,IAAIv6B,QAAQ,IAAIrnB,SAAS,CAAC5F,OAAV,CAAkB,GAAlB,CAAA,GAAyB,CAAC,CAA1C,EAA6C;AACzC6nD,QAAAA,WAAW,CAAC,CAAD,CAAX,IAAkBL,YAAlB,CAAA;AACH,OAAA;;MACD,IAAIx6B,UAAU,IAAIpnB,SAAS,CAAC5F,OAAV,CAAkB,GAAlB,CAAA,GAAyB,CAAC,CAA5C,EAA+C;AAC3C6nD,QAAAA,WAAW,CAAC,CAAD,CAAX,IAAkBL,YAAlB,CAAA;AACH,OAAA;;MACD,IAAIv6B,QAAQ,IAAIrnB,SAAS,CAAC5F,OAAV,CAAkB,GAAlB,CAAA,GAAyB,CAAC,CAA1C,EAA6C;AACzC6nD,QAAAA,WAAW,CAAC,CAAD,CAAX,IAAkBL,YAAlB,CAAA;AACH,OAAA;;AACD,MAAA,IAAMj+C,GAAG,GAAGrF,KAAK,CAACuJ,iBAAiB,CAAChJ,SAAD,EAAYojD,WAAZ,EAAyBlnD,CAAzB,CAAlB,EAA+CinD,OAA/C,CAAjB,CAAA;AAEA,MAAA,IAAME,SAAS,GAAGpkC,CAAC,CAACuJ,QAAF,GACZy6B,aAAa,IAAIH,gBAAgB,CAAC,CAAD,CAAjC,KAAyCE,4BAA4B,IAAI,CAAC/jC,CAAC,CAACs3B,OAA5E,CADY,GAEZ2M,eAAe,IAAIJ,gBAAgB,CAAC,CAAD,CAAnC,KAA2CE,4BAA4B,IAAI,CAAC/jC,CAAC,CAACs3B,OAA9E,CAFN,CAAA;AAIA,MAAA,OAAOziB,mBAAA,MAAA;AAAKC,QAAAA,GAAG,EAAE,qBAAA,OAAA,CAAsBhvB,CAAtB;QACbmvB,SAAS,EAAE1kB,MAAM,CACb,SADa,EACF,eADE,EAEbyP,CAAC,CAACuJ,QAAF,GAAa,UAAb,GAA0B,EAFb,EAGbvJ,CAAC,CAACs3B,OAAF,GAAY,SAAZ,GAAwB,EAHX;6BAKExxC;AACnBqK,QAAAA,KAAK,EAAE;AACHk0C,UAAAA,OAAO,EAAED,SAAS,GAAG,OAAH,GAAa,MAD5B;UAEH78C,SAAS,EAAE,YAAA1N,CAAAA,MAAA,CAAagM,GAAG,CAAC,CAAD,CAAhB,EAA0B,MAA1B,CAA0BhM,CAAAA,MAA1B,CAA0BgM,GAAG,CAAC,CAAD,CAA7B,EAAgC,YAAhC,EAAgChM,MAAhC,CAA6CmS,IAA7C,EAAoD,GAApD,CAAA;AAFR,SAAA;OAPJ,CAAP,CAAA;AAWH,KAvCM,CAAP,CAAA;GAzFO;AAkIX63B,EAAAA,oBAAoB,EAApB,UAAqB1jC,QAArB,EAAoCjD,CAApC,EAA0C;IACtC,IAAI,CAACA,CAAC,CAACqB,UAAH,IAAiBrB,CAAC,CAACmjB,SAAvB,EAAkC;AAC9B,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAM4U,SAAS,GAAI/3B,CAAC,CAACqB,UAAF,CAAa0M,MAAb,CAAoB4Q,YAApB,CAAiC,OAAjC,CAAA,IAA6C,EAAhE,CAAA;IAEA,OAAOoZ,SAAS,CAAC34B,OAAV,CAAkB,eAAlB,IAAqC,CAAC,CAAtC,IACC24B,SAAS,CAAC34B,OAAV,CAAkB,eAAlB,CAAA,GAAqC,CAAC,CAAtC,IAA2C24B,SAAS,CAAC34B,OAAV,CAAkB,oBAAlB,CAA0C,GAAA,CAAC,CAD9F,CAAA;GAxIO;AA2IXkuC,EAAAA,yBAAyB,EAAzB,UAA0BrqC,QAA1B,EAAyCjD,CAAzC,EAA+C;AAC3C,IAAA,OAAO,KAAK2mC,oBAAL,CAA0B1jC,QAA1B,EAAoCjD,CAApC,CAAP,CAAA;GA5IO;AA8IX6mC,EAAAA,gBAAgB,EAAhB,UAAiB5jC,QAAjB,EAAqFjD,CAArF,EAA2F;AAC/E,IAAA,IAAAqB,UAAU,GAAYrB,CAAC,CAAAqB,UAAvB;AAAA,QAAYC,KAAK,GAAKtB,CAAC,CAAAsB,KAAvB,CAAA;AACR,IAAA,IAAM2vC,WAAW,GAAG5vC,UAAU,CAAC0M,MAA/B,CAAA;IACA,IAAMgqB,SAAS,GAAIkZ,WAAW,CAACtyB,YAAZ,CAAyB,OAAzB,KAAqC,EAAxD,CAAA;IACA,IAAMyrB,SAAS,GAAGrS,SAAS,CAAC34B,OAAV,CAAkB,eAAlB,CAAqC,GAAA,CAAC,CAAxD,CAAA;AACA,IAAA,IAAMikD,MAAM,GAAGtrB,SAAS,CAAC34B,OAAV,CAAkB,eAAlB,CAAqC,GAAA,CAAC,CAAtC,IAA2C24B,SAAS,CAAC34B,OAAV,CAAkB,oBAAlB,CAAA,GAA0C,CAAC,CAArG,CAAA;AACA,IAAA,IAAMwmD,YAAY,GAAGxb,SAAS,GAAGlsC,QAAQ,CAAC+yC,WAAW,CAACtyB,YAAZ,CAAyB,mBAAzB,CAAD,EAAgD,EAAhD,CAAX,GAAiE,CAAC,CAAhG,CAAA;IACA,IAAI8mC,SAAS,GAAG,CAAC,CAAjB,CAAA;;AAEA,IAAA,IAAIpC,MAAJ,EAAY;MACR,IAAM+D,SAAS,GAAGnW,WAAW,CAACtyB,YAAZ,CAAyB,eAAzB,KAA8C,EAAhE,CAAA;;AAEA,MAAA,IAAIyoC,SAAJ,EAAe;AACX3B,QAAAA,SAAS,GAAGvnD,QAAQ,CAACkpD,SAAS,CAACC,OAAV,CAAkB,eAAlB,EAAmC,EAAnC,CAAD,EAAyC,EAAzC,CAApB,CAAA;;AAEA,QAAA,IAAIp+C,KAAK,CAACw8C,SAAD,CAAT,EAAsB;UAClBA,SAAS,GAAG,CAAC,CAAb,CAAA;AACH,SAAA;AACJ,OAAA;AACJ,KAAA;;AAED,IAAA,IAAI,CAACrb,SAAD,IAAc,CAACiZ,MAAnB,EAA2B;AACvB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IAED,IAAM5jC,MAAM,GAAGD,UAAU,CAAevc,QAAf,EAAyBjD,CAAzB,EAA4B,EAA5B,CAAzB,CAAA;IAEA,IAAMgB,MAAM,GAAG2f,YAAY,CACvB1d,QADuB,EACb,cADa,EACGwc,MADH,CAA3B,CAAA;;IAGA,IAAIze,MAAM,KAAK,KAAf,EAAsB;AAClB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IAEDM,KAAK,CAACmkD,SAAN,GAAkBA,SAAlB,CAAA;IACAnkD,KAAK,CAACskD,YAAN,GAAqBA,YAArB,CAAA;IACAtkD,KAAK,CAAC8oC,SAAN,GAAkBA,SAAlB,CAAA;IACA9oC,KAAK,CAAC+hD,MAAN,GAAeA,MAAf,CAAA;AAEAz/C,IAAAA,YAAY,CAACX,QAAD,EAAWjD,CAAX,CAAZ,CAAA;AAEM,IAAA,IAAAkB,KAGF+B,QAAQ,CAAC5G,KAHP;AAAA,QACF8pD,aAAa,mBADX;AAAA,QAEFllD,EAAA,GAAAC,EAAA,CAAAwlD,gBAFE;AAAA,QAEFA,gBAAgB,mBAAG,CAAC,CAAD,EAAI,CAAJ,MAFjB,CAAA;AAIN,IAAA,IAAM/lD,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;AAEI,IAAA,IAAA2H,KAAK,GAEL3H,KAAK,CAAA2H,KAFL;AAAA,QACAC,MAAM,GACN5H,KAAK,CAAA4H,MAFL,CAAA;IAIJjH,KAAK,CAACgmD,OAAN,GAAgB,IAAhB,CAAA;AACAhmD,IAAAA,KAAK,CAAC4nC,QAAN,GAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAAA;AACA,IAAA,IAAM+c,YAAY,GAAGI,oBAAoB,CAACpjD,QAAD,CAAzC,CAAA;AACA,IAAA,IAAMw3C,YAAY,GAAGuL,eAAe,CAChCC,YAAY,IAAI,EADgB,EAEhC39C,KAFgC,EAGhCC,MAHgC,EAIhCm+C,gBAJgC,EAKhC,IALgC,CAAf,IAMhB,EANL,CAAA;IAQAplD,KAAK,CAACm5C,YAAN,GAAqBA,YAArB,CAAA;AAEA95C,IAAAA,KAAK,CAACylD,iBAAN,GAA0BnM,eAAe,CACrCQ,YADqC,EAErC0L,aAFqC,EAGrC79C,KAHqC,EAIrCC,MAJqC,CAAf,CAKxBgyC,MALwB,CAKjBl7C,IALiB,CAKZ,GALY,CAA1B,CAAA;AAMA,IAAA,OAAOogB,MAAP,CAAA;GApNO;AAsNXqnB,EAAAA,WAAW,EAAX,UAAY7jC,QAAZ,EAAgFjD,CAAhF,EAAsF;AAC1E,IAAA,IAAAsB,KAAK,GAAKtB,CAAC,CAAAsB,KAAX,CAAA;AACR,IAAA,IAAMm5C,YAAY,GAAGn5C,KAAK,CAACm5C,YAA3B,CAAA;;AAEA,IAAA,IAAI,CAACn5C,KAAK,CAACgmD,OAAP,IAAkB,CAAChmD,KAAK,CAAC8oC,SAAzB,IAAsC,CAACqQ,YAAY,CAACj1C,MAAxD,EAAgE;AAC5D,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAMH,KAAK,GAAG/D,KAAK,CAACskD,YAApB,CAAA;;AAEM,IAAA,IAAA1kD,EAAA,GAAiByC,WAAW,CAAC3D,CAAD,CAA5B;AAAA,QAAC2C,KAAK,GAAAzB,EAAA,CAAA,CAAA,CAAN;AAAA,QAAQ0B,KAAK,GAAA1B,EAAA,CAAA,CAAA,CAAb,CAAA;;AACN,IAAA,IAAMqG,IAAI,GAAG,CAAC5E,KAAD,EAAQC,KAAR,CAAb,CAAA;IACA,IAAMhC,KAAK,GAAG0C,KAAK,CAACiE,IAAD,EAAOjG,KAAK,CAAC4nC,QAAb,CAAnB,CAAA;AAEI,IAAA,IAAAjoC,EACA,GAAAgC,QAAQ,CAAC5G,KAAT,iBADA;AAAA,QAAAsqD,gBAAgB,GAAG1lD,EAAA,KAAA,KAAA,CAAA,GAAA,CAAC,CAAD,EAAI,CAAJ,CAAA,KAAnB,CAAA;AAEE,IAAA,IAAAyC,EAAA,GAAoBT,QAAQ,CAACtC,KAA7B;AAAA,QAAE2H,KAAK,GAAA5E,EAAA,CAAA4E,KAAP;AAAA,QAASC,MAAM,GAAA7E,EAAA,CAAA6E,MAAf,CAAA;AACN,IAAA,IAAMg/C,mBAAmB,GAAG9M,YAAY,CAACp1C,KAAD,CAAxC,CAAA;AAEA,IAAA,IAAMmiD,gBAAgB,GAAGD,mBAAmB,CAACl7B,QAA7C,CAAA;AACA,IAAA,IAAMo7B,kBAAkB,GAAGF,mBAAmB,CAACn7B,UAA/C,CAnBkF;AAsBlF;AACA;AAEA;AACA;;IAEA,IAAMo0B,KAAK,GAAG/F,YAAY,CAAC37C,GAAb,CAAiB,UAAA4oD,IAAA,EAAI;AACvB,MAAA,IAAAt7B,UAAU,GAAes7B,IAAI,CAAAt7B,UAA7B;AAAA,UAAYC,QAAQ,GAAKq7B,IAAI,CAAAr7B,QAA7B,CAAA;MACR,IAAMs7B,QAAQ,GAAG,CACbv7B,UAAU,GAAGq7B,kBAAb,GAAkClgD,IAAI,CAAC,CAAD,CADzB,EAEb8kB,QAAQ,GAAGm7B,gBAAX,GAA8BjgD,IAAI,CAAC,CAAD,CAFrB,CAAjB,CAAA;;AAIA,MAAA,IAAI6kB,UAAJ,EAAgB;AACZ,QAAA,IAAIu6B,gBAAgB,CAAC,CAAD,CAAhB,KAAwB,CAA5B,EAA+B;AAC3B,UAAA,OAAOgB,QAAP,CAAA;AACH,SAFD,MAEO,IAAIhB,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,CAAtB,IAA2Bv6B,UAAU,KAAKq7B,kBAA9C,EAAkE;AACrE,UAAA,OAAOE,QAAP,CAAA;AACH,SAAA;OALL,MAMO,IAAIhB,gBAAgB,CAAC,CAAD,CAAhB,KAAwB,CAA5B,EAA+B;AAClCgB,QAAAA,QAAQ,CAAC,CAAD,CAAR,GAAct7B,QAAQ,GAAGo7B,kBAAX,GAAgClgD,IAAI,CAAC,CAAD,CAApC,GAA0Ce,KAA1C,GAAkDC,MAAhE,CAAA;AAEA,QAAA,OAAOo/C,QAAP,CAAA;OAHG,MAIA,IAAIH,gBAAJ,EAAsB;AACzB,QAAA,IAAIb,gBAAgB,CAAC,CAAD,CAAhB,KAAwB,CAA5B,EAA+B;AAC3B,UAAA,OAAOgB,QAAP,CAAA;AACH,SAFD,MAEO,IAAIhB,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,CAAtB,IAA2Bt6B,QAAQ,KAAKm7B,gBAA5C,EAA8D;AACjE,UAAA,OAAOG,QAAP,CAAA;AACH,SAAA;AACJ,OAAA;;AACD,MAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACH,KAxBa,CAAd,CAAA;AA0BAnH,IAAAA,KAAK,CAACn7C,KAAD,CAAL,GAAekC,IAAf,CAAA;IACA,IAAMggB,SAAS,GAAGkzB,YAAY,CAAC37C,GAAb,CAAiB,UAACiH,IAAD,EAAO6C,CAAP,EAAQ;MACvC,OAAAzM,QAAA,CAAAA,QAAA,CAAA,EAAA,EACO4J,IADP,CAAA,EACW;QACP4C,GAAG,EAAElE,IAAI,CAACsB,IAAI,CAAC4C,GAAN,EAAW63C,KAAK,CAAC53C,CAAD,CAAhB,CAAA;AADF,OADX,CAAA,CAAA;AAIH,KALiB,CAAlB,CAAA;;IAOA,IAAIvD,KAAK,GAAG,CAAZ,EAAe;AACXkiB,MAAAA,SAAS,CAACzR,KAAV,CAAgB,CAAhB,EAAmBzQ,KAAK,GAAG,CAA3B,CAA8B+Q,CAAAA,OAA9B,CAAsC,UAAArQ,IAAA,EAAI;QACtCA,IAAI,CAACq0C,OAAL,GAAe,KAAf,CAAA;OADJ,CAAA,CAAA;AAGH,KAJD,MAIO;AACH7yB,MAAAA,SAAS,CAACzR,KAAV,CAAgB,CAAhB,EAAmBzQ,KAAK,GAAG,CAA3B,CAA8B+Q,CAAAA,OAA9B,CAAsC,UAAArQ,IAAA,EAAI;QACtCA,IAAI,CAACq0C,OAAL,GAAe,KAAf,CAAA;OADJ,CAAA,CAAA;AAGH,KAAA;;AAED94C,IAAAA,KAAK,CAAC4nC,QAAN,GAAiB,CAACvmC,KAAD,EAAQC,KAAR,CAAjB,CAAA;IAEA,OAAOsjD,iBAAiB,CACpBjjD,QADoB,EAEpBjD,CAFoB,EAGpBuH,IAHoB,EAIpB3G,KAJoB,EAKpB2mB,SALoB,CAAxB,CAAA;GAhSO;AAwSXwf,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAAmFjD,CAAnF,EAAyF;AACrF,IAAA,IAAMW,KAAK,GAAGsC,QAAQ,CAACtC,KAAvB,CAAA;IAEAA,KAAK,CAACylD,iBAAN,GAA0B,EAA1B,CAAA;AACQ,IAAA,IAAA9kD,KAAK,GAAetB,CAAC,CAAAsB,KAArB;AAAA,QAAOgf,QAAQ,GAAKtgB,CAAC,CAAAsgB,QAArB,CAAA;;AACR,IAAA,IAAI,CAAChf,KAAK,CAACgmD,OAAX,EAAoB;AAChB,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAEG,IAAA,IAAAld,SAAS,GAIT9oC,KAAK,UAJL;AAAA,QACAskD,YAAY,GAGZtkD,KAAK,CAAAskD,YAJL;AAAA,QAEAvC,MAAM,GAEN/hD,KAAK,CAFC+hD,MAFN;AAAA,QAGAoC,SAAS,GACTnkD,KAAK,UAJL,CAAA;AAKJ,IAAA,IAAMm5C,YAAY,GAAGn5C,KAAK,CAACm5C,YAA3B,CAAA;IACA,IAAMj1C,MAAM,GAAGi1C,YAAY,CAACz0C,MAAb,CAAoB,UAAC9E,EAAD,EAAY;AAAT,MAAA,IAAAk5C,OAAO,GAAAl5C,EAAA,CAAAk5C,OAAP,CAAA;AAAc,MAAA,OAAAA,OAAA,CAAA;AAAO,KAA5C,EAA8C50C,MAA7D,CAAA;AAEI,IAAA,IAAAtE,EAAA,GACA+B,QAAQ,CAAC5G,KAAT,CAAcoqD,cADd;QAAAA,cAAc,GAAAvlD,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAOA,EAArB,CAAA;;IAGJ,IAAIof,QAAQ,IAAImmC,cAAhB,EAAgC;MAC5B,IAAIrc,SAAS,KAAKqc,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,SAAnD,CAAb,EAA4E;AACxEV,QAAAA,kBAAkB,CAACtL,YAAD,EAAemL,YAAf,CAAlB,CAAA;AACH,OAFD,MAEO,IAAIvC,MAAM,KAAKoD,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,MAAnD,CAAV,EAAsE;AACnE,QAAA,IAAAxlD,EAAiB,GAAA+B,oBAAoB,CAACC,QAAD,EAAWjD,CAAX,CAArC;AAAA,YAAC2C,KAAK,GAAA1B,EAAA,CAAA,CAAA,CAAN;AAAA,YAAQ2B,KAAK,QAAb,CAAA;;QAEN4iD,qBAAqB,CAAC/K,YAAD,EAAegL,SAAf,EAA0B9iD,KAA1B,EAAiCC,KAAjC,CAArB,CAAA;AACH,OAAA;;MAED,IAAI4C,MAAM,KAAKi1C,YAAY,CAACz0C,MAAb,CAAoB,UAAC9E,EAAD,EAAY;AAAT,QAAA,IAAAk5C,OAAO,GAAAl5C,EAAA,CAAAk5C,OAAP,CAAA;AAAc,QAAA,OAAAA,OAAA,CAAA;OAArC,CAAA,CAA8C50C,MAA7D,EAAqE;AACjE0gD,QAAAA,iBAAiB,CACbjjD,QADa,EAEbjD,CAFa,EAGb,CAAC,CAAD,EAAI,CAAJ,CAHa,EAIb,CAAC,CAAD,EAAI,CAAJ,CAJa,EAKby6C,YALa,CAAjB,CAAA;AAOH,OAAA;AACJ,KAAA;;IACD,IAAMh7B,MAAM,GAAGY,aAAa,CAAapd,QAAb,EAAuBjD,CAAvB,EAA0B,EAA1B,CAA5B,CAAA;AAEA2gB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,YAAX,EAAyBwc,MAAzB,CAAZ,CAAA;IACA9e,KAAK,CAACylD,iBAAN,GAA0B,EAA1B,CAAA;AACA,IAAA,OAAO3mC,MAAP,CAAA;GAnVO;AAqVX0nB,EAAAA,qBAAqB,EAArB,UAAsBlkC,QAAtB,EAAwFjD,CAAxF,EAA8F;IAC1F,IAAMgB,MAAM,GAAG,IAAK6lC,CAAAA,gBAAL,CAAsB5jC,QAAtB,EAAgCjD,CAAhC,CAAf,CAAA;;IAEA,IAAI,CAACgB,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAED,IAAA,IAAM6oB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;AACA,IAAA,IAAMnF,OAAO,GAAGzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAA/B,CAAA;IACA,IAAMtoB,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW,WAAX,EAAwBjD,CAAxB,CAA9B,CAAA;;IAEA,IAAM2f,UAAU,GACZxjB,QAAA,CAAA;AAAAuoB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAxB;MACAtoB,MAAM,EAAEA,MAAM,CAAC0C,GAAP,CAAW,UAACorB,EAAD,EAAKthB,CAAL,EAAM;QACrB,OACOzM,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA+tB,EAAA,CAAA;AACHnc,UAAAA,MAAM,EAAE2W,OAAO,CAAC9b,CAAD;AACf3F,UAAAA,QAAQ,EAAE4mB,SAAS,CAACjhB,CAAD;UACnBgX,aAAa,EAAEiK,SAAS,CAACjhB,CAAD,CAAA;SAHrB,CADP,CAAA;OADI,CAAA;KADR,EASG5H,MATH,CADJ,CAAA;;AAaA2f,IAAAA,YAAY,CAAC1d,QAAD,EAAW,mBAAX,EAAgC0c,UAAhC,CAAZ,CAAA;AACA,IAAA,OAAO3e,MAAP,CAAA;GA9WO;AAgXXomC,EAAAA,gBAAgB,EAAhB,UAAiBnkC,QAAjB,EAAmFjD,CAAnF,EAAyF;IACrF,IAAMgB,MAAM,GAAG,IAAK8lC,CAAAA,WAAL,CAAiB7jC,QAAjB,EAA2BjD,CAA3B,CAAf,CAAA;;IAGA,IAAI,CAACgB,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAED,IAAA,IAAM6oB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;AACA,IAAA,IAAMnF,OAAO,GAAGzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAA/B,CAAA;IACA,IAAMtoB,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW,WAAX,EAAwBjD,CAAxB,CAA9B,CAAA;;IAEA,IAAM2f,UAAU,GACZxjB,QAAA,CAAA;AAAAuoB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAxB;MACAtoB,MAAM,EAAEA,MAAM,CAAC0C,GAAP,CAAW,UAACorB,EAAD,EAAKthB,CAAL,EAAM;QACrB,OACOzM,QAAA,CAAAA,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA+tB,EAAA,CAAA,EACH;AAAAnc,UAAAA,MAAM,EAAE2W,OAAO,CAAC9b,CAAD,CAAf;AACA3F,UAAAA,QAAQ,EAAE4mB,SAAS,CAACjhB,CAAD,CADnB;UAEAgX,aAAa,EAAEiK,SAAS,CAACjhB,CAAD,CAAA;SAHrB,CAAA,EAIAoD,aAAa,CAAC;UACbi6C,YAAY,EAAEjlD,MAAM,CAACilD,YAAAA;SADT,EAEb/7B,EAFa,CAJb,CADP,CAAA;OADI,CAAA;KADR,EAYGlpB,MAZH,CADJ,CAAA;;AAgBA2f,IAAAA,YAAY,CAAC1d,QAAD,EAAW,cAAX,EAA2B0c,UAA3B,CAAZ,CAAA;AACA,IAAA,OAAOA,UAAP,CAAA;GA7YO;AA+YX0nB,EAAAA,mBAAmB,EAAnB,UAAoBpkC,QAApB,EAAsFjD,CAAtF,EAA4F;AACxF,IAAA,IAAM6pB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;AACA,IAAA,IAAMnF,OAAO,GAAGzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAA/B,CAAA;IACA,IAAMtoB,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW,WAAX,EAAwBjD,CAAxB,CAA9B,CAAA;AAEAugB,IAAAA,UAAU,CAACtd,QAAD,EAAW,SAAX,EAAsB,UAAAvB,WAAA,EAAW;MACvC,IAAMie,UAAU,GACZxjB,QAAA,CAAA;AAAAuoB,QAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAxB;QACAtoB,MAAM,EAAEA,MAAM,CAAC0C,GAAP,CAAW,UAACorB,EAAD,EAAKthB,CAAL,EAAM;UACrB,OACOzM,QAAA,CAAAA,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA+tB,EAAA,CAAA,EACH;AAAAnc,YAAAA,MAAM,EAAE2W,OAAO,CAAC9b,CAAD,CAAf;AACA3F,YAAAA,QAAQ,EAAE4mB,SAAS,CAACjhB,CAAD,CADnB;YAEAgX,aAAa,EAAEiK,SAAS,CAACjhB,CAAD,CAAA;WAHrB,CAAA,EAIAoD,aAAa,CAAC;YACbi6C,YAAY,EAAEvkD,WAAW,CAACukD,YAAAA;WADd,EAEb/7B,EAFa,CAJb,CADP,CAAA;SADI,CAAA;OADR,EAYGxoB,WAZH,CADJ,CAAA;;AAeAif,MAAAA,YAAY,CAAC1d,QAAD,EAAW,cAAX,EAA2B0c,UAA3B,CAAZ,CAAA;AACH,KAjBS,CAAV,CAAA;IAkBA,IAAM3e,MAAM,GAAG,IAAK+lC,CAAAA,cAAL,CAAoB9jC,QAApB,EAA8BjD,CAA9B,CAAf,CAAA;;IAEA,IAAI,CAACgB,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,IAAM2e,UAAU,GACZxjB,QAAA,CAAA;AAAAuoB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAxB;MACAtoB,MAAM,EAAEA,MAAM,CAAC0C,GAAP,CAAW,UAACorB,EAAD,EAAKthB,CAAL,EAAM;;;QACrB,OAAAzM,QAAA,CAAAA,QAAA,CAAA,EAAA,EACO+tB,EADP,CAAA,EACS;AACLnc,UAAAA,MAAM,EAAE2W,OAAO,CAAC9b,CAAD,CADV;AAEL3F,UAAAA,QAAQ,EAAE4mB,SAAS,CAACjhB,CAAD,CAFd;AAGLgX,UAAAA,aAAa,EAAEiK,SAAS,CAACjhB,CAAD,CAHnB;AAILwX,UAAAA,SAAS,EAAE,CAAAlf,EAAA,GAAAgpB,EAAE,CAAC5oB,KAAH,MAAQ,IAAR,IAAQJ,EAAA,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAQA,EAAA,CAAEkf,SAAAA;AAJhB,SADT,CAAA,CAAA;OADI,CAAA;KADR,EAUGpf,MAVH,CADJ,CAAA;;AAcA2f,IAAAA,YAAY,CAAC1d,QAAD,EAAW,iBAAX,EAA8B0c,UAA9B,CAAZ,CAAA;AACA,IAAA,OAAOA,UAAP,CAAA;GA1bO;EA4bXX,KAAK,EAAL,UAAM/b,QAAN,EAAwE;AACpEA,IAAAA,QAAQ,CAACtC,KAAT,CAAeylD,iBAAf,GAAmC,EAAnC,CAAA;AACH,GAAA;AA9bU,CAAf,CAAA;AAgcA;;;;;;;;;;;;;;;;;AAiBG;;AACH;;;;;;;;;;;;;;;;;AAiBG;;AACH;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;;AAYG;;AACH;;;;;;;;;;;;;AAaG;;AAEH;;;;;;;;;;;;AAYG;;AAGH;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;;;;;;;;;;AAmBG;;AAGH;;;;;;;;;;;;;;;;;;;AAmBG;;AAGH;;;;;;;;;;;;;;;;;;;AAmBG;;AAGH;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAGH;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAGH;;;;;;;;;;;;;;;;;;;;;AAqBG;;AC53BH,SAASwB,gBAAT,CAA0BzjD,MAA1B,EAA0Cf,IAA1C,EAAwD;AACpD,EAAA,IAAMrD,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CAAA;AACA,EAAA,IAAMykD,cAAc,GAAGl3C,oBAAoB,CAAC5Q,CAAD,CAA3C,CAAA;EACA,IAAMuH,KAAK,GAAG,QAAS3K,CAAAA,MAAT,CAASyG,IAAI,GAAG,IAAH,GAAU,EAAvB,EAAyB,GAAzB,CAAyBzG,CAAAA,MAAzB,CAA6BkrD,cAAc,CAACxoD,IAAf,CAAoB,GAApB,CAA7B,KAAA,CAAd,CAAA;AAEA,EAAA,OAAO8E,MAAM,KAAKmD,KAAX,IAAoBnD,MAAM,KAAK,qBAAtC,CAAA;AACH,CAAA;;AACD,uBAAe;AACXtD,EAAAA,OAAO,EAAE,IADE;AAEX5E,EAAAA,IAAI,EAAE,kBAFK;AAGXI,EAAAA,KAAK,EAAE,EAHI;AAIXD,EAAAA,MAAM,EAAE,CACJ,mBADI,EAEJ,cAFI,EAGJ,iBAHI,EAIJ,wBAJI,EAKJ,mBALI,EAMJ,sBANI,CAJG;AAYXupC,EAAAA,YAAY,EAAE,MAZH;AAaX96B,EAAAA,YAAY,EAAZ,UAAa5H,QAAb,EAAwEjD,CAAxE,EAA8E;AACpE,IAAA,IAAAkB,EAIF,GAAA+B,QAAQ,CAACtC,KAJP;AAAA,QACFyC,IAAI,GAAAlC,EAAA,CAAAkC,IADF;AAAA,QAEF2K,MAAM,GAAA7M,EAAA,CAAA6M,MAFJ;AAAA,QAGF9J,YAAY,kBAHV,CAAA;AAKN,IAAA,IAAMoG,SAAS,GAAG0D,MAAM,KAAN,IAAA,IAAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,MAAM,CAAEkF,KAAR,CAAc5I,SAAhC,CAAA;AACA,IAAA,IAAMy9C,SAAS,GAAG1kD,IAAI,GAChB,kBAAA,CAAYa,YAAY,CAAC5E,IAAb,CAAkB,GAAlB,CAAZ,EAAqC,GAArC,CADgB,GAEhB,SAAA,OAAA,CAAUiX,kBAAkB,CAACrS,YAAD,EAAe,IAAf,CAA5B,EAAgD,GAAhD,CAFN,CAAA;IAGA,IAAM8jD,cAAc,GAAG,CAAC19C,SAAD,IAAcA,SAAS,KAAK,MAA5B,GAAqCy9C,SAArC,GAAiDz9C,SAAxE,CAAA;AAEArK,IAAAA,CAAC,CAACsB,KAAF,CAAQwJ,eAAR,GAA0B88C,gBAAgB,CAACG,cAAD,EAAiB3kD,IAAjB,CAAhB,GAAyC,EAAzC,GAA8C4H,UAAU,CAAC+8C,cAAD,CAAlF,CAAA;GAzBO;EA2BXC,UAAU,EAAV,UAAWhoD,CAAX,EAAiB;AACb,IAAA,IAAMsB,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;IAEAA,KAAK,CAACsK,SAAN,GAAkB,EAAlB,CAAA;AACAtK,IAAAA,KAAK,CAACiE,cAAN,GAAuBvF,CAAC,CAACsB,KAAF,CAAQwJ,eAA/B,CAAA;IACAxJ,KAAK,CAACmE,4BAAN,GAAqC,EAArC,CAAA;GAhCO;AAkCXwiD,EAAAA,mBAAmB,EAAnB,UAAoBhlD,QAApB,EAA+EjD,CAA/E,EAAqF;AACjF,IAAA,OAAOwf,UAAU,CAAsBvc,QAAtB,EAAgCjD,CAAhC,EAAmC;MAChD6K,YAAY,EAAE,UAACR,SAAD,EAA6B;AACvCrK,QAAAA,CAAC,CAACsB,KAAF,CAAQwJ,eAAR,GAA0BC,OAAO,CAACV,SAAD,CAAP,GAAqBA,SAArB,GAAiCW,UAAU,CAACX,SAAD,CAArE,CAAA;OAF4C;AAIhDxJ,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OAAAA;AAJmC,KAAnC,CAAjB,CAAA;GAnCO;AA0CXqnD,EAAAA,cAAc,EAAd,UAAejlD,QAAf,EAA0EjD,CAA1E,EAAgF;AAC5E,IAAA,OAAOwf,UAAU,CAAiBvc,QAAjB,EAA2BjD,CAA3B,EAA8B;AAC3Ca,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OAAAA;AAD8B,KAA9B,CAAjB,CAAA;GA3CO;AA+CXsB,EAAAA,SAAS,EAAT,UAAUc,QAAV,EAAqEjD,CAArE,EAA2E;AACvE,IAAA,IAAA,CAAK6K,YAAL,CAAkB5H,QAAlB,EAA4BjD,CAA5B,CAAA,CAAA;IACA,IAAKgoD,CAAAA,UAAL,CAAgBhoD,CAAhB,CAAA,CAAA;AAEA2gB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,qBAAX,EAAkC,IAAA,CAAKglD,mBAAL,CAAyBhlD,QAAzB,EAAmCjD,CAAnC,CAAlC,CAAZ,CAAA;GAnDO;AAqDXsC,EAAAA,IAAI,EAAJ,UAAKW,QAAL,EAAgEjD,CAAhE,EAAsE;IAClE,IAAKgoD,CAAAA,UAAL,CAAgBhoD,CAAhB,CAAA,CAAA;IACA2gB,YAAY,CAAC1d,QAAD,EAAW,gBAAX,EAA6Buc,UAAU,CAAiBvc,QAAjB,EAA2BjD,CAA3B,EAA8B;AAC7Ea,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OAAAA;AADgE,KAA9B,CAAvC,CAAZ,CAAA;GAvDO;AA2DX6lC,EAAAA,OAAO,EAAP,UAAQzjC,QAAR,EAAmEjD,CAAnE,EAAyE;IACrE2gB,YAAY,CAAC1d,QAAD,EAAW,mBAAX,EAAgCuc,UAAU,CAAoBvc,QAApB,EAA8BjD,CAA9B,EAAiC;AACnFa,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OADsE;MAEnFmB,MAAM,EAAEhC,CAAC,CAACgC,MAAAA;AAFyE,KAAjC,CAA1C,CAAZ,CAAA;GA5DO;AAiEXglC,EAAAA,cAAc,EAAd,UAAe/jC,QAAf,EAAwEjD,CAAxE,EAA8E;IAA9E,IAmBCmoD,KAAA,GAAA,IAnBD,CAAA;;AACI,IAAA,IAAA,CAAKhmD,SAAL,CAAec,QAAf,EAAyBjD,CAAzB,CAAA,CAAA;IAEA,IAAM5D,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW,kBAAX,EAA+BjD,CAA/B,CAA9B,CAAA;AACA,IAAA,IAAM6pB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;IACA,IAAMpK,MAAM,GAAGrjB,MAAM,CAAC0C,GAAP,CAAW,UAACsrB,UAAD,EAAaxhB,CAAb,EAAc;AACpC,MAAA,IAAMuhB,aAAa,GAAGN,SAAS,CAACjhB,CAAD,CAA/B,CAAA;;AAEAu/C,MAAAA,KAAI,CAACt9C,YAAL,CAAkBsf,aAAlB,EAAiCC,UAAjC,CAAA,CAAA;;MACA+9B,KAAI,CAACH,UAAL,CAAgB59B,UAAhB,CAAA,CAAA;;AAEA,MAAA,OAAO+9B,KAAI,CAACF,mBAAL,CAAyB99B,aAAzB,EAAwCC,UAAxC,CAAP,CAAA;AACH,KAPc,CAAf,CAAA;IAQAzJ,YAAY,CAAC1d,QAAD,EAAW,0BAAX,EAAuCuc,UAAU,CAA2Bvc,QAA3B,EAAqCjD,CAArC,EAAwC;AACjGa,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OADoF;AAEjG6jB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAFyE;MAGjG7Z,YAAY,gBAHqF;AAIjGzO,MAAAA,MAAM,EAAEqjB,MAAAA;AAJyF,KAAxC,CAAjD,CAAZ,CAAA;GA9EO;AAqFXwnB,EAAAA,SAAS,EAAT,UAAUhkC,QAAV,EAAmEjD,CAAnE,EAAyE;IAAzE,IAgBCmoD,KAAA,GAAA,IAhBD,CAAA;;AACI,IAAA,IAAA,CAAK7lD,IAAL,CAAUW,QAAV,EAAoBjD,CAApB,CAAA,CAAA;IAEA,IAAM5D,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW,kBAAX,EAA+BjD,CAA/B,CAA9B,CAAA;AACA,IAAA,IAAM6pB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;IACA,IAAMpK,MAAM,GAAGrjB,MAAM,CAAC0C,GAAP,CAAW,UAACsrB,UAAD,EAAaxhB,CAAb,EAAc;AACpC,MAAA,IAAMuhB,aAAa,GAAGN,SAAS,CAACjhB,CAAD,CAA/B,CAAA;;MAEAu/C,KAAI,CAACH,UAAL,CAAgB59B,UAAhB,CAAA,CAAA;;AACA,MAAA,OAAO+9B,KAAI,CAACD,cAAL,CAAoB/9B,aAApB,EAAmCC,UAAnC,CAAP,CAAA;AACH,KALc,CAAf,CAAA;IAMAzJ,YAAY,CAAC1d,QAAD,EAAW,qBAAX,EAAkCuc,UAAU,CAAsBvc,QAAtB,EAAgCjD,CAAhC,EAAmC;AACvFa,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OAD0E;AAEvF6jB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAF+D;AAGvFtoB,MAAAA,MAAM,EAAEqjB,MAAAA;AAH+E,KAAnC,CAA5C,CAAZ,CAAA;GAhGO;AAsGXynB,EAAAA,YAAY,EAAZ,UAAajkC,QAAb,EAAsEjD,CAAtE,EAA4E;AACxE,IAAA,IAAA,CAAK0mC,OAAL,CAAazjC,QAAb,EAAuBjD,CAAvB,CAAA,CAAA;IAEA2gB,YAAY,CAAC1d,QAAD,EAAW,wBAAX,EAAqCuc,UAAU,CAAyBvc,QAAzB,EAAmCjD,CAAnC,EAAsC;AAC7Fa,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OADgF;MAE7FmB,MAAM,EAAEhC,CAAC,CAACgC,MAFmF;AAG7F0iB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAHqE,KAAtC,CAA/C,CAAZ,CAAA;GAzGO;AA+GXmiB,EAAAA,gBAAgB,EAAhB,UAAiB5jC,QAAjB,EAA4EjD,CAA5E,EAAkF;AAC9E,IAAA,OAAO,KAAKmC,SAAL,CAAec,QAAf,EAAyBjD,CAAzB,CAAP,CAAA;GAhHO;AAkHX8mC,EAAAA,WAAW,EAAX,UAAY7jC,QAAZ,EAAuEjD,CAAvE,EAA6E;AACzE,IAAA,OAAO,KAAKsC,IAAL,CAAUW,QAAV,EAAoBjD,CAApB,CAAP,CAAA;GAnHO;AAqHX+mC,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAA0EjD,CAA1E,EAAgF;AAC5E,IAAA,OAAO,KAAK0mC,OAAL,CAAazjC,QAAb,EAAuBjD,CAAvB,CAAP,CAAA;GAtHO;AAwHXmnC,EAAAA,qBAAqB,EAArB,UAAsBlkC,QAAtB,EAA+EjD,CAA/E,EAAqF;AACjF,IAAA,OAAO,KAAKgnC,cAAL,CAAoB/jC,QAApB,EAA8BjD,CAA9B,CAAP,CAAA;GAzHO;AA2HXonC,EAAAA,gBAAgB,EAAhB,UAAiBnkC,QAAjB,EAA0EjD,CAA1E,EAAgF;AAC5E,IAAA,OAAO,KAAKinC,SAAL,CAAehkC,QAAf,EAAyBjD,CAAzB,CAAP,CAAA;GA5HO;AA8HXqnC,EAAAA,mBAAmB,EAAnB,UAAoBpkC,QAApB,EAA6EjD,CAA7E,EAAmF;AAC/E,IAAA,OAAO,KAAKknC,YAAL,CAAkBjkC,QAAlB,EAA4BjD,CAA5B,CAAP,CAAA;AACH,GAAA;AAhIU,CAAf;;ACVA,iBAAe;AACX/D,EAAAA,IAAI,EAAE,YADK;AAEXI,EAAAA,KAAK,EAAE,EAFI;AAGXD,EAAAA,MAAM,EAAE,CACJ,aADI,EAEJ,QAFI,EAGJ,WAHI,EAIJ,kBAJI,EAKJ,aALI,EAMJ,gBANI,CAHG;AAWXupC,EAAAA,YAAY,EAAE,MAXH;AAYXxjC,EAAAA,SAAS,EAAT,UAAUc,QAAV,EAA+DjD,CAA/D,EAAqE;IACjE2gB,YAAY,CAAC1d,QAAD,EAAW,eAAX,EAA4Buc,UAAU,CAAgBvc,QAAhB,EAA0BjD,CAA1B,EAA6B;AAC3Ea,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OAAAA;AAD8D,KAA7B,CAAtC,CAAZ,CAAA;GAbO;AAiBXyB,EAAAA,IAAI,EAAJ,UAAKW,QAAL,EAA0DjD,CAA1D,EAAgE;AAC5D2gB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,UAAX,EAAuB,IAAA,CAAKilD,cAAL,CAAoBjlD,QAApB,EAA8BjD,CAA9B,CAAvB,CAAZ,CAAA;GAlBO;AAoBXkqC,EAAAA,SAAS,EAAT,UAAUjnC,QAAV,EAA+DjD,CAA/D,EAAqE;IACjE,IAAIA,CAAC,CAACooD,WAAN,EAAmB;AACf,MAAA,OAAO,KAAK9lD,IAAL,CAAUW,QAAV,EAAoBjD,CAApB,CAAP,CAAA;AACH,KAAA;GAvBM;AAyBX0mC,EAAAA,OAAO,EAAP,UAAQzjC,QAAR,EAA6DjD,CAA7D,EAAmE;AAC/D2gB,IAAAA,YAAY,CAAC1d,QAAD,EAAW,aAAX,EAA0B,IAAA,CAAKolD,iBAAL,CAAuBplD,QAAvB,EAAiCjD,CAAjC,CAA1B,CAAZ,CAAA;GA1BO;AA4BXgnC,EAAAA,cAAc,EAAd,UAAe/jC,QAAf,EAAkEjD,CAAlE,EAAwE;IACpE2gB,YAAY,CAAC1d,QAAD,EAAW,oBAAX,EAAiCuc,UAAU,CAAqBvc,QAArB,EAA+BjD,CAA/B,EAAkC;AACrFa,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OADwE;AAErF6jB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAAAA;AAF6D,KAAlC,CAA3C,CAAZ,CAAA;GA7BO;AAkCXuiB,EAAAA,SAAS,EAAT,UAAUhkC,QAAV,EAA6DjD,CAA7D,EAAmE;IAAnE,IAgBCmoD,KAAA,GAAA,IAhBD,CAAA;;IACI,IAAM/rD,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW,kBAAX,EAA+BjD,CAA/B,CAA9B,CAAA;AACA,IAAA,IAAM6pB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;IACA,IAAMpK,MAAM,GAAGrjB,MAAM,CAAC0C,GAAP,CAAW,UAACsrB,UAAD,EAAaxhB,CAAb,EAAc;AACpC,MAAA,IAAMuhB,aAAa,GAAGN,SAAS,CAACjhB,CAAD,CAA/B,CAAA;AAEA,MAAA,OAAOu/C,KAAI,CAACD,cAAL,CAAoB/9B,aAApB,EAAmCC,UAAnC,CAAP,CAAA;AACH,KAJc,CAAf,CAAA;AAMAzJ,IAAAA,YAAY,CAAC1d,QAAD,EAAW,eAAX,EAA4Buc,UAAU,CAAgBvc,QAAhB,EAA0BjD,CAA1B;AAC9Ca,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa;AACb6jB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB;MACxBra,SAAS,EAAEqB,oBAAoB,CAAC1L,CAAD,CAAA;OAC5BgM,aAAa,CAACL,YAAY,CAAC3L,CAAD,CAAb,IAAiB;AACjC5D,MAAAA,MAAM,EAAEqjB,MAAAA;MALsC,CAAtC,CAAZ,CAAA;GA3CO;AAmDXynB,EAAAA,YAAY,EAAZ,UAAajkC,QAAb,EAAgEjD,CAAhE,EAAsE;IAAtE,IAiBCmoD,KAAA,GAAA,IAjBD,CAAA;;IACI,IAAM/rD,MAAM,GAAGstB,eAAe,CAACzmB,QAAD,EAAW,kBAAX,EAA+BjD,CAA/B,CAA9B,CAAA;AACA,IAAA,IAAM6pB,SAAS,GAAG5mB,QAAQ,CAAC4mB,SAA3B,CAAA;IACA,IAAMpK,MAAM,GAAGrjB,MAAM,CAAC0C,GAAP,CAAW,UAACsrB,UAAD,EAAaxhB,CAAb,EAAc;AACpC,MAAA,IAAMuhB,aAAa,GAAGN,SAAS,CAACjhB,CAAD,CAA/B,CAAA;AAEA,MAAA,OAAOu/C,KAAI,CAACE,iBAAL,CAAuBl+B,aAAvB,EAAsCC,UAAtC,CAAP,CAAA;AACH,KAJc,CAAf,CAAA;AAMAzJ,IAAAA,YAAY,CAAC1d,QAAD,EAAW,kBAAX,EAA+Buc,UAAU,CAAmBvc,QAAnB,EAA6BjD,CAA7B,EACjD7D,QAAA,CAAA;AAAA0E,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OAAb;MACAmB,MAAM,EAAEhC,CAAC,CAACgC,MADV;AAEA0iB,MAAAA,OAAO,EAAEzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAFxB;AAGAtoB,MAAAA,MAAM,EAAEqjB,MAHR;MAIApV,SAAS,EAAEqB,oBAAoB,CAAC1L,CAAD,CAAA;KAJ/B,EAKGgM,aAAa,CAACL,YAAY,CAAC3L,CAAD,CAAb,CALhB,CADiD,CAAzC,CAAZ,CAAA;GA5DO;AAqEX6mC,EAAAA,gBAAgB,EAAhB,UAAiB5jC,QAAjB,EAAsEjD,CAAtE,EAA4E;AACxE,IAAA,OAAO,KAAKmC,SAAL,CAAec,QAAf,EAAyBjD,CAAzB,CAAP,CAAA;GAtEO;AAwEX8mC,EAAAA,WAAW,EAAX,UAAY7jC,QAAZ,EAAiEjD,CAAjE,EAAuE;AACnE,IAAA,OAAO,KAAKsC,IAAL,CAAUW,QAAV,EAAoBjD,CAApB,CAAP,CAAA;GAzEO;AA2EXgtC,EAAAA,gBAAgB,EAAhB,UAAiB/pC,QAAjB,EAAsEjD,CAAtE,EAA4E;AACxE,IAAA,OAAO,KAAKkqC,SAAL,CAAejnC,QAAf,EAAyBjD,CAAzB,CAAP,CAAA;GA5EO;AA8EX+mC,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAAoEjD,CAApE,EAA0E;AACtE,IAAA,OAAO,KAAK0mC,OAAL,CAAazjC,QAAb,EAAuBjD,CAAvB,CAAP,CAAA;GA/EO;AAiFXmnC,EAAAA,qBAAqB,EAArB,UAAsBlkC,QAAtB,EAAyEjD,CAAzE,EAA+E;AAC3E,IAAA,OAAO,KAAKgnC,cAAL,CAAoB/jC,QAApB,EAA8BjD,CAA9B,CAAP,CAAA;GAlFO;AAoFXonC,EAAAA,gBAAgB,EAAhB,UAAiBnkC,QAAjB,EAAoEjD,CAApE,EAA0E;AACtE,IAAA,OAAO,KAAKinC,SAAL,CAAehkC,QAAf,EAAyBjD,CAAzB,CAAP,CAAA;GArFO;AAuFXqnC,EAAAA,mBAAmB,EAAnB,UAAoBpkC,QAApB,EAAuEjD,CAAvE,EAA6E;AACzE,IAAA,OAAO,KAAKknC,YAAL,CAAkBjkC,QAAlB,EAA4BjD,CAA5B,CAAP,CAAA;GAxFO;AA0FXkoD,EAAAA,cAAc,EAAd,UAAejlD,QAAf,EAAoEjD,CAApE,EAA0E;AACtE,IAAA,OAAOwf,UAAU,CAAWvc,QAAX,EAAqBjD,CAArB,EAAsB7D,QAAA,CAAA;AACnC0E,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OADsB;MAEnCwJ,SAAS,EAAEqB,oBAAoB,CAAC1L,CAAD,CAAA;KAFI,EAGhCgM,aAAa,CAACL,YAAY,CAAC3L,CAAD,CAAb,CAHmB,CAAtB,CAAjB,CAAA;GA3FO;AAiGXqoD,EAAAA,iBAAiB,EAAjB,UAAkBplD,QAAlB,EAAuEjD,CAAvE,EAA6E;AACzE,IAAA,OAAOwf,UAAU,CAAcvc,QAAd,EAAwBjD,CAAxB,EACb7D,QAAA,CAAA;AAAA0E,MAAAA,OAAO,EAAE,CAAC,CAACb,CAAC,CAACa,OAAb;MACAmB,MAAM,EAAEhC,CAAC,CAACgC,MADV;MAEAqI,SAAS,EAAEqB,oBAAoB,CAAC1L,CAAD,CAAA;KAF/B,EAGGgM,aAAa,CAACL,YAAY,CAAC3L,CAAD,CAAb,CAHhB,CADa,CAAjB,CAAA;AAMH,GAAA;AAxGU,CAAf;;ACFgB,SAAAsoD,WAAA,CACZrlD,QADY,EAEZslD,QAFY,EAGZC,cAHY,EAIZC,UAJY,EAKZC,SALY,EAMZ1oD,CANY,EAOZ2oD,cAPY,EAOY;AAExB,EAAA,IAAM3+B,OAAO,GAAG0+B,SAAS,KAAK,OAA9B,CAAA;AACA,EAAA,IAAM36C,MAAM,GAAG9K,QAAQ,CAACtC,KAAT,CAAeoN,MAA9B,CAAA;AACA,EAAA,IAAMoV,SAAS,GAAGnjB,CAAC,CAACmjB,SAApB,CAAA;;EAEA,IACI,CAACpV,MAAD,IACIic,OAAO,IAAIy+B,UAAU,CAACrpD,OAAX,CAAmB,SAAnB,CAAA,GAAgC,CAAC,CAA5C,IACG,CAAC+jB,SADJ,IACiBlgB,QAAQ,CAACo0C,WAAT,KAAyBr3C,CAAC,CAACqB,UAAF,CAAa0M,MAH/D,EAIE;AACE,IAAA,OAAO,KAAP,CAAA;AACH,GAZuB;;;AAcxB,EAAA,IAAM2a,SAAS,GAAG,EAAG/rB,CAAAA,MAAH,CAAG6rD,cAAH,CAAA,OAAA,CAAoBC,UAApB,CAAA,CAA8B9rD,MAA9B,CAAiC+rD,SAAjC,CAAlB,CAAA;AACA,EAAA,IAAME,aAAa,GAAG,EAAAjsD,CAAAA,MAAA,CAAG6rD,cAAH,CAAoB7rD,CAAAA,MAApB,CAAoB8rD,UAApB,aAAA,CAAtB,CAAA;AACA,EAAA,IAAMj6C,KAAK,GAAGk6C,SAAS,KAAK,KAA5B,CAAA;AACA,EAAA,IAAM5gD,OAAO,GAAG4gD,SAAS,KAAK,OAA9B,CAAA;AACA,EAAA,IAAMG,YAAY,GAAG7+B,OAAO,KACxB,CAAC/mB,QAAQ,CAACoK,WAAV,IAAyB,CAACpK,QAAQ,CAACqK,YAAnC,IACI,CAACrK,QAAQ,CAACoK,WAAT,CAAqBpL,MAArB,EAAD,IAAkC,CAACgB,QAAQ,CAACqK,YAAT,CAAsBrL,MAAtB,EAFf,CAA5B,CAAA;;AAKA,EAAA,IAAI4mD,YAAJ,EAAkB;AACd5lD,IAAAA,QAAQ,CAAC6lD,UAAT,CAAoBJ,SAApB,EAA+B,IAA/B,EAAqC,KAArC,CAAA,CAAA;AACH,GAAA;;AACD1oD,EAAAA,CAAC,CAACkyC,WAAF,GAAgBlyC,CAAC,CAAC2C,KAAlB,CAAA;AACA3C,EAAAA,CAAC,CAACmyC,WAAF,GAAgBnyC,CAAC,CAAC4C,KAAlB,CAAA;;AACA,EAAA,IAAI8lD,SAAS,KAAK,EAAd,IAAoB,CAACvlC,SAAzB,EAAoC;AAChC;AACA1hB,IAAAA,eAAe,CAACwB,QAAQ,CAACtC,KAAV,EAAiBX,CAAjB,CAAf,CAAA;AACH,GA/BuB;;;AAiCxB,EAAA,IAAM+gB,KAAK,GAAgB5Z,aAAA,CAAA,EAAA,EAAAlE,QAAgB,CAACslD,QAAD,CAAhB,MAAA,CAA3B,CAAA;;AAEA,EAAA,IAAIplC,SAAJ,EAAe;AACX,IAAA,IAAM4lC,aAAW,GAAG/oD,CAAC,CAACojB,WAAtB,CAAA;;AAEA,IAAA,IAAI,CAACrC,KAAK,CAACK,IAAN,CAAW,UAAAllB,IAAA,EAAI;AAAI,MAAA,OAAAA,IAAI,CAACD,IAAL,KAAc8sD,aAAd,CAAA;AAAyB,KAA5C,CAAL,EAAoD;AAChDhoC,MAAAA,KAAK,CAAC1X,IAAN,CAAUqK,KAAV,CAAAqN,KAAA,EAAc9d,QAAQ,CAAC5G,KAAT,CAAe0kB,KAAf,CAAsB/a,MAAtB,CAA6B,UAAA9J,IAAA,EAAQ;AAAA,QAAA,OAAAA,IAAI,CAACD,IAAL,KAAc8sD,aAAd,CAAA;AAAyB,OAA9D,CAAd,CAAA,CAAA;AACH,KAAA;AACJ,GAAA;;EACD,IAAI,CAAChoC,KAAK,CAACvb,MAAP,IAAiBub,KAAK,CAAC8G,KAAN,CAAY,UAAA3rB,IAAA,EAAI;IAAI,OAAAA,IAAI,CAACypC,YAAL,CAAA;AAAiB,GAArC,CAArB,EAA6D;AACzD,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;;EACD,IAAMqjB,UAAU,GAAW7hD,aAAC,CAAAA,aAAA,CAAA,CAAA8hD,gBAAA,CAAA,EAAqBloC,KAArB,EAA0B,IAA1B,CAAA,EAA0B,CAAEmoC,UAAF,CAA1B,EAAsC,KAAtC,CAAD,CAAyCljD,MAAzC,CAAgD,UAAC9J,IAAD,EAAU;IAAK,OAAAA,IAAI,CAACwsB,SAAD,CAAJ,CAAA;AAAe,GAA9E,CAA3B,CAAA;;AACA,EAAA,IAAMpnB,KAAK,GAAGtB,CAAC,CAACsB,KAAhB,CAAA;;AAEA,EAAA,IAAIunD,YAAJ,EAAkB;AACdG,IAAAA,UAAU,CAAC5yC,OAAX,CAAmB,UAAAla,IAAA,EAAI;MACnBA,IAAI,CAAC8iB,KAAL,IAAc9iB,IAAI,CAAC8iB,KAAL,CAAW/b,QAAX,CAAd,CAAA;KADJ,CAAA,CAAA;AAGH,GAAA;;AAED,EAAA,IAAM5B,UAAU,GAAGrB,CAAC,CAACqB,UAArB,CAAA;AACA,EAAA,IAAI4vC,WAAJ,CAAA;;EAEA,IAAIziC,KAAK,IAAInN,UAAb,EAAyB;AACrB4vC,IAAAA,WAAW,GAAG5iC,QAAQ,CAAC86C,gBAAT,CAA0BnpD,CAAC,CAACuC,OAA5B,EAAqCvC,CAAC,CAACwC,OAAvC,CAAmDnB,IAAAA,UAAU,CAAC0M,MAA5E,CAAA;AACH,GAAA;;EACD,IAAIq6C,WAAW,GAAG,CAAlB,CAAA;EAEA,IAAIgB,UAAU,GAAG,KAAjB,CAAA;;EACA,IAAMnpC,IAAI,GAAG,YAAA;;;AACTmpC,IAAAA,UAAU,GAAG,IAAb,CAAA;IACA,CAAAloD,EAAA,GAAAlB,CAAC,CAACigB,IAAF,MAAA,IAAA,IAAA/e,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAgf,IAAA,CAAAlgB,CAAA,CAAA,CAAA;GAFJ,CAAA;;EAIA,IAAMqpD,OAAO,GAAGL,UAAU,CAAChjD,MAAX,CAAkB,UAAC9J,IAAD,EAAU;AACxC,IAAA,IAAM6E,QAAQ,GAAG7E,IAAI,CAACD,IAAtB,CAAA;AACA,IAAA,IAAMqtD,SAAS,GAAGhoD,KAAK,CAACP,QAAD,CAAL,KAAoBO,KAAK,CAACP,QAAD,CAAL,GAAkB,EAAtC,CAAlB,CAAA;;AAEA,IAAA,IAAIipB,OAAJ,EAAa;AACTs/B,MAAAA,SAAS,CAACvpC,YAAV,GAAyB,CAAC7jB,IAAI,CAAC0sD,aAAD,CAAL,IAAwB1sD,IAAI,CAAC0sD,aAAD,CAAJ,CAAoB3lD,QAApB,EAA8BjD,CAA9B,CAAjD,CAAA;AACH,KAAA;;IAED,IAAIspD,SAAS,CAACvpC,YAAd,EAA4B;AACxB,MAAA,IAAM/e,MAAM,GAAG9E,IAAI,CAACwsB,SAAD,CAAJ,CAAgBzlB,QAAhB,EACR9G,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA6D,CAAA,CAAA,EACH;AAAAigB,QAAAA,IAAI,EAAAA,IAAJ;AACAmoC,QAAAA,WAAW,EAAAA,WADX;AAEA9mD,QAAAA,KAAK,EAAEgoD,SAFP;AAGA/nD,QAAAA,aAAa,EAAED,KAHf;AAIA2vC,QAAAA,WAAW,EAAAA,WAAAA;AAJX,OADG,CADQ,CAAf,CAAA;;MASChuC,QAAgB,CAACwd,QAAjB,CAA0B8oC,GAA1B,EAAA,CAAA;;AACD,MAAA,IAAIv/B,OAAO,IAAIhpB,MAAM,KAAK,KAA1B,EAAiC;QAC7BsoD,SAAS,CAACvpC,YAAV,GAAyB,KAAzB,CAAA;AACH,OAAA;;MACDqoC,WAAW,IAAIpnD,MAAM,IAAIsoD,SAAS,CAACvpC,YAApB,GAAmC,CAAnC,GAAuC,CAAtD,CAAA;AACA,MAAA,OAAO/e,MAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,KAAP,CAAA;AACH,GA1Be,CAAhB,CAAA;AA4BA,EAAA,IAAMwoD,QAAQ,GAAGH,OAAO,CAAC7jD,MAAzB,CAAA;AACA,EAAA,IAAIikD,UAAU,GAAG,KAAjB,CAhGwB;;AAmGxB,EAAA,IAAIL,UAAJ,EAAgB;AACZK,IAAAA,UAAU,GAAG,IAAb,CAAA;AACH,GAAA;;EACD,IAAI,CAACA,UAAD,IAAez/B,OAAf,IAA0Bg/B,UAAU,CAACxjD,MAArC,IAA+C,CAACgkD,QAApD,EAA8D;AAC1DC,IAAAA,UAAU,GAAGT,UAAU,CAAChjD,MAAX,CAAkB,UAAA9J,IAAA,EAAI;AAC/B,MAAA,IAAM6E,QAAQ,GAAG7E,IAAI,CAACD,IAAtB,CAAA;AACA,MAAA,IAAMqtD,SAAS,GAAGhoD,KAAK,CAACP,QAAD,CAAvB,CAAA;;MAEA,IAAIuoD,SAAS,CAACvpC,YAAd,EAA4B;AACxB,QAAA,IAAI7jB,IAAI,CAACypC,YAAL,KAAsB,QAA1B,EAAoC;AAChC,UAAA,OAAO,KAAP,CAAA;AACH,SAHuB;;;AAKxB,QAAA,OAAO,IAAP,CAAA;AACH,OAV8B;;;AAY/B,MAAA,OAAO,KAAP,CAAA;AACH,KAbY,EAaVngC,MAbH,CAAA;AAcH,GAAA;;EAED,IAAIgJ,KAAK,IAAIi7C,UAAb,EAAyB;AACrBxmD,IAAAA,QAAQ,CAACtC,KAAT,CAAeQ,MAAf,GAAwB,EAAxB,CAAA;;IAEA,IAAK8B,QAAmC,CAAC4mB,SAAzC,EAAoD;AAC/C5mB,MAAAA,QAAmC,CAAC4mB,SAApC,CAA8CzT,OAA9C,CAAsD,UAAA+T,aAAA,EAAa;AAChEA,QAAAA,aAAa,CAACxpB,KAAd,CAAoBQ,MAApB,GAA6B,EAA7B,CAAA;OADH,CAAA,CAAA;AAGJ,KAAA;;AACD6nD,IAAAA,UAAU,CAAC5yC,OAAX,CAAmB,UAAAla,IAAA,EAAI;MACnBA,IAAI,CAAC8iB,KAAL,IAAc9iB,IAAI,CAAC8iB,KAAL,CAAW/b,QAAX,CAAd,CAAA;KADJ,CAAA,CAAA;AAGH,GAAA;;AACD,EAAA,IAAI+mB,OAAO,IAAI,CAACy/B,UAAZ,IAA0B,CAACtmC,SAA3B,IAAwCqmC,QAAxC,IAAoDvmD,QAAQ,CAAC5G,KAAT,CAAeqtD,cAAvE,EAAuF;AACnF1pD,IAAAA,CAAC,SAAD,IAAAA,CAAC,KAAA,KAAA,CAAD,GAAC,KAAA,CAAD,GAAAA,CAAC,CAAE0pD,cAAH,EAAA,CAAA;AACH,GAAA;;AACD,EAAA,IAAIzmD,QAAQ,CAAC0mD,WAAT,IAAwBF,UAA5B,EAAwC;AACpC,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;;EACD,IAAK,CAACz/B,OAAD,IAAYw/B,QAAZ,IAAwB,CAACb,cAA1B,IAA6Cn6C,KAAjD,EAAwD;IACpD,IAAMo7C,SAAS,GAAG3mD,QAAQ,CAAC5G,KAAT,CAAeutD,SAAf,IAA4Bj2C,WAA9C,CAAA;AAEAi2C,IAAAA,SAAS,CAAC,YAAA;MACN3mD,QAAQ,CAAC6lD,UAAT,CAAoBt6C,KAAK,GAAGk6C,SAAH,GAAe,EAAxC,EAA4C,IAA5C,EAAkD,KAAlD,CAAA,CAAA;AACAzlD,MAAAA,QAAQ,CAAC4mD,WAAT,EAAA,CAAA;AACH,KAHQ,CAAT,CAAA;AAKH,GAAA;;AACD,EAAA,IAAI,CAAC7/B,OAAD,IAAY,CAACxb,KAAb,IAAsB,CAAC1G,OAAvB,IAAkC0hD,QAAlC,IAA8C,CAACb,cAAnD,EAAmE;AAC/DL,IAAAA,WAAW,CAACrlD,QAAD,EAAWslD,QAAX,EAAqBC,cAArB,EAAqCC,UAArC,EAAiDC,SAAS,GAAG,OAA7D,EAAsE1oD,CAAtE,CAAX,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,IAAP,CAAA;AACH,CAAA;AAEK,SAAU8pD,mBAAV,CAA8B7mD,QAA9B,EAAgE;EAClE,OAAO,UAACjD,CAAD,EAAyB;AAExB,IAAA,IAAA+pD,UAAU,GACV9mD,QAAQ,CAAC5G,KAAT,WADA,CAAA;AAEJ,IAAA,IAAM2tD,WAAW,GAAGhqD,CAAC,CAACqB,UAAF,CAAa0M,MAAjC,CAAA;AACA,IAAA,IAAMspC,WAAW,GAAGp0C,QAAQ,CAACo0C,WAA7B,CAAA;IAEA,OAAO0S,UAAU,KAAKC,WAAW,KAAKD,UAAhB,IAA8BA,UAAU,CAAC9Z,QAAX,CAAoB+Z,WAApB,CAAnC,CAAV,IACAA,WAAW,KAAK3S,WADhB,IAEC,CAACp0C,QAAQ,CAACgnD,iBAAT,CAA2BD,WAA3B,CAAD,IAA4C,CAAC/mD,QAAQ,CAACinD,UAAT,CAAoBja,QAApB,CAA6B+Z,WAA7B,CAF9C,IAGA3mC,QAAQ,CAAC2mC,WAAD,EAAc,eAAd,CAHR,IAIA3mC,QAAQ,CAAC2mC,WAAD,EAAc,kBAAd,CAJR,IAKA3mC,QAAQ,CAAC2mC,WAAD,EAAc,wBAAd,CALf,CAAA;GAPJ,CAAA;AAcH,CAAA;SAEeG,mBACZlnD,UACAmnD,gBACA3B,YAAkB;AAElB,EAAA,IAAMyB,UAAU,GAAGjnD,QAAQ,CAACinD,UAA5B,CAAA;EACA,IAAMxlC,OAAO,GAAoC,EAAjD,CAAA;AACA,EAAA,IAAMqlC,UAAU,GAAG9mD,QAAQ,CAAC5G,KAAT,CAAe0tD,UAAlC,CAAA;EAEArlC,OAAO,CAACrb,IAAR,CAAa6gD,UAAb,CAAA,CAAA;;EAEA,IAAI,CAACjnD,QAAQ,CAAC5G,KAAT,CAAem7C,QAAhB,IAA4BuS,UAAhC,EAA4C;IACxCrlC,OAAO,CAACrb,IAAR,CAAa+gD,cAAb,CAAA,CAAA;AACH,GAAA;;EAED,OAAOC,YAAY,CAACpnD,QAAD,EAAWyhB,OAAX,EAAoB,aAApB,EAAmC+jC,UAAnC,EAA+C;AAC9DtmD,IAAAA,SAAS,EAAE2nD,mBAAmB,CAAC7mD,QAAD,CADgC;IAE9DslB,UAAU,EAAEuhC,mBAAmB,CAAC7mD,QAAD,CAAA;AAF+B,GAA/C,CAAnB,CAAA;AAIH,CAAA;AACK,SAAUonD,YAAV,CACFpnD,QADE,EAEF8K,MAFE,EAGFw6C,QAHE,EAIFE,UAJE,EAKF6B,kBALE,EAKmC;AAArC,EAAA,IAAAA,kBAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,kBAAqC,GAAA,EAArC,CAAA;AAAqC,GAAA;;AAErC,EAAA,IAAMC,aAAa,GAAGhC,QAAQ,KAAK,aAAnC,CAAA;AACM,EAAA,IAAArnD,EAAA,GAOF+B,QAAQ,CAAC5G,KAPP;AAAA,MACFmuD,YAAY,GAAAtpD,EAAA,CAAAspD,YADV;AAAA,MAEFC,cAAc,GAAAvpD,EAAA,CAAAupD,cAFZ;AAAA,MAGFC,uBAAuB,GAAAxpD,EAAA,CAAAwpD,uBAHrB;AAAA,MAIFC,mBAAmB,GAAAzpD,EAAA,CAAAypD,mBAJjB;AAAA,MAKFC,UAAU,GAAA1pD,EAAA,CAAA0pD,UALR;AAAA,MAMF3pD,EAAqB,GAAAC,EAAA,CAAAwoD,cANnB;MAMFA,cAAc,GAAAzoD,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAOA,EANnB,CAAA;AAQN,EAAA,IAAM4pD,OAAO,GAAiB;AAC1BnB,IAAAA,cAAc,EAAAA,cADY;AAE1BoB,IAAAA,iBAAiB,EAAE,IAFO;AAG1BC,IAAAA,iBAAiB,EAAE,IAHO;AAI1B/8C,IAAAA,SAAS,EAAEvQ,MAJe;AAK1BgtD,IAAAA,cAAc,EAAAA,cALY;AAM1BD,IAAAA,YAAY,EAAAA,YANc;AAO1BE,IAAAA,uBAAuB,EAAEH,aAAa,GAAGG,uBAAH,GAA6B,KAPzC;AAQ1BM,IAAAA,4BAA4B,EAAET,aAAa,GAAGI,mBAAH,GAAyB,KAR1C;AAS1BM,IAAAA,4BAA4B,EAAEV,aAAa,GAAG,IAAH,GAAU,UAACvqD,CAAD,EAAc;MAC/D,OAAOiD,QAAQ,CAACinD,UAAT,CAAoBja,QAApB,CAA6BjwC,CAAC,CAAC+N,MAA/B,CAAP,CAAA;KAVsB;AAY1B68C,IAAAA,UAAU,EAAEL,aAAa,GAAGK,UAAH,GAAgB,KAAA;GAZ7C,CAAA;EAcA,IAAMM,KAAK,GAAG,IAAIC,KAAJ,CAAUp9C,MAAV,EAAmB88C,OAAnB,CAAd,CAAA;AACA,EAAA,IAAMzgB,SAAS,GAAGqe,UAAU,KAAK,SAAjC,CAAA;EAEA,CAAC,MAAD,EAAS,OAAT,CAAA,CAAkBryC,OAAlB,CAA0B,UAAAoyC,cAAA,EAAc;IACpC,CAAC,OAAD,EAAU,EAAV,EAAc,KAAd,EAAqBpyC,OAArB,CAA6B,UAAAsyC,SAAA,EAAS;AAElCwC,MAAAA,KAAK,CAACxqC,EAAN,CAAS,EAAA,CAAG/jB,MAAH,CAAG6rD,cAAH,QAAA,CAAoBE,SAApB,CAAT,EAAiD,UAAA1oD,CAAA,EAAC;;;AAC9C,QAAA,IAAM0oB,SAAS,GAAG1oB,CAAC,CAAC0oD,SAApB,CAAA;;AAEA,QAAA,IAAI4B,kBAAkB,CAAC5hC,SAAD,CAAlB,IAAiC,CAAC4hC,kBAAkB,CAAC5hC,SAAD,CAAlB,CAA8B1oB,CAA9B,CAAtC,EAAwE;AACpEA,UAAAA,CAAC,CAACigB,IAAF,EAAA,CAAA;AACA,UAAA,OAAA;AACH,SAAA;;AACD,QAAA,IAAMjf,MAAM,GAAGsnD,WAAW,CAACrlD,QAAD,EAAWslD,QAAX,EAAqBC,cAArB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4D1oD,CAA5D,CAA1B,CAAA;;QAEA,IAAI,CAACgB,MAAL,EAAa;AACThB,UAAAA,CAAC,CAACigB,IAAF,EAAA,CAAA;AACH,SAFD,MAEO,IAAIhd,QAAQ,CAAC5G,KAAT,CAAe+uD,eAAf,IAAmC1C,SAAS,KAAK,OAAd,IAAyBte,SAAhE,EAA4E;AAC/E,UAAA,CAAAlpC,EAAA,GAAAlB,CAAC,KAAD,IAAA,IAAAA,CAAC,KAAD,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,CAAC,CAAEqB,UAAH,MAAa,IAAb,IAAaH,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAaA,EAAA,CAAEkqD,eAAF,EAAb,CAAA;AACH,SAAA;OAbL,CAAA,CAAA;KAFJ,CAAA,CAAA;GADJ,CAAA,CAAA;AAqBA,EAAA,OAAOF,KAAP,CAAA;AACH;;AChQD,IAAAG,YAAA;AAAA;AAAA,YAAA;AAEI,EAAA,SAAAA,YAAA,CACYt9C,MADZ,EAEY9K,QAFZ,EAGYylB,SAHZ,EAG6B;IAH7B,IAMCy/B,KAAA,GAAA,IAND,CAAA;;IACY,IAAMp6C,CAAAA,MAAN,GAAAA,MAAA,CAAA;IACA,IAAQ9K,CAAAA,QAAR,GAAAA,QAAA,CAAA;IACA,IAASylB,CAAAA,SAAT,GAAAA,SAAA,CAAA;IAJJ,IAAK3H,CAAAA,KAAL,GAAgB,EAAhB,CAAA;;AAgBA,IAAA,IAAA,CAAQuqC,QAAR,GAAW,UAACtrD,CAAD,EAAS;AACxB,MAAA,IAAM0oB,SAAS,GAAGy/B,KAAI,CAACz/B,SAAvB,CAAA;AACA,MAAA,IAAMzlB,QAAQ,GAAGklD,KAAI,CAACllD,QAAtB,CAAA;;AAEA,MAAA,IAAIA,QAAQ,CAACtC,KAAT,CAAeq3C,kBAAnB,EAAuC;AACnC,QAAA,OAAA;AACH,OAAA;;AACDmQ,MAAAA,KAAI,CAACpnC,KAAL,CAAW3K,OAAX,CAAmB,UAAAla,IAAA,EAAI;AAClBA,QAAAA,IAAY,CAACwsB,SAAD,CAAZ,CAAwBzlB,QAAxB,EAAkC;AAC/B5B,UAAAA,UAAU,EAAErB,CAAAA;SADf,CAAA,CAAA;OADL,CAAA,CAAA;KAPI,CAAA;;IAVJ+N,MAAO,CAACw9C,gBAAR,CAAyB7iC,SAAS,CAAC5qB,WAAV,EAAzB,EAAkD,IAAA,CAAKwtD,QAAvD,CAAA,CAAA;AACH,GAAA;;AARL,EAAA,IAAA,OAAA,GAAA,YAAA,CAAA,SAAA,CAAA;;AASW,EAAA,OAAA,CAAQE,QAAR,GAAP,UAAgBzqC,KAAhB,EAA6B;IACzB,IAAKA,CAAAA,KAAL,GAAaA,KAAb,CAAA;GADG,CAAA;;EAGA,OAAA0qC,CAAAA,OAAA,GAAP,YAAA;IACI,IAAK19C,CAAAA,MAAL,CAAa29C,mBAAb,CAAiC,IAAA,CAAKhjC,SAAL,CAAe5qB,WAAf,EAAjC,EAA+D,IAAA,CAAKwtD,QAApE,CAAA,CAAA;IACA,IAAKv9C,CAAAA,MAAL,GAAc,IAAd,CAAA;IACA,IAAK9K,CAAAA,QAAL,GAAgB,IAAhB,CAAA;GAHG,CAAA;;AAkBX,EAAA,OAACooD,YAAD,CAAA;AAAC,CA9BD,EAAA;;ACoBM,SAAUM,oBAAV,CACF59C,MADE,EAEFC,SAFE,EAGF49C,aAHE,EAIFC,YAJE,EAIoB;;;AADtB,EAAA,IAAAD,aAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,aAAsE,GAAA59C,SAAtE,CAAA;AAAsE,GAAA;;AAMhE,EAAA,IAAA/M,EASF,GAAA6M,kBAAkB,CAACC,MAAD,EAASC,SAAT,CAThB;AAAA,MACFG,QAAQ,GAAAlN,EAAA,CAAAkN,QADN;AAAA,MAEF/K,IAAI,GAAAnC,EAAA,CAAAmC,IAFF;AAAA,MAGY0oD,gBAAgB,GAAA7qD,EAAA,CAAAgD,YAH5B;AAAA,MAIFC,eAAe,GAAAjD,EAAA,CAAAiD,eAJb;AAAA,MAKFmM,YAAY,GAAApP,EAAA,CAAAoP,YALV;AAAA,MAMF1B,eAAe,GAAA1N,EAAA,CAAA0N,eANb;AAAA,MAOFD,QAAQ,cAPN;AAAA,MAQIq9C,aAAa,GACkB9qD,EAAA,CAAA6N,IATnC,CALgB;;;AAgBhB,EAAA,IAAApL,EAAA,GAKFiP,4BAA4B,CAAChE,eAAD,EAAkBi9C,aAAlB,CAL1B;AAAA,MACQI,YAAY,GAAAtoD,EAAA,CAAAyK,QADpB;AAAA,MAEI89C,QAAQ,GAAAvoD,EAAA,CAAAN,IAFZ;AAAA,MAGe8oD,mBAAmB,GAAAxoD,EAAA,CAAAiL,eAHlC;AAAA,MAIIw9C,QAAQ,GAAAzoD,EAAA,CAAAoL,IAJZ,CAhBgB;AAuBtB;AACA;AACA;;;AACA,EAAA,IAAMs9C,QAAQ,GAAGP,YAAY,IAAII,QAAhB,IAA4B7oD,IAA7C,CAAA;AACA,EAAA,IAAMrD,CAAC,GAAGqsD,QAAQ,GAAG,CAAH,GAAO,CAAzB,CAAA;EACA,IAAMC,mBAAmB,GAAGt+C,MAAM,CAACmC,OAAP,CAAepS,WAAf,EAAiC,KAAA,KAAjC,IAA0C,iBAAA,IAAqBiQ,MAA3F,CAAA;AACA,EAAA,IAAI9J,YAAY,GAAG6nD,gBAAnB,CA7BsB;AA+BtB;AACA;;AACA,EAAA,IAAIjoD,SAAS,GAAG8M,oBAAoB,CAAC5Q,CAAD,CAApC,CAAA;AACA,EAAA,IAAIoD,UAAU,GAAGwN,oBAAoB,CAAC5Q,CAAD,CAArC,CAAA;AACA,EAAA,IAAI+D,YAAY,GAAG6M,oBAAoB,CAAC5Q,CAAD,CAAvC,CAAA;AACA,EAAA,IAAIiE,YAAY,GAAG2M,oBAAoB,CAAC5Q,CAAD,CAAvC,CAAA;AACA,EAAA,IAAMyF,MAAM,GAAG2I,QAAQ,CAAC3I,MAAxB,CAAA;;AAEA,EAAA,IAAM8mD,gBAAgB,GAAGnlD,aAAA,CAAA,EAAA,EAAI6kD,YAAJ,EAAkB,IAAlB,CAAA,CAAkBO,OAAlB,EAAzB,CAAA;;AACAp+C,EAAAA,QAAQ,CAACo+C,OAAT,EAAA,CAAA;;AAEA,EAAA,IAAI,CAACnpD,IAAD,IAASgpD,QAAb,EAAuB;IACnBnoD,YAAY,GAAGuG,gBAAgB,CAACvG,YAAD,EAAe,CAAf,EAAkB,CAAlB,CAA/B,CAAA;IAEA+L,iBAAiB,CAAC7B,QAAD,CAAjB,CAAA;AACH,GAAA;;AACD,EAAA,IAAI,CAAC89C,QAAD,IAAaG,QAAjB,EAA2B;IACvBp8C,iBAAiB,CAACs8C,gBAAD,CAAjB,CAAA;AACH,GAjDqB;AAqDtB;AACA;AACA;;;AAEAA,EAAAA,gBAAgB,CAACl2C,OAAjB,CAAyB,UAAArQ,IAAA,EAAI;IACzB5C,UAAU,GAAG6E,QAAQ,CAAC7E,UAAD,EAAa4C,IAAI,CAAC5B,MAAlB,EAA2BpE,CAA3B,CAArB,CAAA;GADJ,CAAA,CAAA;AAGA,EAAA,IAAMysD,qBAAqB,GAAGZ,aAAa,IAAIv9C,QAAQ,CAACC,IAAxD,CAAA;AACA,EAAA,IAAMm+C,YAAY,GAAG,CAAA,CAAAvrD,EAAA,GAAAorD,gBAAgB,CAAC,CAAD,CAAhB,MAAmB,IAAnB,IAAmBprD,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmBA,EAAA,CAAE6M,MAArB,KACda,aAAa,CAAC49C,qBAAD,EAAwBA,qBAAxB,EAA+C,IAA/C,CAAb,CAAkE39C,YADzE,CAAA;AAEA,EAAA,IAAM69C,sBAAsB,GAAGJ,gBAAgB,CAACx2C,KAAjB,CAAuB,CAAvB,CAA0BmF,CAAAA,MAA1B,CAAiC,UAAC9W,MAAD,EAAS4B,IAAT,EAAa;IACzE,OAAOiC,QAAQ,CAAC7D,MAAD,EAAS4B,IAAI,CAAC5B,MAAd,EAAuBpE,CAAvB,CAAf,CAAA;AACH,GAF8B,EAE5B4Q,oBAAoB,CAAC5Q,CAAD,CAFQ,CAA/B,CAAA;AAGAoO,EAAAA,QAAQ,CAACiI,OAAT,CAAiB,UAACrQ,IAAD,EAAO6C,CAAP,EAAQ;AACrB,IAAA,IAAIpD,MAAM,GAAG,CAAT,KAAeoD,CAAnB,EAAsB;AAClB;AACA9E,MAAAA,YAAY,GAAGD,SAAS,CAACiS,KAAV,EAAf,CAAA;AACH,KAAA;;AACD,IAAA,IAAItQ,MAAM,GAAG,CAAT,KAAeoD,CAAnB,EAAsB;AAClB;AACA5E,MAAAA,YAAY,GAAGH,SAAS,CAACiS,KAAV,EAAf,CAAA;AACH,KARoB;;;AAWrB,IAAA,IAAI,CAAC/P,IAAI,CAAC5B,MAAV,EAAkB;AACd,MAAA,IAAMwoD,QAAQ,GAAGx+C,QAAQ,CAACvF,CAAC,GAAG,CAAL,CAAzB,CAAA;MACA,IAAM2H,MAAM,GAAG2H,YAAY,CACvBnS,IADuB,EAEvB4mD,QAFuB,EAGvBF,YAHuB,EAIvB1sD,CAJuB,EAKvBiI,QAAQ,CAAC0kD,sBAAD,EAAyB7oD,SAAzB,EAAoC9D,CAApC,CALe,CAA3B,CAAA;MAOAgG,IAAI,CAAC5B,MAAL,GAAc2N,kBAAkB,CAACvB,MAAD,EAASxQ,CAAT,CAAhC,CAAA;AACH,KAAA;;IACD8D,SAAS,GAAGmE,QAAQ,CAACnE,SAAD,EAAYkC,IAAI,CAAC5B,MAAjB,EAA0BpE,CAA1B,CAApB,CAAA;GAtBJ,CAAA,CAAA;AAwBA,EAAA,IAAM6sD,UAAU,GAAG,CAACP,mBAAD,IAAwBjpD,IAA3C,CAAA;;EAEA,IAAI,CAACa,YAAL,EAAmB;IACfA,YAAY,GAAG0M,oBAAoB,CAACi8C,UAAU,GAAG,CAAH,GAAO,CAAlB,CAAnC,CAAA;AACH,GAAA;;EACD,IAAMtiD,eAAe,GAAG+L,aAAa,CACjCg2C,mBAAmB,IAAIpoD,YAAY,CAACuB,MAAb,KAAwB,EAA/C,GACMgF,gBAAgB,CAACvG,YAAD,EAAe,CAAf,EAAkB,CAAlB,CADtB,GAC6CA,YAFZ,EAGjC2oD,UAHiC,CAArC,CAAA;EAMA,IAAMC,kBAAkB,GAAG1pD,UAA3B,CAAA;EACAA,UAAU,GAAGmzC,eAAe,CAACnzC,UAAD,EAAapD,CAAb,EAAgBA,CAAhB,CAA5B,CAAA;EAEA,OAAO;AACH+sD,IAAAA,OAAO,EAAEf,aAAa,KAAK,CAAlB,IAAuBI,QAAQ,KAAK,CAD1C;AAEHz9C,IAAAA,QAAQ,EAAAA,QAFL;AAGHvL,IAAAA,UAAU,EAAAA,UAHP;AAIH0pD,IAAAA,kBAAkB,EAAAA,kBAJf;AAKH/oD,IAAAA,YAAY,EAAAA,YALT;AAMHE,IAAAA,YAAY,EAAAA,YANT;AAOHH,IAAAA,SAAS,EAAAA,SAPN;AAQHI,IAAAA,YAAY,EAAAA,YART;AASHqG,IAAAA,eAAe,EAAAA,eATZ;AAUHpG,IAAAA,eAAe,EAAAA,eAVZ;AAWHmM,IAAAA,YAAY,EAAAA,YAXT;AAYHjN,IAAAA,IAAI,EAAEgpD,QAZH;AAaHz9C,IAAAA,eAAe,EAAAA,eAbZ;AAcHu9C,IAAAA,mBAAmB,EAAAA,mBAAAA;GAdvB,CAAA;AAgBH;;ACvIK,SAAUa,oBAAV,CACFh/C,MADE,EAEFC,SAFE,EAGF49C,aAHE,EAIFC,YAJE,EAIoB;AADtB,EAAA,IAAAD,aAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,aAAsE,GAAA59C,SAAtE,CAAA;AAAsE,GAAA;;EAGtE,IAAI1F,KAAK,GAAG,CAAZ,CAAA;EACA,IAAIC,MAAM,GAAG,CAAb,CAAA;EACA,IAAIyS,QAAQ,GAAG,CAAf,CAAA;EACA,IAAIgyC,SAAS,GAAO,EAApB,CAAA;AAEA,EAAA,IAAM/qB,KAAK,GAAG7pB,OAAO,CAACrK,MAAD,CAArB,CAAA;;AAEA,EAAA,IAAIA,MAAJ,EAAY;IACRzF,KAAK,GAAG25B,KAAK,CAAC5pB,WAAd,CAAA;IACA9P,MAAM,GAAG05B,KAAK,CAAC3pB,YAAf,CAAA;AACH,GAAA;;AAED,EAAA,IAAIvK,MAAJ,EAAY;IACR,IAAM/M,MAAM,GAAG2qD,oBAAoB,CAC/B59C,MAD+B,EAE/BC,SAF+B,EAG/B49C,aAH+B,EAI/BC,YAJ+B,CAAnC,CAAA;AAQA,IAAA,IAAM58C,QAAQ,GAAGnK,yBAAyB,CACtC9D,MAAM,CAAC6C,SAD+B,EAEtC7C,MAAM,CAACkD,eAF+B,EAGtCoE,KAHsC,EAG/BC,MAH+B,CAA1C,CAAA;IAKAykD,SAAS,GACF7wD,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA6E,MAAA,CAAA,EACAiO,QADA,CADP,CAAA;AAIA,IAAA,IAAM2gC,gBAAgB,GAAG9qC,yBAAyB,CAC9C9D,MAAM,CAAC6C,SADuC,EAC5B,CAAC,EAAD,EAAK,EAAL,CAD4B,EAClB,GADkB,EACb,GADa,CAAlD,CAAA;AAGAmX,IAAAA,QAAQ,GAAG0C,cAAc,CAAC,CAACkyB,gBAAgB,CAACvsC,IAAlB,EAAwBusC,gBAAgB,CAACx8B,IAAzC,CAAD,EAAiDw8B,gBAAgB,CAAC5qC,SAAlE,CAAzB,CAAA;AACH,GAAA;;AACD,EAAA,IAAMjF,CAAC,GAAG8rD,YAAY,GAAG,CAAH,GAAO,CAA7B,CAAA;AAEA,EAAA,OAAA1vD,QAAA,CAAAA,QAAA,CAAAA,QAAA,CAAA;AACI2wD,IAAAA,OAAO,EAAE,KADb;AAEIxkD,IAAAA,KAAK,OAFT;AAGIC,IAAAA,MAAM,EAAAA,MAHV;AAIIyS,IAAAA,QAAQ,EAAAA,QAAAA;GAJZ,EAKOinB,KALP,CAAA,EAKY;AACR4qB,IAAAA,kBAAkB,EAAEl8C,oBAAoB,CAAC5Q,CAAD,CADhC;AAERoD,IAAAA,UAAU,EAAEwN,oBAAoB,CAAC5Q,CAAD,CAFxB;AAGR+D,IAAAA,YAAY,EAAE6M,oBAAoB,CAAC5Q,CAAD,CAH1B;AAIRiE,IAAAA,YAAY,EAAE2M,oBAAoB,CAAC5Q,CAAD,CAJ1B;AAKR8D,IAAAA,SAAS,EAAE8M,oBAAoB,CAAC5Q,CAAD,CALvB;AAMRkE,IAAAA,YAAY,EAAE0M,oBAAoB,CAAC5Q,CAAD,CAN1B;AAORuK,IAAAA,eAAe,EAAE,EAPT;AAQRpG,IAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ,CART;AASRmM,IAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,CATN;IAURjN,IAAI,EAAE,CAAC,CAACyoD,YAVA;AAWR5sD,IAAAA,IAAI,EAAE,CAXE;AAYRD,IAAAA,GAAG,EAAE,CAZG;AAaR8Y,IAAAA,KAAK,EAAE,CAbC;AAcRlO,IAAAA,MAAM,EAAE,CAdA;AAeR7F,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAfA;AAgBRV,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAhBE;AAiBR+P,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAjBE;AAkBRkH,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAlBE;AAmBRC,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAnBE;AAoBRvV,IAAAA,SAAS,EAAE,CApBH;AAqBR0J,IAAAA,QAAQ,EAAE,KArBF;AAsBRC,IAAAA,eAAe,EAAE,IAtBT;AAuBRu9C,IAAAA,mBAAmB,EAAE,IAAA;GA5BzB,CAAA,EA6BOc,SA7BP,CAAA,CAAA;AA+BH,CAAA;SAGeC,eACZl/C,QACAC,WACA49C,eAAsE;AAAtE,EAAA,IAAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,aAAsE,GAAA59C,SAAtE,CAAA;AAAsE,GAAA;;EAEtE,OAAO++C,oBAAoB,CAACh/C,MAAD,EAASC,SAAT,EAAoB49C,aAApB,EAAmC,IAAnC,CAA3B,CAAA;AACH;;ACrEe,SAAAsB,qBAAA,CACZC,eADY,EAEZp/C,MAFY,EAGZC,SAHY,EAIZo/C,eAJY,EAKZxB,aALY,EAMZyB,aANY,EAMwC;AAApD,EAAA,IAAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,IAAAA,aAAoD,GAAA,EAApD,CAAA;AAAoD,GAAA;;EAEpD,IAAI5c,eAAe,GAAW,CAA9B,CAAA;AACA,EAAA,IAAIxH,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAA;EACA,IAAIzG,gBAAgB,GAAG7kB,eAAe,EAAtC,CAAA;EACA,IAAIza,kBAAkB,GAAGya,eAAe,EAAxC,CAAA;EACA,IAAIpF,mBAAmB,GAAGoF,eAAe,EAAzC,CAAA;EACA,IAAI2vC,uBAAuB,GAAG3vC,eAAe,EAA7C,CAAA;AACA,EAAA,IAAI8kB,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAAA;EACA,IAAMxvB,KAAK,GAA2C,EAAtD,CAAA;EAEA,IAAMjS,MAAM,GAAG+rD,oBAAoB,CAC/Bh/C,MAD+B,EACvBC,SADuB,EACX49C,aADW,EAE/B,IAF+B,CAAnC,CAAA;;AAIA,EAAA,IAAI79C,MAAJ,EAAY;AACR,IAAA,IAAMw/C,UAAQ,GAAGv+C,cAAc,CAACjB,MAAD,CAA/B,CAAA;AAEAs/C,IAAAA,aAAa,CAACj3C,OAAd,CAAsB,UAAAna,IAAA,EAAI;AACtBgX,MAAAA,KAAK,CAAChX,IAAD,CAAL,GAAcsxD,UAAQ,CAACtxD,IAAD,CAAtB,CAAA;KADJ,CAAA,CAAA;IAGA,IAAM8D,CAAC,GAAGiB,MAAM,CAACoC,IAAP,GAAc,CAAd,GAAkB,CAA5B,CAAA;AACA,IAAA,IAAMoqD,cAAc,GAAG1oD,yBAAyB,CAC5C9D,MAAM,CAACgD,YADqC,EAE5CS,IAAI,CAACzD,MAAM,CAACkD,eAAR,EAAyBstC,SAAS,CAACxwC,MAAM,CAACiD,YAAR,EAAsBlE,CAAtB,CAAlC,CAFwC,EAG5CiB,MAAM,CAACsH,KAHqC,EAG9BtH,MAAM,CAACuH,MAHuB,CAAhD,CAAA;IAKAkoC,eAAe,GAAG+c,cAAc,CAACxoD,SAAjC,CAAA;IACAikC,YAAY,GAAGxkC,IAAI,CACf+oD,cAAc,CAACzpD,MADA,EAEf,CAACypD,cAAc,CAACvuD,IAAf,GAAsB+B,MAAM,CAAC/B,IAA9B,EAAoCuuD,cAAc,CAACxuD,GAAf,GAAqBgC,MAAM,CAAChC,GAAhE,CAFe,CAAnB,CAAA;AAKAsuD,IAAAA,uBAAuB,GAAG76C,aAAa,CAACzR,MAAM,CAACkrD,mBAAR,CAAvC,CAAA;AAGA,IAAA,IAAMv9C,eAAe,GAAGC,aAAa,CAACw+C,eAAD,EAAkBA,eAAlB,EAAmC,IAAnC,CAAb,CAAsDv+C,YAAtD,IACjB7N,MAAM,CAACkrD,mBADd,CAAA;;IAGA,IAAIlrD,MAAM,CAAC8rD,OAAX,EAAoB;MAChB,IAAMW,sBAAsB,GAAG3oD,yBAAyB,CACpDkD,QAAQ,CAAChH,MAAM,CAAC6rD,kBAAR,EAA4B7rD,MAAM,CAAC6C,SAAnC,CAD4C,EAEpD7C,MAAM,CAACkD,eAF6C,EAGpDlD,MAAM,CAACsH,KAH6C,EAGtCtH,MAAM,CAACuH,MAH+B,CAAxD,CAAA;MAKA,IAAMmlD,yBAAyB,GAAG5oD,yBAAyB,CACvD9D,MAAM,CAAC6rD,kBADgD,EAEvDp4C,uBAAuB,CAACzF,cAAc,CAACL,eAAD,CAAd,CAAgC,iBAAhC,CAAD,CAAvB,CAA4E7P,GAA5E,CAAgF,UAAA6J,GAAA,EAAO;QAAA,OAAA5K,UAAU,CAAC4K,GAAD,CAAV,CAAA;OAAvF,CAFuD,EAGvDgG,eAAe,CAAC0J,WAHuC,EAG1B1J,eAAe,CAAC2J,YAHU,CAA3D,CAAA;AAKAkqB,MAAAA,gBAAgB,GAAGtkB,uBAAuB,CAACuvC,sBAAD,EAAyBH,uBAAzB,CAA1C,CAAA;MACA/0C,mBAAmB,GAAG2F,uBAAuB,CACzCwvC,yBADyC,EAEzCJ,uBAFyC,EAGzC3+C,eAHyC,EAIzC,IAJyC,CAA7C,CAAA;;AAOA,MAAA,IAAIw+C,eAAJ,EAAqB;AACjB,QAAA,IAAMluD,IAAI,GAAGwuD,sBAAsB,CAACxuD,IAApC,CAAA;AACA,QAAA,IAAMD,GAAG,GAAGyuD,sBAAsB,CAACzuD,GAAnC,CAAA;QACAkE,kBAAkB,GAAGgb,uBAAuB,CAAC;AACzCjf,UAAAA,IAAI,EAAAA,IADqC;AAEzCD,UAAAA,GAAG,EAAAA,GAFsC;AAGzC4K,UAAAA,MAAM,EAAE5K,GAHiC;AAIzC8Y,UAAAA,KAAK,EAAE9Y,GAAAA;SAJiC,EAKzCsuD,uBALyC,CAA5C,CAAA;AAMH,OAAA;AACJ,KA7BD,MA6BO;AACH9qB,MAAAA,gBAAgB,GAAG/vB,aAAa,CAAC1E,MAAD,CAAhC,CAAA;AACAwK,MAAAA,mBAAmB,GAAGlG,mBAAmB,CAAC1D,eAAD,CAAzC,CAAA;;AAEA,MAAA,IAAIw+C,eAAJ,EAAqB;AACjBjqD,QAAAA,kBAAkB,GAAGuP,aAAa,CAAC06C,eAAD,CAAlC,CAAA;AACH,OAAA;;AAEG,MAAA,IAAMQ,uBAAuB,GAI7Bp1C,mBAAmB,KAJnB;AAAA,UACKq1C,sBAAsB,GAG3Br1C,mBAAmB,CAAAvZ,GAJnB;AAAA,UAEY6uD,oBAAoB,GAEhCt1C,mBAAmB,CAFanH,UAFhC;AAAA,UAGW08C,kBAAkB,GAC7Bv1C,mBAAmB,UAJnB,CAAA;AAKJ,MAAA,IAAMw1C,WAAW,GAAG,CAChBvrB,gBAAgB,CAACvjC,IAAjB,GAAwB0uD,uBADR,EAEhBnrB,gBAAgB,CAACxjC,GAAjB,GAAuB4uD,sBAFP,CAApB,CAAA;MAKAnrB,WAAW,GAAGn/B,KAAK,CACfC,wBAAwB,CAACvC,MAAM,CAACmC,UAAR,EAAoB4qD,WAApB,EAAiC,CAAjC,CADT,EAEf,CAACF,oBAAqB,GAAG7sD,MAAM,CAAC/B,IAAhC,EAAsC6uD,kBAAmB,GAAG9sD,MAAM,CAAChC,GAAnE,CAFe,CAAnB,CAAA;AAIH,KAAA;AACJ,GAAA;;AAED,EAAA,OAAA7C,QAAA,CAAA;AACIqmC,IAAAA,gBAAgB,EAAAA,gBADpB;AAEIjqB,IAAAA,mBAAmB,qBAFvB;AAGIrV,IAAAA,kBAAkB,EAAAA,kBAHtB;AAIIoqD,IAAAA,uBAAuB,EAAAA,uBAJ3B;AAKI7c,IAAAA,eAAe,iBALnB;AAMIxH,IAAAA,YAAY,EAAAA,YANhB;AAOI+kB,IAAAA,oBAAoB,EAAE/kB,YAP1B;AAQIl7B,IAAAA,MAAM,EAAAA,MARV;AASIkF,IAAAA,KAAK,EAAAA,KATT;AAUIwvB,IAAAA,WAAW,EAAAA,WAAAA;GAVf,EAWOzhC,MAXP,CAAA,CAAA;AAaH;;ACpIK,SAAUitD,eAAV,CAA0Bx1C,IAA1B,EAA+C;AAE7C,EAAA,IAAApV,IAAI,GAIJoV,IAAI,KAJJ;AAAA,MACArF,IAAI,GAGJqF,IAAI,CAAArF,IAJJ;AAAA,MAEAkH,IAAI,GAEJ7B,IAAI,CAFA6B,IAFJ;AAAA,MAGAC,IAAI,GACJ9B,IAAI,KAJJ,CAAA;;EAKJ,IAAI,CAACpV,IAAD,IAAS,CAAC+P,IAAV,IAAkB,CAACkH,IAAnB,IAA2B,CAACC,IAAhC,EAAsC;AAClC,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACD,EAAA,IAAMwc,MAAM,GAAG6L,UAAU,CAAC,CAACv/B,IAAD,EAAQ+P,IAAR,EAAekH,IAAf,EAAsBC,IAAtB,CAAD,CAAzB,CAAA;EACA,IAAMo3B,QAAQ,GAAG,CAAC5a,MAAM,CAAC+L,IAAR,EAAc/L,MAAM,CAACiM,IAArB,CAAjB,CAAA;EACA,IAAMj/B,MAAM,GAAGT,KAAK,CAACmV,IAAI,CAAC1U,MAAN,EAAe4tC,QAAf,CAApB,CAAA;AAEAtuC,EAAAA,IAAI,GAAGC,KAAK,CAACD,IAAD,EAAOsuC,QAAP,CAAZ,CAAA;AACAv+B,EAAAA,IAAI,GAAG9P,KAAK,CAAC8P,IAAD,EAAOu+B,QAAP,CAAZ,CAAA;AACAr3B,EAAAA,IAAI,GAAGhX,KAAK,CAACgX,IAAD,EAAOq3B,QAAP,CAAZ,CAAA;AACAp3B,EAAAA,IAAI,GAAGjX,KAAK,CAACiX,IAAD,EAAOo3B,QAAP,CAAZ,CAAA;EACA,OAAAx1C,QAAA,CAAAA,QAAA,CAAA,EAAA,EACOsc,IADP,CAAA,EACW;IACPxZ,IAAI,EAAEwZ,IAAI,CAACxZ,IADJ;IAEPD,GAAG,EAAEyZ,IAAI,CAACzZ,GAFH;AAGP2yC,IAAAA,QAAQ,EAAAA,QAHD;AAIPtuC,IAAAA,IAAI,EAAAA,IAJG;AAKP+P,IAAAA,IAAI,EAAAA,IALG;AAMPkH,IAAAA,IAAI,EAAAA,IANG;AAOPC,IAAAA,IAAI,EAAAA,IAPG;AAQPxW,IAAAA,MAAM,EAAAA,MARC;AASPklC,IAAAA,YAAY,EAAEllC,MATP;AAUP;AACAmqD,IAAAA,WAAW,EAAE,IAAA;AAXN,GADX,CAAA,CAAA;AAcH;;ACOD,IAAAC,eAAA;AAAA;AAAA,UAAAC,MAAA,EAAA;AACYC,EAAAA,SAAkE,CAAAF,eAAA,EAAAC,MAAA,CAAlE,CAAA;;AADZ,EAAA,SAAAD,eAAA,GAAA;AAAA,IAAA,IA2kCChG,KAAA,GAAAiG,MAAA,KAAA,IAAA,IAAAA,MAAA,CAAA16C,KAAA,CAAA,IAAA,EAAAF,SAAA,CAAA,IAAA,IA3kCD,CAAA;;AA8CW20C,IAAAA,KAAK,CAAAxnD,KAAL,GAAKxE,QAAA,CAAA;AACR6R,MAAAA,SAAS,EAAE,IADH;AAER7M,MAAAA,MAAM,EAAE,EAFA;MAGRsmC,WAAW,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,CAHL;AAIRuQ,MAAAA,kBAAkB,EAAE,KAJZ;AAKRrG,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAA;AALF,KAAA,EAMLub,qBAAqB,CAAC,IAAD,CANhB,CAAL,CAAA;IAQA/E,KAAW,CAAAtgB,WAAX,GAAmC,EAAnC,CAAA;IACAsgB,KAAY,CAAAjnC,YAAZ,GAAuB,EAAvB,CAAA;IACAinC,KAAW,CAAAmG,WAAX,GAAsB,EAAtB,CAAA;IACAnG,KAAY,CAAAt/B,YAAZ,GAAuB,EAAvB,CAAA;IAKAs/B,KAAQ,CAAAntC,QAAR,GAAW,CAAX,CAAA;AACAmtC,IAAAA,KAAA,CAAA1rD,KAAA,GAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB,CAAA;IACA0rD,KAAiB,CAAAoG,iBAAjB,GAAoB,KAApB,CAAA;IACApG,KAAW,CAAAwB,WAAX,GAAc,KAAd,CAAA;IAEAxB,KAAA,CAAA/rD,MAAA,GAA8C;AACjD,MAAA,YAAA,EAAc,IADmC;MAEjD,YAAc,EAAA,IAAA;KAFX,CAAA;AAKG+rD,IAAAA,KAAA,CAAA1nC,QAAA,GAAyB,IAAI+tC,YAAJ,EAAzB,CAAA;IACArG,KAAW,CAAAsG,WAAX,GAA2D,IAA3D,CAAA;IACAtG,KAAa,CAAAuG,aAAb,GAAgB,KAAhB,CAAA;IACAvG,KAAoB,CAAAwG,oBAApB,GAAuB,KAAvB,CAAA;IACAxG,KAAe,CAAAyG,eAAf,GAAkB,KAAlB,CAAA;IAEFzG,KAAe,CAAA0G,eAAf,GAAyC,IAAzC,CAAA;IACA1G,KAAW,CAAA2G,WAAX,GAAc,CAAd,CAAA;IACA3G,KAAiB,CAAA4G,iBAAjB,GAA6C,IAA7C,CAAA;IACD5G,KAAc,CAAA6G,cAAd,GAAiD,IAAjD,CAAA;IACC7G,KAAc,CAAA8G,cAAd,GAAiD,IAAjD,CAAA;IACA9G,KAAe,CAAA+G,eAAf,GAA4B,EAA5B,CAAA;IACA/G,KAAM,CAAAgH,MAAN,GAA8B,EAA9B,CAAA;;IA0pBDhH,KAAA,CAAAiH,eAAA,GAAkB,YAAA;AACrB,MAAA,IAAIjH,KAAI,CAACnlC,UAAL,EAAJ,EAAuB;AACnB,QAAA,OAAA;AACH,OAAA;;AACD,MAAA,IAAMsmB,cAAc,GAAG6e,KAAI,CAAC9rD,KAAL,CAAWitC,cAAlC,CAAA;;AAEA,MAAA,IAAIA,cAAJ,EAAoB;AACfA,QAAAA,cAAkC,CAAC8lB,eAAnC,EAAA,CAAA;AACD,QAAA,OAAA;AACH,OAAA;;AACDC,MAAAA,oBAAoB,CAAClH,KAAI,CAAC2G,WAAN,CAApB,CAAA;AACA3G,MAAAA,KAAI,CAAC2G,WAAL,GAAmB5W,qBAAqB,CAAC,YAAA;AACrC,QAAA,IAAIiQ,KAAI,CAACnlC,UAAL,EAAJ,EAAuB;AACnB,UAAA,OAAA;AACH,SAAA;;AACDmlC,QAAAA,KAAI,CAACW,UAAL,EAAA,CAAA;AACH,OALuC,CAAxC,CAAA;KAXG,CAAA;;AAgLCX,IAAAA,KAAe,CAAAmH,eAAf,GAAkB,UAACtvD,CAAD,EAAO;AAC7BA,MAAAA,CAAC,CAACorD,eAAF,EAAA,CAAA;MACAprD,CAAC,CAAC0pD,cAAF,EAAA,CAF6B;KAAzB,CAAA;;;AA6KX,GAAA;;AA3kCD,EAAA,IAAA,OAAA,GAAA,eAAA,CAAA,SAAA,CAAA;;EAsFW,OAAA7jB,CAAAA,MAAA,GAAP,YAAA;IACI,IAAMxpC,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA,IAAA,IAAMsE,KAAK,GAAG,IAAK6mC,CAAAA,QAAL,EAAd,CAAA;AAEI,IAAA,IAAAqK,cAAc,GASdx1C,KAAK,CAAAw1C,cATL;AAAA,QACA9Z,SAAS,GAQT17B,KAAK,CAAA07B,SATL;AAAA,QAEQw3B,WAAW,GAOnBlzD,KAAK,CAAA0R,MATL;AAAA,QAGAe,IAAI,GAMJzS,KAAK,CANDyS,IAHJ;AAAA,QAGM0gD,QAAQ,GAMdnzD,KAAK,CAAAmzD,QATL;AAAA,QAIAC,UAAU,GAKVpzD,KAAK,CALKozD,UAJV;AAAA,QAKWC,iBAAiB,GAI5BrzD,KAAK,CAJuBszD,SAL5B;AAAA,QAMAxjD,SAAS,GAGT9P,KAAK,CAHI8P,SANT;AAAA,QAOAyjD,WAAW,GAEXvzD,KAAK,CAAAuzD,WATL;AAAA,QAQAC,cAAc,GACdxzD,KAAK,CAAAwzD,cATL,CAAA;;AAWJ,IAAA,IAAA,CAAKC,yBAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKC,WAAL,EAAA,CAAA;AACA,IAAA,IAAA,CAAKC,iBAAL,EAAA,CAAA;;IAEM,IAAA9uD,EAA0B,GAAA2wC,cAA0B,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAxD;AAAA,QAAC4B,UAAU,GAAAvyC,EAAA,CAAA,CAAA,CAAX;AAAA,QAAawyC,SAAS,QAAtB,CAAA;;AAEF,IAAA,IAAAz0C,IAAI,GAMJ0B,KAAK,CAAA1B,IANL;AAAA,QACAD,GAAG,GAKH2B,KAAK,CALF3B,GADH;AAAA,QAEQixD,WAAW,GAInBtvD,KAAK,CAAAoN,MANL;AAAA,QAGA/I,SAAS,GAGTrE,KAAK,CAHIqE,SAHT;AAAA,QAIA0J,QAAQ,GAER/N,KAAK,CAAA+N,QANL;AAAA,QAKA+zB,WAAW,GACX9hC,KAAK,YANL,CAAA;AAOJ,IAAA,IAAMuvD,YAAY,GAAI7zD,KAAa,CAACqoB,OAApC,CAAA;AACA,IAAA,IAAM1B,UAAU,GAAG,IAAKA,CAAAA,UAAL,EAAnB,CAAA;IACA,IAAMmtC,cAAc,GAAqB,EAAzC,CAAA;AACA,IAAA,IAAA,CAAKC,eAAL,EAAuBh6C,CAAAA,OAAvB,CAA+B,UAAAla,IAAA,EAAI;AAC/Bi0D,MAAAA,cAAc,CAAC,YAAA,CAAAxzD,MAAA,CAAaT,IAAI,CAACD,IAAL,CAAU6B,WAAV,EAAb,CAAD,CAAd,GAAyD,IAAzD,CAAA;KADJ,CAAA,CAAA;;AAGA,IAAA,IAAMuyD,aAAa,GAAG,IAAKC,CAAAA,iBAAL,EAAtB,CAAA;;IACA,IAAMpJ,SAAS,GACRgJ,YAAY,IAAIA,YAAY,CAAC1qD,MAA7B,KAAwCyqD,WAAW,IAAI9jD,SAAvD,CAAD,IACCojD,WADD,IAEE,CAAC,IAAA,CAAKX,eAAN,IAAyB,IAAA,CAAKjuD,KAAL,CAAWutD,WAH5C,CAAA;AAIA,IAAA,IAAMqC,SAAS,GAAG,IAAKrG,CAAAA,UAAL,IAAmB,IAAA,CAAK7tD,KAAL,CAAWm0D,gBAA9B,IAAkD,IAAKn0D,CAAAA,KAAL,CAAWo0D,WAA/E,CAAA;IACA,IAAMx5C,SAAS,GAAG,CAAChY,IAAI,GAAGw0C,UAAR,EAAoBz0C,GAAG,GAAG00C,SAA1B,CAAlB,CAAA;;AAEA,IAAA,IAAI,CAACvnC,SAAD,IAAc9P,KAAK,CAACq0D,mBAAxB,EAA6C;AACzCz5C,MAAAA,SAAS,CAAC,CAAD,CAAT,IAAgBwrB,WAAW,CAAC,CAAD,CAA3B,CAAA;AACAxrB,MAAAA,SAAS,CAAC,CAAD,CAAT,IAAgBwrB,WAAW,CAAC,CAAD,CAA3B,CAAA;AACH,KAAA;;AACD,IAAA,IAAMxvB,KAAK,GAAwB;AAC/B,MAAA,UAAA,EAAYvE,QAAQ,GAAG,OAAH,GAAa,UADF;AAE/B,MAAA,SAAA,EAAWw4C,SAAS,GAAG,OAAH,GAAa,MAFF;AAG/B,MAAA,YAAA,EAAcqJ,SAAS,GAAG,SAAH,GAAe,QAHP;MAI/B,WAAa,EAAA,cAAA,CAAA5zD,MAAA,CAAesa,SAAS,CAAC,CAAD,CAAxB,EAAkC,MAAlC,CAAA,CAAkCta,MAAlC,CAAkCsa,SAAS,CAAC,CAAD,CAA3C,EAA8C,MAA9C,CAAA,CAA8Cta,MAA9C,CAAqD8yD,UAArD,EAAkE,GAAlE,CAJkB;AAK/B,MAAA,QAAA,EAAU3gD,IALqB;AAM/B,MAAA,UAAA,EAAY,EAAGnS,CAAAA,MAAH,CAAGmS,IAAH,EAAW,IAAX,CAAA;KANhB,CAAA;;AAQA,IAAA,IAAI8gD,WAAJ,EAAiB;AACb38C,MAAAA,KAAK,CAAC,yBAAD,CAAL,GAAmC28C,WAAnC,CAAA;AACH,KAAA;;AACD,IAAA,IAAIC,cAAJ,EAAoB;AAChB58C,MAAAA,KAAK,CAAC,4BAAD,CAAL,GAAsC48C,cAAtC,CAAA;AACH,KAAA;;AACD,IAAA,OACIl4B,KAAA,CAAAG,aAAA,CAAC43B,iBAAD,EAAkBvzD,QAAA,CAAA;AACdqzD,MAAAA,QAAQ,EAAEA,QADI;AAEd9X,MAAAA,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,YAAP,CAFM;AAGd3f,MAAAA,SAAS,EAAE,EAAA,CAAAp7B,MAAA,CAAG0W,MAAM,CAAC,aAAD,EAAgBrO,SAAS,KAAK,CAAC,CAAf,GAAmB,SAAnB,GAA+B,EAA/C,EAAmDge,UAAU,GAAG,UAAH,GAAgB,EAA7E,CAAT,EAAyF,GAAzF,CAAA,CAAyFrmB,MAAzF,CAA6F0zD,aAA7F,EAA0G,GAA1G,CAA0G1zD,CAAAA,MAA1G,CAA8Go7B,SAA9G,CAAA;KAHG,EAIVo4B,cAJU,EAKd;MAAAQ,OAAO,EAAE,KAAKrB,eAAd;AACAr8C,MAAAA,KAAK,EAAEA,KAAAA;KANO,CAAlB,EAOK,IAAK29C,CAAAA,WAAL,EAPL,EAQK,IAAA,CAAKC,YAAL,EARL,CADJ,CAAA;GA5DG,CAAA;;EAyEA,OAAAC,CAAAA,iBAAA,GAAP,YAAA;IACI,IAAKvC,CAAAA,iBAAL,GAAyB,IAAzB,CAAA;IACA,IAAK5E,CAAAA,WAAL,GAAmB,KAAnB,CAAA;IACA,IAAMttD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACQ,IAAA,IAAAitC,cAAc,GAAiCjtC,KAAK,CAAAitC,cAApD;AAAA,QAAgBt7B,SAAS,GAAsB3R,KAAK,CAAA2R,SAApD;AAAA,QAA2B+iD,eAAe,GAAK10D,KAAK,gBAApD,CAAA;;AAGR,IAAA,IAAA,CAAKyzD,yBAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKkB,yBAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKC,cAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKC,mBAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKC,aAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKC,gBAAL,EAAA,CAAA;;IACA,IAAKC,CAAAA,eAAL,CAAqB,IAAA,CAAKh1D,KAA1B,CAAA,CAAA;;AAEA,IAAA,IAAI,CAAC2R,SAAD,IAAc,CAACs7B,cAAf,IAAiC,CAACynB,eAAlC,IAAqD,CAAC,IAAA,CAAKpwD,KAAL,CAAWutD,WAArE,EAAkF;AAC9E,MAAA,IAAA,CAAKpF,UAAL,CAAgB,EAAhB,EAAoB,KAApB,EAA2B,KAA3B,CAAA,CAAA;AACA,MAAA,IAAA,CAAKe,WAAL,EAAA,CAAA;AACH,KAAA;GAlBE,CAAA;;AAoBA,EAAA,OAAA,CAAkByH,kBAAlB,GAAP,UAA0BC,SAA1B,EAAwC;AACpC,IAAA,IAAA,CAAKzB,yBAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKkB,yBAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKE,mBAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKC,aAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKF,cAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKG,gBAAL,EAAA,CAAA;;IACA,IAAKC,CAAAA,eAAL,CAAqBE,SAArB,CAAA,CAAA;GAPG,CAAA;;EASA,OAAAC,CAAAA,oBAAA,GAAP,YAAA;;;IACI,IAAKjD,CAAAA,iBAAL,GAAyB,KAAzB,CAAA;IACA,IAAK5E,CAAAA,WAAL,GAAmB,IAAnB,CAAA;;IACA,IAAKlpC,CAAAA,QAAL,CAAc8oC,GAAd,EAAA,CAAA;;AACA,IAAA,CAAAroD,EAAA,GAAA,IAAA,CAAK2tD,eAAL,MAAsB,IAAtB,IAAsB3tD,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsBA,EAAA,CAAAuwD,UAAA,EAAtB,CAAA;AACA,IAAA,CAAAxwD,EAAA,GAAA,IAAA,CAAK8tD,iBAAL,MAAwB,IAAxB,IAAwB9tD,EAAA,KAAA,KAAA,CAAxB,GAAwB,KAAA,CAAxB,GAAwBA,EAAA,CAAAwwD,UAAA,EAAxB,CAAA;IAEA,IAAMC,aAAa,GAAG,IAAA,CAAKzC,cAA3B,CAAA;;AAEA,IAAA,IAAIyC,aAAJ,EAAmB;MACf,IAAKC,CAAAA,yBAAL,CAA+B,EAA/B,CAAA,CAAA;AACH,KAAA;;AACD3yC,IAAAA,KAAK,CAAC,IAAD,EAAO,aAAP,CAAL,CAAA;AACAA,IAAAA,KAAK,CAAC,IAAD,EAAO,cAAP,CAAL,CAAA;IAEA,IAAM5iB,MAAM,GAAG,IAAA,CAAKA,MAApB,CAAA;;AACA,IAAA,KAAK,IAAMH,IAAX,IAAmBG,MAAnB,EAA2B;AACvB,MAAA,IAAMw1D,OAAO,GAAGx1D,MAAM,CAACH,IAAD,CAAtB,CAAA;AACA21D,MAAAA,OAAO,IAAIA,OAAO,CAACnG,OAAR,EAAX,CAAA;AACH,KAAA;GAnBE,CAAA;;EAqBA,OAAAjF,CAAAA,UAAA,GAAP,YAAA;AACI,IAAA,IAAMz4C,MAAM,GAAG,IAAK1R,CAAAA,KAAL,CAAW0R,MAA1B,CAAA;AACA,IAAA,OAAOA,MAAM,GAAG,CAACA,MAAD,CAAH,GAAc,EAA3B,CAAA;GAFG,CAAA;AAIP;;;;AAIG;;;AACI,EAAA,OAAA,CAAO8jD,OAAP,GAAP,UAA+B9wD,QAA/B,EAA+C;AAC3C,IAAA,IAAMggB,KAAK,GAAW,IAAA,CAAK1kB,KAAL,CAAW0kB,KAAX,IAAoB,EAA1C,CAAA;AAEA,IAAA,OAAOjb,IAAI,CAACib,KAAD,EAAQ,UAAA7kB,IAAA,EAAQ;AAAA,MAAA,OAAAA,IAAI,CAACD,IAAL,KAAc8E,QAAd,CAAA;AAAsB,KAAtC,CAAX,CAAA;GAHG,CAAA;;EAKA,OAAAs3C,CAAAA,YAAA,GAAP,YAAA;IACU,IAAAn3C,EAAiD,GAAA,IAAA,CAAK7E,KAAtD;AAAA,QAAEitC,cAAc,GAAApoC,EAAA,CAAAooC,cAAhB;AAAA,QAAkBynB,eAAe,GAAA7vD,EAAA,CAAA6vD,eAAjC;AAAA,QAAmC/iD,SAAS,eAA5C,CAAA;AAEN,IAAA,OAAOA,SAAU,IACT+iD,eAAe,IAAIA,eAAe,CAAC1Y,YAAhB,EADpB,IAEC/O,cAAc,IAAIA,cAAc,CAAC+O,YAAf,EAFnB,IAGA,IAAK6R,CAAAA,UAAL,CAAgBx8C,aAHvB,CAAA;GAHG,CAAA;AAQP;;;;;;;;;;;;;;AAcG;;;AACI,EAAA,OAAA,CAAiBu8C,iBAAjB,GAAP,UAAyBl8C,MAAzB,EAAwC;;;AACpC,IAAA,OAAOA,MAAM,IAAI,CAAC,CAAA,CAAA7M,EAAA,GAAA6M,MAAM,CAAC4Q,YAAP,MAAA,IAAA,IAAAzd,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAgf,IAAA,CAAAnS,MAAA,EAAsB,OAAtB,CAAA,KAAkC,EAAnC,EAAuC3O,OAAvC,CAA+CR,MAA/C,CAAA,GAAyD,CAAC,CAA3E,CAAA;GADG,CAAA;AAGP;;;;;;;;;;;;;;AAcG;;;AACI,EAAA,OAAA,CAASuD,SAAT,GAAP,UAAiBnC,CAAjB,EAA2C;IACvC,IAAMqN,WAAW,GAAG,IAAA,CAAKA,WAAzB,CAAA;IACA,IAAMC,YAAY,GAAG,IAAA,CAAKA,YAA1B,CAAA;;AAEA,IAAA,IAAID,WAAW,IAAIy8C,mBAAmB,CAAC,IAAD,CAAnB,CAA0B;AAAEzoD,MAAAA,UAAU,EAAErB,CAAAA;AAAd,KAA1B,CAAnB,EAAiE;AAC7D,MAAA,IAAI,CAACqN,WAAW,CAACpL,MAAZ,EAAL,EAA2B;QACvBoL,WAAW,CAACykD,gBAAZ,CAA6B9xD,CAA7B,CAAA,CAAA;AACH,OAAA;KAHL,MAIO,IAAIsN,YAAY,IAAI,IAAA,CAAK28C,iBAAL,CAAuBjqD,CAAC,CAAC+N,MAAzB,CAApB,EAAiE;AACpE,MAAA,IAAI,CAACT,YAAY,CAACrL,MAAb,EAAL,EAA4B;QACxBqL,YAAY,CAACwkD,gBAAb,CAA8B9xD,CAA9B,CAAA,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;GAbG,CAAA;AAeP;;;;;;;;;;;;;;;;AAgBG;;;AACI,EAAA,OAAA,CAAO+xD,OAAP,GAAP,UAAe7jD,EAAf,EAAoC;IAC1B,IAAAhN,EAAA,GAAuD,IAAA,CAAKP,KAA5D;AAAA,QAAEoN,MAAM,GAAA7M,EAAA,CAAA6M,MAAR;AAAA,QAAU1K,IAAI,GAAAnC,EAAA,CAAAmC,IAAd;AAAA,QAAgB+P,IAAI,GAAAlS,EAAA,CAAAkS,IAApB;AAAA,QAAsBkH,IAAI,GAAApZ,EAAA,CAAAoZ,IAA1B;AAAA,QAA4BC,IAAI,GAAArZ,EAAA,CAAAqZ,IAAhC;AAAA,QAAkCioB,gBAAgB,GAAAthC,EAAA,CAAAshC,gBAAlD,CAAA;;IAEN,IAAI,CAACz0B,MAAL,EAAa;AACT,MAAA,OAAO,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAI0K,IAAJ,CAAA;;IAEA,IAAIvK,EAAE,YAAYgW,OAAlB,EAA2B;AACvB,MAAA,IAAM5R,UAAU,GAAGpE,EAAE,CAACsK,qBAAH,EAAnB,CAAA;AAEAC,MAAAA,IAAI,GAAG;QACHxZ,IAAI,EAAEqT,UAAU,CAACrT,IADd;QAEHD,GAAG,EAAEsT,UAAU,CAACtT,GAFb;QAGHsJ,KAAK,EAAEgK,UAAU,CAAChK,KAHf;QAIHC,MAAM,EAAE+J,UAAU,CAAC/J,MAAAA;OAJvB,CAAA;AAMH,KATD,MASO;MACHkQ,IAAI,GAAAtc,QAAA,CAAA;AAAKmM,QAAAA,KAAK,EAAE,CAAZ;AAAeC,QAAAA,MAAM,EAAE,CAAA;OAAvB,EAA6B2F,EAA7B,CAAJ,CAAA;AACH,KAAA;;AAGG,IAAA,IAAMwK,QAAQ,GAIdD,IAAI,KAJJ;AAAA,QACKE,OAAO,GAGZF,IAAI,CAAAzZ,GAJJ;AAAA,QAEO+Y,SAAS,GAEhBU,IAAI,CAFYnQ,KAFhB;AAAA,QAGQ0P,UAAU,GAClBS,IAAI,OAJJ,CAAA;AAKJ,IAAA,IAAMu5C,MAAM,GAAGC,SAAS,CAAC,CAAC5uD,IAAD,EAAO+P,IAAP,EAAamH,IAAb,EAAmBD,IAAnB,CAAD,EAA2BkoB,gBAA3B,CAAxB,CAAA;AACA,IAAA,IAAMx5B,IAAI,GAAGkpD,cAAc,CAACF,MAAD,EAAS,CAChC,CAACt5C,QAAD,EAAWC,OAAX,CADgC,EAEhC,CAACD,QAAQ,GAAGX,SAAZ,EAAuBY,OAAvB,CAFgC,EAGhC,CAACD,QAAQ,GAAGX,SAAZ,EAAuBY,OAAO,GAAGX,UAAjC,CAHgC,EAIhC,CAACU,QAAD,EAAWC,OAAO,GAAGX,UAArB,CAJgC,CAAT,CAA3B,CAAA;AAMA,IAAA,IAAMm6C,SAAS,GAAGC,WAAW,CAACJ,MAAD,CAA7B,CAAA;;AAEA,IAAA,IAAI,CAAChpD,IAAD,IAAS,CAACmpD,SAAd,EAAyB;AACrB,MAAA,OAAO,CAAP,CAAA;AACH,KAAA;;IAED,OAAOp1D,IAAI,CAACwa,GAAL,CAAS,GAAT,EAAcvO,IAAI,GAAGmpD,SAAP,GAAmB,GAAjC,CAAP,CAAA;GAxCG,CAAA;AA0CP;;;;;;;;;;;;;;;;AAgBG;;;AACI,EAAA,OAAA,CAAAE,QAAA,GAAP,UAAgB9vD,OAAhB,EAAiCC,OAAjC,EAAgD;IACtC,IAAAtB,EAAA,GAAuD,IAAA,CAAKP,KAA5D;AAAA,QAAEoN,MAAM,GAAA7M,EAAA,CAAA6M,MAAR;AAAA,QAAU1K,IAAI,GAAAnC,EAAA,CAAAmC,IAAd;AAAA,QAAgB+P,IAAI,GAAAlS,EAAA,CAAAkS,IAApB;AAAA,QAAsBkH,IAAI,GAAApZ,EAAA,CAAAoZ,IAA1B;AAAA,QAA4BC,IAAI,GAAArZ,EAAA,CAAAqZ,IAAhC;AAAA,QAAkCioB,gBAAgB,GAAAthC,EAAA,CAAAshC,gBAAlD,CAAA;;IAEN,IAAI,CAACz0B,MAAL,EAAa;AACT,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,OAAOskD,QAAQ,CAAC,CAAC9vD,OAAD,EAAUC,OAAV,CAAD,EAAqByvD,SAAS,CAAC,CAAC5uD,IAAD,EAAO+P,IAAP,EAAamH,IAAb,EAAmBD,IAAnB,CAAD,EAA2BkoB,gBAA3B,CAA9B,CAAf,CAAA;GANG,CAAA;AAQP;;;;;;;;;;;AAWG;;;EACI,OAAAsmB,CAAAA,UAAA,GAAP,UAAkBzmD,IAAlB,EAA+CiwD,QAA/C,EAAmEC,UAAnE,EAA6F;AAA1B,IAAA,IAAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,UAA0B,GAAA,IAA1B,CAAA;AAA0B,KAAA;;IACzF,IAAMl2D,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IACA,IAAMm2D,QAAQ,GAAG,CAACn2D,KAAK,CAACw1C,cAAP,IAAyB,CAACx1C,KAAK,CAAC00D,eAAjD,CAAA;;AAEA,IAAA,IAAIyB,QAAJ,EAAc;MACVtgD,aAAa,CAAC,IAAD,CAAb,CAAA;AACH,KAAA;;AACD,IAAA,IAAMo3B,cAAc,GAAGjtC,KAAK,CAACitC,cAA7B,CAAA;IACA,IAAM3oC,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IACA,IAAMoN,MAAM,GAAIpN,KAAK,CAACoN,MAAN,IAAgB1R,KAAK,CAAC0R,MAAtC,CAAA;AACA,IAAA,IAAMC,SAAS,GAAG,IAAKqqC,CAAAA,YAAL,EAAlB,CAAA;IACA,IAAMuT,aAAa,GAAGtiB,cAAc,GAC7BA,cAAsB,CAAC0lB,cADM,GAE9B,IAAA,CAAKA,cAFX,CAAA;IAGA,IAAMyD,SAAS,GAAGvF,qBAAqB,CACnC,KAAKhD,UAD8B,EAEnCn8C,MAFmC,EAGnCC,SAHmC,EAInCA,SAJmC,EAKnC49C,aAAa,IAAI59C,SALkB,EAMnC,IAAK0kD,CAAAA,iBAAL,EANmC,CAAvC,CAAA;;IASA,IAAI,CAAC3kD,MAAD,IAAW,IAAA,CAAK6gD,eAAhB,IAAmCvyD,KAAK,CAACo0D,WAA7C,EAA0D;AACtD,MAAA,IAAMkC,YAAY,GAAG1E,eAAe,CAAC5xD,KAAK,CAACo0D,WAAP,CAApC,CAAA;;AAEA,MAAA,KAAK,IAAMx0D,IAAX,IAAmB02D,YAAnB,EAAiC;AAC5BF,QAAAA,SAAiB,CAACx2D,IAAD,CAAjB,GAA2B02D,YAAoB,CAAC12D,IAAD,CAA/C,CAAA;AACJ,OAAA;AACJ,KAAA;;AAED,IAAA,IAAIu2D,QAAJ,EAAc;MACVtgD,aAAa,EAAA,CAAA;AAChB,KAAA;;IACD,IAAK0gD,CAAAA,WAAL,CACIH,SADJ,EAEInpB,cAAc,GAAG,KAAH,GAAWipB,UAF7B,CAAA,CAAA;GAlCG,CAAA;AAuCP;;;;;;;;;;;;;;;;AAgBG;;;AACI,EAAA,OAAA,CAAUvvC,UAAV,GAAP,UAAkBjiB,QAAlB,EAAmC;;;IAC/B,IAAMsM,WAAW,GAAG,IAAA,CAAKA,WAAzB,CAAA;IACA,IAAMC,YAAY,GAAG,IAAA,CAAKA,YAA1B,CAAA;;AAEA,IAAA,IAAID,WAAW,SAAX,IAAAA,WAAW,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAAA,WAAW,CAAEpL,MAAb,EAAJ,EAA2B;MACvB,IAAI,CAAClB,QAAL,EAAe;AACX,QAAA,OAAO,IAAP,CAAA;AACH,OAAA;;AACD,MAAA,IAAMwM,IAAI,GAAGF,WAAW,CAACG,YAAZ,EAAb,CAAA;MAEA,OAAO,CAAC,EAAC,CAAAtM,EAAA,GAAAqM,IAAI,CAACxM,QAAD,CAAJ,MAAc,IAAd,IAAcG,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAcA,EAAA,CAAE6e,YAAjB,CAAR,CAAA;AACH,KAAA;;AACD,IAAA,IAAIzS,YAAY,SAAZ,IAAAA,YAAY,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAAA,YAAY,CAAErL,MAAd,EAAJ,EAA4B;MACxB,IAAI,CAAClB,QAAL,EAAe;AACX,QAAA,OAAO,IAAP,CAAA;AACH,OAAA;;AACD,MAAA,IAAMwM,IAAI,GAAGD,YAAY,CAACE,YAAb,EAAb,CAAA;MAEA,OAAO,CAAC,EAAC,CAAAvM,EAAA,GAAAsM,IAAI,CAACxM,QAAD,CAAJ,MAAc,IAAd,IAAcE,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAcA,EAAA,CAAE8e,YAAjB,CAAR,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,KAAP,CAAA;GApBG,CAAA;AAsBP;;;;;;;;;;;AAWG;;;AACI,EAAA,OAAA,CAAY8yC,YAAZ,GAAP,UAAoBxwD,IAApB,EAA+C;AAC3C,IAAA,IAAA,CAAKymD,UAAL,CAAgBzmD,IAAhB,EAAsB,IAAtB,CAAA,CAAA;GADG,CAAA;AAGP;;;;;;;;;;AAUG;;;EACI,OAAAsV,CAAAA,OAAA,GAAP,YAAA;IACI,IAAMhX,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA,IAAA,IAAM4I,KAAK,GAAG4D,uBAAuB,CAAC,IAAA,CAAKxM,KAAN,CAArC,CAAA;AACO,IAAA,IAAA0C,IAAI,GAAsBkG,KAAK,EAAA,CAA/B;AAAA,QAAM6J,IAAI,GAAgB7J,KAAK,CAAA,CAAA,CAA/B;AAAA,QAAY+Q,IAAI,GAAU/Q,KAAK,CAAf,CAAe,CAA/B;AAAA,QAAkBgR,IAAI,GAAIhR,KAAK,EAAA,CAA/B,CAAA;AACP,IAAA,IAAMkP,IAAI,GAAGd,OAAO,CAACpO,KAAD,CAApB,CAAA;AAEI,IAAA,IAAO8O,WAAW,GAElB1X,KAAK,CAAA2H,KAFL;AAAA,QACQgQ,YAAY,GACpB3X,KAAK,CAAA4H,MAFL,CAAA;AAIA,IAAA,IAAAD,KAAK,GAILmQ,IAAI,MAJJ;AAAA,QACAlQ,MAAM,GAGNkQ,IAAI,CAAAlQ,MAJJ;AAAA,QAEAtJ,IAAI,GAEJwZ,IAAI,CAFAxZ,IAFJ;AAAA,QAGAD,GAAG,GACHyZ,IAAI,IAJJ,CAAA;IAKJ,IAAMq6C,QAAQ,GAAG,CAACnyD,KAAK,CAAC1B,IAAP,EAAa0B,KAAK,CAAC3B,GAAnB,CAAjB,CAAA;IACA,IAAM+E,MAAM,GAAGU,IAAI,CAACquD,QAAD,EAAWnyD,KAAK,CAACoD,MAAjB,CAAnB,CAAA;IACA,IAAMklC,YAAY,GAAGxkC,IAAI,CAACquD,QAAD,EAAWnyD,KAAK,CAACsoC,YAAjB,CAAzB,CAAA;AACA,IAAA,IAAM/kC,eAAe,GAAGvD,KAAK,CAACuD,eAA9B,CAAA;IAEA,OAAO;AACHoE,MAAAA,KAAK,EAAAA,KADF;AAEHC,MAAAA,MAAM,EAAAA,MAFH;AAGHtJ,MAAAA,IAAI,EAAAA,IAHD;AAIHD,MAAAA,GAAG,EAAAA,GAJA;AAKHqE,MAAAA,IAAI,EAAAA,IALD;AAMH+P,MAAAA,IAAI,EAAAA,IAND;AAOHkH,MAAAA,IAAI,EAAAA,IAPD;AAQHC,MAAAA,IAAI,EAAAA,IARD;AASHlC,MAAAA,WAAW,EAAAA,WATR;AAUHC,MAAAA,YAAY,EAAAA,YAVT;AAWH2wB,MAAAA,YAAY,EAAAA,YAXT;AAYHllC,MAAAA,MAAM,EAAAA,MAZH;AAaHG,MAAAA,eAAe,EAAAA,eAbZ;MAcH8W,QAAQ,EAAE,KAAKo5B,WAAL,EAAA;KAdd,CAAA;GApBG,CAAA;AAqCP;;;;;;;;;;AAUG;;;EACI,OAAA2e,CAAAA,UAAA,GAAP,YAAA;AACI,IAAA,OAAO,IAAP,CAAA;GADG,CAAA;AAGP;;;;;;;;;;AAUG;;;AACI,EAAA,OAAA,CAAQ/yC,QAAR,GAAP,UAAgB3d,IAAhB,EAA2C;;;AACvC,IAAA,IAAI,CAACA,IAAD,IAASA,IAAI,KAAK,QAAtB,EAAgC;AAC5B,MAAA,CAAAnB,EAAA,GAAA,IAAA,CAAKmM,WAAL,MAAkB,IAAlB,IAAkBnM,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkBA,EAAA,CAAA+e,IAAA,EAAlB,CAAA;AACH,KAAA;;AACD,IAAA,IAAI,CAAC5d,IAAD,IAASA,IAAI,KAAK,SAAtB,EAAiC;AAC7B,MAAA,CAAApB,EAAA,GAAA,IAAA,CAAKqM,YAAL,MAAmB,IAAnB,IAAmBrM,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmBA,EAAA,CAAAgf,IAAA,EAAnB,CAAA;AACH,KAAA;GANE,CAAA;;EAQA,OAAAm0B,CAAAA,WAAA,GAAP,YAAA;IACU,IAAAlzC,EAIF,GAAA,IAAA,CAAKP,KAJH;AAAA,QACF0C,IAAI,GAAAnC,EAAA,CAAAmC,IADF;AAAA,QAEF+P,IAAI,GAAAlS,EAAA,CAAAkS,IAFF;AAAA,QAGFpO,SAAS,eAHP,CAAA;AAMN,IAAA,OAAO6f,mBAAmB,CAACxhB,IAAD,EAAO+P,IAAP,EAAapO,SAAb,CAA1B,CAAA;GAPG,CAAA;AASP;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BG;;;EACI,OAAAkkB,CAAAA,OAAA,GAAP,UAAenoB,QAAf,EAAiCopC,KAAjC,EAA2D6oB,SAA3D,EAA8E;AAA7C,IAAA,IAAA7oB,KAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,KAAwB,GAAA,EAAxB,CAAA;AAAwB,KAAA;;IAC/C,IAAAjpC,EAAA,GAAuB,IAAA,CAAK7E,KAA5B;AAAA,QAAE0kB,KAAK,GAAA7f,EAAA,CAAA6f,KAAP;AAAA,QAAS5U,SAAS,GAAAjL,EAAA,CAAAiL,SAAlB,CAAA;IACN,IAAM8mD,WAAW,GAASlyC,KAAM,CAAC/a,MAAP,CAAc,UAAC9J,IAAD,EAAgB;AAAA,MAAA,OAAAA,IAAI,CAACD,IAAL,KAAc8E,QAAd,CAAA;KAA9B,CAAA,CAAsD,CAAtD,CAA1B,CAAA;;IAEA,IAAI,IAAA,CAAKiiB,UAAL,EAAA,IAAqB,CAACiwC,WAAtB,IAAqC,CAACA,WAAW,CAAC/pC,OAAtD,EAA+D;MAC3D,OAAO;AACHA,QAAAA,OAAO,EAAA,YAAA;AACH,UAAA,OAAO,IAAP,CAAA;SAFD;AAIH3a,QAAAA,UAAU,EAAA,YAAA;AACN,UAAA,OAAO,IAAP,CAAA;AACH,SAAA;OANL,CAAA;AAQH,KAAA;;IACD,IAAM6M,IAAI,GAAG,IAAb,CAAA;AACA,IAAA,IAAM83C,aAAa,GAAGD,WAAW,CAAC/pC,OAAZ,CAAoB,IAApB,CAAtB,CAAA;AAEA,IAAA,IAAMy/B,cAAc,GAAGqK,SAAS,IAAI7oB,KAAK,CAAC6oB,SAA1C,CAAA;IACA,IAAMzK,QAAQ,GAAG2K,aAAa,CAAC9oB,SAAd,GAA0B,cAA1B,GAA2C,aAA5D,CAAA;IACA,IAAMqe,UAAU,GAAG,EAAA9rD,CAAAA,MAAA,CAAIwP,SAAS,GAAG,OAAH,GAAa,EAA1B,EAA6BxP,MAA7B,CAAgCu2D,aAAa,CAAC9oB,SAAd,GAA0B,SAA1B,GAAsC,EAAtE,CAAnB,CAAA;AAEA,IAAA,IAAM+oB,SAAS,GAAG;MACdjqC,OAAO,EAAP,UAAQkqC,SAAR,EAA+B;QAC3B9K,WAAW,CAACltC,IAAD,EAAOmtC,QAAP,EAAiB,MAAjB,EAAyBE,UAAzB,EAAqC,EAArC,EACJtsD,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA+2D,aAAa,CAAChqC,OAAd,CAAsBkqC,SAAtB,CAAA,CAAA,EAAgC;AACnChwC,UAAAA,WAAW,EAAEriB,QADsB;AAEnCoiB,UAAAA,SAAS,EAAE,IAAA;SAFR,CADI,EAIRwlC,cAJQ,CAAX,CAAA;AAKA,QAAA,OAAO,IAAP,CAAA;OAPU;AASdp6C,MAAAA,UAAU,EAAA,YAAA;QACN+5C,WAAW,CAACltC,IAAD,EAAOmtC,QAAP,EAAiB,MAAjB,EAAyBE,UAAzB,EAAqC,KAArC,EAA0CtsD,QAAA,CAAAA,QAAA,CAAA,EAAA,EAC9C+2D,aAAa,CAAC3kD,UAAd,EAD8C,CAAA,EACpB;AAC7B6U,UAAAA,WAAW,EAAEriB,QADgB;AAE7BoiB,UAAAA,SAAS,EAAE,IAAA;SAHsC,CAA1C,EAIRwlC,cAJQ,CAAX,CAAA;AAKA,QAAA,OAAO,IAAP,CAAA;AACH,OAAA;KAhBL,CAAA;IAmBAL,WAAW,CAACltC,IAAD,EAAOmtC,QAAP,EAAiB,MAAjB,EAAyBE,UAAzB,EAAqC,OAArC,EACJtsD,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAA+2D,aAAa,CAAC7oB,YAAd,CAA2BF,KAA3B,CAAA,CAAA,EAAiC;AACpC/mB,MAAAA,WAAW,EAAEriB,QADuB;AAEpCoiB,MAAAA,SAAS,EAAE,IAAA;KAFR,CADI,EAIRwlC,cAJQ,CAAX,CAAA;IAMA,OAAOA,cAAc,GAAGwK,SAAS,CAACjqC,OAAV,CAAkBihB,KAAlB,CAAyB57B,CAAAA,UAAzB,EAAH,GAA2C4kD,SAAhE,CAAA;GA9CG,CAAA;AAgDP;;;;;;;;;AASG;;;EACI,OAAA1H,CAAAA,OAAA,GAAP,YAAA;AACI,IAAA,IAAA,CAAK+F,oBAAL,EAAA,CAAA;GADG,CAAA;;EAGA,OAAAxB,CAAAA,iBAAA,GAAP,YAAA;AACI,IAAA,IAAMrvD,KAAK,GAAG,IAAK6mC,CAAAA,QAAL,EAAd,CAAA;IACA,IAAMnrC,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AAEI,IAAA,IAAA2xD,oBAAoB,GASpBrtD,KAAK,CAAAqtD,oBATL;AAAA,QACA9pD,eAAe,GAQfvD,KAAK,CAAAuD,eATL;AAAA,QAEAL,SAAS,GAOTlD,KAAK,CAAAkD,SATL;AAAA,QAEWT,IAAI,GAOfzC,KAAK,CAPUyC,IAFf;AAAA,QAGAC,IAAI,GAMJ1C,KAAK,CAAA0C,IATL;AAAA,QAGM+P,IAAI,GAMVzS,KAAK,CANKyS,IAHV;AAAA,QAGYkH,IAAI,GAMhB3Z,KAAK,CANW2Z,IAHhB;AAAA,QAGkBC,IAAI,GAMtB5Z,KAAK,CANiB4Z,IAHtB;AAAA,QAIM84C,SAAS,GAKf1yD,KAAK,KATL;AAAA,QAKK2yD,QAAQ,GAIb3yD,KAAK,CAJQ3B,GALb;;AAOA;IACAkvD,WAAW,GACXvtD,KAAK,CAAAutD,WATL,CAAA;;AAUE,IAAA,IAAAhtD,KAKD7E,KAAK,CAAC88C,OAAN,IAAiB,EALhB;AAAA,QACFl4C,EAAA,GAAAC,EAAA,CAAAjC,IADE;QACFA,IAAI,GAAAgC,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EADN;AAAA,QAEFyC,EAAO,GAAAxC,EAAA,CAAAlC,GAFL;QAEFA,GAAG,GAAA0E,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAIA,EAFL;AAAA,QAGFyV,EAAU,GAAAjY,EAAA,CAAA0I,MAHR;QAGFA,MAAM,GAAGuP,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAACA,EAHR;AAAA,QAIFiB,aAJE;QAIFtC,KAAK,GAAGsC,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,KAJN,CAAA;;IAMN,IAAMra,CAAC,GAAGqD,IAAI,GAAG,CAAH,GAAO,CAArB,CApBJ;AAuBI;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;IAEA,IAAImB,cAAc,GAAa,EAA/B,CAAA;;AAEA,IAAA,IAAI2pD,WAAJ,EAAiB;AACb3pD,MAAAA,cAAc,GAAGL,eAAjB,CAAA;KADJ,MAEO,IAAI,IAAKgmD,CAAAA,UAAL,IAAmB7tD,KAAK,CAAC8P,SAA7B,EAAwC;AAC3C5H,MAAAA,cAAc,GAAGypD,oBAAjB,CAAA;AACH,KAFM,MAEA;MACHzpD,cAAc,GAAGE,IAAI,CAACupD,oBAAD,EAAuB,CAACqF,SAAD,EAAYC,QAAZ,CAAvB,CAArB,CAAA;AACH,KAAA;;IAED3yD,KAAK,CAAC8mC,WAAN,GAAoB,CAChBhjC,IAAI,CAACpB,IAAD,EAAOqf,gBAAgB,CAAC7e,SAAD,EAAY,CAAC,CAAC5E,IAAF,EAAQ,CAACD,GAAT,CAAZ,EAA2BkF,eAA3B,EAA4CK,cAA5C,EAA4DxE,CAA5D,CAAvB,CADY,EAEhB0E,IAAI,CAAC2O,IAAD,EAAOsP,gBAAgB,CAAC7e,SAAD,EAAY,CAACiU,KAAD,EAAQ,CAAC9Y,GAAT,CAAZ,EAA2BkF,eAA3B,EAA4CK,cAA5C,EAA4DxE,CAA5D,CAAvB,CAFY,EAGhB0E,IAAI,CAAC6V,IAAD,EAAOoI,gBAAgB,CAAC7e,SAAD,EAAY,CAAC,CAAC5E,IAAF,EAAQ2K,MAAR,CAAZ,EAA6B1F,eAA7B,EAA8CK,cAA9C,EAA8DxE,CAA9D,CAAvB,CAHY,EAIhB0E,IAAI,CAAC8V,IAAD,EAAOmI,gBAAgB,CAAC7e,SAAD,EAAY,CAACiU,KAAD,EAAQlO,MAAR,CAAZ,EAA6B1F,eAA7B,EAA8CK,cAA9C,EAA8DxE,CAA9D,CAAvB,CAJY,CAApB,CAAA;GA7CG,CAAA;;EAoDA,OAAAgwD,CAAAA,WAAA,GAAP,YAAA;IACI,IAAKpB,CAAAA,oBAAL,GAA4B,KAA5B,CAAA;IACM,IAAAztD,EAAwC,GAAA,IAAA,CAAK7E,KAA7C;AAAA,QAAE0R,MAAM,GAAA7M,EAAA,CAAA6M,MAAR;AAAA,QAAUC,SAAS,GAAA9M,EAAA,CAAA8M,SAAnB;AAAA,QAAqBs7B,cAAc,oBAAnC,CAAA;IACA,IAAAroC,EAAA,GAGF,IAAA,CAAKN,KAHH;AAAA,QACMsvD,WAAW,GAAAhvD,EAAA,CAAA8M,MADjB;AAAA,QAESwlD,cAAc,GAAAtyD,EAAA,CAAA+M,SAFvB,CAAA;;AAKN,IAAA,IAAI,CAACiiD,WAAD,IAAgB,CAACliD,MAArB,EAA6B;AACzB,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAA,CAAKylD,WAAL,EAAA,CAAA;IAEA,IAAMC,eAAe,GAAG,CAAClyC,MAAM,CAAC0uC,WAAD,EAAcliD,MAAd,CAA/B,CAAA;IACA,IAAM2lD,SAAS,GAAGD,eAAe,IAAI,CAAClyC,MAAM,CAACgyC,cAAD,EAAiBvlD,SAAjB,CAA5C,CAAA;;IAEA,IAAI,CAAC0lD,SAAL,EAAgB;AACZ,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAMC,iBAAiB,GAAG3lD,SAAS,IAAI,KAAKk8C,UAA5C,CAAA;;AAEA,IAAA,IAAIyJ,iBAAJ,EAAuB;AACnB,MAAA,IAAA,CAAKC,UAAL,EAAA,CAAA;AACH,KAAA;;AACD,IAAA,IAAA,CAAKhB,WAAL,CAAiB;AAAE7kD,MAAAA,MAAM,EAAAA,MAAR;AAAUC,MAAAA,SAAS,EAAAA,SAAAA;KAApC,CAAA,CAAA;;AAEA,IAAA,IAAI,CAACs7B,cAAD,IAAmBqqB,iBAAvB,EAA0C;AACtC,MAAA,IAAA,CAAK7K,UAAL,CAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,CAAA,CAAA;AACH,KAAA;;IACD,IAAK6F,CAAAA,oBAAL,GAA4B8E,eAA5B,CAAA;GA7BG,CAAA;;EA+BA,OAAAI,CAAAA,kBAAA,GAAP,YAAA;AACI,IAAA,OAAO,IAAIC,OAAJ,CAAY,YAAQ,EAApB,CAAP,CAAA;GADG,CAAA;;AAGA,EAAA,OAAA,CAAAnzC,YAAA,GAAP,UAAoB1kB,IAApB,EAAkC+D,CAAlC,EAAwC;AACpC,IAAA,IAAA,CAAKygB,QAAL,CAAcszC,OAAd,CAAsB93D,IAAtB,EAA4B+D,CAA5B,CAAA,CAAA;;AACA,IAAA,IAAMwgB,QAAQ,GAAI,IAAA,CAAKnkB,KAAL,CAAmBJ,IAAnB,CAAlB,CAAA;AAEA,IAAA,OAAOukB,QAAQ,IAAIA,QAAQ,CAACxgB,CAAD,CAA3B,CAAA;GAJG,CAAA;;AAMA,EAAA,OAAA,CAAAg0D,MAAA,GAAP,UAAcC,GAAd,EAA2BruB,GAA3B,EAAsC;AAClC,IAAA,IAAMsuB,cAAc,GAAG,IAAK73D,CAAAA,KAAL,CAAW83D,eAAlC,CAAA;AAEA,IAAA,IAAMv8B,GAAG,GAAGq8B,GAAG,GAAGruB,GAAlB,CAAA;;AAEA,IAAA,IAAI,CAACsuB,cAAc,CAACt8B,GAAD,CAAnB,EAA0B;MACtBs8B,cAAc,CAACt8B,GAAD,CAAd,GAAsBw8B,MAAM,CAACH,GAAD,EAAMruB,GAAN,CAA5B,CAAA;AACH,KAAA;;IACD,OAAOsuB,cAAc,CAACt8B,GAAD,CAArB,CAAA;GARG,CAAA;;EA4BA,OAAA4P,CAAAA,QAAA,GAAP,YAAA;;;IACI,IAAMnrC,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;;IACA,IAAIA,KAAK,CAAC0R,MAAN,KAAgB,CAAA7M,EAAA,GAAC7E,KAAa,CAACqoB,OAAf,MAAsB,IAAtB,IAAsBxjB,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsBA,EAAA,CAAEsE,MAAxC,CAAJ,EAAoD;MAChD,IAAKopD,CAAAA,eAAL,GAAuB,IAAvB,CAAA;AACH,KAAA;;IACD,IAAMyF,aAAa,GAAG,IAAA,CAAKnK,UAA3B,CAAA;AACA,IAAA,IAAMuG,WAAW,GAAGp0D,KAAK,CAACo0D,WAA1B,CAAA;AACA,IAAA,IAAMD,gBAAgB,GAAGn0D,KAAK,CAACm0D,gBAA/B,CAAA;;AAEA,IAAA,IAAIA,gBAAgB,IAAI,CAAC6D,aAAzB,EAAwC;AACpC,MAAA,OAAO7D,gBAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAI,CAAC,IAAA,CAAK5B,eAAN,IAAyB6B,WAA7B,EAA0C;AACtC,MAAA,IAAMkC,YAAY,GAAG1E,eAAe,CAACwC,WAAD,CAApC,CAAA;;AAEA,MAAA,IAAIkC,YAAJ,EAAkB;AACd,QAAA,IAAA,CAAKC,WAAL,CAAiBD,YAAjB,EAA+B,KAA/B,CAAA,CAAA;AACA,QAAA,OAAO,KAAKhyD,KAAZ,CAAA;AACH,OAAA;AACJ,KAAA;;AACA,IAAA,IAAA,CAAKA,KAAL,CAAmButD,WAAnB,GAAiC,KAAjC,CAAA;AACD,IAAA,OAAO,KAAKvtD,KAAZ,CAAA;GArBG,CAAA;;AAuBA,EAAA,OAAA,CAAe2zD,eAAf,GAAP,cAAO,CAAA;;EACG,OAAAV,CAAAA,UAAA,GAAV,YAAA;IAAA,IAMCzL,KAAA,GAAA,IAND,CAAA;;AACI,IAAA,IAAA,CAAKmG,WAAL,CAAiBl4C,OAAjB,CAAyB,UAAAla,IAAA,EAAI;MACzB,IAAIA,IAAI,CAAC8iB,KAAT,EAAgB;QACZ9iB,IAAI,CAAC8iB,KAAL,CAAWmpC,KAAX,CAAA,CAAA;AACH,OAAA;KAHL,CAAA,CAAA;GADM,CAAA;;AAOA,EAAA,OAAA,CAAAqL,WAAA,GAAV,UACIzyC,KADJ,EAEI0nC,UAFJ,EAE2B;AADvB,IAAA,IAAA1nC,KAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,KAAgB,GAAA,IAAA,CAAK1kB,KAAL,CAAW0kB,KAA3B,CAAA;AAAiC,KAAA;;AACjC,IAAA,IAAA0nC,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,UAAuB,GAAA,EAAvB,CAAA;AAAuB,KAAA;;IAEvB,IAAMpsD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA,IAAA,IAAM4kB,0BAA0B,GAAG5kB,KAAK,CAAC4kB,0BAAzC,CAAA;AACA,IAAA,IAAMC,YAAY,GAAG,IAAA,CAAKkvC,eAAL,CAAqBrvC,KAArB,CAArB,CAAA;IAEA,IAAM5e,SAAS,GAAG,MAAOxF,CAAAA,MAAP,CAAO8rD,UAAP,SAAA,CAAlB,CAAA;IACA,IAAMlgC,UAAU,GAAG,OAAQ5rB,CAAAA,MAAR,CAAQ8rD,UAAR,SAAA,CAAnB,CAAA;IACA,IAAM5hB,gBAAgB,GAAG,MAAOlqC,CAAAA,MAAP,CAAO8rD,UAAP,gBAAA,CAAzB,CAAA;AAEA,IAAA,IAAM6F,WAAW,GAAGxtC,WAAW,CAACI,YAAD,EAAe,CAAC/e,SAAD,EAAYomB,UAAZ,CAAf,EAAwCtH,0BAAxC,CAA/B,CAAA;IACA,IAAM4H,YAAY,GAAG/H,WAAW,CAACI,YAAD,EAAe,CAAC2lB,gBAAD,CAAf,EAAmC5lB,0BAAnC,CAAhC,CAAA;IAEA,IAAKC,CAAAA,YAAL,GAAoBA,YAApB,CAAA;IACA,IAAKotC,CAAAA,WAAL,GAAmBA,WAAnB,CAAA;IACA,IAAKzlC,CAAAA,YAAL,GAAoBA,YAApB,CAAA;GAjBM,CAAA;;AAmBA,EAAA,OAAA,CAAA+pC,WAAA,GAAV,UAAsBH,SAAtB,EAAsCF,UAAtC,EAA0D;AACtD,IAAA,IAAIA,UAAJ,EAAgB;MACZ,IAAI,IAAA,CAAK5I,WAAT,EAAsB;AAClB,QAAA,OAAA;AACH,OAAA;;MACD,IAAK4K,CAAAA,QAAL,CAAc9B,SAAd,CAAA,CAAA;AACH,KALD,MAKO;MACH,IAAM9xD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;;AAEA,MAAA,KAAK,IAAM1E,IAAX,IAAmBw2D,SAAnB,EAA8B;AACzB9xD,QAAAA,KAAa,CAAC1E,IAAD,CAAb,GAAsBw2D,SAAS,CAACx2D,IAAD,CAA/B,CAAA;AACJ,OAAA;AACJ,KAAA;GAZK,CAAA;;AAcA,EAAA,OAAA,CAAem0D,eAAf,GAAV,UAA0BrvC,KAA1B,EAA2D;AAAjC,IAAA,IAAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,KAAgB,GAAA,IAAA,CAAK1kB,KAAL,CAAW0kB,KAA3B,CAAA;AAAiC,KAAA;;IACvD,IAAM1kB,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AAEA,IAAA,OAAO0kB,KAAK,CAAC/a,MAAN,CAAa,UAAA9J,IAAA,EAAQ;MAAA,OAAAA,IAAI,KAC3BA,IAAI,CAACs4D,MAAL,IAAen4D,KAAK,CAACH,IAAI,CAACD,IAAN,CAAL,KAAqB,KAArC,IACGI,KAAK,CAACH,IAAI,CAACD,IAAN,CAFoB,CAAJ,CAAA;AAEJ,KAFjB,CAAP,CAAA;GAHM,CAAA;;EAOA,OAAA20D,CAAAA,WAAA,GAAV,YAAA;IAAA,IAaCzI,KAAA,GAAA,IAbD,CAAA;;IACI,IAAM9rD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA,IAAA,IAAM4kB,0BAA0B,GAAG5kB,KAAK,CAAC4kB,0BAAzC,CAAA;AACA,IAAA,IAAMwzC,QAAQ,GAAG;AACb38B,MAAAA,aAAa,EAAAA,aAAAA;KADjB,CAAA;IAIA,IAAK+P,CAAAA,WAAL,GAAmB,EAAnB,CAAA;IAEA,OAAO1lB,UAAU,CAACC,IAAI,CAClBtB,WAAW,CAAC,IAAA,CAAKsvC,eAAL,EAAD,EAAyB,CAAC,QAAD,CAAzB,EAAqCnvC,0BAArC,CAAX,CAA4EniB,GAA5E,CAAgF,UAACoC,EAAD,EAAW;AAAR,MAAA,IAAA2kC,MAAM,GAAA3kC,EAAA,CAAA2kC,MAAN,CAAA;AAC/E,MAAA,OAAOA,MAAO,CAACsiB,KAAD,EAAOsM,QAAP,CAAP,IAA2B,EAAlC,CAAA;AACH,KAFD,CADkB,CAAJ,CAGVzuD,MAHU,CAGH,UAAAkI,EAAA,EAAM;AAAA,MAAA,OAAAA,EAAA,CAAA;AAAE,KAHL,CAAD,EAGS,UAAChN,EAAD,EAAQ;AAAL,MAAA,IAAA02B,GAAG,GAAA12B,EAAA,CAAA02B,GAAH,CAAA;AAAU,MAAA,OAAAA,GAAA,CAAA;AAAG,KAHzB,CAAV,CAGqC94B,GAHrC,CAGyC,UAAAojB,KAAA,EAAK;MAAI,OAAAA,KAAK,CAAC,CAAD,CAAL,CAAA;AAAQ,KAH1D,CAAP,CAAA;GATM,CAAA;;EAcA,OAAAkvC,CAAAA,gBAAA,GAAV,YAAA;AACI,IAAA,IAAA,CAAK/jD,WAAL,KAAqB,IAAKA,CAAAA,WAAL,CAAiBw9C,OAAjB,CAAyBD,UAAzB,GAAsC,IAAA,CAAKvuD,KAAL,CAAWuuD,UAAtE,CAAA,CAAA;GADM,CAAA;;EAGA,OAAA8H,CAAAA,iBAAA,GAAV,YAAA;IACI,IAAMgC,UAAU,GAAG,IAAA,CAAKtE,eAAL,EAAA,CAAuBn1C,MAAvB,CAA8B,UAACwe,KAAD,EAAQv9B,IAAR,EAAY;;;AACzD,MAAA,IAAMy4D,cAAc,GAAI,CAAA1zD,EAAA,GAAA,MAAA/E,IAAI,CAAC4sC,YAAL,MAAiB,IAAjB,IAAiB5nC,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiBA,EAAA,CAAAgf,IAAA,CAAjBhkB,IAAiB,CAAjB,MAAyB,IAAzB,IAAyB+E,EAAA,KAAA,KAAA,CAAzB,GAAyBA,EAAzB,GAAyB,EAAjD,CAAA;AAEA,MAAA,OAAWkG,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAAsyB,KAAA,EAAU,IAAV,CAAA,EAAUk7B,cAAV,EAA0B,IAA1B,CAAX,CAAA;AACH,KAJkB,EAIhBxtD,aAAA,CAAA,EAAA,EAAK,IAAK9K,CAAAA,KAAL,CAAWgxD,aAAX,IAA4B,EAAjC,EAAoC,IAApC,CAJgB,CAAnB,CAAA;AAOA,IAAA,OAAOqH,UAAP,CAAA;GARM,CAAA;;AAUA,EAAA,OAAA,CAAerD,eAAf,GAAV,UAA0BE,SAA1B,EAA2D;IACvD,IAAKqD,CAAAA,qBAAL,CAA2BrD,SAA3B,CAAA,CAAA;;IACA,IAAKsD,CAAAA,uBAAL,CAA6BtD,SAA7B,CAAA,CAAA;GAFM,CAAA;;EAIA,OAAAJ,CAAAA,aAAA,GAAV,YAAA;IACI,IAAM2D,iBAAiB,GAAG,IAAA,CAAK5K,UAA/B,CAAA;AACA,IAAA,IAAM6K,aAAa,GAAG,IAAKzG,CAAAA,WAAL,CAAiB9oD,MAAvC,CAAA;AACA,IAAA,IAAMwvD,cAAc,GAAG,IAAKnsC,CAAAA,YAAL,CAAkBrjB,MAAzC,CAAA;IACA,IAAMnJ,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IACA,IAAM0R,MAAM,GAAG1R,KAAK,CAAC0tD,UAAN,IAAoB1tD,KAAK,CAAC0R,MAAzC,CAAA;;AACA,IAAA,IAAMknD,OAAO,GAAI,CAACF,aAAD,IAAkB,IAAA,CAAK1nD,WAAxB,IACT,IAAK6nD,CAAAA,gBAAL,CAAsB,IAAtB,CADP,CAAA;;AAGA,IAAA,IAAID,OAAJ,EAAa;AACTj2C,MAAAA,KAAK,CAAC,IAAD,EAAO,aAAP,CAAL,CAAA;AACA,MAAA,IAAA,CAAK4zC,WAAL,CAAiB;AAAE1H,QAAAA,KAAK,EAAE,IAAA;OAA1B,CAAA,CAAA;AACH,KAAA;;IACD,IAAI,CAAC8J,cAAL,EAAqB;AACjBh2C,MAAAA,KAAK,CAAC,IAAD,EAAO,cAAP,CAAL,CAAA;AACH,KAAA;;AAED,IAAA,IAAIjR,MAAM,IAAIgnD,aAAV,IAA2B,CAAC,IAAA,CAAK1nD,WAArC,EAAkD;MAC9C,IAAKA,CAAAA,WAAL,GAAmB88C,kBAAkB,CAAC,IAAD,EAAOp8C,MAAP,EAAgB,EAAhB,CAArC,CAAA;AACH,KAAA;;AACD,IAAA,IAAI,CAAC,IAAA,CAAKT,YAAN,IAAsB0nD,cAA1B,EAA0C;MACtC,IAAK1nD,CAAAA,YAAL,GAAoB+8C,YAAY,CAAC,IAAD,EAAOyK,iBAAP,EAA0B,cAA1B,EAA0C,SAA1C,CAAhC,CAAA;AACH,KAAA;GAtBK,CAAA;;EAwBA,OAAA7D,CAAAA,cAAA,GAAV,YAAA;IACI,IAAM50D,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IAEA,IAAKoyD,CAAAA,WAAL,GAAmBpyD,KAAK,CAAC0tD,UAAN,IAAoB1tD,KAAK,CAAC0R,MAA7C,CAAA;AACA,IAAA,IAAA,CAAK2gD,aAAL,GAAqBryD,KAAK,CAACm7C,QAA3B,CAAA;GAJM,CAAA;;EAMF,OAAAqZ,CAAAA,YAAA,GAAR,YAAA;IACI,IAAMx0D,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IACM,IAAA6E,EAKF,GAAA7E,KALE;AAAA,QACFyS,IAAI,UADF;AAAA,QAEFqmD,gBAAgB,GAAAj0D,EAAA,CAAAi0D,gBAFd;AAAA,QAGFC,6BAA6B,GAAAl0D,EAAA,CAAAk0D,6BAH3B;AAAA,QAIF9rB,cAAc,oBAJZ,CAAA;;AAON,IAAA,IAAI6rB,gBAAgB,IAAK7rB,cAAc,IAAI8rB,6BAA3C,EAA2E;AACvE,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACD,IAAA,IAAM3tB,WAAW,GAAG,IAAKD,CAAAA,QAAL,GAAgBC,WAApC,CAAA;AACA,IAAA,IAAMgtB,QAAQ,GAAG;AACb38B,MAAAA,aAAa,EAAAA,aAAAA;KADjB,CAAA;AAIA,IAAA,OAAO,CACH,CAAC,CAAD,EAAI,CAAJ,CADG,EAEH,CAAC,CAAD,EAAI,CAAJ,CAFG,EAGH,CAAC,CAAD,EAAI,CAAJ,CAHG,EAIH,CAAC,CAAD,EAAI,CAAJ,CAJG,CAKLh5B,CAAAA,GALK,CAKD,UAACoC,EAAD,EAAa0H,CAAb,EAAc;UAAZy5C,IAAI,GAAAnhD,EAAA,CAAA,CAAA;UAAEkhD,EAAE,GAAAlhD,EAAA,CAAA,CAAA;MACZ,OAAOmnC,UAAU,CAACosB,QAAD,EAAW,EAAX,EAAehtB,WAAW,CAAC4a,IAAD,CAA1B,EAAkC5a,WAAW,CAAC2a,EAAD,CAA7C,EAAmDtzC,IAAnD,EAA0D,eAAenS,MAAf,CAAeiM,CAAf,CAA1D,CAAjB,CAAA;AACH,KAPM,CAAP,CAAA;GAjBI,CAAA;;AA+BA,EAAA,OAAA,CAAgBssD,gBAAhB,GAAR,UAAyBG,WAAzB,EAA8C;IAC1C,IAAMh5D,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IACA,IAAM0R,MAAM,GAAG1R,KAAK,CAAC0tD,UAAN,IAAoB1tD,KAAK,CAAC0R,MAAzC,CAAA;IACA,IAAMunD,UAAU,GAAG,IAAA,CAAK7G,WAAxB,CAAA;IACA,IAAM8G,YAAY,GAAG,IAAA,CAAK7G,aAA1B,CAAA;AACA,IAAA,IAAMlX,QAAQ,GAAGn7C,KAAK,CAACm7C,QAAvB,CAL0C;;AAQ1C,IAAA,IAAMic,eAAe,GAAG,CAACjc,QAAD,IAAa8d,UAAU,KAAKvnD,MAApD,CAAA;IACA,IAAMynD,iBAAiB,GAAG,CAACH,WAAW,IAAI7d,QAAhB,KAA6B+d,YAAY,KAAK/d,QAAxE,CAAA;IAEA,OAAOic,eAAe,IAAI+B,iBAA1B,CAAA;GAXI,CAAA;;EAaA,OAAAtE,CAAAA,mBAAA,GAAR,YAAA;IAAA,IAmCC/I,KAAA,GAAA,IAnCD,CAAA;;IACI,IAAM9rD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA,IAAA,IAAM0R,MAAM,GAAG1R,KAAK,CAACm7C,QAAN,GAAiB,IAAKH,CAAAA,WAAtB,GAAoC,IAAA,CAAK12C,KAAL,CAAWoN,MAA9D,CAAA;IACA,IAAM3R,MAAM,GAAG,IAAA,CAAKA,MAApB,CAAA;AACA,IAAA,IAAMq5D,SAAS,GAAGt2C,OAAO,CAAC/iB,MAAD,CAAzB,CAAA;;IAEA,IAAI,IAAA,CAAK84D,gBAAL,EAAJ,EAA6B;AACzB,MAAA,KAAK,IAAMxsC,SAAX,IAAwBtsB,MAAxB,EAAgC;AAC5B,QAAA,IAAMw1D,OAAO,GAAGx1D,MAAM,CAACssB,SAAD,CAAtB,CAAA;AACAkpC,QAAAA,OAAO,IAAIA,OAAO,CAACnG,OAAR,EAAX,CAAA;AACArvD,QAAAA,MAAM,CAACssB,SAAD,CAAN,GAAoB,IAApB,CAAA;AACH,OAAA;AACJ,KAAA;;IACD,IAAI,CAAC3a,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;IACD,IAAMmT,YAAY,GAAG,IAAA,CAAKA,YAA1B,CAAA;AACAu0C,IAAAA,SAAS,CAACr/C,OAAV,CAAkB,UAAAsS,SAAA,EAAS;MACvB,IAAM3H,KAAK,GAAGD,WAAW,CAACI,YAAD,EAAe,CAACwH,SAAD,CAAf,CAAzB,CAAA;AACA,MAAA,IAAMgtC,QAAQ,GAAG30C,KAAK,CAACvb,MAAN,GAAe,CAAhC,CAAA;AACA,MAAA,IAAIosD,OAAO,GAAGx1D,MAAM,CAACssB,SAAD,CAApB,CAAA;;MAEA,IAAI,CAACgtC,QAAL,EAAe;AACX,QAAA,IAAI9D,OAAJ,EAAa;AACTA,UAAAA,OAAO,CAACnG,OAAR,EAAA,CAAA;AACArvD,UAAAA,MAAM,CAACssB,SAAD,CAAN,GAAoB,IAApB,CAAA;AACH,SAAA;;AACD,QAAA,OAAA;AACH,OAAA;;MACD,IAAI,CAACkpC,OAAL,EAAc;QACVA,OAAO,GAAG,IAAIvG,YAAJ,CAAiBt9C,MAAjB,EAAyBo6C,KAAzB,EAA+Bz/B,SAA/B,CAAV,CAAA;AACAtsB,QAAAA,MAAM,CAACssB,SAAD,CAAN,GAAoBkpC,OAApB,CAAA;AACH,OAAA;;MACDA,OAAO,CAACpG,QAAR,CAAiBzqC,KAAjB,CAAA,CAAA;KAhBJ,CAAA,CAAA;GAjBI,CAAA;;EAoCA,OAAA+uC,CAAAA,yBAAA,GAAR,YAAA;AACI,IAAA,IAAMlE,aAAa,GAAG,IAAKvvD,CAAAA,KAAL,CAAWuvD,aAAjC,CAAA;;AAEA,IAAA,IAAI,CAAC,IAAA,CAAKoD,cAAN,IAAwBpD,aAA5B,EAA2C;AACvC,MAAA,IAAA,CAAKoD,cAAL,GAAsB7qC,YAAY,CAACynC,aAAD,EAAgB,IAAhB,CAAlC,CAAA;AACH,KAAA;GALG,CAAA;;EAOA,OAAAoF,CAAAA,yBAAA,GAAR,YAAA;AACI,IAAA,IAAM2E,mBAAmB,GAAG,IAAKt5D,CAAAA,KAAL,CAAWq1D,aAAvC,CAAA;;AAEA,IAAA,IAAI,CAAC,IAAA,CAAKzC,cAAN,IAAwB0G,mBAA5B,EAAiD;AAC7C,MAAA,IAAA,CAAK1G,cAAL,GAAsB9qC,YAAY,CAACwxC,mBAAD,EAAsB,IAAtB,CAAlC,CAAA;AACH,KAAA;;IACD,IAAMjE,aAAa,GAAG,IAAA,CAAKzC,cAA3B,CAAA;;AAEA,IAAA,IAAIyC,aAAJ,EAAmB;MACf,IAAKC,CAAAA,yBAAL,CAA8BxqD,aAAA,CAAAA,aAAA,CAAA,EAAA,EACvB,IAAKyuD,CAAAA,sBAAL,EADuB,EACM,IADN,CAAA,EACM,CAChC,IAAA,CAAK5yC,UAAL,EAAA,GAAoBm0B,aAApB,GAAoC,EADJ,CADN,OAAA,CAA9B,CAAA,CAAA;AAIH,KAAA;GAbG,CAAA;;AAeA,EAAA,OAAA,CAAyBwa,yBAAzB,GAAR,UAAkCr+C,UAAlC,EAAsD;IAClD,IAAMo+C,aAAa,GAAG,IAAA,CAAKzC,cAA3B,CAAA;AACA,IAAA,IAAM4G,cAAc,GAAGj0C,OAAO,CAC1BtO,UAAU,CAACtN,MAAX,CAAkB0iC,OAAlB,CAD0B,EAE1B,UAAAx6B,EAAA,EAAE;AAAI,MAAA,OAAAA,EAAA,CAAA;AAAE,KAFkB,CAAP,CAGrBpP,GAHqB,CAGjB,UAACoC,EAAD,EAAY;AAAV,MAAA,IAAA62B,SAAS,GAAA72B,EAAA,CAAA,CAAA,CAAT,CAAA;AAAe,MAAA,OAAA62B,SAAA,CAAA;AAAS,KAHT,CAAvB,CAAA;IAIA,IAAM+9B,cAAc,GAAG,IAAA,CAAK5G,eAA5B,CAAA;;AAEM,IAAA,IAAAhuD,EAGF,GAAAkgC,MAAI,CAAC00B,cAAD,EAAiBD,cAAjB,CAHF;AAAA,QACFE,OAAO,GAAA70D,EAAA,CAAA60D,OADL;AAAA,QAEFz0B,KAAK,WAFH,CAAA;;AAKNy0B,IAAAA,OAAO,CAAC3/C,OAAR,CAAgB,UAAA/Q,KAAA,EAAK;AACjBiyC,MAAAA,WAAW,CAACoa,aAAD,EAAgBoE,cAAc,CAACzwD,KAAD,CAA9B,CAAX,CAAA;KADJ,CAAA,CAAA;AAGAi8B,IAAAA,KAAK,CAAClrB,OAAN,CAAc,UAAA/Q,KAAA,EAAK;AACf0yC,MAAAA,QAAQ,CAAC2Z,aAAD,EAAgBmE,cAAc,CAACxwD,KAAD,CAA9B,CAAR,CAAA;KADJ,CAAA,CAAA;IAIA,IAAK6pD,CAAAA,eAAL,GAAuB2G,cAAvB,CAAA;GApBI,CAAA;;EAuBA,OAAAD,CAAAA,sBAAA,GAAR,YAAA;IAAA,IAICzN,KAAA,GAAA,IAJD,CAAA;;IACI,OAAO,CAAC,KAAKiI,eAAL,EAAA,CAAuBtxD,GAAvB,CAA2B,UAAA5C,IAAA,EAAI;;;MACnC,OAAQ,CAAA,CAAAgF,EAAA,GAAAhF,IAAI,CAACouC,aAAL,MAAkB,IAAlB,IAAkBppC,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkBA,EAAA,CAAAgf,IAAA,CAAlBhkB,IAAkB,EAAGisD,KAAH,CAAlB,KAA8B,EAAtC,CAAA;AACH,KAFO,EAEL9oD,IAFK,CAEA,GAFA,CAEO,GAAA,GAAA,OAAA,CAAI,IAAA,CAAKixD,iBAAL,CAAuB,OAAvB,CAAJ,CAFR,EAE+C9+C,KAF/C,CAEqD,MAFrD,CAAP,CAAA;GADI,CAAA;;AAKA,EAAA,OAAA,CAAiB8+C,iBAAjB,GAAR,UAA0B0F,WAA1B,EAA0C;IAA1C,IAsBC7N,KAAA,GAAA,IAtBD,CAAA;;AAA0B,IAAA,IAAA6N,WAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,WAAgB,GAAA,EAAhB,CAAA;AAAgB,KAAA;;AACtC,IAAA,IAAMj1C,KAAK,GAAG,IAAKqvC,CAAAA,eAAL,EAAd,CAAA;IAEA,IAAM/iD,WAAW,GAAG,IAAA,CAAKA,WAAzB,CAAA;IACA,IAAMC,YAAY,GAAG,IAAA,CAAKA,YAA1B,CAAA;IACA,IAAM2oD,eAAe,GAAwB,CAAA5oD,WAAW,KAAA,IAAX,IAAAA,WAAW,KAAX,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,WAAW,CAAEpL,MAAb,EAAA,IACvCoL,WAAW,CAACG,YAAZ,EADuC,GACV,EADnC,CAAA;IAEA,IAAM0oD,gBAAgB,GAAwB,CAAA5oD,YAAY,KAAA,IAAZ,IAAAA,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,YAAY,CAAErL,MAAd,EAAA,IACxCqL,YAAY,CAACE,YAAb,EADwC,GACV,EADpC,CAAA;AAGA,IAAA,OAAOuT,KAAK,CAACjiB,GAAN,CAAU,UAAA5C,IAAA,EAAI;;;AACjB,MAAA,IAAMD,IAAI,GAAGC,IAAI,CAACD,IAAlB,CAAA;AACA,MAAA,IAAI87B,SAAS,GAAG,CAAA,CAAA72B,EAAA,GAAAhF,IAAI,CAAC67B,SAAL,MAAA,IAAA,IAAA72B,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAgf,IAAA,CAAAhkB,IAAA,EAAiBisD,KAAjB,CAAA,KAA0B,EAA1C,CAAA;;MAEA,IACI,CAAA,CAAAlnD,EAAA,GAAAg1D,eAAe,CAACh6D,IAAD,CAAf,UAAA,iBAAA,SAAA,MAAuB8jB,YAAvB,MACG,CAAArc,EAAA,GAAAwyD,gBAAgB,CAACj6D,IAAD,CAAhB,MAAwB,IAAxB,IAAwByH,EAAA,KAAA,KAAA,CAAxB,GAAwB,KAAA,CAAxB,GAAwBA,EAAA,CAAAqc,YAD3B,CADJ,EAGE;AACEgY,QAAAA,SAAS,IAAI,GAAIp7B,CAAAA,MAAJ,CAAI0W,MAAM,CAAC,GAAA1W,MAAA,CAAGV,IAAH,CAAA,CAAOU,MAAP,CAAUq5D,WAAV,EAAqB,WAArB,CAAD,CAAV,CAAb,CAAA;AACH,OAAA;;MACD,OAAOj+B,SAAS,CAACo+B,IAAV,EAAP,CAAA;KAVG,CAAA,CAWJnwD,MAXI,CAWG0iC,OAXH,EAWYrpC,IAXZ,CAWiB,GAXjB,CAAP,CAAA;GAVI,CAAA;;AAuBA,EAAA,OAAA,CAAqBu1D,qBAArB,GAAR,UAA8BrD,SAA9B,EAA+D;;;IAC3D,IAAMl1D,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA,IAAA,IAAM0R,MAAM,GAAG1R,KAAK,CAAC0R,MAArB,CAAA;;AAEA,IAAA,IAAI,CAACtQ,MAAM,CAAC24D,cAAR,IAA0B,CAACroD,MAA3B,IAAqC,CAAC1R,KAAK,CAACg6D,iBAAhD,EAAmE;AAC/D,MAAA,CAAAn1D,EAAA,GAAA,IAAA,CAAK2tD,eAAL,MAAsB,IAAtB,IAAsB3tD,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsBA,EAAA,CAAAuwD,UAAA,EAAtB,CAAA;AACA,MAAA,OAAA;AACH,KAAA;;IAED,IAAIF,SAAS,CAACxjD,MAAV,KAAqBA,MAArB,IAA+B,IAAA,CAAK8gD,eAAxC,EAAyD;AACrD,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAMyH,QAAQ,GAAG,IAAIF,cAAJ,CAAmB,IAAA,CAAKhH,eAAxB,CAAjB,CAAA;AAEAkH,IAAAA,QAAQ,CAACC,OAAT,CAAiBxoD,MAAjB,EAA0B;AACtByoD,MAAAA,GAAG,EAAE,YAAA;KADT,CAAA,CAAA;IAGA,IAAK3H,CAAAA,eAAL,GAAuByH,QAAvB,CAAA;GAlBI,CAAA;;AAoBA,EAAA,OAAA,CAAuBzB,uBAAvB,GAAR,UAAgCtD,SAAhC,EAAiE;IAAjE,IAyBCpJ,KAAA,GAAA,IAzBD,CAAA;;;;IACI,IAAM9rD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA,IAAA,IAAM0R,MAAM,GAAG1R,KAAK,CAAC0R,MAArB,CAAA;;AAEA,IAAA,IAAI,CAACtQ,MAAM,CAACg5D,gBAAR,IAA4B,CAAC1oD,MAA7B,IAAuC,CAAC1R,KAAK,CAACq6D,mBAAlD,EAAuE;AACnE,MAAA,CAAAx1D,EAAA,GAAA,IAAA,CAAK6tD,iBAAL,MAAwB,IAAxB,IAAwB7tD,EAAA,KAAA,KAAA,CAAxB,GAAwB,KAAA,CAAxB,GAAwBA,EAAA,CAAAuwD,UAAA,EAAxB,CAAA;AACA,MAAA,OAAA;AACH,KAAA;;IAED,IAAIF,SAAS,CAACxjD,MAAV,KAAqBA,MAArB,IAA+B,IAAA,CAAKghD,iBAAxC,EAA2D;AACvD,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAMuH,QAAQ,GAAG,IAAIG,gBAAJ,CAAqB,UAAAE,OAAA,EAAO;AACzC,MAAA,KAAuB,UAAA,EAAAC,SAAA,GAAAD,OAAvB,EAAuBpjD,EAAO,GAAAqjD,SAAA,CAAApxD,MAA9B,EAAuB+N,IAAvB,EAAgC;AAA3B,QAAA,IAAMsjD,QAAQ,GAAAD,SAAA,CAAArjD,EAAA,CAAd,CAAA;;QACD,IAAIsjD,QAAQ,CAACx0D,IAAT,KAAkB,YAAlB,IAAkCw0D,QAAQ,CAACC,aAAT,KAA2B,OAAjE,EAA0E;AACtE3O,UAAAA,KAAI,CAACiH,eAAL,EAAA,CAAA;AACH,SAAA;AACJ,OAAA;AACJ,KANgB,CAAjB,CAAA;AAQAkH,IAAAA,QAAQ,CAACC,OAAT,CAAiBxoD,MAAjB,EAA0B;AACtBgpD,MAAAA,UAAU,EAAE,IAAA;KADhB,CAAA,CAAA;IAGA,IAAKhI,CAAAA,iBAAL,GAAyBuH,QAAzB,CAAA;GAxBI,CAAA;;EA/iCMnI,eAAA,CAAA6I,YAAA,GAA+C;AACzDjpD,IAAAA,MAAM,EAAE,IADiD;AAEzDg8C,IAAAA,UAAU,EAAE,IAF6C;AAGzD/7C,IAAAA,SAAS,EAAE,IAH8C;AAIzD49C,IAAAA,aAAa,EAAE,IAJ0C;AAKzD7nD,IAAAA,MAAM,EAAE,IALiD;AAMzDulC,IAAAA,cAAc,EAAE,IANyC;AAOzDynB,IAAAA,eAAe,EAAE,IAPwC;AAQzDkG,IAAAA,gBAAgB,EAAE,KARuC;AASzDplB,IAAAA,cAAc,EAAE,IATyC;AAUzDqlB,IAAAA,QAAQ,EAAE,KAV+C;AAWzDb,IAAAA,iBAAiB,EAAE,KAXsC;AAYzDK,IAAAA,mBAAmB,EAAE,KAZoC;AAazDhN,IAAAA,cAAc,EAAE,IAbyC;AAczDkG,IAAAA,WAAW,EAAE,CAd4C;AAezDC,IAAAA,cAAc,EAAE,CAfyC;AAgBzD9uC,IAAAA,KAAK,EAAE,EAhBkD;AAiBzD0pC,IAAAA,cAAc,EAAE,EAjByC;AAkBzDjT,IAAAA,QAAQ,EAAE,KAlB+C;AAmBzDC,IAAAA,YAAY,EAAE,KAnB2C;AAoBzDvzC,IAAAA,eAAe,EAAE,EApBwC;AAqBzD6zB,IAAAA,SAAS,EAAE,EArB8C;AAsBzDjpB,IAAAA,IAAI,EAAE,CAtBmD;AAuBzDmS,IAAAA,0BAA0B,EAAE,KAvB6B;AAwBzDk4B,IAAAA,OAAO,EAAE,EAxBgD;AAyBzDqR,IAAAA,YAAY,EAAE,IAzB2C;AA0BzDI,IAAAA,UAAU,EAAE,KA1B6C;AA2BzDz+C,IAAAA,SAAS,EAAE,KA3B8C;AA4BzDgpD,IAAAA,gBAAgB,EAAE,KA5BuC;AA6BzD3F,IAAAA,QAAQ,EAAE,EA7B+C;AA8BzDC,IAAAA,UAAU,EAAE,CA9B6C;AA+BzDE,IAAAA,SAAS,EAAE,IA/B8C;AAgCzDwE,IAAAA,eAAe,EAAE,EAhCwC;AAiCzD93D,IAAAA,KAAK,EAAE,EAjCkD;AAkCzD+uD,IAAAA,eAAe,EAAE,KAlCwC;AAmCzDT,IAAAA,mBAAmB,EAAE,KAnCoC;AAoCzDD,IAAAA,uBAAuB,EAAE,IApCgC;AAqCzDd,IAAAA,SAAS,EAAEj2C,WArC8C;AAsCzD68C,IAAAA,gBAAgB,EAAE,IAtCuC;AAuCzDC,IAAAA,WAAW,EAAE,IAvC4C;AAwCzDiB,IAAAA,aAAa,EAAE,IAxC0C;AAyCzDrE,IAAAA,aAAa,EAAE,EAzC0C;AA0CzDqD,IAAAA,mBAAmB,EAAE,KAAA;GA1CX,CAAA;AAykClB,EAAA,OAACvC,eAAD,CAAA;AA3kCA,CAAA,CACYx2B,KAAK,CAACw/B,aADlB,CAAA,CAAA;AA6kCA;;;;;;;;AAQG;;AACH;;;;;;;;;AASG;;AAEH;;;;;;;;;AASG;;AAEH;;;;;;;;AAQG;;AAEH;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;;AAUG;;AAEH;;;;;;;;;;;;;;AAcG;;AAEH;;;;;;;;;;;;;;AAcG;;AAEH;;;;;;;;;;;;;;AAcG;;AAEH;;;;;;;;;;;;;;AAcG;;AAEH;;;;;;;;;;;;;;AAcG;;AAEH;;;;;;;;;;;;;;AAcG;;ACnxCH,gBAAe;AACXl7D,EAAAA,IAAI,EAAE,WADK;AAEXI,EAAAA,KAAK,EAAE,CACH,oBADG,EAEH,oBAFG,EAGH,WAHG,EAIH,gBAJG,EAKH,cALG,EAMH,+BANG,CAFI;AAUXD,EAAAA,MAAM,EAAE,EAVG;AAWXypC,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAAyD00B,KAAzD,EAAwE;;;AACpE,IAAA,IAAMt7B,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;AACA,IAAA,IAAIqoB,OAAO,GAAuDroB,KAAK,CAACqoB,OAAN,IAAiB,EAAnF,CAAA;;AAEM,IAAA,IAAAzjB,EAA6B,GAAAgC,QAAQ,CAACukC,QAAT,EAA7B;AAAA,QAAEvoC,IAAI,GAAAgC,EAAA,CAAAhC,IAAN;AAAA,QAAQD,GAAG,GAAAiC,EAAA,CAAAjC,GAAX;AAAA,QAAakvD,WAAW,iBAAxB,CAAA;;AACN,IAAA,IAAMp/C,IAAI,GAAGzS,KAAK,CAACyS,IAAN,IAAc,CAA3B,CAAA;AACA,IAAA,IAAMsoD,gBAAgB,GAAGn0D,QAAQ,CAACm0D,gBAAlC,CAAA;IACA,IAAIC,kBAAkB,GAAG,CAAA,CAAAn2D,EAAA,GAAA7E,KAAK,CAACo0D,WAAN,MAAmB,IAAnB,IAAmBvvD,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmBA,EAAA,CAAA22C,QAAnB,KAA+B,EAAxD,CAAA;;AAEA,IAAA,IAAIqW,WAAJ,EAAiB;AACbxpC,MAAAA,OAAO,GAAG2yC,kBAAkB,CAACv4D,GAAnB,CAAuB,YAAM;AAAA,QAAA,OAAA,IAAA,CAAA;AAAI,OAAjC,CAAV,CAAA;AACH,KAFD,MAEO;AACHu4D,MAAAA,kBAAkB,GAAG,EAArB,CAAA;AACH,KAAA;;AACD,IAAA,IAAMlvC,KAAK,GAAIllB,QAAgB,CAACksD,MAAhC,CAAA;AACA,IAAA,IAAMtd,cAAc,GAAG3pB,UAAU,CAC7BC,KAD6B,EAE7B,gBAF6B,EAG7B,CAAClpB,IAAD,EAAOD,GAAP,CAH6B,EAI7B,UAAAu7C,MAAA,EAAM;AAAI,MAAA,OAAAA,MAAM,CAACl7C,IAAP,CAAY,GAAZ,CAAA,CAAA;AAAgB,KAJG,CAAjC,CAAA;AAMA,IAAA,IAAMguD,aAAa,GAAGnlC,UAAU,CAC5BC,KAD4B,EAE5B,eAF4B,EAG5BllB,QAAQ,CAACq0D,qBAAT,EAH4B,EAI5B,UAAA/c,MAAA,EAAM;AAAI,MAAA,OAAAA,MAAM,CAACl7C,IAAP,CAAY,GAAZ,CAAA,CAAA;AAAgB,KAJE,CAAhC,CAAA;AAOA4D,IAAAA,QAAQ,CAAC4mB,SAAT,GAAqB5mB,QAAQ,CAAC4mB,SAAT,CAAmB/T,KAAnB,CAAyB,CAAzB,EAA4B4O,OAAO,CAAClf,MAApC,CAArB,CAAA;AACA,IAAA,OAAA2B,aAAA,CAAAA,aAAA,CAAA,EAAA,EACOud,OAAO,CAAC5lB,GAAR,CAAY,UAACiP,MAAD,EAASnF,CAAT,EAAU;AACrB,MAAA,OAAO+uB,mBAAA,CAACw2B,eAAD,EAAgB;QACnBv2B,GAAG,EAAE,aAAahvB,CADC;QAEnB8uC,GAAG,EAAE6f,IAAI,CAACt0D,QAAD,EAAW,WAAX,EAAwB2F,CAAxB,CAFU;AAGnBmF,QAAAA,MAAM,EAAEA,MAHW;AAInBhK,QAAAA,MAAM,EAAE,KAJW;AAKnBspD,QAAAA,aAAa,EAAEA,aALI;QAMnBsC,SAAS,EAAEtzD,KAAK,CAACszD,SANE;QAOnBwE,eAAe,EAAE93D,KAAK,CAAC83D,eAPJ;QAQnBkC,iBAAiB,EAAEh6D,KAAK,CAACg6D,iBARN;QASnBjB,6BAA6B,EAAE/4D,KAAK,CAAC+4D,6BATlB;AAUnB9rB,QAAAA,cAAc,EAAErmC,QAVG;AAWnB4uC,QAAAA,cAAc,EAAE,CAAC5yC,IAAD,EAAOD,GAAP,CAXG;AAYnByxD,QAAAA,WAAW,EAAE4G,kBAAkB,CAACzuD,CAAD,CAZZ;AAanBkG,QAAAA,IAAI,EAAEA,IAAAA;AAba,OAAhB,CAAP,CAAA;AAeH,KAhBE,CADP,EAkBO,IAlBP,CAAA,EAkBOsT,IAAI,CAACg1C,gBAAgB,CAACt4D,GAAjB,CAAqB,UAACoC,EAAD,EAA6B0H,CAA7B,EAA8B;UAA3BvF,IAAI,GAAAnC,EAAA,CAAAmC;UAAE+P,IAAI,GAAAlS,EAAA,CAAAkS;UAAEkH,IAAI,GAAApZ,EAAA,CAAAoZ;UAAEC,IAAI,GAAArZ,EAAA,CAAAqZ;MAClD,IAAMhR,KAAK,GAAG,CAAClG,IAAD,EAAO+P,IAAP,EAAakH,IAAb,EAAmBC,IAAnB,CAAd,CAAA;AAEA,MAAA,OAAO,CACH,CAAC,CAAD,EAAI,CAAJ,CADG,EAEH,CAAC,CAAD,EAAI,CAAJ,CAFG,EAGH,CAAC,CAAD,EAAI,CAAJ,CAHG,EAIH,CAAC,CAAD,EAAI,CAAJ,CAJG,CAKLzb,CAAAA,GALK,CAKD,UAACoC,EAAD,EAAa4jD,CAAb,EAAc;YAAZzC,IAAI,GAAAnhD,EAAA,CAAA,CAAA;YAAEkhD,EAAE,GAAAlhD,EAAA,CAAA,CAAA;AACZ,QAAA,OAAOmnC,UAAU,CACb1Q,KADa,EAEb,EAFa,EAGbr0B,KAAK,CAACiG,KAAK,CAAC84C,IAAD,CAAN,EAAcxQ,cAAd,CAHQ,EAIbvuC,KAAK,CAACiG,KAAK,CAAC64C,EAAD,CAAN,EAAYvQ,cAAZ,CAJQ,EAKb/iC,IALa,EAMb,oBAAA,CAAclG,CAAd,EAAe,GAAf,CAAA,CAAejM,MAAf,CAAmBmoD,CAAnB,CANa,CAAjB,CAAA;AAQH,OAdM,CAAP,CAAA;AAeH,KAlBO,CAAD,CAlBX,EAqCE,IArCF,CAAA,CAAA;AAsCH,GAAA;AA9EU,CAAf;;ACCA,gBAAe9oD,QAAQ,CAAC,WAAD,EAAc;EACjCK,KAAK,EAAE,CACH,WADG,CAD0B;AAIjCD,EAAAA,MAAM,EAAE,CACJ,OADI,EAEJ,YAFI,CAJyB;AAQjCo4D,EAAAA,MAAM,EAAE,IARyB;AASjC7uB,EAAAA,YAAY,EAAE,MATmB;AAUjC;AACAxjC,EAAAA,SAAS,EAAA,YAAA;AACL,IAAA,OAAA;GAZ6B;AAcjC0kC,EAAAA,gBAAgB,EAAA,YAAA;AACZ,IAAA,OAAA;GAf6B;AAiBjCG,EAAAA,cAAc,EAAd,UAAe/jC,QAAf,EAAmEjD,CAAnE,EAAyE;AACrEA,IAAAA,CAAC,CAACsB,KAAF,CAAQ2vC,WAAR,GAAsBjxC,CAAC,CAACqB,UAAF,IAAgBrB,CAAC,CAACqB,UAAF,CAAa0M,MAAnD,CAAA;GAlB6B;AAoBjC24B,EAAAA,OAAO,EAAP,UAAQzjC,QAAR,EAA4DjD,CAA5D,EAAkE;AAC9D,IAAA,IAAM+N,MAAM,GAAG9K,QAAQ,CAAC5G,KAAT,CAAe0R,MAA9B,CAAA;AACA,IAAA,IAAM1M,UAAU,GAAGrB,CAAC,CAACqB,UAArB,CAAA;AACA,IAAA,IAAM4vC,WAAW,GAAGjxC,CAAC,CAACixC,WAAtB,CAAA;AACA,IAAA,IAAMgZ,iBAAiB,GAAGhnD,QAAQ,CAACgnD,iBAAT,CAA2BhZ,WAA3B,CAA1B,CAAA;AACA,IAAA,IAAMumB,eAAe,GAAG,CAACvN,iBAAD,IAAsBhnD,QAAQ,CAACinD,UAAT,CAAoBja,QAApB,CAA6BgB,WAA7B,CAA9C,CAAA;;AAEA,IAAA,IACI,CAAC5vC,UAAD,IAAe,CAAC4vC,WAAhB,IAA+BjxC,CAAC,CAACgC,MAAjC,IACGiB,QAAQ,CAACgnD,iBAAT,CAA2BhZ,WAA3B,CADH,IAEGumB,eAHP;MAKE;AACE,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAMC,cAAc,GAAG1pD,MAAM,CAACkiC,QAAP,CAAgBgB,WAAhB,CAAvB,CAAA;IAEAtwB,YAAY,CAAC1d,QAAD,EAAW,SAAX,EAAsBuc,UAAU,CAAUvc,QAAV,EAAoBjD,CAApB,EAAuB;MAC/DsgB,QAAQ,EAAEtgB,CAAC,CAACsgB,QADmD;AAE/D2wB,MAAAA,WAAW,EAAAA,WAFoD;MAG/DqhB,QAAQ,EAAEvkD,MAAM,KAAKkjC,WAH0C;AAI/DmZ,MAAAA,cAAc,EAAEnnD,QAAQ,CAAC5G,KAAT,CAAe0R,MAJgC;AAK/D0pD,MAAAA,cAAc,EAAAA,cAAAA;AALiD,KAAvB,CAAhC,CAAZ,CAAA;GArC6B;AA6CjCvwB,EAAAA,YAAY,EAAZ,UAAajkC,QAAb,EAA+DjD,CAA/D,EAAqE;AACjE,IAAA,IAAMqB,UAAU,GAAGrB,CAAC,CAACqB,UAArB,CAAA;AACA,IAAA,IAAM4vC,WAAW,GAAGjxC,CAAC,CAACixC,WAAtB,CAAA;;AAEA,IAAA,IACI,CAAC5vC,UAAD,IAAe,CAAC4vC,WAAhB,IAA+BjxC,CAAC,CAACgC,MAAjC,IACGiB,QAAQ,CAACgnD,iBAAT,CAA2BhZ,WAA3B,CADH;AAAA,OAGGjxC,CAAC,CAACsB,KAAF,CAAQ2vC,WAAR,KAAwBA,WAJ/B,EAKE;AACE,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAMvsB,OAAO,GAAGzhB,QAAQ,CAAC5G,KAAT,CAAeqoB,OAA/B,CAAA;AACA,IAAA,IAAIgzC,WAAW,GAAGhzC,OAAO,CAACtlB,OAAR,CAAgB6xC,WAAhB,CAAlB,CAAA;AACA,IAAA,IAAMqhB,QAAQ,GAAGoF,WAAW,GAAG,CAAC,CAAhC,CAAA;IACA,IAAID,cAAc,GAAG,KAArB,CAAA;;AAEA,IAAA,IAAIC,WAAW,KAAK,CAAC,CAArB,EAAwB;AACpBA,MAAAA,WAAW,GAAG/xD,SAAS,CAAC+e,OAAD,EAAU,UAAAizC,YAAA,EAAgB;AAAA,QAAA,OAAAA,YAAY,CAAC1nB,QAAb,CAAsBgB,WAAtB,CAAA,CAAA;AAAkC,OAA5D,CAAvB,CAAA;AACAwmB,MAAAA,cAAc,GAAGC,WAAW,GAAG,CAAC,CAAhC,CAAA;AACH,KAAA;;IAED/2C,YAAY,CAAC1d,QAAD,EAAW,cAAX,EAA2Buc,UAAU,CAAevc,QAAf,EAAyBjD,CAAzB,EAA4B;MACzEsgB,QAAQ,EAAEtgB,CAAC,CAACsgB,QAD6D;AAEzEoE,MAAAA,OAAO,EAAAA,OAFkE;AAGzEusB,MAAAA,WAAW,EAAAA,WAH8D;AAIzEymB,MAAAA,WAAW,EAAAA,WAJ8D;AAKzEpF,MAAAA,QAAQ,EAAAA,QALiE;AAMzEmF,MAAAA,cAAc,EAAAA,cAN2D;MAOzErN,cAAc,EAAE1lC,OAAO,CAACgzC,WAAD,CAAA;AAPkD,KAA5B,CAArC,CAAZ,CAAA;GAnE6B;AA6EjC3wB,EAAAA,cAAc,EAAd,UAAe9jC,QAAf,EAAmEjD,CAAnE,EAAyE;AACrE,IAAA,IAAA,CAAK0mC,OAAL,CAAazjC,QAAb,EAAuBjD,CAAvB,CAAA,CAAA;GA9E6B;AAgFjCqnC,EAAAA,mBAAmB,EAAnB,UAAoBpkC,QAApB,EAAwEjD,CAAxE,EAA8E;AAC1E,IAAA,IAAA,CAAK0mC,OAAL,CAAazjC,QAAb,EAAuBjD,CAAvB,CAAA,CAAA;AACH,GAAA;AAlFgC,CAAd,CAAvB,CAAA;AAqFA;;;;;;;;;;;;;;;AAeG;;AAEH;;;;;;;;;;;;;;;AAeG;;ACtHH,SAAS43D,iBAAT,CAA2B53D,CAA3B,EAAiC;AAC7B,EAAA,IAAIsB,KAAK,GAAGtB,CAAC,CAACuB,aAAF,CAAgBW,SAA5B,CAAA;;EACA,IAAI,CAACZ,KAAL,EAAY;AACRtB,IAAAA,CAAC,CAACuB,aAAF,CAAgBW,SAAhB,GAA4B,EAA5B,CAAA;AACAZ,IAAAA,KAAK,GAAGtB,CAAC,CAACuB,aAAF,CAAgBW,SAAxB,CAAA;AACH,GAAA;;EACD,OAAA/F,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAY6D,CAAZ,CAAA,EAAa;AAAEsB,IAAAA,KAAK,EAAAA,KAAAA;AAAP,GAAb,CAAA,CAAA;AACH,CAAA;;AACD,oBAAetF,QAAQ,CAAC,eAAD,EAAkB;EACrC4pC,GAAG,EAAE,CACD,8CADC,CADgC;AAMrCC,EAAAA,MAAM,EAAN,UAAO5iC,QAAP,EAA2D00B,KAA3D,EAA0E;AACtE,IAAA,IAAMt7B,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;AACA,IAAA,IAAMksC,IAAI,GAAGlsC,KAAK,CAACw7D,aAAnB,CAAA;;IAEA,IAAI,CAACtvB,IAAL,EAAW;AACP,MAAA,OAAO,EAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAOD,eAAe,CAClB3Q,KADkB,EAElB,eAFkB,EAGlB4Q,IAHkB,EAIlBtlC,QAAQ,CAACukC,QAAT,EAAoBC,CAAAA,WAJF,EAKlBprC,KAAK,CAACyS,IALY,CAAtB,CAAA;GAbiC;AAqBrCgpD,EAAAA,aAAa,EAAb,UAAc70D,QAAd,EAAkEjD,CAAlE,EAAwE;;;AACpE,IAAA,IAAM3D,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;IACA,IAAM0R,MAAM,GAAG,CAAA7M,EAAA,GAAAlB,CAAC,CAACqB,UAAF,MAAY,IAAZ,IAAYH,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAYA,EAAA,CAAE6M,MAA7B,CAAA;;AAEA,IAAA,IAAI,CAAC1R,KAAK,CAACw7D,aAAP,IAAwB,CAAC9pD,MAA7B,EAAqC;AACjC,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;AAED,IAAA,OAAO,CAAC1R,KAAK,CAAC6F,SAAP,IACAmhB,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,WAAD,CAAf,CADR,IAEAgQ,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,MAAD,CAAf,CAFR,IAGAgQ,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,eAAD,CAAf,CAHf,CAAA;GA7BiC;AAkCrClR,EAAAA,SAAS,EAAT,UAAUc,QAAV,EAA8DjD,CAA9D,EAAoE;IAChE,OAAO+L,SAAS,CAAC5J,SAAV,CAAoBc,QAApB,EAA8B20D,iBAAiB,CAAC53D,CAAD,CAA/C,CAAP,CAAA;GAnCiC;AAqCrCsC,EAAAA,IAAI,EAAJ,UAAKW,QAAL,EAAyDjD,CAAzD,EAA+D;IAC3D,OAAO+L,SAAS,CAACzJ,IAAV,CAAeW,QAAf,EAAyB20D,iBAAiB,CAAC53D,CAAD,CAA1C,CAAP,CAAA;GAtCiC;AAwCrC0mC,EAAAA,OAAO,EAAP,UAAQzjC,QAAR,EAAiEjD,CAAjE,EAAuE;IACnE,OAAO+L,SAAS,CAAC26B,OAAV,CAAkBzjC,QAAlB,EAA4B20D,iBAAiB,CAAC53D,CAAD,CAA7C,CAAP,CAAA;GAzCiC;AA2CrC+3D,EAAAA,kBAAkB,EAAlB,UAAmB90D,QAAnB,EAAqEjD,CAArE,EAA2E;;;AACvE,IAAA,IAAM3D,KAAK,GAAG4G,QAAQ,CAAC5G,KAAvB,CAAA;IACA,IAAM0R,MAAM,GAAG,CAAA7M,EAAA,GAAAlB,CAAC,CAACqB,UAAF,MAAY,IAAZ,IAAYH,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAYA,EAAA,CAAE6M,MAA7B,CAAA;;AAEA,IAAA,IAAI,CAAC1R,KAAK,CAACw7D,aAAP,IAAwB,CAAC9pD,MAA7B,EAAqC;AACjC,MAAA,OAAO,KAAP,CAAA;AACH,KAAA;;IACD,OAAO,CAAC1R,KAAK,CAAC6F,SAAP,IAAoBmhB,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,WAAD,CAAf,CAA5B,IAA6DgQ,QAAQ,CAACtV,MAAD,EAASsF,MAAM,CAAC,MAAD,CAAf,CAA5E,CAAA;GAlDiC;AAoDrC2zB,EAAAA,cAAc,EAAd,UAAe/jC,QAAf,EAAiEjD,CAAjE,EAAuE;IACnE,OAAO+L,SAAS,CAACi7B,cAAV,CAAyB/jC,QAAzB,EAAmC20D,iBAAiB,CAAC53D,CAAD,CAApD,CAAP,CAAA;GArDiC;AAuDrCinC,EAAAA,SAAS,EAAT,UAAUhkC,QAAV,EAA4DjD,CAA5D,EAAkE;IAC9D,OAAO+L,SAAS,CAACk7B,SAAV,CAAoBhkC,QAApB,EAA8B20D,iBAAiB,CAAC53D,CAAD,CAA/C,CAAP,CAAA;GAxDiC;AA0DrCknC,EAAAA,YAAY,EAAZ,UAAajkC,QAAb,EAAoEjD,CAApE,EAA0E;IACtE,OAAO+L,SAAS,CAACm7B,YAAV,CAAuBjkC,QAAvB,EAAiC20D,iBAAiB,CAAC53D,CAAD,CAAlD,CAAP,CAAA;GA3DiC;EA6DrCgf,KAAK,EAAL,UAAM/b,QAAN,EAAmB;AACf,IAAA,OAAO8I,SAAS,CAACiT,KAAV,CAAgB/b,QAAhB,CAAP,CAAA;AACH,GAAA;AA/DoC,CAAlB,CAAvB,CAAA;AAkEA;;;;;;;;;;;;AAYG;;AC7FH,0BAAe;AACXhH,EAAAA,IAAI,EAAE,qBADK;AAEXI,EAAAA,KAAK,EAAE,CACH,qBADG,EAEH,0BAFG,CAFI;AAMXD,EAAAA,MAAM,EAAE,EAAA;AANG,CAAf;;ACwBO,IAAM47D,cAAc,GAAgB,CACvC/O,gBADuC,EAEvCgP,OAFuC,EAE9BC,SAF8B,EAEnBC,SAFmB,EAGvCpsD,SAHuC,EAG5B8rD,aAH4B,EAIvCjmB,SAJuC,EAI5BwmB,QAJ4B,EAIlBC,QAJkB,EAIRC,SAJQ,EAKvCC,UALuC,EAK3BC,OAL2B,EAKlBC,MALkB,EAMvCC,eANuC,EAOvCC,SAPuC,EAO5BC,SAP4B,EAOjBC,SAPiB,EAONC,mBAPM,EAQvCC,SARuC,EASvCC,QATuC,EAUvC9P,UAVuC,EAApC;AAcM+P,IAAAA,eAAe,gBAAiBjB,cAAkC,CAAC/8C,MAAnC,CAA0C,UAACuJ,OAAD,EAAUtoB,IAAV,EAAc;EACjG,CAACA,IAAI,CAACE,MAAL,IAAe,EAAhB,EAAoBga,OAApB,CAA4B,UAAAna,IAAA,EAAI;AAC5Bi9D,IAAAA,OAAO,CAAC10C,OAAD,EAAUvoB,IAAV,CAAP,CAAA;GADJ,CAAA,CAAA;AAGA,EAAA,OAAOuoB,OAAP,CAAA;AACH,CAL4C,EAK1C,EAL0C,EAAtC;AAOM20C,IAAAA,cAAc,gBAAiBnB,cAAkC,CAAC/8C,MAAnC,CAA0C,UAACuJ,OAAD,EAAUtoB,IAAV,EAAc;EAChG,CAACA,IAAI,CAACG,KAAL,IAAc,EAAf,EAAmB+Z,OAAnB,CAA2B,UAAAna,IAAA,EAAI;AAC3Bi9D,IAAAA,OAAO,CAAC10C,OAAD,EAAUvoB,IAAV,CAAP,CAAA;GADJ,CAAA,CAAA;AAGA,EAAA,OAAOuoB,OAAP,CAAA;AACH,CAL2C,EAKzC,EALyC;;AC7C5B,SAAA40C,sBAAA,CACZl4D,EADY,EAEZyH,GAFY,EAEC;AADZ,EAAA,IAAAoL,CAAC,QAAD;AAAA,MAAG0O,CAAC,GAAAvhB,EAAA,CAAA,CAAA,CAAJ;AAAA,MAAM4rB,CAAC,GAAA5rB,EAAA,CAAA,CAAA,CAAP,CAAA;AAGD,EAAA,OAAO,CAAC6S,CAAC,GAAGpL,GAAG,CAAC,CAAD,CAAP,GAAa8Z,CAAC,GAAG9Z,GAAG,CAAC,CAAD,CAApB,GAA0BmkB,CAA3B,IAAgC/vB,IAAI,CAAC2d,IAAL,CAAU3G,CAAC,GAAGA,CAAJ,GAAQ0O,CAAC,GAAGA,CAAtB,CAAvC,CAAA;AACH,CAAA;AAEe,SAAA42C,MAAA,CACZn4D,EADY,EAEZyH,GAFY,EAEC;MADZoL,CAAC,GAAA7S,EAAA,CAAA,CAAA;MAAEuhB,CAAC,GAAAvhB,EAAA,CAAA,CAAA,EACQ;AAGb;;AACA,EAAA,OAAO,CAAC6S,CAAD,GAAKpL,GAAG,CAAC,CAAD,CAAR,GAAc8Z,CAAC,GAAG9Z,GAAG,CAAC,CAAD,CAA5B,CAAA;AACH;;ACID,SAAS2wD,SAAT,CAAmB/vD,KAAnB,EAAwClE,KAAxC,EAAqD;AACjD,EAAA,OAAOtI,IAAI,CAACua,GAAL,CAAA5D,KAAA,CAAA3W,IAAA,EAAYwM,KAAK,CAACzK,GAAN,CAAU,UAACoC,EAAD,EAAyB;QAAvBmC,IAAI,GAAAnC,EAAA,CAAA,CAAA;QAAEkS,IAAI,GAAAlS,EAAA,CAAA,CAAA;QAAEoZ,IAAI,GAAApZ,EAAA,CAAA,CAAA;QAAEqZ,IAAI,GAAArZ,EAAA,CAAA,CAAA;IACjD,OAAOnE,IAAI,CAACua,GAAL,CAASjU,IAAI,CAACgC,KAAD,CAAb,EAAsB+N,IAAI,CAAC/N,KAAD,CAA1B,EAAmCiV,IAAI,CAACjV,KAAD,CAAvC,EAAgDkV,IAAI,CAAClV,KAAD,CAApD,CAAP,CAAA;AACH,GAFkB,CAAZ,CAAP,CAAA;AAGH,CAAA;;AACD,SAASk0D,SAAT,CAAmBhwD,KAAnB,EAAwClE,KAAxC,EAAqD;AACjD,EAAA,OAAOtI,IAAI,CAACwa,GAAL,CAAA7D,KAAA,CAAA3W,IAAA,EAAYwM,KAAK,CAACzK,GAAN,CAAU,UAACoC,EAAD,EAAyB;QAAvBmC,IAAI,GAAAnC,EAAA,CAAA,CAAA;QAAEkS,IAAI,GAAAlS,EAAA,CAAA,CAAA;QAAEoZ,IAAI,GAAApZ,EAAA,CAAA,CAAA;QAAEqZ,IAAI,GAAArZ,EAAA,CAAA,CAAA;IACjD,OAAOnE,IAAI,CAACwa,GAAL,CAASlU,IAAI,CAACgC,KAAD,CAAb,EAAsB+N,IAAI,CAAC/N,KAAD,CAA1B,EAAmCiV,IAAI,CAACjV,KAAD,CAAvC,EAAgDkV,IAAI,CAAClV,KAAD,CAApD,CAAP,CAAA;AACH,GAFkB,CAAZ,CAAP,CAAA;AAGH,CAAA;;AAGD,SAASm0D,YAAT,CAAsBC,WAAtB,EAAiDz+C,QAAjD,EAAiE;;;AAC7D,EAAA,IAAI3X,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAA;AACA,EAAA,IAAI+P,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAA;AACA,EAAA,IAAIkH,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAA;AACA,EAAA,IAAIC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX,CAAA;EACA,IAAIjS,KAAK,GAAG,CAAZ,CAAA;EACA,IAAIC,MAAM,GAAG,CAAb,CAAA;;AAEA,EAAA,IAAI,CAACkxD,WAAW,CAACj0D,MAAjB,EAAyB;IACrB,OAAO;AACHnC,MAAAA,IAAI,EAAAA,IADD;AAEH+P,MAAAA,IAAI,EAAAA,IAFD;AAGHkH,MAAAA,IAAI,EAAAA,IAHD;AAIHC,MAAAA,IAAI,EAAAA,IAJD;AAKHuoB,MAAAA,IAAI,EAAE,CALH;AAMHE,MAAAA,IAAI,EAAE,CANH;AAOHqc,MAAAA,IAAI,EAAE,CAPH;AAQHC,MAAAA,IAAI,EAAE,CARH;AASHh3C,MAAAA,KAAK,EAAAA,KATF;AAUHC,MAAAA,MAAM,EAAAA,MAVH;AAWHyS,MAAAA,QAAQ,EAAAA,QAAAA;KAXZ,CAAA;AAaH,GAAA;;AACD,EAAA,IAAM0+C,aAAa,GAAG3sC,QAAQ,CAAC/R,QAAD,EAAWvb,QAAX,CAA9B,CAAA;;EAEA,IAAIi6D,aAAa,GAAG,EAApB,EAAwB;IACpB,IAAM7+C,GAAG,GAAG6+C,aAAa,GAAG,GAAhB,GAAsB38D,IAAI,CAAC+nB,EAAvC,CAAA;AACA,IAAA,IAAM60C,IAAE,GAAG58D,IAAI,CAAC68D,GAAL,CAAS/+C,GAAT,CAAX,CAAA;AACA,IAAA,IAAMg/C,IAAE,GAAG,CAAC,CAAD,GAAKF,IAAhB,CAHoB;AAKpB;;AACA,IAAA,IAAMG,UAAQ,GAAG,CAACn6D,OAAD,EAAUE,OAAV,CAAjB,CAAA;AACA,IAAA,IAAMk6D,aAAW,GAAG,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,CAApB,CAAA;AACA,IAAA,IAAMC,UAAQ,GAAG,CAACr6D,OAAD,EAAUE,OAAV,CAAjB,CAAA;AACA,IAAA,IAAMo6D,aAAW,GAAG,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,CAApB,CAAA;AAEAR,IAAAA,WAAW,CAACrjD,OAAZ,CAAoB,UAAA7M,KAAA,EAAK;AACrBA,MAAAA,KAAK,CAAC6M,OAAN,CAAc,UAAAzN,GAAA,EAAG;AAEb;AACA;AAEA,QAAA,IAAMuxD,MAAM,GAAGd,sBAAsB,CAAC,CAAC,CAACO,IAAF,EAAM,CAAN,EAAS,CAAT,CAAD,EAAchxD,GAAd,CAArC,CAAA;AACA,QAAA,IAAMwxD,MAAM,GAAGf,sBAAsB,CAAC,CAAC,CAACS,IAAF,EAAM,CAAN,EAAS,CAAT,CAAD,EAAclxD,GAAd,CAArC,CAAA;;AAEA,QAAA,IAAImxD,UAAQ,CAAC,CAAD,CAAR,GAAcI,MAAlB,EAA0B;AACtBH,UAAAA,aAAW,CAAC,CAAD,CAAX,GAAiBpxD,GAAjB,CAAA;AACAmxD,UAAAA,UAAQ,CAAC,CAAD,CAAR,GAAcI,MAAd,CAAA;AACH,SAAA;;AACD,QAAA,IAAIJ,UAAQ,CAAC,CAAD,CAAR,GAAcI,MAAlB,EAA0B;AACtBH,UAAAA,aAAW,CAAC,CAAD,CAAX,GAAiBpxD,GAAjB,CAAA;AACAmxD,UAAAA,UAAQ,CAAC,CAAD,CAAR,GAAcI,MAAd,CAAA;AACH,SAAA;;AACD,QAAA,IAAIF,UAAQ,CAAC,CAAD,CAAR,GAAcG,MAAlB,EAA0B;AACtBF,UAAAA,aAAW,CAAC,CAAD,CAAX,GAAiBtxD,GAAjB,CAAA;AACAqxD,UAAAA,UAAQ,CAAC,CAAD,CAAR,GAAcG,MAAd,CAAA;AACH,SAAA;;AACD,QAAA,IAAIH,UAAQ,CAAC,CAAD,CAAR,GAAcG,MAAlB,EAA0B;AACtBF,UAAAA,aAAW,CAAC,CAAD,CAAX,GAAiBtxD,GAAjB,CAAA;AACAqxD,UAAAA,UAAQ,CAAC,CAAD,CAAR,GAAcG,MAAd,CAAA;AACH,SAAA;OAvBL,CAAA,CAAA;KADJ,CAAA,CAAA;AA4BO,IAAA,IAAAC,QAAQ,GAAcL,aAAW,CAAA,CAAA,CAAjC;AAAA,QAAUM,QAAQ,GAAIN,aAAW,CAAA,CAAA,CAAjC,CAAA;AACA,IAAA,IAAAO,QAAQ,GAAcL,aAAW,CAAA,CAAA,CAAjC;AAAA,QAAUM,QAAQ,GAAIN,aAAW,CAAA,CAAA,CAAjC,CAAA;AAEP,IAAA,IAAMO,iBAAiB,GAAG,CAAC,CAACb,IAAF,EAAM,CAAN,EAASN,MAAM,CAAC,CAAC,CAACM,IAAF,EAAM,CAAN,CAAD,EAAWS,QAAX,CAAf,CAA1B,CAAA;AACA,IAAA,IAAMK,iBAAiB,GAAG,CAAC,CAACd,IAAF,EAAM,CAAN,EAASN,MAAM,CAAC,CAAC,CAACM,IAAF,EAAM,CAAN,CAAD,EAAWU,QAAX,CAAf,CAA1B,CAAA;AAEA,IAAA,IAAMK,eAAe,GAAG,CAAC,CAACb,IAAF,EAAM,CAAN,EAASR,MAAM,CAAC,CAAC,CAACQ,IAAF,EAAM,CAAN,CAAD,EAAWS,QAAX,CAAf,CAAxB,CAAA;AACA,IAAA,IAAMK,eAAe,GAAG,CAAC,CAACd,IAAF,EAAM,CAAN,EAASR,MAAM,CAAC,CAAC,CAACQ,IAAF,EAAM,CAAN,CAAD,EAAWU,QAAX,CAAf,CAAxB,CAAA;AAEAr5D,IAAAA,EAA2B,GAAA,CACvB,CAACs5D,iBAAD,EAAoBE,eAApB,CADuB,EAEvB,CAACF,iBAAD,EAAoBG,eAApB,CAFuB,EAGvB,CAACF,iBAAD,EAAoBC,eAApB,CAHuB,EAIvB,CAACD,iBAAD,EAAoBE,eAApB,CAJuB,CAKzB77D,CAAAA,GALyB,CAKrB,UAACoC,EAAD,EAAe;UAAb05D,KAAK,GAAA15D,EAAA,CAAA,CAAA;UAAE25D,KAAK,GAAA35D,EAAA,CAAA,CAAA;MAAM,OAAA45D,gCAAgC,CAACF,KAAD,EAAQC,KAAR,CAAhC,CAA+C,CAA/C,CAAA,CAAA;AAAiD,KALhD,CAA3B,EAACx3D,IAAI,GAAAnC,EAAA,CAAA,CAAA,CAAL,EAAOkS,IAAI,GAAAlS,EAAA,CAAA,CAAA,CAAX,EAAaoZ,IAAI,GAAApZ,EAAA,CAAA,CAAA,CAAjB,EAAmBqZ,IAAI,QAAvB,CAAA;IAOAjS,KAAK,GAAG0xD,UAAQ,CAAC,CAAD,CAAR,GAAcA,UAAQ,CAAC,CAAD,CAA9B,CAAA;IACAzxD,MAAM,GAAGuxD,UAAQ,CAAC,CAAD,CAAR,GAAcA,UAAQ,CAAC,CAAD,CAA/B,CAAA;AACH,GAzDD,MAyDO;AACH,IAAA,IAAMiB,MAAI,GAAGxB,SAAS,CAACE,WAAD,EAAc,CAAd,CAAtB,CAAA;AACA,IAAA,IAAMuB,MAAI,GAAGzB,SAAS,CAACE,WAAD,EAAc,CAAd,CAAtB,CAAA;AACA,IAAA,IAAMwB,MAAI,GAAG3B,SAAS,CAACG,WAAD,EAAc,CAAd,CAAtB,CAAA;AACA,IAAA,IAAMyB,MAAI,GAAG5B,SAAS,CAACG,WAAD,EAAc,CAAd,CAAtB,CAAA;AAEAp2D,IAAAA,IAAI,GAAG,CAAC03D,MAAD,EAAOC,MAAP,CAAP,CAAA;AACA5nD,IAAAA,IAAI,GAAG,CAAC6nD,MAAD,EAAOD,MAAP,CAAP,CAAA;AACA1gD,IAAAA,IAAI,GAAG,CAACygD,MAAD,EAAOG,MAAP,CAAP,CAAA;AACA3gD,IAAAA,IAAI,GAAG,CAAC0gD,MAAD,EAAOC,MAAP,CAAP,CAAA;IACA5yD,KAAK,GAAG2yD,MAAI,GAAGF,MAAf,CAAA;IACAxyD,MAAM,GAAG2yD,MAAI,GAAGF,MAAhB,CAAA;;IACA,IAAItB,aAAa,GAAG,GAApB,EAAyB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA,IAAMyB,QAAQ,GAAG,CAAC7gD,IAAD,EAAOjX,IAAP,EAAakX,IAAb,EAAmBnH,IAAnB,CAAjB,CAAA;MAEC/P,IAAI,GAAsB83D,QAAQ,CAAA,CAAA,CAAlC,EAAM/nD,IAAI,GAAgB+nD,QAAQ,CAAxB,CAAwB,CAAlC,EAAY7gD,IAAI,GAAU6gD,QAAQ,CAAlB,CAAkB,CAAlC,EAAkB5gD,IAAI,GAAI4gD,QAAQ,EAAA,CAAlC,CAAA;MACD7yD,KAAK,GAAG4yD,MAAI,GAAGF,MAAf,CAAA;MACAzyD,MAAM,GAAG0yD,MAAI,GAAGF,MAAhB,CAAA;AACH,KAAA;AAEJ,GAAA;;AACD,EAAA,IAAIrB,aAAa,GAAG,GAAhB,GAAsB,GAA1B,EAA+B;AAC3B;AACA;IACA,IAAMyB,QAAQ,GAAG,CAAC5gD,IAAD,EAAOD,IAAP,EAAalH,IAAb,EAAmB/P,IAAnB,CAAjB,CAAA;IAECA,IAAI,GAAsB83D,QAAQ,CAAA,CAAA,CAAlC,EAAM/nD,IAAI,GAAgB+nD,QAAQ,CAAxB,CAAwB,CAAlC,EAAY7gD,IAAI,GAAU6gD,QAAQ,CAAlB,CAAkB,CAAlC,EAAkB5gD,IAAI,GAAI4gD,QAAQ,EAAA,CAAlC,CAAA;AACJ,GAAA;;AACK,EAAA,IAAAl6D,EAAA,GAA6B2hC,UAAU,CAAC,CAACv/B,IAAD,EAAO+P,IAAP,EAAakH,IAAb,EAAmBC,IAAnB,CAAD,CAAvC;AAAA,MAAEuoB,IAAI,GAAA7hC,EAAA,CAAA6hC,IAAN;AAAA,MAAQE,IAAI,GAAA/hC,EAAA,CAAA+hC,IAAZ;AAAA,MAAcqc,IAAI,GAAAp+C,EAAA,CAAAo+C,IAAlB;AAAA,MAAoBC,IAAI,GAAAr+C,EAAA,CAAAq+C,IAAxB,CAAA;;EAEN,OAAO;AACHj8C,IAAAA,IAAI,EAAAA,IADD;AAEH+P,IAAAA,IAAI,EAAAA,IAFD;AAGHkH,IAAAA,IAAI,EAAAA,IAHD;AAIHC,IAAAA,IAAI,EAAAA,IAJD;AAKHjS,IAAAA,KAAK,EAAAA,KALF;AAMHC,IAAAA,MAAM,EAAAA,MANH;AAOHu6B,IAAAA,IAAI,EAAAA,IAPD;AAQHE,IAAAA,IAAI,EAAAA,IARD;AASHqc,IAAAA,IAAI,EAAAA,IATD;AAUHC,IAAAA,IAAI,EAAAA,IAVD;AAWHtkC,IAAAA,QAAQ,EAAAA,QAAAA;GAXZ,CAAA;AAaH,CAAA;;AAID,SAASogD,kBAAT,CACIvxC,SADJ,EAEIwxC,iBAFJ,EAE+C;EAE3C,IAAMv5C,MAAM,GAAGu5C,iBAAiB,CAACv8D,GAAlB,CAAsB,UAAAw8D,WAAA,EAAW;AAC5C,IAAA,IAAIvwD,OAAO,CAACuwD,WAAD,CAAX,EAA0B;AACtB,MAAA,IAAMC,mBAAmB,GAAGH,kBAAkB,CAACvxC,SAAD,EAAYyxC,WAAZ,CAA9C,CAAA;AACA,MAAA,IAAM91D,MAAM,GAAG+1D,mBAAmB,CAAC/1D,MAAnC,CAAA;;MAEA,IAAIA,MAAM,GAAG,CAAb,EAAgB;AACZ,QAAA,OAAO+1D,mBAAP,CAAA;AACH,OAFD,MAEO,IAAI/1D,MAAM,KAAK,CAAf,EAAkB;QACrB,OAAO+1D,mBAAmB,CAAC,CAAD,CAA1B,CAAA;AACH,OAFM,MAEA;AACH,QAAA,OAAO,IAAP,CAAA;AACH,OAAA;AACJ,KAXD,MAWO;MACH,IAAMC,OAAO,GAAG11D,IAAI,CAAC+jB,SAAD,EAAY,UAAC3oB,EAAD,EAAY;AAAT,QAAA,IAAA0wD,OAAO,GAAA1wD,EAAA,CAAA0wD,OAAP,CAAA;AAAc,QAAA,OAAAA,OAAO,CAACv1D,KAAR,CAAc0R,MAAd,KAAyButD,WAAzB,CAAA;AAAoC,OAAjE,CAApB,CAAA;;AAEA,MAAA,IAAIE,OAAJ,EAAa;QACTA,OAAO,CAACC,MAAR,GAAiB,IAAjB,CAAA;QACA,OAAOD,OAAO,CAAC5J,OAAf,CAAA;AACH,OAAA;;AACD,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;AACJ,GArBc,CAqBZ5rD,CAAAA,MArBY,CAqBL0iC,OArBK,CAAf,CAAA;;AAuBA,EAAA,IAAI5mB,MAAM,CAACtc,MAAP,KAAkB,CAAlB,IAAuBuF,OAAO,CAAC+W,MAAM,CAAC,CAAD,CAAP,CAAlC,EAA+C;IAC3C,OAAOA,MAAM,CAAC,CAAD,CAAb,CAAA;AACH,GAAA;;AACD,EAAA,OAAOA,MAAP,CAAA;AACH,CAAA;AAED;;;AAGG;;;AACH,IAAA45C,aAAA;AAAA;AAAA,UAAAtN,MAAA,EAAA;AAA4BC,EAAAA,SAA+B,CAAAqN,aAAA,EAAAtN,MAAA,CAA/B,CAAA;;AAA5B,EAAA,SAAAsN,aAAA,GAAA;AAAA,IAAA,IAyQCvT,KAAA,GAAAiG,MAAA,KAAA,IAAA,IAAAA,MAAA,CAAA16C,KAAA,CAAA,IAAA,EAAAF,SAAA,CAAA,IAAA,IAzQD,CAAA;;AAWW20C,IAAAA,KAAA,CAAAwT,MAAA,GAAmD,IAAIC,cAAJ,EAAnD,CAAA;IACAzT,KAAS,CAAAt+B,SAAT,GAA+B,EAA/B,CAAA;IACAs+B,KAAe,CAAAjkD,eAAf,GAAkB,SAAlB,CAAA;IACAikD,KAAgB,CAAAiP,gBAAhB,GAAgC,EAAhC,CAAA;IACCjP,KAAa,CAAA0T,aAAb,GAA0C,EAA1C,CAAA;IACA1T,KAAgB,CAAA2T,gBAAhB,GAAmB,KAAnB,CAAA;;AAyPX,GAAA;;AAzQD,EAAA,IAAA,OAAA,GAAA,aAAA,CAAA,SAAA,CAAA;;EAkBW,OAAAhL,CAAAA,iBAAA,GAAP,YAAA;AACI1C,IAAAA,MAAM,CAAA2N,SAAN,CAAMjL,iBAAN,KAAA,KAAA,CAAA,CAAA;GADG,CAAA;;EAGA,OAAAf,CAAAA,WAAA,GAAP,YAAA;IACI,IAAKpB,CAAAA,oBAAL,GAA4B,KAA5B,CAAA;AACA,IAAA,IAAA,CAAK6E,WAAL,EAAA,CAAA;GAFG,CAAA;;EAIA,OAAAhN,CAAAA,UAAA,GAAP,YAAA;IACI,OAAO,IAAA,CAAKnqD,KAAL,CAAWqoB,OAAlB,CAAA;GADG,CAAA;;EAGA,OAAAokC,CAAAA,UAAA,GAAP,UAAkBzmD,IAAlB,EAA+CiwD,QAA/C,EAAmEC,UAAnE,EAAoF;;;AAAjB,IAAA,IAAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,UAAiB,GAAA,IAAjB,CAAA;AAAiB,KAAA;;IAChF,IAAM5xD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;;AAEA,IAAA,IAAI,CAAC,IAAKupD,CAAAA,UAAN,IAAoBvpD,KAAK,CAACutD,WAA9B,EAA2C;AACvC,MAAA,OAAA;AACH,KAAA;;IACDh8C,aAAa,CAAC,IAAD,CAAb,CAAA;AACA,IAAA,IAAA,CAAK2X,SAAL,CAAezT,OAAf,CAAuB,UAAAnT,QAAA,EAAQ;AAC3BA,MAAAA,QAAQ,CAAC6lD,UAAT,CAAoBzmD,IAApB,EAA0B,KAA1B,EAAiC,KAAjC,CAAA,CAAA;KADJ,CAAA,CAAA;IAIA,IAAMhG,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IACA,IAAMwtB,SAAS,GAAG,IAAA,CAAKA,SAAvB,CAAA;IACA,IAAM9b,MAAM,GAAGpN,KAAK,CAACoN,MAAN,IAAiB1R,KAAK,CAAC0R,MAAtC,CAAA;IACA,IAAMiuD,QAAQ,GAAGnyC,SAAS,CAAC/qB,GAAV,CAAc,UAAAmE,QAAA,EAAY;MAAA,OAAC;AAAEw4D,QAAAA,MAAM,EAAE,KAAV;AAAiB7J,QAAAA,OAAO,EAAE3uD,QAAAA;OAA3B,CAAA;AAAsC,KAAhE,CAAjB,CAAA;AACA,IAAA,IAAMg5D,YAAY,GAAG,IAAA,CAAK5/D,KAAL,CAAW4/D,YAAX,IAA2B,EAAhD,CAAA;AACA,IAAA,IAAMC,cAAc,GAAGd,kBAAkB,CACrCY,QADqC,EAErCC,YAFqC,CAAzC,CAAA;AAKAC,IAAAA,cAAc,CAAC7yD,IAAf,CAAmBqK,KAAnB,CAAAwoD,cAAA,EAAuBF,QAAQ,CAACh2D,MAAT,CAAgB,UAAC9E,EAAD,EAAW;AAAR,MAAA,IAAAu6D,MAAM,GAAAv6D,EAAA,CAAAu6D,MAAN,CAAA;AAAa,MAAA,OAAA,CAACA,MAAD,CAAA;AAAO,KAAvC,CAAyC38D,CAAAA,GAAzC,CAA6C,UAACoC,EAAD,EAAY;AAAT,MAAA,IAAA0wD,OAAO,GAAA1wD,EAAA,CAAA0wD,OAAP,CAAA;AAAc,MAAA,OAAAA,OAAA,CAAA;AAAO,KAArE,CAAvB,CAAA,CAAA;IAEA,IAAMwF,gBAAgB,GAAgB,EAAtC,CAAA;IACA,IAAM+E,OAAO,GAAG,CAAC7J,QAAD,IAAcjwD,IAAI,KAAK,EAAT,IAAehG,KAAK,CAAC+/D,WAAnD,CAAA;AACA,IAAA,IAAIC,kBAAkB,GAAGhgE,KAAK,CAACggE,kBAAN,IAA4B,CAArD,CAAA;;IAEA,IAAI,CAAC,IAAKP,CAAAA,gBAAV,EAA4B;MACxB,IAAMQ,kBAAkB,GAAG,CAAAp7D,EAAA,GAAA,IAAK7E,CAAAA,KAAL,CAAWo0D,WAAX,MAAwB,IAAxB,IAAwBvvD,EAAA,KAAA,KAAA,CAAxB,GAAwB,KAAA,CAAxB,GAAwBA,EAAA,CAAA8Z,QAAnD,CAAA;;MAEA,IAAIshD,kBAAkB,IAAI,IAA1B,EAAgC;AAC5BD,QAAAA,kBAAkB,GAAGC,kBAArB,CAAA;AACH,OAAA;AACJ,KAAA;;AAED,IAAA,SAASC,oBAAT,CAA8Br6C,KAA9B,EAAgDs6C,cAAhD,EAAwEz+C,MAAxE,EAAwF;MACpF,IAAM0+C,cAAc,GAAGv6C,KAAK,CAACpjB,GAAN,CAAU,UAAAmE,QAAA,EAAQ;AACrC,QAAA,IAAI8H,OAAO,CAAC9H,QAAD,CAAX,EAAuB;AACnB,UAAA,IAAMwV,IAAI,GAAG8jD,oBAAoB,CAACt5D,QAAD,EAAWu5D,cAAX,CAAjC,CAAA;AACA,UAAA,IAAMjzD,KAAK,GAAG,CAACkP,IAAI,CAACpV,IAAN,EAAYoV,IAAI,CAACrF,IAAjB,EAAuBqF,IAAI,CAAC6B,IAA5B,EAAkC7B,IAAI,CAAC8B,IAAvC,CAAd,CAAA;UAEA68C,gBAAgB,CAAC/tD,IAAjB,CAAsBoP,IAAtB,CAAA,CAAA;UACA,OAAO;AAAElP,YAAAA,KAAK,EAAAA,KAAP;YAASyR,QAAQ,EAAEvC,IAAI,CAACuC,QAAAA;WAA/B,CAAA;AACH,SAND,MAMO;UACH,OAAO;AACHzR,YAAAA,KAAK,EAAE4D,uBAAuB,CAAClK,QAAS,CAACtC,KAAX,CAD3B;YAEHqa,QAAQ,EAAE/X,QAAS,CAACmxC,WAAV,EAAA;WAFd,CAAA;AAIH,SAAA;AACJ,OAbsB,CAAvB,CAAA;MAcA,IAAMsoB,SAAS,GAAGD,cAAc,CAAC39D,GAAf,CAAmB,UAACoC,EAAD,EAAa;AAAV,QAAA,IAAA8Z,QAAQ,GAAA9Z,EAAA,CAAA8Z,QAAR,CAAA;AAAe,QAAA,OAAAA,QAAA,CAAA;AAAQ,OAA7C,CAAlB,CAAA;MAEA,IAAI2hD,aAAa,GAAG,CAApB,CAAA;AACA,MAAA,IAAMC,aAAa,GAAGF,SAAS,CAAC,CAAD,CAA/B,CAAA;MACA,IAAMG,cAAc,GAAGH,SAAS,CAAC70C,KAAV,CAAgB,UAAAkrB,YAAA,EAAY;QAC/C,OAAOh2C,IAAI,CAACyc,GAAL,CAASojD,aAAa,GAAG7pB,YAAzB,IAAyC,GAAhD,CAAA;AACH,OAFsB,CAAvB,CAAA;;AAIA,MAAA,IAAIopB,OAAJ,EAAa;AACTQ,QAAAA,aAAa,GAAGE,cAAc,GAAGD,aAAH,GAAmBP,kBAAjD,CAAA;AACH,OAFD,MAEO;QACHM,aAAa,GAAG,CAAC5+C,MAAD,IAAW8+C,cAAX,GAA4BD,aAA5B,GAA4CJ,cAA5D,CAAA;AACH,OAAA;;MACD,IAAMM,UAAU,GAAGL,cAAc,CAAC39D,GAAf,CAAmB,UAACoC,EAAD,EAAU;AAAP,QAAA,IAAAqI,KAAK,GAAArI,EAAA,CAAAqI,KAAL,CAAA;AAAY,QAAA,OAAAA,KAAA,CAAA;AAAK,OAAvC,CAAnB,CAAA;AACA,MAAA,IAAMwzD,SAAS,GAAGvD,YAAY,CAC1BsD,UAD0B,EAE1BH,aAF0B,CAA9B,CAAA;AAKA,MAAA,OAAOI,SAAP,CAAA;AACH,KAAA;;IACD,IAAMC,aAAa,GAAGT,oBAAoB,CAACL,cAAD,EAAiB,IAAKlhD,CAAAA,QAAtB,EAAgC,IAAhC,CAA1C,CAAA;;AAEA,IAAA,IAAImhD,OAAJ,EAAa;AACT;AACA,MAAA,IAAA,CAAKnhD,QAAL,GAAgBgiD,aAAa,CAAChiD,QAA9B,CAAA;AACA,MAAA,IAAA,CAAK9W,eAAL,GAAuB7H,KAAK,CAAC4gE,kBAAN,IAA4B,SAAnD,CAAA;AACA,MAAA,IAAA,CAAKxgE,KAAL,GAAa,CAAC,CAAD,EAAI,CAAJ,CAAb,CAAA;AACH,KAAA;;IAGD,IAAKo/D,CAAAA,aAAL,GAAqBI,YAArB,CAAA;IACA,IAAK7E,CAAAA,gBAAL,GAAwBA,gBAAxB,CAAA;IACA,IAAMlzD,eAAe,GAAG,IAAA,CAAKA,eAA7B,CAAA;IACA,IAAM8W,QAAQ,GAAG,IAAA,CAAKA,QAAtB,CAAA;IACA,IAAMve,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACQ,IAAA,IAAA6L,KAAK,GAAyB00D,aAAa,MAA3C;AAAA,QAAOz0D,MAAM,GAAiBy0D,aAAa,CAAAz0D,MAA3C;AAAA,QAAeu6B,IAAI,GAAWk6B,aAAa,CAAxBl6B,IAAnB;AAAA,QAAqBE,IAAI,GAAKg6B,aAAa,KAA3C,CAAA;IACR,IAAME,SAAS,GAAG71C,eAAe,CAC7B,CACI,CAAC,CAAD,EAAI,CAAJ,CADJ,EAEI,CAAC/e,KAAD,EAAQ,CAAR,CAFJ,EAGI,CAAC,CAAD,EAAIC,MAAJ,CAHJ,EAII,CAACD,KAAD,EAAQC,MAAR,CAJJ,CAD6B,EAO7B6e,2BAA2B,CAACljB,eAAD,EAAkBoE,KAAlB,EAAyBC,MAAzB,CAPE,EAQ7B,KAAKyS,QAAL,GAAgB,GAAhB,GAAsBje,IAAI,CAAC+nB,EARE,CAAjC,CAAA;;AAWM,IAAA,IAAA7jB,EAAiC,GAAA2hC,UAAU,CAACs6B,SAAS,CAACl8D,MAAX,CAA3C;AAAA,QAAQ6B,MAAM,GAAA5B,EAAA,CAAA6hC,IAAd;AAAA,QAAsBhgC,MAAM,UAA5B,CAAA;;AACN,IAAA,IAAMq6D,WAAW,GAAG,UAAA,CAAWxgE,MAAX,CAAWqe,QAAX,EAAyB,MAAzB,CAAA,GACd,SAAAre,CAAAA,MAAA,CAAUF,KAAK,CAAC,CAAD,CAAL,IAAY,CAAZ,GAAgB,CAAhB,GAAoB,CAAC,CAA/B,EAAgC,IAAhC,EAAgCE,MAAhC,CAAqCF,KAAK,CAAC,CAAD,CAAL,IAAY,CAAZ,GAAgB,CAAhB,GAAoB,CAAC,CAA1D,KAAA,CADN,CAAA;IAEA,IAAM4N,SAAS,GAAG,YAAA1N,CAAAA,MAAA,CAAa,CAACkG,MAAd,EAA2B,MAA3B,CAAA,CAA2BlG,MAA3B,CAA2B,CAACmG,MAA5B,EAAkC,KAAlC,EAAkCnG,MAAlC,CAAwCwgE,WAAxC,CAAlB,CAAA;AAEA,IAAA,IAAA,CAAKjT,UAAL,CAAgBj3C,KAAhB,CAAsB5I,SAAtB,GACM,cAAA1N,CAAAA,MAAA,CAAemmC,IAAf,EAAmB,MAAnB,CAAmBnmC,CAAAA,MAAnB,CAA0BqmC,IAA1B,EAA8B,MAA9B,CAA8BrmC,CAAAA,MAA9B,CAAqC,IAAA,CAAKN,KAAL,CAAWozD,UAAX,IAAyB,CAA9D,EAA+D,GAA/D,CADN,CAAA;AAGA1hD,IAAAA,MAAM,CAACkF,KAAP,CAAaiM,OAAb,IAAwB,mBAClB,GAAA,mBAAA,CAAAviB,MAAA,CAAoBuH,eAApB,EAAsC,GAAtC,CADkB,GAElB,QAASvH,CAAAA,MAAT,CAAS2L,KAAT,EAA2B,YAA3B,CAA2B3L,CAAAA,MAA3B,CAA2B4L,MAA3B,EAAsC,KAAtC,CAFkB,GAGlB,aAAA,CAAc5L,MAAd,CAAc0N,SAAd,CAHN,CAAA;IAIA1J,KAAK,CAAC2H,KAAN,GAAcA,KAAd,CAAA;IACA3H,KAAK,CAAC4H,MAAN,GAAeA,MAAf,CAAA;AAEA,IAAA,IAAMyF,SAAS,GAAG,IAAKqqC,CAAAA,YAAL,EAAlB,CAAA;IACA,IAAMtyC,IAAI,GAAGmnD,qBAAqB,CAC9B,KAAKhD,UADyB,EAE9Bn8C,MAF8B,EAG9B,IAAKm8C,CAAAA,UAHyB,EAI9B,IAAK7R,CAAAA,YAAL,EAJ8B,EAK9B,IAAA,CAAK2W,cAAL,IAAuBhhD,SALO,EAM9B,EAN8B,CAAlC,CAAA;IAQA,IAAMrF,GAAG,GAAG,CAAC5C,IAAI,CAAC9G,IAAN,EAAa8G,IAAI,CAAC/G,GAAlB,CAAZ,CAAA;;AACM,IAAA,IAAA0E,KAKFyJ,uBAAuB,CAACpH,IAAD,CALrB;AAAA,QACF1C,IAAI,GAAAK,EAAA,CAAA,CAAA,CADF;AAAA,QAEF0P,IAAI,GAAA1P,EAAA,CAAA,CAAA,CAFF;AAAA,QAGF4W,IAAI,GAAA5W,EAAA,CAAA,CAAA,CAHF;AAAA,QAIF6W,IAAI,GACyB7W,EAAA,CAAA,CAAA,CAL3B,CA3H0E;;;AAkIhF,IAAA,IAAMqzB,MAAM,GAAG6L,UAAU,CAAC,CAACv/B,IAAD,EAAO+P,IAAP,EAAakH,IAAb,EAAmBC,IAAnB,CAAD,CAAzB,CAAA;IACA,IAAM3Z,KAAK,GAAG,CAACm2B,MAAM,CAAC+L,IAAR,EAAc/L,MAAM,CAACiM,IAArB,CAAd,CAAA;AACA,IAAA,IAAMh+B,SAAS,GAAGvI,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAhB,GAAsB,CAAtB,GAA0B,CAA1B,GAA8B,CAAC,CAAjD,CAAA;IAEAsJ,IAAI,CAAC1C,IAAL,GAAYC,KAAK,CAACD,IAAD,EAAOzC,KAAP,CAAjB,CAAA;IACAmF,IAAI,CAACqN,IAAL,GAAY9P,KAAK,CAAC8P,IAAD,EAAOxS,KAAP,CAAjB,CAAA;IACAmF,IAAI,CAACuU,IAAL,GAAYhX,KAAK,CAACgX,IAAD,EAAO1Z,KAAP,CAAjB,CAAA;IACAmF,IAAI,CAACwU,IAAL,GAAYjX,KAAK,CAACiX,IAAD,EAAO3Z,KAAP,CAAjB,CAzIgF;AA2IhF;;AACAmF,IAAAA,IAAI,CAAC9G,IAAL,GAAY6jC,IAAI,GAAG/8B,IAAI,CAAC9G,IAAZ,GAAoB2B,KAAK,CAAC,CAAD,CAArC,CAAA;AACAmF,IAAAA,IAAI,CAAC/G,GAAL,GAAWgkC,IAAI,GAAGj9B,IAAI,CAAC/G,GAAZ,GAAmB4B,KAAK,CAAC,CAAD,CAAnC,CAAA;AACAmF,IAAAA,IAAI,CAAChC,MAAL,GAAcT,KAAK,CAACmB,IAAI,CAACkE,GAAD,EAAM5C,IAAI,CAAChC,MAAX,CAAL,EAA0BnD,KAA1B,CAAnB,CAAA;AACAmF,IAAAA,IAAI,CAACkjC,YAAL,GAAoB3lC,KAAK,CAACmB,IAAI,CAACkE,GAAD,EAAM5C,IAAI,CAACkjC,YAAX,CAAL,EAAgCroC,KAAhC,CAAzB,CAAA;IACAmF,IAAI,CAACioD,oBAAL,GAA4BvpD,IAAI,CAACkE,GAAD,EAAM5C,IAAI,CAACioD,oBAAX,CAAhC,CAAA;AACAjoD,IAAAA,IAAI,CAAC7B,eAAL,GAAuBZ,KAAK,CAACmB,IAAI,CAACkE,GAAD,EAAM5C,IAAI,CAAC7B,eAAX,CAAL,EAAmCtD,KAAnC,CAA5B,CAAA;AACAmN,IAAAA,MAAM,CAACkF,KAAP,CAAa5I,SAAb,GACM,YAAA,CAAA1N,MAAA,CAAa,CAACkG,MAAD,GAAUjC,KAAK,CAAC,CAAD,CAA5B,EAAsC,MAAtC,CAAsCjE,CAAAA,MAAtC,CAAsC,CAACmG,MAAD,GAAUlC,KAAK,CAAC,CAAD,CAArD,EAA6D,KAA7D,IACAu8D,WAFN,CAAA;IAIAjrD,aAAa,EAAA,CAAA;IACb,IAAK0gD,CAAAA,WAAL,CAAgBz2D,QAAA,CAAAA,QAAA,CAAA,EAAA,EAEL4J,IAFK,CAAA,EAGR;AAAA4rC,MAAAA,QAAQ,EAAE/wC,KAAV;AACAoE,MAAAA,SAAS,EAAAA,SADT;AAEAyrC,MAAAA,eAAe,EAAEzrC,SAAAA;KALT,CAAhB,EAOIutD,UAPJ,CAAA,CAAA;GAvJG,CAAA;;EAiKA,OAAA56C,CAAAA,OAAA,GAAP,YAAA;AACI,IAAA,OACOxb,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAiyD,MAAA,CAAA2N,SAAA,CAAMpkD,OAAN,CAAeuI,IAAf,CAAe,IAAf,CAAA,CAAA,EAAe;MAClB23B,QAAQ,EAAE,KAAKhuB,SAAL,CAAe/qB,GAAf,CAAmB,UAAAyrB,KAAA,EAAS;QAAA,OAAAA,KAAK,CAAC5S,OAAN,EAAA,CAAA;OAA5B,CAAA;AADQ,KAAf,CADP,CAAA;GADG,CAAA;;EAMA,OAAAgJ,CAAAA,YAAA,GAAP,UAAoB1kB,IAApB,EAAkC+D,CAAlC,EAA0C4gB,SAA1C,EAA6D;IACzD,IAAIA,SAAS,IAAI3kB,IAAI,CAACmD,OAAL,CAAa,OAAb,CAAA,GAAwB,CAAC,CAA1C,EAA6C;AACzC,MAAA,OAAOgvD,gBAAA,CAAMztC,YAAN,CAAkBT,IAAlB,CAAkB,IAAlB,EAAmBjkB,IAAnB,EAAgC+D,CAAhC,CAAP,CAAA;AACH,KAFD,MAEO;AACH,MAAA,IAAA,CAAKygB,QAAL,CAAcszC,OAAd,CAAsB93D,IAAtB,EAA4B+D,CAA5B,CAAA,CAAA;AACH,KAAA;GALE,CAAA;;EAOA,OAAAs3D,CAAAA,qBAAA,GAAP,YAAA;IACI,IAAM5C,UAAU,GAAG,IAAA,CAAKtE,eAAL,EAAA,CAAuBn1C,MAAvB,CAA8B,UAACwe,KAAD,EAAQv9B,IAAR,EAAY;;;AACzD,MAAA,IAAMy4D,cAAc,GAAI,CAAA1zD,EAAA,GAAA,MAAA/E,IAAI,CAAC6sC,iBAAL,MAAsB,IAAtB,IAAsB7nC,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsBA,EAAA,CAAAgf,IAAA,CAAtBhkB,IAAsB,CAAtB,MAA8B,IAA9B,IAA8B+E,EAAA,KAAA,KAAA,CAA9B,GAA8BA,EAA9B,GAA8B,EAAtD,CAAA;AAEA,MAAA,OAAWkG,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAAsyB,KAAA,EAAU,IAAV,CAAA,EAAUk7B,cAAV,EAA0B,IAA1B,CAAX,CAAA;KAHe,EAIhB,EAJgB,CAAnB,CAAA;AAOA,IAAA,OAAOD,UAAP,CAAA;GARG,CAAA;;EAUG,OAAAlB,CAAAA,WAAA,GAAV,YAAA;AACIpF,IAAAA,MAAA,CAAA2N,SAAA,CAAMvI,WAAN,CAAiBtzC,IAAjB,CAAiB,IAAjB,EAAiB/Y,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAK,IAAK9K,CAAAA,KAAL,CAAW0kB,KAAhB,EAAsB,IAAtB,CAAA,EAAsB,CAAE83C,SAAF,CAAtB,EAAiC,KAAjC,CAAjB,EAAqD,OAArD,CAAA,CAAA;GADM,CAAA;;EAGA,OAAA5H,CAAAA,cAAA,GAAV,YAAA;AACI7C,IAAAA,MAAM,CAAA2N,SAAN,CAAM9K,cAAN,KAAA,KAAA,CAAA,CAAA;;IACA,IAAKxC,CAAAA,WAAL,GAAmB,IAAKpyD,CAAAA,KAAL,CAAW0tD,UAAX,IAAyB,KAAK1S,WAAjD,CAAA;GAFM,CAAA;;EAIA,OAAA8Z,CAAAA,aAAA,GAAV,YAAA;IACI,IAAMxwD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IACA,IAAMtE,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;IAEA,IAAMi5D,UAAU,GAAG,IAAA,CAAK7G,WAAxB,CAAA;AACA,IAAA,IAAM2O,UAAU,GAAG/gE,KAAK,CAAC0tD,UAAN,IAAoB,KAAK1S,WAA5C,CAAA;;IAEA,IAAIie,UAAU,KAAK8H,UAAnB,EAA+B;AAC3Bp+C,MAAAA,KAAK,CAAC,IAAD,EAAO,aAAP,CAAL,CAAA;AACAA,MAAAA,KAAK,CAAC,IAAD,EAAO,cAAP,CAAL,CAAA;MACAre,KAAK,CAACoN,MAAN,GAAe,IAAf,CAAA;AACH,KAAA;;AACD,IAAA,IAAI,CAACpN,KAAK,CAACoN,MAAX,EAAmB;AACfpN,MAAAA,KAAK,CAACoN,MAAN,GAAe,IAAA,CAAKspC,WAApB,CAAA;AACA,MAAA,IAAA,CAAK6S,UAAL,CAAgBj3C,KAAhB,CAAsBk0C,OAAtB,GAAgC,OAAhC,CAAA;AACH,KAAA;;IACD,IAAIxmD,KAAK,CAACoN,MAAV,EAAkB;MACd,IAAI,CAAC,IAAKV,CAAAA,WAAV,EAAuB;QACnB,IAAKA,CAAAA,WAAL,GAAmB88C,kBAAkB,CAAC,IAAD,EAAOiT,UAAP,EAAmB,OAAnB,CAArC,CAAA;AACH,OAAA;;MACD,IAAI,CAAC,IAAK9vD,CAAAA,YAAV,EAAwB;AACpB,QAAA,IAAA,CAAKA,YAAL,GAAoB+8C,YAAY,CAAC,IAAD,EAAO,IAAKH,CAAAA,UAAZ,EAAwB,cAAxB,EAAwC,cAAxC,CAAhC,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,IAAMmT,kBAAkB,GAAG,CAAC97C,MAAM,CAAC5gB,KAAK,CAACqN,SAAP,EAAkB3R,KAAK,CAAC2R,SAAxB,CAAlC,CAAA;;AAEA,IAAA,IAAIqvD,kBAAJ,EAAwB;AACpB18D,MAAAA,KAAK,CAACqN,SAAN,GAAkB3R,KAAK,CAAC2R,SAAxB,CAAA;AACH,KAAA;;AACD,IAAA,IAAM0W,OAAO,GAAGroB,KAAK,CAACqoB,OAAtB,CAAA;;IACM,IAAAxjB,KAA8B,IAAKy6D,CAAAA,MAAL,CAAY2B,MAAZ,CAAmB54C,OAAnB,CAA9B;AAAA,QAAE4c,KAAK,WAAP;AAAA,QAASi8B,OAAO,aAAhB;AAAA,QAAkBxH,OAAO,aAAzB,CAAA;;IACN,IAAMtC,eAAe,GAAGnyB,KAAK,CAAC97B,MAAN,IAAgBuwD,OAAO,CAACvwD,MAAhD,CAAA;;AAEA,IAAA,IACI63D,kBAAkB,IACf5J,eADH,IAEG,KAAKvvD,eAAL,MAA0B7H,KAAK,CAAC4gE,kBAAN,IAA4B,SAAtD,CAFH,IAGGM,OAAO,CAAC/3D,MAHX,IAIGkf,OAAO,CAAClf,MAAR,IAAkB,CAACkiB,iBAAiB,CAAC,IAAA,CAAKm0C,aAAN,EAAqBx/D,KAAK,CAAC4/D,YAAN,IAAsB,EAA3C,CAL3C,EAME;AACE,MAAA,IAAA,CAAKnT,UAAL,EAAA,CAAA;MACA,IAAKgT,CAAAA,gBAAL,GAAwB,IAAxB,CAAA;AACH,KAAA;;AACD,IAAA,IAAA,CAAKnN,oBAAL,GAA4B,CAAC,CAAC8E,eAA9B,CAAA;GA3CM,CAAA;;AA6CA,EAAA,OAAA,CAAepC,eAAf,GAAV,cAAU,CAAA;;AAvQIqK,EAAAA,aAAA,CAAA1E,YAAA,yBACP7I,eAAe,CAAC6I,eAAY;AAC/B9yD,IAAAA,eAAe,EAAE,CAAC,KAAD,EAAQ,KAAR,CADc;AAE/BiI,IAAAA,SAAS,EAAE,IAFoB;AAG/BqrC,IAAAA,QAAQ,EAAE,IAHqB;AAI/BpyB,IAAAA,SAAS,EAAE,IAJoB;AAK/BV,IAAAA,OAAO,EAAE,EALsB;AAM/B23C,IAAAA,kBAAkB,EAAE,CANW;AAO/BY,IAAAA,kBAAkB,EAAE,SAAA;AAPW,IADrB,CAAA;AAwQlB,EAAA,OAACvB,aAAD,CAAA;AAAC,CAzQD,CAA4BvN,eAA5B,CAAA;;AC1MA;;;AAGG;;AACH,IAAAqP,uBAAA;AAAA;AAAA,UAAApP,MAAA,EAAA;AAAsCC,EAAAA,SAA0D,CAAAmP,uBAAA,EAAApP,MAAA,CAA1D,CAAA;;AAAtC,EAAA,SAAAoP,uBAAA,GAAA;AAAA,IAAA,IAsFCrV,KAAA,GAAAiG,MAAA,KAAA,IAAA,IAAAA,MAAA,CAAA16C,KAAA,CAAA,IAAA,EAAAF,SAAA,CAAA,IAAA,IAtFD,CAAA;;IACW20C,KAAS,CAAAt+B,SAAT,GAA+B,EAA/B,CAAA;;AAqFV,GAAA;;AAtFD,EAAA,IAAA,OAAA,GAAA,uBAAA,CAAA,SAAA,CAAA;;EAEW,OAAAgc,CAAAA,MAAA,GAAP,YAAA;IAAA,IAsCCsiB,KAAA,GAAA,IAtCD,CAAA;;;;IACI,IAAM9rD,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AAEI,IAAA,IAAAmzD,QAAQ,GAGRnzD,KAAK,CAAAmzD,QAHL;AAAA,QACWE,iBAAiB,GAE5BrzD,KAAK,CAAAszD,SAHL;AAAA,QAEAc,WAAW,GACXp0D,KAAK,YAHL,CAAA;AAKJ,IAAA,IAAIqoB,OAAO,GAAuDroB,KAAK,CAACqoB,OAAN,IAAiB,EAAnF,CAAA;AACA,IAAA,IAAMlf,MAAM,GAAGkf,OAAO,CAAClf,MAAvB,CAAA;AACA,IAAA,IAAMi4D,UAAU,GAAG,IAAA,CAAK9T,WAAL,IAAoB,CAACnkD,MAAxC,CAAA;AACA,IAAA,IAAI6xD,kBAAkB,GAAG,CAAAn2D,EAAA,GAAAuvD,WAAW,KAAX,IAAA,IAAAA,WAAW,KAAX,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,WAAW,CAAE5Y,QAAb,MAAyB,IAAzB,IAAyB32C,EAAA,KAAA,KAAA,CAAzB,GAAyBA,EAAzB,GAAyB,EAAlD,CAAA;;IAEA,IAAIu8D,UAAU,IAAI,CAACj4D,MAAf,IAAyB6xD,kBAAkB,CAAC7xD,MAAhD,EAAwD;AACpDkf,MAAAA,OAAO,GAAG2yC,kBAAkB,CAACv4D,GAAnB,CAAuB,YAAM;AAAA,QAAA,OAAA,IAAA,CAAA;AAAI,OAAjC,CAAV,CAAA;AACH,KAFD,MAEO,IAAI,CAAC2+D,UAAL,EAAiB;AACpBpG,MAAAA,kBAAkB,GAAG,EAArB,CAAA;AACH,KAAA;;AAED,IAAA,OAAO1/B,KAAC,CAAAG,aAAD,CAAC43B,iBAAD,EACH;AAAAF,MAAAA,QAAQ,EAAEA,QAAV;AACA9X,MAAAA,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,YAAP,CADR;MAEA3f,SAAS,EAAE1kB,MAAM,CAAC,aAAD,CAAA;KAHd,EAIFqR,OAAQ,CAAC5lB,GAAT,CAAa,UAACiP,MAAD,EAASnF,CAAT,EAAU;;;AACpB,MAAA,IAAM80D,eAAe,GAAG,CAAAz8D,EAAA,GAAA,CAAAC,EAAA,GAAA7E,KAAK,CAACshE,wBAAN,MAA8B,IAA9B,IAA8Bz8D,EAAA,KAAA,KAAA,CAA9B,GAA8B,KAAA,CAA9B,GAA8BA,EAAA,CAAAgf,IAAA,CAA9B7jB,KAA8B,EAAG0R,MAAH,EAAWnF,CAAX,CAA9B,MAA2C,IAA3C,IAA2C3H,EAAA,KAAA,KAAA,CAA3C,GAA2CA,EAA3C,GAA+C,EAAvE,CAAA;AACA,MAAA,OAAO02B,KAAA,CAAAG,aAAA,CAACq2B,eAAD,EACHhyD,QAAA,CAAA;QAAAy7B,GAAG,EAAE,aAAahvB,CAAlB;AACA8uC,QAAAA,GAAG,EAAE6f,IAAI,CAACpP,KAAD,EAAO,WAAP,EAAoBv/C,CAApB,CAAA;AADT,OAAA,EAEIvM,KAFJ,EAGIqhE,eAHJ,EAIA;AAAA3vD,QAAAA,MAAM,EAAEA,MAAR;AACAgjD,QAAAA,eAAe,EAAE5I,KADjB;QAEA8O,gBAAgB,EAAE9O,KAAI,CAACoG,iBAFvB;QAGAkC,WAAW,EAAE4G,kBAAkB,CAACzuD,CAAD,CAAA;AAH/B,OAJA,CADG,CAAP,CAAA;AAWH,KAbA,CAJE,CAAP,CAAA;GAnBG,CAAA;;AAuCA,EAAA,OAAA,CAAkB0oD,kBAAlB,GAAP,cAAO,CAAA;;EACA,OAAA9K,CAAAA,UAAA,GAAP,YAAA;IACI,OAAO,IAAA,CAAKnqD,KAAL,CAAWqoB,OAAlB,CAAA;GADG,CAAA;;EAGA,OAAAokC,CAAAA,UAAA,GAAP,UAAkBzmD,IAAlB,EAA+CiwD,QAA/C,EAAmEC,UAAnE,EAA6F;AAA1B,IAAA,IAAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,MAAAA,UAA0B,GAAA,IAA1B,CAAA;AAA0B,KAAA;;IACzFrgD,aAAa,CAAC,IAAD,CAAb,CAAA;AACA,IAAA,IAAA,CAAK2X,SAAL,CAAezT,OAAf,CAAuB,UAAAnT,QAAA,EAAQ;AAC3BA,MAAAA,QAAQ,CAAC6lD,UAAT,CAAoBzmD,IAApB,EAA0BiwD,QAA1B,EAAoCC,UAApC,CAAA,CAAA;KADJ,CAAA,CAAA;IAGArgD,aAAa,EAAA,CAAA;GALV,CAAA;;EAOA,OAAAyF,CAAAA,OAAA,GAAP,YAAA;AACI,IAAA,OACOxb,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAiyD,MAAA,CAAA2N,SAAA,CAAMpkD,OAAN,CAAeuI,IAAf,CAAe,IAAf,CAAA,CAAA,EAAe;MAClB23B,QAAQ,EAAE,KAAKhuB,SAAL,CAAe/qB,GAAf,CAAmB,UAAAyrB,KAAA,EAAS;QAAA,OAAAA,KAAK,CAAC5S,OAAN,EAAA,CAAA;OAA5B,CAAA;AADQ,KAAf,CADP,CAAA;GADG,CAAA;;EAMA,OAAAuR,CAAAA,OAAA,GAAP,YAAA;IACI,OAAO;AACHA,MAAAA,OAAO,EAAA,YAAA;AACH,QAAA,OAAO,IAAP,CAAA;OAFD;AAIH3a,MAAAA,UAAU,EAAA,YAAA;AACN,QAAA,OAAO,IAAP,CAAA;AACH,OAAA;KANL,CAAA;GADG,CAAA;;EAUA,OAAApM,CAAAA,SAAA,GAAP,YAAA;AACI,IAAA,OAAO,IAAP,CAAA;GADG,CAAA;;EAGA,OAAA4vD,CAAAA,OAAA,GAAP,YAAA;AACI,IAAA,OAAO,CAAP,CAAA;GADG,CAAA;;EAGA,OAAAM,CAAAA,QAAA,GAAP,YAAA;AACI,IAAA,OAAO,KAAP,CAAA;GADG,CAAA;;EAGA,OAAArvC,CAAAA,UAAA,GAAP,YAAA;AACI,IAAA,OAAO,KAAP,CAAA;GADG,CAAA;;AAGA,EAAA,OAAA,CAAiBgtC,iBAAjB,GAAP,cAAO,CAAA;;AACA,EAAA,OAAA,CAAWD,WAAX,GAAP,cAAO,CAAA;;AACA,EAAA,OAAA,CAAYpvC,YAAZ,GAAP,cAAO,CAAA;;AACG,EAAA,OAAA,CAAW6yC,WAAX,GAAV,cAAU,CAAA;;AACA,EAAA,OAAA,CAAarC,aAAb,GAAV,cAAU,CAAA;;AACA,EAAA,OAAA,CAAeE,eAAf,GAAV,cAAU,CAAA;;AACd,EAAA,OAACmM,uBAAD,CAAA;AAtFA,CAAA,CAAsCrP,eAAtC,CAAA;;ACSA,SAASyP,iBAAT,CACIC,UADJ,EAEIC,WAFJ,EAEyD;EAErD,IAAMC,cAAc,GAAoC,EAAxD,CAAA;AAEAF,EAAAA,UAAU,CAACznD,OAAX,CAAmB,UAAArI,MAAA,EAAM;IACrB,IAAI,CAACA,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAIsW,QAAQ,CAACtW,MAAD,CAAZ,EAAsB;AAClB,MAAA,IAAI+vD,WAAW,CAAC/vD,MAAD,CAAf,EAAyB;QACrBgwD,cAAc,CAAC10D,IAAf,CAAAqK,KAAA,CAAAqqD,cAAA,EAAuBD,WAAW,CAAC/vD,MAAD,CAAlC,CAAA,CAAA;AACH,OAAA;;AACD,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAIhD,OAAO,CAACgD,MAAD,CAAX,EAAqB;AACjBgwD,MAAAA,cAAc,CAAC10D,IAAf,CAAmBqK,KAAnB,CAAAqqD,cAAA,EAAuBH,iBAAiB,CAAC7vD,MAAD,EAAS+vD,WAAT,CAAxC,CAAA,CAAA;AACH,KAFD,MAEO;MACHC,cAAc,CAAC10D,IAAf,CAAoB0E,MAApB,CAAA,CAAA;AACH,KAAA;GAdL,CAAA,CAAA;AAiBA,EAAA,OAAOgwD,cAAP,CAAA;AACH,CAAA;;AAED,SAASC,eAAT,CACIH,UADJ,EAEIC,WAFJ,EAEyD;EAErD,IAAM7B,YAAY,GAA6B,EAA/C,CAAA;AAEA4B,EAAAA,UAAU,CAACznD,OAAX,CAAmB,UAAArI,MAAA,EAAM;IACrB,IAAI,CAACA,MAAL,EAAa;AACT,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAIsW,QAAQ,CAACtW,MAAD,CAAZ,EAAsB;AAClB,MAAA,IAAI+vD,WAAW,CAAC/vD,MAAD,CAAf,EAAyB;QACrBkuD,YAAY,CAAC5yD,IAAb,CAAAqK,KAAA,CAAAuoD,YAAA,EAAqB6B,WAAW,CAAC/vD,MAAD,CAAhC,CAAA,CAAA;AACH,OAAA;;AACD,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAIhD,OAAO,CAACgD,MAAD,CAAX,EAAqB;MACjBkuD,YAAY,CAAC5yD,IAAb,CAAkB20D,eAAe,CAACjwD,MAAD,EAAS+vD,WAAT,CAAjC,CAAA,CAAA;AACH,KAFD,MAEO;MACH7B,YAAY,CAAC5yD,IAAb,CAAkB0E,MAAlB,CAAA,CAAA;AACH,KAAA;GAdL,CAAA,CAAA;AAiBA,EAAA,OAAOkuD,YAAP,CAAA;AACH,CAAA;;AAED,SAASgC,iBAAT,CACIC,cADJ,EAEIC,cAFJ,EAEgD;AAE5C,EAAA,OAAQD,cAAc,CAAC14D,MAAf,KAA0B24D,cAAc,CAAC34D,MAA1C,IAAqD04D,cAAc,CAAC98C,IAAf,CAAoB,UAACrT,MAAD,EAASnF,CAAT,EAAU;AACtF,IAAA,IAAMw0D,UAAU,GAAGe,cAAc,CAACv1D,CAAD,CAAjC,CAAA;;AAEA,IAAA,IAAI,CAACmF,MAAD,IAAW,CAACqvD,UAAhB,EAA4B;AACxB,MAAA,OAAO,KAAP,CAAA;AACH,KAFD,MAEO,IAAIrvD,MAAM,IAAIqvD,UAAd,EAA0B;MAC7B,IAAIryD,OAAO,CAACgD,MAAD,CAAP,IAAmBhD,OAAO,CAACqyD,UAAD,CAA9B,EAA4C;AACxC,QAAA,OAAOa,iBAAiB,CAAClwD,MAAD,EAASqvD,UAAT,CAAxB,CAAA;AACH,OAAA;;AACD,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,KAAP,CAAA;AACH,GAZ2D,CAA5D,CAAA;AAaH,CAAA;;AAID,IAAAgB,eAAA;AAAA;AAAA,UAAAhQ,MAAA,EAAA;AACYC,EAAAA,SAA4D,CAAA+P,eAAA,EAAAhQ,MAAA,CAA5D,CAAA;;AADZ,EAAA,SAAAgQ,eAAA,GAAA;AAAA,IAAA,IAuPCjW,KAAA,GAAAiG,MAAA,KAAA,IAAA,IAAAA,MAAA,CAAA16C,KAAA,CAAA,IAAA,EAAAF,SAAA,CAAA,IAAA,IAvPD,CAAA;;IA0BW20C,KAAU,CAAA0V,UAAV,GAA2C,EAA3C,CAAA;IACA1V,KAAW,CAAA2V,WAAX,GAAwD,EAAxD,CAAA;AACC3V,IAAAA,KAAA,CAAAkW,OAAA,GAAoD,IAAIzC,cAAJ,EAApD,CAAA;IACAzT,KAAe,CAAAmW,eAAf,GAAmD,EAAnD,CAAA;IACAnW,KAAgB,CAAAoW,gBAAhB,GAAwC,IAAxC,CAAA;;AAyNX,GAAA;;AAvPD,EAAA,IAAA,OAAA,GAAA,eAAA,CAAA,SAAA,CAAA;;EAKkBH,eAAA,CAAAI,UAAA,GAAd,YAAA;IACI,IAAMC,MAAM,GAAqB,EAAjC,CAAA;AAEA,IAAA,IAAM19C,KAAK,GAAG,IAAK29C,CAAAA,aAAL,EAAd,CAAA;AACA39C,IAAAA,KAAK,CAAC3K,OAAN,CAAc,UAAClV,EAAD,EAAc;AAAX,MAAA,IAAA0kC,GAAG,GAAA1kC,EAAA,CAAA0kC,GAAH,CAAA;;MACb,IAAI,CAACA,GAAL,EAAU;AACN,QAAA,OAAA;AACH,OAAA;;AACDA,MAAAA,GAAG,CAACxvB,OAAJ,CAAY,UAAAxQ,IAAA,EAAI;AACZ64D,QAAAA,MAAM,CAAC74D,IAAD,CAAN,GAAe,IAAf,CAAA;OADJ,CAAA,CAAA;KAJJ,CAAA,CAAA;IAQA,IAAMqN,KAAK,GAAGkM,OAAO,CAACs/C,MAAD,CAAP,CAAgBp/D,IAAhB,CAAqB,IAArB,CAAd,CAAA;AAEA,IAAA,IAAA,CAAKs/D,aAAL,GAAqBvK,MAAM,CAAC,KAAD,EAAQwK,SAAS,CAAChgE,MAAD,EAASU,YAAY,GAAG2T,KAAxB,CAAjB,CAA3B,CAAA;GAdU,CAAA;;EAgBAmrD,eAAA,CAAAM,aAAA,GAAd,YAAA;AACI,IAAA,OAAQv3D,aAAA,CAAA,CAAA8wD,OAAA,EAASY,SAAT,EAAoBC,mBAApB,EAAyCE,QAAzC,CAAA,EAAsD,IAAA,CAAK6F,YAA3D,EAAyE,IAAzE,CAAR,CAAA;GADU,CAAA;;EAUP,OAAAh5B,CAAAA,MAAA,GAAP,YAAA;;;IACI,IAAMi5B,kBAAkB,GAAI,IAAA,CAAKC,WAAjC,CAAA;;AAEA,IAAA,IAAI,CAACD,kBAAkB,CAACH,aAAxB,EAAuC;AACnCG,MAAAA,kBAAkB,CAACN,UAAnB,EAAA,CAAA;AACH,KAAA;;IACD,IAAMv9D,EAIF,GAAA,IAAA,CAAK5E,KAJT;AAAA,QACW2iE,SAAS,GAAA/9D,EAAA,CAAA8f,KADpB;AAAA,QAEWk+C,SAAS,WAFpB;QAGO5iE,KAAK,GAHN6iE,MAAA,CAAAj+D,EAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAN,CAAA;;AAKA,IAAA,IAAM48D,UAAU,GAAG,IAAA,CAAKsB,WAAL,CAAiB,IAAjB,CAAnB,CAAA;;IACA,IAAMpB,cAAc,GAAGH,iBAAiB,CAACC,UAAD,EAAa,IAAA,CAAKC,WAAlB,CAAxC,CAAA;AAEA,IAAA,IAAIvzB,OAAO,GAAGwzB,cAAc,CAACv4D,MAAf,GAAwB,CAAtC,CAAA;AACA,IAAA,IAAM45D,UAAU,GAAGN,kBAAkB,CAACJ,aAAnB,EAAnB,CAAA;;AACA,IAAA,IAAM39C,KAAK,GACJ5Z,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAAi4D,UAAA,EACA,IADA,CAAA,EACCJ,SAAgB,IAAI,EADrB,EACwB,IADxB,CADP,CAAA;;AAIA,IAAA,IAAMK,SAAS,GACRljE,QAAA,CAAAA,QAAA,CAAAA,QAAA,CAAA,EAAA,EAAAE,KAAA,CAAA,EACC4iE,SAAS,IAAI,EADd,CAAA,EACiB;AACpBl+C,MAAAA,KAAK,EAAAA,KADe;MAEpB4uC,SAAS,EAAEmP,kBAAkB,CAACH,aAFV;MAGpBxK,eAAe,EAAE2K,kBAAkB,CAAC3K,eAAAA;AAHhB,KADjB,CADP,CAAA;;IAQA,IAAKmK,CAAAA,eAAL,GAAuBP,cAAvB,CAAA;IAEA,IAAIvN,gBAAgB,GAAgC,IAApD,CAAA;IACA,IAAM8O,YAAY,GAAG,IAAA,CAAKr8D,QAA1B,CAAA;AAGA,IAAA,IAAMwtD,WAAW,GAAGp0D,KAAK,CAACo0D,WAA1B,CAAA;;AAEA,IAAA,IAAIA,WAAW,KAAX,IAAA,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAE5Y,QAAjB,EAA2B;AACvBtN,MAAAA,OAAO,GAAG,IAAV,CAAA;AACH,KAtCL;;;IAwCI,IAAIluC,KAAK,CAACkjE,mBAAV,EAA+B;AAC3B,MAAA,OAAO5nC,KAAA,CAAAG,aAAA,CAAC0lC,uBAAD,EAAwBrhE,QAAA,CAAA;AAACy7B,QAAAA,GAAG,EAAC,kBAAL;AAAwB8f,QAAAA,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,UAAP,CAAA;OAAhC,EACvB2nB,SADuB,EACd;AACbtxD,QAAAA,MAAM,EAAE,IADK;AAEb2W,QAAAA,OAAO,EAAEq5C,cAAAA;AAFI,OADc,CAAxB,CAAP,CAAA;AAKH,KAAA;;AACD,IAAA,IAAIxzB,OAAJ,EAAa;MACT,IAAM0xB,YAAY,GAAG+B,eAAe,CAACH,UAAD,EAAa,IAAKC,CAAAA,WAAlB,CAApC,CADS;;AAIT,MAAA,IAAIwB,YAAY,IAAI,CAACA,YAAY,CAACjjE,KAAb,CAAmB8P,SAApC,IAAiD,CAAEmzD,YAAY,CAACjjE,KAAb,CAA2BkjE,mBAAlF,EAAuG;AACnG,QAAA,IAAMxxD,MAAM,GAAGuxD,YAAY,CAACjjE,KAAb,CAAmB0R,MAAlC,CAAA;;QAEA,IAAIA,MAAM,IAAIgwD,cAAc,CAAC3+D,OAAf,CAAuB2O,MAAvB,CAAA,GAAiC,CAAC,CAAhD,EAAmD;UAC/CyiD,gBAAgB,GAAQr0D,QAAA,CAAA,EAAA,EAAAmjE,YAAY,CAAC3+D,KAAb,CAAxB,CAAA;AACH,SAAA;AACJ,OAAA;;AAED,MAAA,OAAOg3B,mBAAA,CAAC+jC,aAAD,EAAcv/D,QAAA,CAAA;AAACy7B,QAAAA,GAAG,EAAC,OAAL;AAAa8f,QAAAA,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,UAAP,CAAA;OAArB,EACb2nB,SADa,EAEb,CAAAn+D,EAAA,GAAA7E,KAAK,CAACmjE,cAAN,UAAA,iBAAA,KAAA,GAAwB,EAFX,EAEa;AAC9BzxD,QAAAA,MAAM,EAAE,IADsB;AAE9B2W,QAAAA,OAAO,EAAEq5C,cAFqB;AAG9B9B,QAAAA,YAAY,EAAEA,YAHgB;AAI9BzL,QAAAA,gBAAgB,EAAEA,gBAAAA;AAJY,OAFb,CAAd,CAAP,CAAA;AAQH,KApBD,MAoBO;AACH,MAAA,IAAMiP,QAAM,GAAG1B,cAAc,CAAC,CAAD,CAA7B,CADG;;AAGH,MAAA,IAAIuB,YAAY,KAAKA,YAAY,CAACjjE,KAAb,CAAmB8P,SAAnB,IAAiCmzD,YAAY,CAACjjE,KAAb,CAA2BkjE,mBAAjE,CAAhB,EAAuG;AACnG,QAAA,IAAM11C,SAAS,GAAIy1C,YAAwD,CAACz1C,SAAzD,IAAsE,EAAzF,CAAA;QACA,IAAM61C,kBAAkB,GAAG55D,IAAI,CAAC+jB,SAAD,EAAY,UAAA81C,EAAA,EAAM;AAAA,UAAA,OAAAA,EAAE,CAACtjE,KAAH,CAAS0R,MAAT,KAAoB0xD,QAApB,CAAA;AAA0B,SAA5C,CAA/B,CAAA;;AAEA,QAAA,IAAIC,kBAAJ,EAAwB;UACpBlP,gBAAgB,GAAQr0D,QAAA,CAAA,EAAA,EAAAujE,kBAAkB,CAAC/+D,KAAnB,CAAxB,CAAA;AACH,SAAA;AACJ,OAAA;;AAED,MAAA,OAAOg3B,KAAA,CAAAG,aAAA,CAACq2B,eAAD,EAAgBhyD,QAAA,CAAA;AAAMy7B,QAAAA,GAAG,EAAC,QAAV;AAAmB8f,QAAAA,GAAG,EAAEA,GAAG,CAAC,IAAD,EAAO,UAAP,CAAA;OAA3B,EACf2nB,SADe,EACN;AACbtxD,QAAAA,MAAM,EAAE0xD,QADK;AAEbjP,QAAAA,gBAAgB,EAAEA,gBAAAA;AAFL,OADM,CAAhB,CAAP,CAAA;AAIH,KAAA;GAnFE,CAAA;;EAqFA,OAAAM,CAAAA,iBAAA,GAAP,YAAA;AACI,IAAA,IAAA,CAAK8O,mBAAL,EAAA,CAAA;;AACA,IAAA,IAAA,CAAKT,WAAL,EAAA,CAAA;GAFG,CAAA;;EAIA,OAAA7N,CAAAA,kBAAA,GAAP,YAAA;AACI,IAAA,IAAA,CAAKsO,mBAAL,EAAA,CAAA;GADG,CAAA;;EAGA,OAAApO,CAAAA,oBAAA,GAAP,YAAA;IACI,IAAKsM,CAAAA,WAAL,GAAmB,EAAnB,CAAA;IACA,IAAKD,CAAAA,UAAL,GAAkB,EAAlB,CAAA;GAFG,CAAA;AAIP;;;;;;;;;;;AAWG;;;EACI,OAAArX,CAAAA,UAAA,GAAP,YAAA;;;AACI,IAAA,OAAO,CAAAvlD,EAAA,GAAA,CAAAC,EAAA,GAAA,IAAA,CAAK+B,QAAL,UAAA,iBAAA,SAAA,MAAeujD,YAAf,MAA+B,IAA/B,IAA+BvlD,EAAA,KAAA,KAAA,CAA/B,GAA+BA,EAA/B,GAA+B,EAAtC,CAAA;GADG,CAAA;AAGP;;;;;;;;;;;AAWG;;;EACI,OAAAqzD,CAAAA,eAAA,GAAP,YAAA;IACI,IAAKwJ,CAAAA,WAAL,GAAmB,EAAnB,CAAA;;AACA,IAAA,IAAA,CAAKqB,WAAL,EAAA,CAAA;GAFG,CAAA;AAIP;;;;;;;;;;;AAWG;;;EACI,OAAAtL,CAAAA,kBAAA,GAAP,YAAA;AACI;AADJ,IAAA,IAwBC1L,KAAA,GAAA,IAxBD,CAAA;AAII;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,IAAA,IAAI0X,cAAJ,CAAA;;IAEA,IAAKtB,CAAAA,gBAAL,GAAwB,YAAA;MACpBpW,KAAI,CAACoW,gBAAL,GAAwB,IAAxB,CAAA;MACAsB,cAAc,EAAA,CAAA;KAFlB,CAAA;;AAKA,IAAA,OAAO,IAAI/L,OAAJ,CAAY,UAAAtjB,OAAA,EAAO;AACtBqvB,MAAAA,cAAc,GAAGrvB,OAAjB,CAAA;AACH,KAFM,CAAP,CAAA;GArBG,CAAA;;EAyBA,OAAAsvB,CAAAA,mBAAA,GAAP,YAAA;IACI,OAAO,IAAA,CAAKjM,kBAAL,EAAP,CAAA;GADG,CAAA;;EAGA,OAAAd,CAAAA,UAAA,GAAP,YAAA;AACI,IAAA,OAAO,KAAK9vD,QAAZ,CAAA;GADG,CAAA;;AAGC,EAAA,OAAA,CAAWk8D,WAAX,GAAR,UAAoBxsC,QAApB,EAAsC;IAClC,IAAMurC,cAAc,GAAG,IAAA,CAAKL,UAA5B,CAAA;AACA,IAAA,IAAMM,cAAc,GAAG15C,aAAa,CAAE,IAAKpoB,CAAAA,KAAL,CAAW0R,MAAX,IAAqB,IAAA,CAAK1R,KAAL,CAAWqoB,OAAlC,CAApC,CAAA;AACA,IAAA,IAAMq7C,SAAS,GAAG,OAAO1xD,QAAP,KAAoB,WAAtC,CAAA;AAEA,IAAA,IAAIm7C,QAAQ,GAAGyU,iBAAiB,CAACC,cAAD,EAAiBC,cAAjB,CAAhC,CAAA;IACA,IAAML,WAAW,GAAG,IAAA,CAAKA,WAAzB,CAAA;IACA,IAAMkC,eAAe,GAA6C,EAAlE,CAAA;IAEA,IAAKnC,CAAAA,UAAL,CAAgBznD,OAAhB,CAAwB,SAAS6pD,iBAAT,CAA2BlyD,MAA3B,EAAiC;AACrD,MAAA,IAAIsW,QAAQ,CAACtW,MAAD,CAAZ,EAAsB;AAClB,QAAA,IAAMmyD,cAAc,GAAGpC,WAAW,CAAC/vD,MAAD,CAAlC,CAAA;;AAEA,QAAA,IAAImyD,cAAJ,EAAoB;AAChBF,UAAAA,eAAe,CAACjyD,MAAD,CAAf,GAA0B+vD,WAAW,CAAC/vD,MAAD,CAArC,CAAA;SADJ,MAEO,IAAIgyD,SAAJ,EAAe;AAClBvW,UAAAA,QAAQ,GAAG,IAAX,CAAA;AACAwW,UAAAA,eAAe,CAACjyD,MAAD,CAAf,GAA0B,GAAG+H,KAAH,CAASoK,IAAT,CAAc7R,QAAQ,CAACuW,gBAAT,CAA0B7W,MAA1B,CAAd,CAA1B,CAAA;AACH,SAAA;AACJ,OATD,MASO,IAAIhD,OAAO,CAACgD,MAAD,CAAX,EAAqB;QACxBA,MAAM,CAACqI,OAAP,CAAe6pD,iBAAf,CAAA,CAAA;AACH,OAAA;KAZL,CAAA,CAAA;IAeA,IAAKpC,CAAAA,UAAL,GAAkBM,cAAlB,CAAA;IACA,IAAKL,CAAAA,WAAL,GAAmBkC,eAAnB,CAAA;;AAEA,IAAA,IAAI,CAACrtC,QAAD,IAAa62B,QAAjB,EAA2B;AACvB,MAAA,IAAA,CAAKK,WAAL,EAAA,CAAA;AACH,KAAA;;AACD,IAAA,OAAOsU,cAAP,CAAA;GA9BI,CAAA;;EAgCA,OAAAyB,CAAAA,mBAAA,GAAR,YAAA;;;IACU,IAAAzmD,KAAqB,IAAKklD,CAAAA,OAAL,CAAaf,MAAb,CAAoB,IAAKgB,CAAAA,eAAzB,CAArB;AAAA,QAAEh9B,KAAK,WAAP;AAAA,QAASy0B,OAAO,aAAhB,CAAA;;IACN,IAAMtC,eAAe,GAAGnyB,KAAK,CAAC97B,MAAN,IAAgBuwD,OAAO,CAACvwD,MAAhD,CAAA;;AAEA,IAAA,IAAIiuD,eAAJ,EAAqB;MACjB,CAAAxyD,EAAA,GAAA,MAAA,KAAK5E,KAAL,EAAW8jE,eAAX,MAA6B,IAA7B,IAA6Bl/D,EAAA,KAAA,KAAA,CAA7B,GAA6B,KAAA,CAA7B,GAA6BA,EAAA,CAAAif,IAAA,CAAAhf,EAAA,EAAA;QACzB+B,QAAQ,EAAE,KAAKA,QADU;AAEzByhB,QAAAA,OAAO,EAAE,IAAK45C,CAAAA,eAAAA;AAFW,OAAA,CAA7B,CAAA;MAIA,CAAA56D,EAAA,GAAA,IAAK66D,CAAAA,gBAAL,MAAA,IAAA,IAAA76D,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAwc,IAAA,CAAA,IAAA,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,IAAA,CAAKi/C,WAAL,EAAA,CAAA;GAXI,CAAA;;EAvOMf,eAAY,CAAAS,YAAZ,GAAqC,EAArC,CAAA;EACAT,eAAe,CAAAjK,eAAf,GAAuC,EAAvC,CAAA;EACAiK,eAAa,CAAAO,aAAb,GAAqB,IAArB,CAAA;;AAqBdyB,EAAAA,UAAA,CAAA,CADCC,WAAW,CAAC5/D,gBAAD,CACZ,CAAA,EAA4E29D,eAAA,CAAArC,SAA5E,EAA4E,UAA5E,EAA4E,KAAA,CAA5E,CAAA,CAAA;;AA8NJ,EAAA,OAACqC,eAAD,CAAA;AAvPA,CAAA,CACYzmC,KAAK,CAACw/B,aADlB;;ACzFA,IAAAmJ,QAAA;AAAA;AAAA,UAAAlS,MAAA,EAAA;AAA8CC,EAAAA,SAAkC,CAAAiS,QAAA,EAAAlS,MAAA,CAAlC,CAAA;;AAA9C,EAAA,SAAAkS,QAAA,GAAA;;AAEC,GAAA;;EADiBA,QAAY,CAAAzB,YAAZ,GAAuB7G,cAAvB,CAAA;AAClB,EAAA,OAACsI,QAAD,CAAA;AAAC,CAFD,CAA8ClC,eAA9C;;ACDM,SAAUmC,YAAV,CACFx/C,KADE,EACmB;;;AAErB,EAAA,OAAA7f,EAAA;AAAA;AAAA,EAAA,UAAAktD,MAAA,EAAA;AAA8BC,IAAAA,SAAkB,CAAAiS,QAAA,EAAAlS,MAAA,CAAlB,CAAA;;AAAvB,IAAA,SAAAkS,QAAA,GAAA;;AAEN,KAAA;;AAAD,IAAA,OAACA,QAAD,CAAA;GAFA,CAA8BlC,eAA9B,CAAA,EACkBl9D,EAAA,CAAA29D,YAAA,GAAe99C,KADjC,EAEE7f,EAFF,CAAA;AAGH;;;;"}